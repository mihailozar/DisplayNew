
STM32F469I-DISCO.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001b4  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0001a460  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00003100  0801a620  0801a620  0002a620  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontSearchFlashSection 0000000c  0801d720  0801d720  0002d720  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .ARM.extab    00000000  0801d72c  0801d72c  000401b4  2**0
                  CONTENTS
  5 .ARM          00000008  0801d72c  0801d72c  0002d72c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 .preinit_array 00000000  0801d734  0801d734  000401b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  7 .init_array   00000018  0801d734  0801d734  0002d734  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .fini_array   00000008  0801d74c  0801d74c  0002d74c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .data         00000140  20000000  0801d754  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 10 .bss          0000a518  20000140  0801d894  00030140  2**2
                  ALLOC
 11 ._user_heap_stack 00002000  2000a658  0801d894  0003a658  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  000401b4  2**0
                  CONTENTS, READONLY
 13 ExtFlashSection 00000000  90000000  90000000  000401e4  2**0
                  CONTENTS
 14 FontFlashSection 000001a8  90000000  90000000  00040000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 15 TextFlashSection 0000000c  900001a8  900001a8  000401a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 16 .debug_line   00045b9a  00000000  00000000  000401e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_info   0008fa67  00000000  00000000  00085d7e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_abbrev 000125bf  00000000  00000000  001157e5  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_aranges 00002698  00000000  00000000  00127da8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_str    001294fc  00000000  00000000  0012a440  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_ranges 00003a90  00000000  00000000  00253940  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_loc    00022248  00000000  00000000  002573d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_macro  0003778d  00000000  00000000  00279618  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .comment      000000d2  00000000  00000000  002b0da5  2**0
                  CONTENTS, READONLY
 25 .debug_frame  00007518  00000000  00000000  002b0e78  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	20000140 	.word	0x20000140
 80001dc:	00000000 	.word	0x00000000
 80001e0:	0801a608 	.word	0x0801a608

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	20000144 	.word	0x20000144
 80001fc:	0801a608 	.word	0x0801a608

08000200 <memchr>:
 8000200:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8000204:	2a10      	cmp	r2, #16
 8000206:	db2b      	blt.n	8000260 <memchr+0x60>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	d008      	beq.n	8000220 <memchr+0x20>
 800020e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000212:	3a01      	subs	r2, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d02d      	beq.n	8000274 <memchr+0x74>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	b342      	cbz	r2, 8000270 <memchr+0x70>
 800021e:	d1f6      	bne.n	800020e <memchr+0xe>
 8000220:	b4f0      	push	{r4, r5, r6, r7}
 8000222:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000226:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800022a:	f022 0407 	bic.w	r4, r2, #7
 800022e:	f07f 0700 	mvns.w	r7, #0
 8000232:	2300      	movs	r3, #0
 8000234:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000238:	3c08      	subs	r4, #8
 800023a:	ea85 0501 	eor.w	r5, r5, r1
 800023e:	ea86 0601 	eor.w	r6, r6, r1
 8000242:	fa85 f547 	uadd8	r5, r5, r7
 8000246:	faa3 f587 	sel	r5, r3, r7
 800024a:	fa86 f647 	uadd8	r6, r6, r7
 800024e:	faa5 f687 	sel	r6, r5, r7
 8000252:	b98e      	cbnz	r6, 8000278 <memchr+0x78>
 8000254:	d1ee      	bne.n	8000234 <memchr+0x34>
 8000256:	bcf0      	pop	{r4, r5, r6, r7}
 8000258:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800025c:	f002 0207 	and.w	r2, r2, #7
 8000260:	b132      	cbz	r2, 8000270 <memchr+0x70>
 8000262:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000266:	3a01      	subs	r2, #1
 8000268:	ea83 0301 	eor.w	r3, r3, r1
 800026c:	b113      	cbz	r3, 8000274 <memchr+0x74>
 800026e:	d1f8      	bne.n	8000262 <memchr+0x62>
 8000270:	2000      	movs	r0, #0
 8000272:	4770      	bx	lr
 8000274:	3801      	subs	r0, #1
 8000276:	4770      	bx	lr
 8000278:	2d00      	cmp	r5, #0
 800027a:	bf06      	itte	eq
 800027c:	4635      	moveq	r5, r6
 800027e:	3803      	subeq	r0, #3
 8000280:	3807      	subne	r0, #7
 8000282:	f015 0f01 	tst.w	r5, #1
 8000286:	d107      	bne.n	8000298 <memchr+0x98>
 8000288:	3001      	adds	r0, #1
 800028a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800028e:	bf02      	ittt	eq
 8000290:	3001      	addeq	r0, #1
 8000292:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000296:	3001      	addeq	r0, #1
 8000298:	bcf0      	pop	{r4, r5, r6, r7}
 800029a:	3801      	subs	r0, #1
 800029c:	4770      	bx	lr
 800029e:	bf00      	nop

080002a0 <__aeabi_uldivmod>:
 80002a0:	b953      	cbnz	r3, 80002b8 <__aeabi_uldivmod+0x18>
 80002a2:	b94a      	cbnz	r2, 80002b8 <__aeabi_uldivmod+0x18>
 80002a4:	2900      	cmp	r1, #0
 80002a6:	bf08      	it	eq
 80002a8:	2800      	cmpeq	r0, #0
 80002aa:	bf1c      	itt	ne
 80002ac:	f04f 31ff 	movne.w	r1, #4294967295
 80002b0:	f04f 30ff 	movne.w	r0, #4294967295
 80002b4:	f000 b96e 	b.w	8000594 <__aeabi_idiv0>
 80002b8:	f1ad 0c08 	sub.w	ip, sp, #8
 80002bc:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 80002c0:	f000 f806 	bl	80002d0 <__udivmoddi4>
 80002c4:	f8dd e004 	ldr.w	lr, [sp, #4]
 80002c8:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 80002cc:	b004      	add	sp, #16
 80002ce:	4770      	bx	lr

080002d0 <__udivmoddi4>:
 80002d0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80002d4:	9d08      	ldr	r5, [sp, #32]
 80002d6:	4604      	mov	r4, r0
 80002d8:	468c      	mov	ip, r1
 80002da:	2b00      	cmp	r3, #0
 80002dc:	f040 8083 	bne.w	80003e6 <__udivmoddi4+0x116>
 80002e0:	428a      	cmp	r2, r1
 80002e2:	4617      	mov	r7, r2
 80002e4:	d947      	bls.n	8000376 <__udivmoddi4+0xa6>
 80002e6:	fab2 f282 	clz	r2, r2
 80002ea:	b142      	cbz	r2, 80002fe <__udivmoddi4+0x2e>
 80002ec:	f1c2 0020 	rsb	r0, r2, #32
 80002f0:	fa24 f000 	lsr.w	r0, r4, r0
 80002f4:	4091      	lsls	r1, r2
 80002f6:	4097      	lsls	r7, r2
 80002f8:	ea40 0c01 	orr.w	ip, r0, r1
 80002fc:	4094      	lsls	r4, r2
 80002fe:	ea4f 4817 	mov.w	r8, r7, lsr #16
 8000302:	0c23      	lsrs	r3, r4, #16
 8000304:	fbbc f6f8 	udiv	r6, ip, r8
 8000308:	fa1f fe87 	uxth.w	lr, r7
 800030c:	fb08 c116 	mls	r1, r8, r6, ip
 8000310:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000314:	fb06 f10e 	mul.w	r1, r6, lr
 8000318:	4299      	cmp	r1, r3
 800031a:	d909      	bls.n	8000330 <__udivmoddi4+0x60>
 800031c:	18fb      	adds	r3, r7, r3
 800031e:	f106 30ff 	add.w	r0, r6, #4294967295
 8000322:	f080 8119 	bcs.w	8000558 <__udivmoddi4+0x288>
 8000326:	4299      	cmp	r1, r3
 8000328:	f240 8116 	bls.w	8000558 <__udivmoddi4+0x288>
 800032c:	3e02      	subs	r6, #2
 800032e:	443b      	add	r3, r7
 8000330:	1a5b      	subs	r3, r3, r1
 8000332:	b2a4      	uxth	r4, r4
 8000334:	fbb3 f0f8 	udiv	r0, r3, r8
 8000338:	fb08 3310 	mls	r3, r8, r0, r3
 800033c:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000340:	fb00 fe0e 	mul.w	lr, r0, lr
 8000344:	45a6      	cmp	lr, r4
 8000346:	d909      	bls.n	800035c <__udivmoddi4+0x8c>
 8000348:	193c      	adds	r4, r7, r4
 800034a:	f100 33ff 	add.w	r3, r0, #4294967295
 800034e:	f080 8105 	bcs.w	800055c <__udivmoddi4+0x28c>
 8000352:	45a6      	cmp	lr, r4
 8000354:	f240 8102 	bls.w	800055c <__udivmoddi4+0x28c>
 8000358:	3802      	subs	r0, #2
 800035a:	443c      	add	r4, r7
 800035c:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000360:	eba4 040e 	sub.w	r4, r4, lr
 8000364:	2600      	movs	r6, #0
 8000366:	b11d      	cbz	r5, 8000370 <__udivmoddi4+0xa0>
 8000368:	40d4      	lsrs	r4, r2
 800036a:	2300      	movs	r3, #0
 800036c:	e9c5 4300 	strd	r4, r3, [r5]
 8000370:	4631      	mov	r1, r6
 8000372:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000376:	b902      	cbnz	r2, 800037a <__udivmoddi4+0xaa>
 8000378:	deff      	udf	#255	; 0xff
 800037a:	fab2 f282 	clz	r2, r2
 800037e:	2a00      	cmp	r2, #0
 8000380:	d150      	bne.n	8000424 <__udivmoddi4+0x154>
 8000382:	1bcb      	subs	r3, r1, r7
 8000384:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000388:	fa1f f887 	uxth.w	r8, r7
 800038c:	2601      	movs	r6, #1
 800038e:	fbb3 fcfe 	udiv	ip, r3, lr
 8000392:	0c21      	lsrs	r1, r4, #16
 8000394:	fb0e 331c 	mls	r3, lr, ip, r3
 8000398:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800039c:	fb08 f30c 	mul.w	r3, r8, ip
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d907      	bls.n	80003b4 <__udivmoddi4+0xe4>
 80003a4:	1879      	adds	r1, r7, r1
 80003a6:	f10c 30ff 	add.w	r0, ip, #4294967295
 80003aa:	d202      	bcs.n	80003b2 <__udivmoddi4+0xe2>
 80003ac:	428b      	cmp	r3, r1
 80003ae:	f200 80e9 	bhi.w	8000584 <__udivmoddi4+0x2b4>
 80003b2:	4684      	mov	ip, r0
 80003b4:	1ac9      	subs	r1, r1, r3
 80003b6:	b2a3      	uxth	r3, r4
 80003b8:	fbb1 f0fe 	udiv	r0, r1, lr
 80003bc:	fb0e 1110 	mls	r1, lr, r0, r1
 80003c0:	ea43 4401 	orr.w	r4, r3, r1, lsl #16
 80003c4:	fb08 f800 	mul.w	r8, r8, r0
 80003c8:	45a0      	cmp	r8, r4
 80003ca:	d907      	bls.n	80003dc <__udivmoddi4+0x10c>
 80003cc:	193c      	adds	r4, r7, r4
 80003ce:	f100 33ff 	add.w	r3, r0, #4294967295
 80003d2:	d202      	bcs.n	80003da <__udivmoddi4+0x10a>
 80003d4:	45a0      	cmp	r8, r4
 80003d6:	f200 80d9 	bhi.w	800058c <__udivmoddi4+0x2bc>
 80003da:	4618      	mov	r0, r3
 80003dc:	eba4 0408 	sub.w	r4, r4, r8
 80003e0:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 80003e4:	e7bf      	b.n	8000366 <__udivmoddi4+0x96>
 80003e6:	428b      	cmp	r3, r1
 80003e8:	d909      	bls.n	80003fe <__udivmoddi4+0x12e>
 80003ea:	2d00      	cmp	r5, #0
 80003ec:	f000 80b1 	beq.w	8000552 <__udivmoddi4+0x282>
 80003f0:	2600      	movs	r6, #0
 80003f2:	e9c5 0100 	strd	r0, r1, [r5]
 80003f6:	4630      	mov	r0, r6
 80003f8:	4631      	mov	r1, r6
 80003fa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80003fe:	fab3 f683 	clz	r6, r3
 8000402:	2e00      	cmp	r6, #0
 8000404:	d14a      	bne.n	800049c <__udivmoddi4+0x1cc>
 8000406:	428b      	cmp	r3, r1
 8000408:	d302      	bcc.n	8000410 <__udivmoddi4+0x140>
 800040a:	4282      	cmp	r2, r0
 800040c:	f200 80b8 	bhi.w	8000580 <__udivmoddi4+0x2b0>
 8000410:	1a84      	subs	r4, r0, r2
 8000412:	eb61 0103 	sbc.w	r1, r1, r3
 8000416:	2001      	movs	r0, #1
 8000418:	468c      	mov	ip, r1
 800041a:	2d00      	cmp	r5, #0
 800041c:	d0a8      	beq.n	8000370 <__udivmoddi4+0xa0>
 800041e:	e9c5 4c00 	strd	r4, ip, [r5]
 8000422:	e7a5      	b.n	8000370 <__udivmoddi4+0xa0>
 8000424:	f1c2 0320 	rsb	r3, r2, #32
 8000428:	fa20 f603 	lsr.w	r6, r0, r3
 800042c:	4097      	lsls	r7, r2
 800042e:	fa01 f002 	lsl.w	r0, r1, r2
 8000432:	ea4f 4e17 	mov.w	lr, r7, lsr #16
 8000436:	40d9      	lsrs	r1, r3
 8000438:	4330      	orrs	r0, r6
 800043a:	0c03      	lsrs	r3, r0, #16
 800043c:	fbb1 f6fe 	udiv	r6, r1, lr
 8000440:	fa1f f887 	uxth.w	r8, r7
 8000444:	fb0e 1116 	mls	r1, lr, r6, r1
 8000448:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800044c:	fb06 f108 	mul.w	r1, r6, r8
 8000450:	4299      	cmp	r1, r3
 8000452:	fa04 f402 	lsl.w	r4, r4, r2
 8000456:	d909      	bls.n	800046c <__udivmoddi4+0x19c>
 8000458:	18fb      	adds	r3, r7, r3
 800045a:	f106 3cff 	add.w	ip, r6, #4294967295
 800045e:	f080 808d 	bcs.w	800057c <__udivmoddi4+0x2ac>
 8000462:	4299      	cmp	r1, r3
 8000464:	f240 808a 	bls.w	800057c <__udivmoddi4+0x2ac>
 8000468:	3e02      	subs	r6, #2
 800046a:	443b      	add	r3, r7
 800046c:	1a5b      	subs	r3, r3, r1
 800046e:	b281      	uxth	r1, r0
 8000470:	fbb3 f0fe 	udiv	r0, r3, lr
 8000474:	fb0e 3310 	mls	r3, lr, r0, r3
 8000478:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 800047c:	fb00 f308 	mul.w	r3, r0, r8
 8000480:	428b      	cmp	r3, r1
 8000482:	d907      	bls.n	8000494 <__udivmoddi4+0x1c4>
 8000484:	1879      	adds	r1, r7, r1
 8000486:	f100 3cff 	add.w	ip, r0, #4294967295
 800048a:	d273      	bcs.n	8000574 <__udivmoddi4+0x2a4>
 800048c:	428b      	cmp	r3, r1
 800048e:	d971      	bls.n	8000574 <__udivmoddi4+0x2a4>
 8000490:	3802      	subs	r0, #2
 8000492:	4439      	add	r1, r7
 8000494:	1acb      	subs	r3, r1, r3
 8000496:	ea40 4606 	orr.w	r6, r0, r6, lsl #16
 800049a:	e778      	b.n	800038e <__udivmoddi4+0xbe>
 800049c:	f1c6 0c20 	rsb	ip, r6, #32
 80004a0:	fa03 f406 	lsl.w	r4, r3, r6
 80004a4:	fa22 f30c 	lsr.w	r3, r2, ip
 80004a8:	431c      	orrs	r4, r3
 80004aa:	fa20 f70c 	lsr.w	r7, r0, ip
 80004ae:	fa01 f306 	lsl.w	r3, r1, r6
 80004b2:	ea4f 4e14 	mov.w	lr, r4, lsr #16
 80004b6:	fa21 f10c 	lsr.w	r1, r1, ip
 80004ba:	431f      	orrs	r7, r3
 80004bc:	0c3b      	lsrs	r3, r7, #16
 80004be:	fbb1 f9fe 	udiv	r9, r1, lr
 80004c2:	fa1f f884 	uxth.w	r8, r4
 80004c6:	fb0e 1119 	mls	r1, lr, r9, r1
 80004ca:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 80004ce:	fb09 fa08 	mul.w	sl, r9, r8
 80004d2:	458a      	cmp	sl, r1
 80004d4:	fa02 f206 	lsl.w	r2, r2, r6
 80004d8:	fa00 f306 	lsl.w	r3, r0, r6
 80004dc:	d908      	bls.n	80004f0 <__udivmoddi4+0x220>
 80004de:	1861      	adds	r1, r4, r1
 80004e0:	f109 30ff 	add.w	r0, r9, #4294967295
 80004e4:	d248      	bcs.n	8000578 <__udivmoddi4+0x2a8>
 80004e6:	458a      	cmp	sl, r1
 80004e8:	d946      	bls.n	8000578 <__udivmoddi4+0x2a8>
 80004ea:	f1a9 0902 	sub.w	r9, r9, #2
 80004ee:	4421      	add	r1, r4
 80004f0:	eba1 010a 	sub.w	r1, r1, sl
 80004f4:	b2bf      	uxth	r7, r7
 80004f6:	fbb1 f0fe 	udiv	r0, r1, lr
 80004fa:	fb0e 1110 	mls	r1, lr, r0, r1
 80004fe:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 8000502:	fb00 f808 	mul.w	r8, r0, r8
 8000506:	45b8      	cmp	r8, r7
 8000508:	d907      	bls.n	800051a <__udivmoddi4+0x24a>
 800050a:	19e7      	adds	r7, r4, r7
 800050c:	f100 31ff 	add.w	r1, r0, #4294967295
 8000510:	d22e      	bcs.n	8000570 <__udivmoddi4+0x2a0>
 8000512:	45b8      	cmp	r8, r7
 8000514:	d92c      	bls.n	8000570 <__udivmoddi4+0x2a0>
 8000516:	3802      	subs	r0, #2
 8000518:	4427      	add	r7, r4
 800051a:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 800051e:	eba7 0708 	sub.w	r7, r7, r8
 8000522:	fba0 8902 	umull	r8, r9, r0, r2
 8000526:	454f      	cmp	r7, r9
 8000528:	46c6      	mov	lr, r8
 800052a:	4649      	mov	r1, r9
 800052c:	d31a      	bcc.n	8000564 <__udivmoddi4+0x294>
 800052e:	d017      	beq.n	8000560 <__udivmoddi4+0x290>
 8000530:	b15d      	cbz	r5, 800054a <__udivmoddi4+0x27a>
 8000532:	ebb3 020e 	subs.w	r2, r3, lr
 8000536:	eb67 0701 	sbc.w	r7, r7, r1
 800053a:	fa07 fc0c 	lsl.w	ip, r7, ip
 800053e:	40f2      	lsrs	r2, r6
 8000540:	ea4c 0202 	orr.w	r2, ip, r2
 8000544:	40f7      	lsrs	r7, r6
 8000546:	e9c5 2700 	strd	r2, r7, [r5]
 800054a:	2600      	movs	r6, #0
 800054c:	4631      	mov	r1, r6
 800054e:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000552:	462e      	mov	r6, r5
 8000554:	4628      	mov	r0, r5
 8000556:	e70b      	b.n	8000370 <__udivmoddi4+0xa0>
 8000558:	4606      	mov	r6, r0
 800055a:	e6e9      	b.n	8000330 <__udivmoddi4+0x60>
 800055c:	4618      	mov	r0, r3
 800055e:	e6fd      	b.n	800035c <__udivmoddi4+0x8c>
 8000560:	4543      	cmp	r3, r8
 8000562:	d2e5      	bcs.n	8000530 <__udivmoddi4+0x260>
 8000564:	ebb8 0e02 	subs.w	lr, r8, r2
 8000568:	eb69 0104 	sbc.w	r1, r9, r4
 800056c:	3801      	subs	r0, #1
 800056e:	e7df      	b.n	8000530 <__udivmoddi4+0x260>
 8000570:	4608      	mov	r0, r1
 8000572:	e7d2      	b.n	800051a <__udivmoddi4+0x24a>
 8000574:	4660      	mov	r0, ip
 8000576:	e78d      	b.n	8000494 <__udivmoddi4+0x1c4>
 8000578:	4681      	mov	r9, r0
 800057a:	e7b9      	b.n	80004f0 <__udivmoddi4+0x220>
 800057c:	4666      	mov	r6, ip
 800057e:	e775      	b.n	800046c <__udivmoddi4+0x19c>
 8000580:	4630      	mov	r0, r6
 8000582:	e74a      	b.n	800041a <__udivmoddi4+0x14a>
 8000584:	f1ac 0c02 	sub.w	ip, ip, #2
 8000588:	4439      	add	r1, r7
 800058a:	e713      	b.n	80003b4 <__udivmoddi4+0xe4>
 800058c:	3802      	subs	r0, #2
 800058e:	443c      	add	r4, r7
 8000590:	e724      	b.n	80003dc <__udivmoddi4+0x10c>
 8000592:	bf00      	nop

08000594 <__aeabi_idiv0>:
 8000594:	4770      	bx	lr
 8000596:	bf00      	nop

08000598 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack     /* set stack pointer */
 8000598:	f8df d034 	ldr.w	sp, [pc, #52]	; 80005d0 <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 800059c:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 800059e:	e003      	b.n	80005a8 <LoopCopyDataInit>

080005a0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80005a0:	4b0c      	ldr	r3, [pc, #48]	; (80005d4 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 80005a2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80005a4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80005a6:	3104      	adds	r1, #4

080005a8 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 80005a8:	480b      	ldr	r0, [pc, #44]	; (80005d8 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 80005aa:	4b0c      	ldr	r3, [pc, #48]	; (80005dc <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 80005ac:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80005ae:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80005b0:	d3f6      	bcc.n	80005a0 <CopyDataInit>
  ldr  r2, =_sbss
 80005b2:	4a0b      	ldr	r2, [pc, #44]	; (80005e0 <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 80005b4:	e002      	b.n	80005bc <LoopFillZerobss>

080005b6 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 80005b6:	2300      	movs	r3, #0
  str  r3, [r2], #4
 80005b8:	f842 3b04 	str.w	r3, [r2], #4

080005bc <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 80005bc:	4b09      	ldr	r3, [pc, #36]	; (80005e4 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 80005be:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80005c0:	d3f9      	bcc.n	80005b6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 80005c2:	f003 f8c1 	bl	8003748 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80005c6:	f019 f87b 	bl	80196c0 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80005ca:	f000 ff6f 	bl	80014ac <main>
  bx  lr    
 80005ce:	4770      	bx	lr
  ldr   sp, =_estack     /* set stack pointer */
 80005d0:	20050000 	.word	0x20050000
  ldr  r3, =_sidata
 80005d4:	0801d754 	.word	0x0801d754
  ldr  r0, =_sdata
 80005d8:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 80005dc:	20000140 	.word	0x20000140
  ldr  r2, =_sbss
 80005e0:	20000140 	.word	0x20000140
  ldr  r3, = _ebss
 80005e4:	2000a658 	.word	0x2000a658

080005e8 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 80005e8:	e7fe      	b.n	80005e8 <ADC_IRQHandler>

080005ea <MX_TouchGFX_Init>:
 * Initialize TouchGFX application
 */
void MX_TouchGFX_Init(void)
{
  // Calling farward to touchgfx_init in C++ domain
  touchgfx_init();
 80005ea:	f000 bde9 	b.w	80011c0 <touchgfx_init>

080005ee <TouchGFX_Task>:
 * TouchGFX application thread
 */
void TouchGFX_Task(void *argument)
{
  // Calling farward to touchgfx_taskEntry in C++ domain
  touchgfx_taskEntry();
 80005ee:	f000 be57 	b.w	80012a0 <touchgfx_taskEntry>

080005f2 <_ZN8touchgfx7Buttons4initEv>:
extern "C" void             BSP_PB_Init(Button_TypeDef Button, ButtonMode_TypeDef Button_Mode);
extern "C" uint32_t         BSP_PB_GetState(Button_TypeDef Button);

void Buttons::init()
{
    BSP_PB_Init(BUTTON_WAKEUP, BUTTON_MODE_GPIO);
 80005f2:	2100      	movs	r1, #0
 80005f4:	4608      	mov	r0, r1
 80005f6:	f002 bc0f 	b.w	8002e18 <BSP_PB_Init>

080005fa <_ZN8touchgfx7Buttons6sampleEv>:

unsigned int Buttons::sample()
{
    uint32_t result = 0;

    result = BSP_PB_GetState(BUTTON_WAKEUP);
 80005fa:	2000      	movs	r0, #0
 80005fc:	f002 bc46 	b.w	8002e8c <BSP_PB_GetState>

08000600 <_ZN8touchgfx18MCUInstrumentation13getCCConsumedEv>:
     *
     * @return clock cycles.
     */
    virtual uint32_t getCCConsumed()
    {
        return cc_consumed;
 8000600:	6840      	ldr	r0, [r0, #4]
    }
 8000602:	4770      	bx	lr

08000604 <_ZN8touchgfx18MCUInstrumentation13setCCConsumedEm>:
     *
     * @param  val number of clock cycles.
     */
    virtual void setCCConsumed(uint32_t val)
    {
        cc_consumed = val;
 8000604:	6041      	str	r1, [r0, #4]
    }
 8000606:	4770      	bx	lr

08000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>:
    //                                    Instrumentation Trace Macrocell (ITM)
    //                                    Embedded Trace Macrocell (ETM)
    //                                    Trace Port Interface Unit (TPIU).
    //                                    This enables control of power usage unless tracing is required. The application can enable this, for ITM use, or use by a debugger.

    *((volatile unsigned int*)0xE000EDFC) |= 0x01000000;
 8000608:	4a05      	ldr	r2, [pc, #20]	; (8000620 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x18>)
 800060a:	6813      	ldr	r3, [r2, #0]
 800060c:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8000610:	6013      	str	r3, [r2, #0]
    *((volatile unsigned int*)0xE0001000) |= 1;
 8000612:	4a04      	ldr	r2, [pc, #16]	; (8000624 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv+0x1c>)
 8000614:	6813      	ldr	r3, [r2, #0]
 8000616:	f043 0301 	orr.w	r3, r3, #1
 800061a:	6013      	str	r3, [r2, #0]
}
 800061c:	4770      	bx	lr
 800061e:	bf00      	nop
 8000620:	e000edfc 	.word	0xe000edfc
 8000624:	e0001000 	.word	0xe0001000

08000628 <_ZN8touchgfx25CortexMMCUInstrumentation12getElapsedUSEjjj>:

//Board specific clockfrequency
unsigned int CortexMMCUInstrumentation::getElapsedUS(unsigned int start, unsigned int now, unsigned int clockfrequency)
{
    return ((now - start) + (clockfrequency / 2)) / clockfrequency;
 8000628:	1a51      	subs	r1, r2, r1
 800062a:	eb01 0153 	add.w	r1, r1, r3, lsr #1
}
 800062e:	fbb1 f0f3 	udiv	r0, r1, r3
 8000632:	4770      	bx	lr

08000634 <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv>:

unsigned int CortexMMCUInstrumentation::getCPUCycles()
{
    return *((volatile unsigned int*)0xE0001004);
 8000634:	4b01      	ldr	r3, [pc, #4]	; (800063c <_ZN8touchgfx25CortexMMCUInstrumentation12getCPUCyclesEv+0x8>)
 8000636:	6818      	ldr	r0, [r3, #0]
}
 8000638:	4770      	bx	lr
 800063a:	bf00      	nop
 800063c:	e0001004 	.word	0xe0001004

08000640 <_ZN8touchgfx25CortexMMCUInstrumentationD1Ev>:
 *        Interface for instrumenting Cortex-M processors to measure MCU load via measured CPU
 *        cycles.
 *
 * @sa MCUInstrumentation
 */
class CortexMMCUInstrumentation : public MCUInstrumentation
 8000640:	4770      	bx	lr

08000642 <_ZN8touchgfx25CortexMMCUInstrumentationD0Ev>:
 8000642:	b510      	push	{r4, lr}
 8000644:	210c      	movs	r1, #12
 8000646:	4604      	mov	r4, r0
 8000648:	f018 fecb 	bl	80193e2 <_ZdlPvj>
 800064c:	4620      	mov	r0, r4
 800064e:	bd10      	pop	{r4, pc}

08000650 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb>:

void CortexMMCUInstrumentation::setMCUActive(bool active)
{
    if (active) //idle task sched out
 8000650:	6803      	ldr	r3, [r0, #0]
{
 8000652:	b510      	push	{r4, lr}
 8000654:	691b      	ldr	r3, [r3, #16]
 8000656:	4604      	mov	r4, r0
    if (active) //idle task sched out
 8000658:	b131      	cbz	r1, 8000668 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x18>
    {
        uint32_t cc_temp = getCPUCycles() - cc_in;
 800065a:	4798      	blx	r3
 800065c:	68a2      	ldr	r2, [r4, #8]
        cc_consumed += cc_temp;
 800065e:	6863      	ldr	r3, [r4, #4]
 8000660:	1a9b      	subs	r3, r3, r2
 8000662:	4418      	add	r0, r3
 8000664:	6060      	str	r0, [r4, #4]
    }
    else //idle task sched in
    {
        cc_in = getCPUCycles();
    }
}
 8000666:	bd10      	pop	{r4, pc}
        cc_in = getCPUCycles();
 8000668:	4798      	blx	r3
 800066a:	60a0      	str	r0, [r4, #8]
}
 800066c:	e7fb      	b.n	8000666 <_ZN8touchgfx25CortexMMCUInstrumentation12setMCUActiveEb+0x16>

0800066e <_ZN8touchgfx16ButtonController5resetEv>:
    virtual bool sample(uint8_t& key) = 0;

    /** Resets button controller. Does nothing in the default implementation. */
    virtual void reset()
    {
    }
 800066e:	4770      	bx	lr

08000670 <_ZN8touchgfx10KeySamplerD1Ev>:
public:
    KeySampler()
    {
        init();
    }
    virtual ~KeySampler() {}
 8000670:	4770      	bx	lr
	...

08000674 <_ZN8touchgfx10KeySampler4initEv>:
using namespace touchgfx;

static uint8_t btnstatus[4];

void KeySampler::init()
{
 8000674:	b508      	push	{r3, lr}
    Buttons::init();
 8000676:	f7ff ffbc 	bl	80005f2 <_ZN8touchgfx7Buttons4initEv>

    memset(btnstatus, 0x00, sizeof(uint8_t) * 4);
 800067a:	4b02      	ldr	r3, [pc, #8]	; (8000684 <_ZN8touchgfx10KeySampler4initEv+0x10>)
 800067c:	2200      	movs	r2, #0
 800067e:	601a      	str	r2, [r3, #0]
}
 8000680:	bd08      	pop	{r3, pc}
 8000682:	bf00      	nop
 8000684:	2000015c 	.word	0x2000015c

08000688 <_ZN8touchgfx10KeySampler6sampleERh>:

bool KeySampler::sample(uint8_t& key)
{
 8000688:	b570      	push	{r4, r5, r6, lr}
 800068a:	460d      	mov	r5, r1
    unsigned int buttonValue = Buttons::sample();
 800068c:	f7ff ffb5 	bl	80005fa <_ZN8touchgfx7Buttons6sampleEv>

    //Propergate values through buffer
    btnstatus[3] = btnstatus[2];
 8000690:	4a0b      	ldr	r2, [pc, #44]	; (80006c0 <_ZN8touchgfx10KeySampler6sampleERh+0x38>)
 8000692:	7893      	ldrb	r3, [r2, #2]
    btnstatus[2] = btnstatus[1];
 8000694:	7856      	ldrb	r6, [r2, #1]
    btnstatus[1] = btnstatus[0];
 8000696:	7811      	ldrb	r1, [r2, #0]
    btnstatus[3] = btnstatus[2];
 8000698:	70d3      	strb	r3, [r2, #3]
    btnstatus[0] = buttonValue;
 800069a:	b2c4      	uxtb	r4, r0

    //User key
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 800069c:	f013 0001 	ands.w	r0, r3, #1
    btnstatus[2] = btnstatus[1];
 80006a0:	7096      	strb	r6, [r2, #2]
    btnstatus[1] = btnstatus[0];
 80006a2:	7051      	strb	r1, [r2, #1]
    btnstatus[0] = buttonValue;
 80006a4:	7014      	strb	r4, [r2, #0]
    if (((btnstatus[3] & Key1) == 1) && ((btnstatus[2] & Key1) == 1) &&
 80006a6:	d00a      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006a8:	f016 0001 	ands.w	r0, r6, #1
 80006ac:	d007      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
 80006ae:	f011 0001 	ands.w	r0, r1, #1
 80006b2:	d004      	beq.n	80006be <_ZN8touchgfx10KeySampler6sampleERh+0x36>
            ((btnstatus[1] & Key1) == 1) && ((btnstatus[0] & Key1) == 0))
 80006b4:	07e3      	lsls	r3, r4, #31
    {
        key = 1;
 80006b6:	bf5a      	itte	pl
 80006b8:	2001      	movpl	r0, #1
 80006ba:	7028      	strbpl	r0, [r5, #0]
        return true;
    }

    return false;
 80006bc:	2000      	movmi	r0, #0
}
 80006be:	bd70      	pop	{r4, r5, r6, pc}
 80006c0:	2000015c 	.word	0x2000015c

080006c4 <_ZN8touchgfx10KeySamplerD0Ev>:
 80006c4:	b510      	push	{r4, lr}
 80006c6:	2104      	movs	r1, #4
 80006c8:	4604      	mov	r4, r0
 80006ca:	f018 fe8a 	bl	80193e2 <_ZdlPvj>
 80006ce:	4620      	mov	r0, r4
 80006d0:	bd10      	pop	{r4, pc}

080006d2 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 80006d2:	4770      	bx	lr

080006d4 <_ZN20STM32TouchControllerD0Ev>:
 80006d4:	b510      	push	{r4, lr}
 80006d6:	2104      	movs	r1, #4
 80006d8:	4604      	mov	r4, r0
 80006da:	f018 fe82 	bl	80193e2 <_ZdlPvj>
 80006de:	4620      	mov	r0, r4
 80006e0:	bd10      	pop	{r4, pc}
	...

080006e4 <_ZN20STM32TouchController4initEv>:
#include "stm32469i_discovery_ts.h"

static bool bsp_ts_initialized = false;

void STM32TouchController::init()
{
 80006e4:	b508      	push	{r3, lr}
    /**
     * Initialize touch controller and driver
     *
     */
    if (BSP_TS_Init(800, 480) == TS_OK)
 80006e6:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 80006ea:	f44f 7048 	mov.w	r0, #800	; 0x320
 80006ee:	f002 ff77 	bl	80035e0 <BSP_TS_Init>
 80006f2:	4b07      	ldr	r3, [pc, #28]	; (8000710 <_ZN20STM32TouchController4initEv+0x2c>)
 80006f4:	b910      	cbnz	r0, 80006fc <_ZN20STM32TouchController4initEv+0x18>
    {
        bsp_ts_initialized = true;
 80006f6:	2201      	movs	r2, #1
 80006f8:	701a      	strb	r2, [r3, #0]
    }

    assert(bsp_ts_initialized);
}
 80006fa:	bd08      	pop	{r3, pc}
    assert(bsp_ts_initialized);
 80006fc:	781b      	ldrb	r3, [r3, #0]
 80006fe:	2b00      	cmp	r3, #0
 8000700:	d1fb      	bne.n	80006fa <_ZN20STM32TouchController4initEv+0x16>
 8000702:	4b04      	ldr	r3, [pc, #16]	; (8000714 <_ZN20STM32TouchController4initEv+0x30>)
 8000704:	4a04      	ldr	r2, [pc, #16]	; (8000718 <_ZN20STM32TouchController4initEv+0x34>)
 8000706:	4805      	ldr	r0, [pc, #20]	; (800071c <_ZN20STM32TouchController4initEv+0x38>)
 8000708:	2124      	movs	r1, #36	; 0x24
 800070a:	f018 fe99 	bl	8019440 <__assert_func>
 800070e:	bf00      	nop
 8000710:	20000160 	.word	0x20000160
 8000714:	0801a6ac 	.word	0x0801a6ac
 8000718:	0801a6bf 	.word	0x0801a6bf
 800071c:	0801a6e9 	.word	0x0801a6e9

08000720 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 8000720:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
     *
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */
    if (bsp_ts_initialized)
 8000722:	4b0b      	ldr	r3, [pc, #44]	; (8000750 <_ZN20STM32TouchController11sampleTouchERlS0_+0x30>)
 8000724:	781c      	ldrb	r4, [r3, #0]
{
 8000726:	460e      	mov	r6, r1
 8000728:	4615      	mov	r5, r2
    if (bsp_ts_initialized)
 800072a:	b15c      	cbz	r4, 8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
    {
        TS_StateTypeDef state;
        BSP_TS_GetState(&state);
 800072c:	a801      	add	r0, sp, #4
 800072e:	f002 ff95 	bl	800365c <BSP_TS_GetState>
        if (state.touchDetected)
 8000732:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8000736:	b143      	cbz	r3, 800074a <_ZN20STM32TouchController11sampleTouchERlS0_+0x2a>
        {
            x = state.touchX[0];
 8000738:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800073c:	6033      	str	r3, [r6, #0]
            y = state.touchY[0];
 800073e:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 8000742:	602b      	str	r3, [r5, #0]
            return true;
        }
    }
    return false;
}
 8000744:	4620      	mov	r0, r4
 8000746:	b004      	add	sp, #16
 8000748:	bd70      	pop	{r4, r5, r6, pc}
    return false;
 800074a:	461c      	mov	r4, r3
 800074c:	e7fa      	b.n	8000744 <_ZN20STM32TouchController11sampleTouchERlS0_+0x24>
 800074e:	bf00      	nop
 8000750:	20000160 	.word	0x20000160

08000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:
/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
    switch (id)
 8000754:	b110      	cbz	r0, 800075c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x8>
 8000756:	2801      	cmp	r0, #1
 8000758:	d009      	beq.n	800076e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x1a>
 800075a:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_SET(id));
 800075c:	4b08      	ldr	r3, [pc, #32]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 800075e:	4809      	ldr	r0, [pc, #36]	; (8000784 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x30>)
 8000760:	681a      	ldr	r2, [r3, #0]
 8000762:	fab2 f282 	clz	r2, r2
 8000766:	0952      	lsrs	r2, r2, #5
 8000768:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_SET(id));
 800076a:	f004 b803 	b.w	8004774 <HAL_GPIO_WritePin>
 800076e:	4b04      	ldr	r3, [pc, #16]	; (8000780 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2c>)
 8000770:	4805      	ldr	r0, [pc, #20]	; (8000788 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x34>)
 8000772:	685a      	ldr	r2, [r3, #4]
 8000774:	fab2 f282 	clz	r2, r2
 8000778:	0952      	lsrs	r2, r2, #5
 800077a:	2110      	movs	r1, #16
 800077c:	e7f5      	b.n	800076a <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x16>
 800077e:	bf00      	nop
 8000780:	20000164 	.word	0x20000164
 8000784:	40021800 	.word	0x40021800
 8000788:	40020c00 	.word	0x40020c00

0800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:
/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
    switch (id)
 800078c:	b110      	cbz	r0, 8000794 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x8>
 800078e:	2801      	cmp	r0, #1
 8000790:	d009      	beq.n	80007a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x1a>
 8000792:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, M_GPIO_PIN_RESET(id));
 8000794:	4b08      	ldr	r3, [pc, #32]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 8000796:	4809      	ldr	r0, [pc, #36]	; (80007bc <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x30>)
 8000798:	681a      	ldr	r2, [r3, #0]
 800079a:	3a00      	subs	r2, #0
 800079c:	bf18      	it	ne
 800079e:	2201      	movne	r2, #1
 80007a0:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, M_GPIO_PIN_RESET(id));
 80007a2:	f003 bfe7 	b.w	8004774 <HAL_GPIO_WritePin>
 80007a6:	4b04      	ldr	r3, [pc, #16]	; (80007b8 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2c>)
 80007a8:	4805      	ldr	r0, [pc, #20]	; (80007c0 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x34>)
 80007aa:	685a      	ldr	r2, [r3, #4]
 80007ac:	3a00      	subs	r2, #0
 80007ae:	bf18      	it	ne
 80007b0:	2201      	movne	r2, #1
 80007b2:	2110      	movs	r1, #16
 80007b4:	e7f5      	b.n	80007a2 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x16>
 80007b6:	bf00      	nop
 80007b8:	20000164 	.word	0x20000164
 80007bc:	40021800 	.word	0x40021800
 80007c0:	40020c00 	.word	0x40020c00

080007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:
/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
    switch (id)
 80007c4:	b110      	cbz	r0, 80007cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x8>
 80007c6:	2801      	cmp	r0, #1
 80007c8:	d004      	beq.n	80007d4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x10>
 80007ca:	4770      	bx	lr
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007cc:	4803      	ldr	r0, [pc, #12]	; (80007dc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 80007ce:	2140      	movs	r1, #64	; 0x40
#endif
        break;
    case GPIO::RENDER_TIME:
#if defined(RENDER_TIME_GPIO_Port) && defined(RENDER_TIME_Pin)
        HAL_GPIO_TogglePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007d0:	f003 bfd5 	b.w	800477e <HAL_GPIO_TogglePin>
 80007d4:	4802      	ldr	r0, [pc, #8]	; (80007e0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x1c>)
 80007d6:	2110      	movs	r1, #16
 80007d8:	e7fa      	b.n	80007d0 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0xc>
 80007da:	bf00      	nop
 80007dc:	40021800 	.word	0x40021800
 80007e0:	40020c00 	.word	0x40020c00

080007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>:

/*
 * Gets the state of a pin.
 */
bool GPIO::get(GPIO_ID id)
{
 80007e4:	b508      	push	{r3, lr}
    GPIO_PinState bitstatus = GPIO_PIN_RESET;
    switch (id)
 80007e6:	b130      	cbz	r0, 80007f6 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x12>
 80007e8:	2801      	cmp	r0, #1
 80007ea:	d009      	beq.n	8000800 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x1c>
 80007ec:	2000      	movs	r0, #0
        bitstatus = HAL_GPIO_ReadPin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
    return (bitstatus == GPIO_PIN_SET);
}
 80007ee:	1e43      	subs	r3, r0, #1
 80007f0:	4258      	negs	r0, r3
 80007f2:	4158      	adcs	r0, r3
 80007f4:	bd08      	pop	{r3, pc}
        bitstatus = HAL_GPIO_ReadPin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
 80007f6:	4804      	ldr	r0, [pc, #16]	; (8000808 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x24>)
 80007f8:	2140      	movs	r1, #64	; 0x40
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 80007fa:	f003 ffb5 	bl	8004768 <HAL_GPIO_ReadPin>
        break;
 80007fe:	e7f6      	b.n	80007ee <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0xa>
        bitstatus = HAL_GPIO_ReadPin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin);
 8000800:	4802      	ldr	r0, [pc, #8]	; (800080c <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x28>)
 8000802:	2110      	movs	r1, #16
 8000804:	e7f9      	b.n	80007fa <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE+0x16>
 8000806:	bf00      	nop
 8000808:	40021800 	.word	0x40021800
 800080c:	40020c00 	.word	0x40020c00

08000810 <_ZN8touchgfx4GPIO4initEv>:
{
 8000810:	b570      	push	{r4, r5, r6, lr}
 8000812:	4d08      	ldr	r5, [pc, #32]	; (8000834 <_ZN8touchgfx4GPIO4initEv+0x24>)
    for (int id = 0; id <= 4; id++)
 8000814:	2400      	movs	r4, #0
                GPIO_InvertedLevels[id] = 1;
 8000816:	2601      	movs	r6, #1
        if (GPIO::get(static_cast<GPIO_ID>(id)))
 8000818:	b2e0      	uxtb	r0, r4
 800081a:	f7ff ffe3 	bl	80007e4 <_ZN8touchgfx4GPIO3getENS0_7GPIO_IDE>
 800081e:	b118      	cbz	r0, 8000828 <_ZN8touchgfx4GPIO4initEv+0x18>
            if (GPIO_InvertedLevels[id] != 1)
 8000820:	682b      	ldr	r3, [r5, #0]
 8000822:	2b01      	cmp	r3, #1
                GPIO_InvertedLevels[id] = 1;
 8000824:	bf18      	it	ne
 8000826:	602e      	strne	r6, [r5, #0]
    for (int id = 0; id <= 4; id++)
 8000828:	3401      	adds	r4, #1
 800082a:	2c05      	cmp	r4, #5
 800082c:	f105 0504 	add.w	r5, r5, #4
 8000830:	d1f2      	bne.n	8000818 <_ZN8touchgfx4GPIO4initEv+0x8>
}
 8000832:	bd70      	pop	{r4, r5, r6, pc}
 8000834:	20000164 	.word	0x20000164

08000838 <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
     * @note A screen transition must occur before this takes effect!
     */
    virtual void setDisplayOrientation(DisplayOrientation orientation)
    {
        requestedOrientation = orientation;
        displayOrientationChangeRequested = true;
 8000838:	2301      	movs	r3, #1
        requestedOrientation = orientation;
 800083a:	f880 1074 	strb.w	r1, [r0, #116]	; 0x74
        displayOrientationChangeRequested = true;
 800083e:	f880 3075 	strb.w	r3, [r0, #117]	; 0x75
    }
 8000842:	4770      	bx	lr

08000844 <_ZN8touchgfx3HAL9sampleKeyERh>:
     * @return True if a keypress was detected and the "key" parameter is set to a value.
     */
    virtual bool sampleKey(uint8_t& key)
    {
        return false;
    }
 8000844:	2000      	movs	r0, #0
 8000846:	4770      	bx	lr

08000848 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
     * @return the FlashDataReader.
     */
    virtual FlashDataReader* getFlashDataReader() const
    {
        return 0;
    }
 8000848:	2000      	movs	r0, #0
 800084a:	4770      	bx	lr

0800084c <_ZN8touchgfx3HAL9taskDelayEt>:
     *
     * @see registerTaskDelayFunction
     */
    virtual void taskDelay(uint16_t ms)
    {
        if (taskDelayFunc)
 800084c:	6b83      	ldr	r3, [r0, #56]	; 0x38
 800084e:	b10b      	cbz	r3, 8000854 <_ZN8touchgfx3HAL9taskDelayEt+0x8>
        {
            taskDelayFunc(ms);
 8000850:	4608      	mov	r0, r1
 8000852:	4718      	bx	r3
        }
    }
 8000854:	4770      	bx	lr

08000856 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
     *         implemented".
     */
    virtual uint16_t getTFTCurrentLine()
    {
        return 0xFFFFu;
    }
 8000856:	f64f 70ff 	movw	r0, #65535	; 0xffff
 800085a:	4770      	bx	lr

0800085c <_ZN8touchgfx3HAL10getDMATypeEv>:
     *
     * @return a DMAType value of the concrete DMA implementation.
     */
    virtual DMAType getDMAType()
    {
        return dma.getDMAType();
 800085c:	6840      	ldr	r0, [r0, #4]
 800085e:	6803      	ldr	r3, [r0, #0]
 8000860:	699b      	ldr	r3, [r3, #24]
 8000862:	4718      	bx	r3

08000864 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Hardware to Software indicating the cache should be invalidated.
     */
    virtual void InvalidateCache()
    {
    }
 8000864:	4770      	bx	lr

08000866 <_ZN8touchgfx3HAL10FlushCacheEv>:
     * Called by setRenderingMethod when changing rendering method
     * from Software to Hardware indicating the cache should be invalidated.
     */
    virtual void FlushCache()
    {
    }
 8000866:	4770      	bx	lr

08000868 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    return currFbBase;
}
 8000868:	4b01      	ldr	r3, [pc, #4]	; (8000870 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv+0x8>)
 800086a:	6818      	ldr	r0, [r3, #0]
 800086c:	4770      	bx	lr
 800086e:	bf00      	nop
 8000870:	20000174 	.word	0x20000174

08000874 <_ZN11TouchGFXHALD1Ev>:
 *
 * @brief HAL implementation for TouchGFX.
 *
 * @sa HAL
 */
class TouchGFXHAL : public TouchGFXGeneratedHAL
 8000874:	4770      	bx	lr
	...

08000878 <_ZN11TouchGFXHAL10initializeEv>:
{
 8000878:	b538      	push	{r3, r4, r5, lr}
 800087a:	4604      	mov	r4, r0
    mcuInstr.init();
 800087c:	4d09      	ldr	r5, [pc, #36]	; (80008a4 <_ZN11TouchGFXHAL10initializeEv+0x2c>)
    GPIO::init();
 800087e:	f7ff ffc7 	bl	8000810 <_ZN8touchgfx4GPIO4initEv>
    TouchGFXGeneratedHAL::initialize();
 8000882:	4620      	mov	r0, r4
 8000884:	f000 fd8e 	bl	80013a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
        lockDMAToPorch = enableLock;
 8000888:	2300      	movs	r3, #0
 800088a:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
    mcuInstr.init();
 800088e:	4628      	mov	r0, r5
 8000890:	f7ff feba 	bl	8000608 <_ZN8touchgfx25CortexMMCUInstrumentation4initEv>
        updateMCULoad = enabled;
 8000894:	2301      	movs	r3, #1
 8000896:	f884 306c 	strb.w	r3, [r4, #108]	; 0x6c
        buttonController = btnCtrl;
 800089a:	4b03      	ldr	r3, [pc, #12]	; (80008a8 <_ZN11TouchGFXHAL10initializeEv+0x30>)
        mcuInstrumentation = mcuInstr;
 800089c:	6125      	str	r5, [r4, #16]
        buttonController = btnCtrl;
 800089e:	6163      	str	r3, [r4, #20]
}
 80008a0:	bd38      	pop	{r3, r4, r5, pc}
 80008a2:	bf00      	nop
 80008a4:	20000180 	.word	0x20000180
 80008a8:	2000017c 	.word	0x2000017c

080008ac <_ZN11TouchGFXHAL9taskEntryEv>:
    enableLCDControllerInterrupt();
 80008ac:	6803      	ldr	r3, [r0, #0]
{
 80008ae:	4604      	mov	r4, r0
 80008b0:	b507      	push	{r0, r1, r2, lr}
    enableLCDControllerInterrupt();
 80008b2:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 80008b4:	4798      	blx	r3
    enableInterrupts();
 80008b6:	6823      	ldr	r3, [r4, #0]
 80008b8:	4620      	mov	r0, r4
 80008ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 80008bc:	4798      	blx	r3
    OSWrappers::waitForVSync();
 80008be:	f000 fa17 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
    backPorchExited();
 80008c2:	6823      	ldr	r3, [r4, #0]
 80008c4:	4620      	mov	r0, r4
 80008c6:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80008c8:	4798      	blx	r3
    HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPON, 0x00);
 80008ca:	2100      	movs	r1, #0
 80008cc:	4806      	ldr	r0, [pc, #24]	; (80008e8 <_ZN11TouchGFXHAL9taskEntryEv+0x3c>)
 80008ce:	9100      	str	r1, [sp, #0]
 80008d0:	2329      	movs	r3, #41	; 0x29
 80008d2:	2215      	movs	r2, #21
 80008d4:	f003 fd37 	bl	8004346 <HAL_DSI_ShortWrite>
        OSWrappers::waitForVSync();
 80008d8:	f000 fa0a 	bl	8000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
        backPorchExited();
 80008dc:	6823      	ldr	r3, [r4, #0]
 80008de:	4620      	mov	r0, r4
 80008e0:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 80008e2:	4798      	blx	r3
    for (;;)
 80008e4:	e7f8      	b.n	80008d8 <_ZN11TouchGFXHAL9taskEntryEv+0x2c>
 80008e6:	bf00      	nop
 80008e8:	2000a3e8 	.word	0x2000a3e8

080008ec <_ZN8touchgfx3HAL15backPorchExitedEv>:
    virtual void backPorchExited()
 80008ec:	b510      	push	{r4, lr}
 80008ee:	4604      	mov	r4, r0
        swapFrameBuffers();
 80008f0:	f009 f8a4 	bl	8009a3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
        tick();
 80008f4:	6823      	ldr	r3, [r4, #0]
 80008f6:	4620      	mov	r0, r4
 80008f8:	f8d3 30a0 	ldr.w	r3, [r3, #160]	; 0xa0
    }
 80008fc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        tick();
 8000900:	4718      	bx	r3

08000902 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
    // Calling parent implementation of setTFTFrameBuffer(uint16_t* address).
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::setTFTFrameBuffer(address);
 8000902:	f000 bd4e 	b.w	80013a2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>

08000906 <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.
    // Please note, HAL::flushFrameBuffer(const touchgfx::Rect& rect) must
    // be called to notify the touchgfx framework that flush has been performed.

    TouchGFXGeneratedHAL::flushFrameBuffer(rect);
 8000906:	f000 bd65 	b.w	80013d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>

0800090a <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
}

bool TouchGFXHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return TouchGFXGeneratedHAL::blockCopy(dest, src, numBytes);
 800090a:	f000 bd65 	b.w	80013d8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>

0800090e <_ZN11TouchGFXHAL19configureInterruptsEv>:
    // Calling parent implementation of configureInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::configureInterrupts();
 800090e:	f000 bd37 	b.w	8001380 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>

08000912 <_ZN11TouchGFXHAL16enableInterruptsEv>:
    // Calling parent implementation of enableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::enableInterrupts();
 8000912:	f000 bd3d 	b.w	8001390 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>

08000916 <_ZN11TouchGFXHAL17disableInterruptsEv>:
    // Calling parent implementation of disableInterrupts().
    //
    // To overwrite the generated implementation, omit call to parent function
    // and implemented needed functionality here.

    TouchGFXGeneratedHAL::disableInterrupts();
 8000916:	f000 bd61 	b.w	80013dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
	...

0800091c <_ZN11TouchGFXHAL10beginFrameEv>:
    HAL::setFrameBufferStartAddresses(frameBuffer, doubleBuffer, animationStorage);
}

bool TouchGFXHAL::beginFrame()
{
    refreshRequested = false;
 800091c:	4b02      	ldr	r3, [pc, #8]	; (8000928 <_ZN11TouchGFXHAL10beginFrameEv+0xc>)
 800091e:	2200      	movs	r2, #0
 8000920:	701a      	strb	r2, [r3, #0]
    return HAL::beginFrame();
 8000922:	f008 ba6f 	b.w	8008e04 <_ZN8touchgfx3HAL10beginFrameEv>
 8000926:	bf00      	nop
 8000928:	20000014 	.word	0x20000014

0800092c <_ZN11TouchGFXHAL8endFrameEv>:
}

void TouchGFXHAL::endFrame()
{
 800092c:	b510      	push	{r4, lr}
 800092e:	4604      	mov	r4, r0
    HAL::endFrame();
 8000930:	f008 fa74 	bl	8008e1c <_ZN8touchgfx3HAL8endFrameEv>
    if (frameBufferUpdatedThisFrame)
 8000934:	f894 304b 	ldrb.w	r3, [r4, #75]	; 0x4b
 8000938:	b113      	cbz	r3, 8000940 <_ZN11TouchGFXHAL8endFrameEv+0x14>
    {
        refreshRequested = true;
 800093a:	4b02      	ldr	r3, [pc, #8]	; (8000944 <_ZN11TouchGFXHAL8endFrameEv+0x18>)
 800093c:	2201      	movs	r2, #1
 800093e:	701a      	strb	r2, [r3, #0]
    }
}
 8000940:	bd10      	pop	{r4, pc}
 8000942:	bf00      	nop
 8000944:	20000014 	.word	0x20000014

08000948 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
     * Rect version.
     * @see HAL::flushFrameBuffer
     */
    virtual void flushFrameBuffer()
    {
        HAL::flushFrameBuffer();
 8000948:	f008 ba22 	b.w	8008d90 <_ZN8touchgfx3HAL16flushFrameBufferEv>

0800094c <_ZN11TouchGFXHALD0Ev>:
 800094c:	b510      	push	{r4, lr}
 800094e:	217c      	movs	r1, #124	; 0x7c
 8000950:	4604      	mov	r4, r0
 8000952:	f018 fd46 	bl	80193e2 <_ZdlPvj>
 8000956:	4620      	mov	r0, r4
 8000958:	bd10      	pop	{r4, pc}

0800095a <_ZN8touchgfx3HAL11getBlitCapsEv>:
        if (useDMAAcceleration)
 800095a:	f890 3077 	ldrb.w	r3, [r0, #119]	; 0x77
 800095e:	b11b      	cbz	r3, 8000968 <_ZN8touchgfx3HAL11getBlitCapsEv+0xe>
            return dma.getBlitCaps();
 8000960:	6840      	ldr	r0, [r0, #4]
 8000962:	6803      	ldr	r3, [r0, #0]
 8000964:	681b      	ldr	r3, [r3, #0]
 8000966:	4718      	bx	r3
    }
 8000968:	4618      	mov	r0, r3
 800096a:	4770      	bx	lr

0800096c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
    virtual void performDisplayOrientationChange()
 800096c:	b530      	push	{r4, r5, lr}
        if (requestedOrientation != nativeDisplayOrientation)
 800096e:	f890 1034 	ldrb.w	r1, [r0, #52]	; 0x34
 8000972:	f890 4074 	ldrb.w	r4, [r0, #116]	; 0x74
 8000976:	4b10      	ldr	r3, [pc, #64]	; (80009b8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x4c>)
 8000978:	428c      	cmp	r4, r1
 800097a:	781a      	ldrb	r2, [r3, #0]
 800097c:	d00d      	beq.n	800099a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2e>
            if (DISPLAY_ROTATION == rotate0)
 800097e:	b95a      	cbnz	r2, 8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000980:	4a0e      	ldr	r2, [pc, #56]	; (80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 8000982:	490f      	ldr	r1, [pc, #60]	; (80009c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000984:	480f      	ldr	r0, [pc, #60]	; (80009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8000986:	8814      	ldrh	r4, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000988:	4d0f      	ldr	r5, [pc, #60]	; (80009c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
                FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 800098a:	800c      	strh	r4, [r1, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 800098c:	8801      	ldrh	r1, [r0, #0]
                DISPLAY_WIDTH = FRAME_BUFFER_HEIGHT;
 800098e:	8011      	strh	r1, [r2, #0]
                FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8000990:	8029      	strh	r1, [r5, #0]
                DISPLAY_HEIGHT = FRAME_BUFFER_WIDTH;
 8000992:	8004      	strh	r4, [r0, #0]
                DISPLAY_ROTATION = rotate90;
 8000994:	2201      	movs	r2, #1
            DISPLAY_ROTATION = rotate0;
 8000996:	701a      	strb	r2, [r3, #0]
    }
 8000998:	bd30      	pop	{r4, r5, pc}
        else if (DISPLAY_ROTATION != rotate0)
 800099a:	2a00      	cmp	r2, #0
 800099c:	d0fc      	beq.n	8000998 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2c>
            FRAME_BUFFER_WIDTH = DISPLAY_HEIGHT;
 800099e:	4809      	ldr	r0, [pc, #36]	; (80009c4 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x58>)
 80009a0:	4a07      	ldr	r2, [pc, #28]	; (80009c0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x54>)
 80009a2:	8801      	ldrh	r1, [r0, #0]
 80009a4:	8011      	strh	r1, [r2, #0]
            FRAME_BUFFER_HEIGHT = DISPLAY_WIDTH;
 80009a6:	4a05      	ldr	r2, [pc, #20]	; (80009bc <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x50>)
 80009a8:	4d07      	ldr	r5, [pc, #28]	; (80009c8 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5c>)
 80009aa:	8814      	ldrh	r4, [r2, #0]
 80009ac:	802c      	strh	r4, [r5, #0]
            DISPLAY_WIDTH = FRAME_BUFFER_WIDTH;
 80009ae:	8011      	strh	r1, [r2, #0]
            DISPLAY_HEIGHT = FRAME_BUFFER_HEIGHT;
 80009b0:	8004      	strh	r4, [r0, #0]
            DISPLAY_ROTATION = rotate0;
 80009b2:	2200      	movs	r2, #0
 80009b4:	e7ef      	b.n	8000996 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x2a>
 80009b6:	bf00      	nop
 80009b8:	2000a0e4 	.word	0x2000a0e4
 80009bc:	2000a0e0 	.word	0x2000a0e0
 80009c0:	2000a0e6 	.word	0x2000a0e6
 80009c4:	2000a0e2 	.word	0x2000a0e2
 80009c8:	2000a0e8 	.word	0x2000a0e8

080009cc <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_>:
{
 80009cc:	b510      	push	{r4, lr}
    currFbBase = (uint16_t*)frameBuffer;
 80009ce:	4c0c      	ldr	r4, [pc, #48]	; (8000a00 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x34>)
 80009d0:	6021      	str	r1, [r4, #0]
        assert(frameBuffer != 0 && "A framebuffer address must be set");
 80009d2:	b931      	cbnz	r1, 80009e2 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x16>
 80009d4:	4b0b      	ldr	r3, [pc, #44]	; (8000a04 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x38>)
 80009d6:	4a0c      	ldr	r2, [pc, #48]	; (8000a08 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x3c>)
 80009d8:	480c      	ldr	r0, [pc, #48]	; (8000a0c <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x40>)
 80009da:	f44f 7125 	mov.w	r1, #660	; 0x294
 80009de:	f018 fd2f 	bl	8019440 <__assert_func>
        frameBuffer1 = reinterpret_cast<uint16_t*>(doubleBuffer);
 80009e2:	e9c0 120f 	strd	r1, r2, [r0, #60]	; 0x3c
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009e6:	3a00      	subs	r2, #0
 80009e8:	4909      	ldr	r1, [pc, #36]	; (8000a10 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x44>)
        frameBuffer2 = reinterpret_cast<uint16_t*>(animationStorage);
 80009ea:	6443      	str	r3, [r0, #68]	; 0x44
        USE_DOUBLE_BUFFERING = doubleBuffer != 0;
 80009ec:	bf18      	it	ne
 80009ee:	2201      	movne	r2, #1
 80009f0:	700a      	strb	r2, [r1, #0]
        USE_ANIMATION_STORAGE = animationStorage != 0;
 80009f2:	3b00      	subs	r3, #0
 80009f4:	4a07      	ldr	r2, [pc, #28]	; (8000a14 <_ZN11TouchGFXHAL28setFrameBufferStartAddressesEPvS0_S0_+0x48>)
 80009f6:	bf18      	it	ne
 80009f8:	2301      	movne	r3, #1
 80009fa:	7013      	strb	r3, [r2, #0]
}
 80009fc:	bd10      	pop	{r4, pc}
 80009fe:	bf00      	nop
 8000a00:	20000174 	.word	0x20000174
 8000a04:	0801a754 	.word	0x0801a754
 8000a08:	0801a78c 	.word	0x0801a78c
 8000a0c:	0801a7da 	.word	0x0801a7da
 8000a10:	2000a0ea 	.word	0x2000a0ea
 8000a14:	2000a0eb 	.word	0x2000a0eb

08000a18 <DSI_IO_WriteCmd>:
     * @param  pParams: Pointer to parameter values table.
     * @retval HAL status
     */
    void DSI_IO_WriteCmd(uint32_t NbrParams, uint8_t* pParams)
    {
        if (NbrParams <= 1)
 8000a18:	2801      	cmp	r0, #1
    {
 8000a1a:	b507      	push	{r0, r1, r2, lr}
        if (NbrParams <= 1)
 8000a1c:	d80a      	bhi.n	8000a34 <DSI_IO_WriteCmd+0x1c>
        {
            HAL_DSI_ShortWrite(&hdsi, LCD_OTM8009A_ID, DSI_DCS_SHORT_PKT_WRITE_P1, pParams[0], pParams[1]);
 8000a1e:	784b      	ldrb	r3, [r1, #1]
 8000a20:	9300      	str	r3, [sp, #0]
 8000a22:	780b      	ldrb	r3, [r1, #0]
 8000a24:	4808      	ldr	r0, [pc, #32]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a26:	2215      	movs	r2, #21
 8000a28:	2100      	movs	r1, #0
 8000a2a:	f003 fc8c 	bl	8004346 <HAL_DSI_ShortWrite>
        }
        else
        {
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
        }
    }
 8000a2e:	b003      	add	sp, #12
 8000a30:	f85d fb04 	ldr.w	pc, [sp], #4
            HAL_DSI_LongWrite(&hdsi,  LCD_OTM8009A_ID, DSI_DCS_LONG_PKT_WRITE, NbrParams, pParams[NbrParams], pParams);
 8000a34:	9101      	str	r1, [sp, #4]
 8000a36:	5c0b      	ldrb	r3, [r1, r0]
 8000a38:	9300      	str	r3, [sp, #0]
 8000a3a:	2239      	movs	r2, #57	; 0x39
 8000a3c:	4603      	mov	r3, r0
 8000a3e:	2100      	movs	r1, #0
 8000a40:	4801      	ldr	r0, [pc, #4]	; (8000a48 <DSI_IO_WriteCmd+0x30>)
 8000a42:	f003 fc91 	bl	8004368 <HAL_DSI_LongWrite>
    }
 8000a46:	e7f2      	b.n	8000a2e <DSI_IO_WriteCmd+0x16>
 8000a48:	2000a3e8 	.word	0x2000a3e8

08000a4c <LCD_ReqTear>:

    /**
     * Request TE at scanline.
     */
    void LCD_ReqTear(void)
    {
 8000a4c:	b537      	push	{r0, r1, r2, r4, r5, lr}
        static uint8_t ScanLineParams[2];

        uint16_t scanline = 533;
        ScanLineParams[0] = scanline >> 8;
 8000a4e:	4a0b      	ldr	r2, [pc, #44]	; (8000a7c <LCD_ReqTear+0x30>)
        ScanLineParams[1] = scanline & 0x00FF;

        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a50:	4c0b      	ldr	r4, [pc, #44]	; (8000a80 <LCD_ReqTear+0x34>)
        ScanLineParams[0] = scanline >> 8;
 8000a52:	2302      	movs	r3, #2
        ScanLineParams[1] = scanline & 0x00FF;
 8000a54:	2515      	movs	r5, #21
        ScanLineParams[0] = scanline >> 8;
 8000a56:	7013      	strb	r3, [r2, #0]
        ScanLineParams[1] = scanline & 0x00FF;
 8000a58:	7055      	strb	r5, [r2, #1]
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 2, 0x44, ScanLineParams);
 8000a5a:	9201      	str	r2, [sp, #4]
 8000a5c:	2244      	movs	r2, #68	; 0x44
 8000a5e:	9200      	str	r2, [sp, #0]
 8000a60:	2100      	movs	r1, #0
 8000a62:	2239      	movs	r2, #57	; 0x39
 8000a64:	4620      	mov	r0, r4
 8000a66:	f003 fc7f 	bl	8004368 <HAL_DSI_LongWrite>
        // set_tear_on
        HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, 0x35, 0x00);
 8000a6a:	2100      	movs	r1, #0
 8000a6c:	9100      	str	r1, [sp, #0]
 8000a6e:	2335      	movs	r3, #53	; 0x35
 8000a70:	462a      	mov	r2, r5
 8000a72:	4620      	mov	r0, r4
 8000a74:	f003 fc67 	bl	8004346 <HAL_DSI_ShortWrite>
    }
 8000a78:	b003      	add	sp, #12
 8000a7a:	bd30      	pop	{r4, r5, pc}
 8000a7c:	2000018c 	.word	0x2000018c
 8000a80:	2000a3e8 	.word	0x2000a3e8

08000a84 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
{
 8000a84:	b507      	push	{r0, r1, r2, lr}
 8000a86:	9001      	str	r0, [sp, #4]
    LCD_ReqTear();
 8000a88:	f7ff ffe0 	bl	8000a4c <LCD_ReqTear>
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a8c:	9801      	ldr	r0, [sp, #4]
}
 8000a8e:	b003      	add	sp, #12
 8000a90:	f85d eb04 	ldr.w	lr, [sp], #4
    TouchGFXGeneratedHAL::enableLCDControllerInterrupt();
 8000a94:	f000 bc84 	b.w	80013a0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>

08000a98 <LCD_SetUpdateRegion>:

    void LCD_SetUpdateRegion(int idx)
    {
 8000a98:	b507      	push	{r0, r1, r2, lr}
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pCols[idx]);
 8000a9a:	4b07      	ldr	r3, [pc, #28]	; (8000ab8 <LCD_SetUpdateRegion+0x20>)
 8000a9c:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8000aa0:	232a      	movs	r3, #42	; 0x2a
 8000aa2:	9001      	str	r0, [sp, #4]
 8000aa4:	9300      	str	r3, [sp, #0]
 8000aa6:	2239      	movs	r2, #57	; 0x39
 8000aa8:	2304      	movs	r3, #4
 8000aaa:	2100      	movs	r1, #0
 8000aac:	4803      	ldr	r0, [pc, #12]	; (8000abc <LCD_SetUpdateRegion+0x24>)
 8000aae:	f003 fc5b 	bl	8004368 <HAL_DSI_LongWrite>
    }
 8000ab2:	b003      	add	sp, #12
 8000ab4:	f85d fb04 	ldr.w	pc, [sp], #4
 8000ab8:	20000004 	.word	0x20000004
 8000abc:	2000a3e8 	.word	0x2000a3e8

08000ac0 <HAL_DSI_TearingEffectCallback>:
    {
        HAL_DSI_LongWrite(&hdsi, 0, DSI_DCS_LONG_PKT_WRITE, 4, OTM8009A_CMD_CASET, pColRight);
    }

    void HAL_DSI_TearingEffectCallback(DSI_HandleTypeDef* hdsi)
    {
 8000ac0:	b570      	push	{r4, r5, r6, lr}
        return instance;
 8000ac2:	4d15      	ldr	r5, [pc, #84]	; (8000b18 <HAL_DSI_TearingEffectCallback+0x58>)
 8000ac4:	4604      	mov	r4, r0
        GPIO::set(GPIO::VSYNC_FREQ);
 8000ac6:	2000      	movs	r0, #0
 8000ac8:	f7ff fe44 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8000acc:	682a      	ldr	r2, [r5, #0]
        vSyncCnt++;
 8000ace:	f892 3066 	ldrb.w	r3, [r2, #102]	; 0x66
 8000ad2:	3301      	adds	r3, #1
 8000ad4:	f882 3066 	strb.w	r3, [r2, #102]	; 0x66
        HAL::getInstance()->vSync();
        OSWrappers::signalVSync();
 8000ad8:	f000 f8fe 	bl	8000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>

        // In single buffering, only require that the system waits for display update to be finished if we
        // actually intend to update the display in this frame.
        HAL::getInstance()->lockDMAToFrontPorch(refreshRequested);
 8000adc:	4b0f      	ldr	r3, [pc, #60]	; (8000b1c <HAL_DSI_TearingEffectCallback+0x5c>)
        return instance;
 8000ade:	6828      	ldr	r0, [r5, #0]
 8000ae0:	781a      	ldrb	r2, [r3, #0]

        if (refreshRequested && !displayRefreshing)
 8000ae2:	781b      	ldrb	r3, [r3, #0]
        lockDMAToPorch = enableLock;
 8000ae4:	f880 204a 	strb.w	r2, [r0, #74]	; 0x4a
 8000ae8:	b123      	cbz	r3, 8000af4 <HAL_DSI_TearingEffectCallback+0x34>
 8000aea:	4d0d      	ldr	r5, [pc, #52]	; (8000b20 <HAL_DSI_TearingEffectCallback+0x60>)
 8000aec:	782b      	ldrb	r3, [r5, #0]
 8000aee:	f003 06ff 	and.w	r6, r3, #255	; 0xff
 8000af2:	b123      	cbz	r3, 8000afe <HAL_DSI_TearingEffectCallback+0x3e>
        }
        else
        {
            GPIO::clear(GPIO::VSYNC_FREQ);
        }
    }
 8000af4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000af8:	2000      	movs	r0, #0
 8000afa:	f7ff be47 	b.w	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
                HAL::getInstance()->swapFrameBuffers();
 8000afe:	f008 ff9d 	bl	8009a3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>
            updateRegion = 0;
 8000b02:	4b08      	ldr	r3, [pc, #32]	; (8000b24 <HAL_DSI_TearingEffectCallback+0x64>)
            LCD_SetUpdateRegion(updateRegion);
 8000b04:	4630      	mov	r0, r6
            updateRegion = 0;
 8000b06:	601e      	str	r6, [r3, #0]
            LCD_SetUpdateRegion(updateRegion);
 8000b08:	f7ff ffc6 	bl	8000a98 <LCD_SetUpdateRegion>
            HAL_DSI_Refresh(hdsi);
 8000b0c:	4620      	mov	r0, r4
 8000b0e:	f003 fc0a 	bl	8004326 <HAL_DSI_Refresh>
            displayRefreshing = true;
 8000b12:	2301      	movs	r3, #1
 8000b14:	702b      	strb	r3, [r5, #0]
    }
 8000b16:	bd70      	pop	{r4, r5, r6, pc}
 8000b18:	2000a0ec 	.word	0x2000a0ec
 8000b1c:	20000014 	.word	0x20000014
 8000b20:	2000018e 	.word	0x2000018e
 8000b24:	20000178 	.word	0x20000178

08000b28 <HAL_DSI_EndOfRefreshCallback>:

    void HAL_DSI_EndOfRefreshCallback(DSI_HandleTypeDef* hdsi)
    {
        updateRegion++;
 8000b28:	4b30      	ldr	r3, [pc, #192]	; (8000bec <HAL_DSI_EndOfRefreshCallback+0xc4>)
 8000b2a:	4a31      	ldr	r2, [pc, #196]	; (8000bf0 <HAL_DSI_EndOfRefreshCallback+0xc8>)
    {
 8000b2c:	b570      	push	{r4, r5, r6, lr}
 8000b2e:	4605      	mov	r5, r0
        updateRegion++;
 8000b30:	6818      	ldr	r0, [r3, #0]
 8000b32:	4c30      	ldr	r4, [pc, #192]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b34:	3001      	adds	r0, #1
 8000b36:	6018      	str	r0, [r3, #0]
        if (updateRegion < 4)
 8000b38:	4b2f      	ldr	r3, [pc, #188]	; (8000bf8 <HAL_DSI_EndOfRefreshCallback+0xd0>)
 8000b3a:	2803      	cmp	r0, #3
 8000b3c:	681e      	ldr	r6, [r3, #0]
 8000b3e:	dc2a      	bgt.n	8000b96 <HAL_DSI_EndOfRefreshCallback+0x6e>
        {
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b40:	f8d4 1404 	ldr.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b44:	f44f 73c8 	mov.w	r3, #400	; 0x190
 8000b48:	fb03 6300 	mla	r3, r3, r0, r6
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b4c:	f021 0108 	bic.w	r1, r1, #8
 8000b50:	f8c4 1404 	str.w	r1, [r4, #1028]	; 0x404
            LTDC_Layer1->CFBAR = ((uint32_t)currFbBase) + 200 * 2 * updateRegion;
 8000b54:	6293      	str	r3, [r2, #40]	; 0x28

            uint16_t REAL_WIDTH = 200;
            uint16_t ADJUSTED_WIDTH = 200;
            if (updateRegion == 3)
            {
                ADJUSTED_WIDTH += 32;
 8000b56:	bf0c      	ite	eq
 8000b58:	23e8      	moveq	r3, #232	; 0xe8
            uint16_t ADJUSTED_WIDTH = 200;
 8000b5a:	23c8      	movne	r3, #200	; 0xc8
            }

            LTDC->AWCR = ((ADJUSTED_WIDTH + 2) << 16) | 0x1E2; //adj
 8000b5c:	3302      	adds	r3, #2
 8000b5e:	4927      	ldr	r1, [pc, #156]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
 8000b60:	041b      	lsls	r3, r3, #16
 8000b62:	f443 73f1 	orr.w	r3, r3, #482	; 0x1e2
 8000b66:	610b      	str	r3, [r1, #16]
            LTDC->TWCR = ((REAL_WIDTH + 2 + 1 - 1) << 16) | 0x1E3;
 8000b68:	4b25      	ldr	r3, [pc, #148]	; (8000c00 <HAL_DSI_EndOfRefreshCallback+0xd8>)
 8000b6a:	614b      	str	r3, [r1, #20]
            LTDC_Layer1->WHPCR = ((REAL_WIDTH + 2) << 16) | 3;
 8000b6c:	f5a3 73f0 	sub.w	r3, r3, #480	; 0x1e0
 8000b70:	6053      	str	r3, [r2, #4]
            LTDC_Layer1->CFBLR = ((832 * 2) << 16) | ((REAL_WIDTH) * 2 + 3);
 8000b72:	4b24      	ldr	r3, [pc, #144]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000b74:	62d3      	str	r3, [r2, #44]	; 0x2c

            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000b76:	2301      	movs	r3, #1
 8000b78:	624b      	str	r3, [r1, #36]	; 0x24
            LCD_SetUpdateRegion(updateRegion);
 8000b7a:	f7ff ff8d 	bl	8000a98 <LCD_SetUpdateRegion>

            DSI->WCR |= DSI_WCR_DSIEN;
 8000b7e:	4a1d      	ldr	r2, [pc, #116]	; (8000bf4 <HAL_DSI_EndOfRefreshCallback+0xcc>)
 8000b80:	f8d2 3404 	ldr.w	r3, [r2, #1028]	; 0x404
 8000b84:	f043 0308 	orr.w	r3, r3, #8
            HAL_DSI_Refresh(hdsi);
 8000b88:	4628      	mov	r0, r5
            DSI->WCR |= DSI_WCR_DSIEN;
 8000b8a:	f8c2 3404 	str.w	r3, [r2, #1028]	; 0x404
            {
                // Signal to the framework that display update has finished.
                HAL::getInstance()->frontPorchEntered();
            }
        }
    }
 8000b8e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
            HAL_DSI_Refresh(hdsi);
 8000b92:	f003 bbc8 	b.w	8004326 <HAL_DSI_Refresh>
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b96:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000b9a:	491b      	ldr	r1, [pc, #108]	; (8000c08 <HAL_DSI_EndOfRefreshCallback+0xe0>)
            DSI->WCR &= ~(DSI_WCR_DSIEN);
 8000b9c:	f023 0308 	bic.w	r3, r3, #8
 8000ba0:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba4:	4b15      	ldr	r3, [pc, #84]	; (8000bfc <HAL_DSI_EndOfRefreshCallback+0xd4>)
            LTDC_Layer1->CFBAR = (uint32_t)currFbBase;
 8000ba6:	6296      	str	r6, [r2, #40]	; 0x28
            LTDC->AWCR = ((WIDTH + 2) << 16) | 0x1E2;
 8000ba8:	6119      	str	r1, [r3, #16]
            LTDC->TWCR = ((WIDTH + 2 + 1) << 16) | 0x1E3;
 8000baa:	f101 1101 	add.w	r1, r1, #65537	; 0x10001
 8000bae:	6159      	str	r1, [r3, #20]
            LTDC_Layer1->WHPCR = ((WIDTH + 2) << 16) | 3;
 8000bb0:	4916      	ldr	r1, [pc, #88]	; (8000c0c <HAL_DSI_EndOfRefreshCallback+0xe4>)
 8000bb2:	6051      	str	r1, [r2, #4]
            LTDC_Layer1->CFBLR = (((832 * 2) << 16) | ((WIDTH * 2) + 3));
 8000bb4:	4913      	ldr	r1, [pc, #76]	; (8000c04 <HAL_DSI_EndOfRefreshCallback+0xdc>)
 8000bb6:	62d1      	str	r1, [r2, #44]	; 0x2c
            LTDC->SRCR = (uint32_t)LTDC_SRCR_IMR;
 8000bb8:	2201      	movs	r2, #1
 8000bba:	625a      	str	r2, [r3, #36]	; 0x24
            LCD_SetUpdateRegion(0);
 8000bbc:	2000      	movs	r0, #0
 8000bbe:	f7ff ff6b 	bl	8000a98 <LCD_SetUpdateRegion>
            DSI->WCR |= DSI_WCR_DSIEN;
 8000bc2:	f8d4 3404 	ldr.w	r3, [r4, #1028]	; 0x404
 8000bc6:	f043 0308 	orr.w	r3, r3, #8
 8000bca:	f8c4 3404 	str.w	r3, [r4, #1028]	; 0x404
            GPIO::clear(GPIO::VSYNC_FREQ);
 8000bce:	2000      	movs	r0, #0
 8000bd0:	f7ff fddc 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
            displayRefreshing = false;
 8000bd4:	4b0e      	ldr	r3, [pc, #56]	; (8000c10 <HAL_DSI_EndOfRefreshCallback+0xe8>)
 8000bd6:	2200      	movs	r2, #0
 8000bd8:	701a      	strb	r2, [r3, #0]
        return instance;
 8000bda:	4b0e      	ldr	r3, [pc, #56]	; (8000c14 <HAL_DSI_EndOfRefreshCallback+0xec>)
 8000bdc:	6818      	ldr	r0, [r3, #0]
            if (HAL::getInstance())
 8000bde:	b120      	cbz	r0, 8000bea <HAL_DSI_EndOfRefreshCallback+0xc2>
        allowDMATransfers();
 8000be0:	6803      	ldr	r3, [r0, #0]
    }
 8000be2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8000be6:	69db      	ldr	r3, [r3, #28]
 8000be8:	4718      	bx	r3
 8000bea:	bd70      	pop	{r4, r5, r6, pc}
 8000bec:	20000178 	.word	0x20000178
 8000bf0:	40016884 	.word	0x40016884
 8000bf4:	40016c00 	.word	0x40016c00
 8000bf8:	20000174 	.word	0x20000174
 8000bfc:	40016800 	.word	0x40016800
 8000c00:	00ca01e3 	.word	0x00ca01e3
 8000c04:	06800193 	.word	0x06800193
 8000c08:	00ca01e2 	.word	0x00ca01e2
 8000c0c:	00ca0003 	.word	0x00ca0003
 8000c10:	2000018e 	.word	0x2000018e
 8000c14:	2000a0ec 	.word	0x2000a0ec

08000c18 <IdleTaskHook>:

    portBASE_TYPE IdleTaskHook(void* p)
    {
 8000c18:	b508      	push	{r3, lr}
 8000c1a:	4b04      	ldr	r3, [pc, #16]	; (8000c2c <IdleTaskHook+0x14>)
 8000c1c:	4601      	mov	r1, r0
 8000c1e:	6818      	ldr	r0, [r3, #0]
        if ((int)p) //idle task sched out
 8000c20:	b101      	cbz	r1, 8000c24 <IdleTaskHook+0xc>
        {
            touchgfx::HAL::getInstance()->setMCUActive(true);
 8000c22:	2101      	movs	r1, #1
        }
        else //idle task sched in
        {
            touchgfx::HAL::getInstance()->setMCUActive(false);
 8000c24:	f008 ff24 	bl	8009a70 <_ZN8touchgfx3HAL12setMCUActiveEb>
        }
        return pdTRUE;
    }
 8000c28:	2001      	movs	r0, #1
 8000c2a:	bd08      	pop	{r3, pc}
 8000c2c:	2000a0ec 	.word	0x2000a0ec

08000c30 <_GLOBAL__sub_I_displayRefreshing>:
          cc_in(0)
 8000c30:	4b05      	ldr	r3, [pc, #20]	; (8000c48 <_GLOBAL__sub_I_displayRefreshing+0x18>)
{
class KeySampler : public ButtonController
{
public:
    KeySampler()
    {
 8000c32:	4806      	ldr	r0, [pc, #24]	; (8000c4c <_GLOBAL__sub_I_displayRefreshing+0x1c>)
 8000c34:	2200      	movs	r2, #0
 8000c36:	605a      	str	r2, [r3, #4]
 8000c38:	609a      	str	r2, [r3, #8]
 8000c3a:	4a05      	ldr	r2, [pc, #20]	; (8000c50 <_GLOBAL__sub_I_displayRefreshing+0x20>)
 8000c3c:	601a      	str	r2, [r3, #0]
 8000c3e:	4b05      	ldr	r3, [pc, #20]	; (8000c54 <_GLOBAL__sub_I_displayRefreshing+0x24>)
 8000c40:	6003      	str	r3, [r0, #0]
        init();
 8000c42:	f7ff bd17 	b.w	8000674 <_ZN8touchgfx10KeySampler4initEv>
 8000c46:	bf00      	nop
 8000c48:	20000180 	.word	0x20000180
 8000c4c:	2000017c 	.word	0x2000017c
 8000c50:	0801a670 	.word	0x0801a670
 8000c54:	0801a698 	.word	0x0801a698

08000c58 <_ZN8touchgfx10OSWrappers10initializeEv>:
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
    // Create a queue of length 1
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c58:	2101      	movs	r1, #1
{
 8000c5a:	b508      	push	{r3, lr}
    frame_buffer_sem = osSemaphoreNew(1, 1, NULL); // Binary semaphore
 8000c5c:	2200      	movs	r2, #0
 8000c5e:	4608      	mov	r0, r1
 8000c60:	f005 fd64 	bl	800672c <osSemaphoreNew>
 8000c64:	4b0a      	ldr	r3, [pc, #40]	; (8000c90 <_ZN8touchgfx10OSWrappers10initializeEv+0x38>)
 8000c66:	6018      	str	r0, [r3, #0]
    assert((frame_buffer_sem != NULL) && "Creation of framebuffer semaphore failed");
 8000c68:	b928      	cbnz	r0, 8000c76 <_ZN8touchgfx10OSWrappers10initializeEv+0x1e>
 8000c6a:	4b0a      	ldr	r3, [pc, #40]	; (8000c94 <_ZN8touchgfx10OSWrappers10initializeEv+0x3c>)
 8000c6c:	4a0a      	ldr	r2, [pc, #40]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c6e:	2127      	movs	r1, #39	; 0x27

    // Create a queue of length 1
    vsync_queue = osMessageQueueNew(1, 4, NULL);
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c70:	480a      	ldr	r0, [pc, #40]	; (8000c9c <_ZN8touchgfx10OSWrappers10initializeEv+0x44>)
 8000c72:	f018 fbe5 	bl	8019440 <__assert_func>
    vsync_queue = osMessageQueueNew(1, 4, NULL);
 8000c76:	2200      	movs	r2, #0
 8000c78:	2104      	movs	r1, #4
 8000c7a:	2001      	movs	r0, #1
 8000c7c:	f005 fdf4 	bl	8006868 <osMessageQueueNew>
 8000c80:	4b07      	ldr	r3, [pc, #28]	; (8000ca0 <_ZN8touchgfx10OSWrappers10initializeEv+0x48>)
 8000c82:	6018      	str	r0, [r3, #0]
    assert((vsync_queue != NULL) && "Creation of vsync message queue failed");
 8000c84:	b918      	cbnz	r0, 8000c8e <_ZN8touchgfx10OSWrappers10initializeEv+0x36>
 8000c86:	4b07      	ldr	r3, [pc, #28]	; (8000ca4 <_ZN8touchgfx10OSWrappers10initializeEv+0x4c>)
 8000c88:	4a03      	ldr	r2, [pc, #12]	; (8000c98 <_ZN8touchgfx10OSWrappers10initializeEv+0x40>)
 8000c8a:	212b      	movs	r1, #43	; 0x2b
 8000c8c:	e7f0      	b.n	8000c70 <_ZN8touchgfx10OSWrappers10initializeEv+0x18>
}
 8000c8e:	bd08      	pop	{r3, pc}
 8000c90:	20000194 	.word	0x20000194
 8000c94:	0801a8ec 	.word	0x0801a8ec
 8000c98:	0801a935 	.word	0x0801a935
 8000c9c:	0801a964 	.word	0x0801a964
 8000ca0:	20000190 	.word	0x20000190
 8000ca4:	0801a9b4 	.word	0x0801a9b4

08000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:
/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, osWaitForever);
 8000ca8:	4b02      	ldr	r3, [pc, #8]	; (8000cb4 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0xc>)
 8000caa:	f04f 31ff 	mov.w	r1, #4294967295
 8000cae:	6818      	ldr	r0, [r3, #0]
 8000cb0:	f005 bd86 	b.w	80067c0 <osSemaphoreAcquire>
 8000cb4:	20000194 	.word	0x20000194

08000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:
/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
    osSemaphoreRelease(frame_buffer_sem);
 8000cb8:	4b01      	ldr	r3, [pc, #4]	; (8000cc0 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x8>)
 8000cba:	6818      	ldr	r0, [r3, #0]
 8000cbc:	f005 bdac 	b.w	8006818 <osSemaphoreRelease>
 8000cc0:	20000194 	.word	0x20000194

08000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
    osSemaphoreAcquire(frame_buffer_sem, 0);
 8000cc4:	4b02      	ldr	r3, [pc, #8]	; (8000cd0 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0xc>)
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	6818      	ldr	r0, [r3, #0]
 8000cca:	f005 bd79 	b.w	80067c0 <osSemaphoreAcquire>
 8000cce:	bf00      	nop
 8000cd0:	20000194 	.word	0x20000194

08000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 8000cd4:	f7ff bff0 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08000cd8 <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
    osMessageQueuePut(vsync_queue, &dummy, 0, 0);
 8000cd8:	4803      	ldr	r0, [pc, #12]	; (8000ce8 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x10>)
 8000cda:	4904      	ldr	r1, [pc, #16]	; (8000cec <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 8000cdc:	6800      	ldr	r0, [r0, #0]
 8000cde:	2300      	movs	r3, #0
 8000ce0:	461a      	mov	r2, r3
 8000ce2:	f005 bdfd 	b.w	80068e0 <osMessageQueuePut>
 8000ce6:	bf00      	nop
 8000ce8:	20000190 	.word	0x20000190
 8000cec:	20000018 	.word	0x20000018

08000cf0 <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
 *
 * Note This function must first clear the mutex/queue and then wait for the next one to
 * occur.
 */
void OSWrappers::waitForVSync()
{
 8000cf0:	b513      	push	{r0, r1, r4, lr}
    uint32_t dummyGet;
    // First make sure the queue is empty, by trying to remove an element with 0 timeout.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, 0);
 8000cf2:	4c08      	ldr	r4, [pc, #32]	; (8000d14 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x24>)
 8000cf4:	2300      	movs	r3, #0
 8000cf6:	461a      	mov	r2, r3
 8000cf8:	a901      	add	r1, sp, #4
 8000cfa:	6820      	ldr	r0, [r4, #0]
 8000cfc:	f005 fe20 	bl	8006940 <osMessageQueueGet>

    // Then, wait for next VSYNC to occur.
    osMessageQueueGet(vsync_queue, &dummyGet, 0, osWaitForever);
 8000d00:	6820      	ldr	r0, [r4, #0]
 8000d02:	f04f 33ff 	mov.w	r3, #4294967295
 8000d06:	2200      	movs	r2, #0
 8000d08:	a901      	add	r1, sp, #4
 8000d0a:	f005 fe19 	bl	8006940 <osMessageQueueGet>
}
 8000d0e:	b002      	add	sp, #8
 8000d10:	bd10      	pop	{r4, pc}
 8000d12:	bf00      	nop
 8000d14:	20000190 	.word	0x20000190

08000d18 <_ZN8touchgfx10OSWrappers9taskYieldEv>:
 * running without an operating system, the implementation can run
 * a very short task and return.
 */
void OSWrappers::taskYield()
{
    osThreadYield();
 8000d18:	f005 bcea 	b.w	80066f0 <osThreadYield>

08000d1c <_ZN8touchgfx13DMA_Interface5flushEv>:
    virtual void addToQueue(const BlitOp& op);

    /** This function blocks until all DMA transfers in the queue have been completed. */
    virtual void flush()
    {
        waitForFrameBufferSemaphore();
 8000d1c:	6803      	ldr	r3, [r0, #0]
 8000d1e:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8000d20:	4718      	bx	r3

08000d22 <_ZN10STM32F4DMA10getDMATypeEv>:
     * @return a DMAType value of the concrete DMA_Interface implementation.
     */
    virtual touchgfx::DMAType getDMAType(void)
    {
        return touchgfx::DMA_TYPE_CHROMART;
    }
 8000d22:	2001      	movs	r0, #1
 8000d24:	4770      	bx	lr

08000d26 <_ZN10STM32F4DMA18signalDMAInterruptEv>:
     *
     *        Raises a DMA interrupt signal.
     */
    virtual void signalDMAInterrupt()
    {
        executeCompleted();
 8000d26:	6803      	ldr	r3, [r0, #0]
 8000d28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8000d2a:	4718      	bx	r3

08000d2c <_ZN10STM32F4DMA10initializeEv>:
    /* Disable DMA2D global Interrupt */
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void STM32F4DMA::initialize()
{
 8000d2c:	b082      	sub	sp, #8
    /* Ensure DMA2D Clock is enabled */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8000d2e:	2300      	movs	r3, #0
 8000d30:	9301      	str	r3, [sp, #4]
 8000d32:	4b0d      	ldr	r3, [pc, #52]	; (8000d68 <_ZN10STM32F4DMA10initializeEv+0x3c>)
 8000d34:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d36:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d3a:	631a      	str	r2, [r3, #48]	; 0x30
 8000d3c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8000d3e:	f402 0200 	and.w	r2, r2, #8388608	; 0x800000
 8000d42:	9201      	str	r2, [sp, #4]
 8000d44:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_DMA2D_FORCE_RESET();
 8000d46:	691a      	ldr	r2, [r3, #16]
 8000d48:	f442 0200 	orr.w	r2, r2, #8388608	; 0x800000
 8000d4c:	611a      	str	r2, [r3, #16]
    __HAL_RCC_DMA2D_RELEASE_RESET();
 8000d4e:	691a      	ldr	r2, [r3, #16]
 8000d50:	f422 0200 	bic.w	r2, r2, #8388608	; 0x800000
 8000d54:	611a      	str	r2, [r3, #16]

    /* Add transfer complete callback function */
    hdma2d.XferCpltCallback = DMA2D_XferCpltCallback;
 8000d56:	4b05      	ldr	r3, [pc, #20]	; (8000d6c <_ZN10STM32F4DMA10initializeEv+0x40>)
 8000d58:	4a05      	ldr	r2, [pc, #20]	; (8000d70 <_ZN10STM32F4DMA10initializeEv+0x44>)
 8000d5a:	611a      	str	r2, [r3, #16]
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8000d5c:	4b05      	ldr	r3, [pc, #20]	; (8000d74 <_ZN10STM32F4DMA10initializeEv+0x48>)
 8000d5e:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8000d62:	609a      	str	r2, [r3, #8]

    /* Enable DMA2D global Interrupt */
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8000d64:	b002      	add	sp, #8
 8000d66:	4770      	bx	lr
 8000d68:	40023800 	.word	0x40023800
 8000d6c:	2000a4b0 	.word	0x2000a4b0
 8000d70:	08000d81 	.word	0x08000d81
 8000d74:	e000e100 	.word	0xe000e100

08000d78 <_ZN10STM32F4DMA11getBlitCapsEv>:
                                       | BLIT_OP_COPY_WITH_ALPHA
                                       | BLIT_OP_COPY_ARGB8888
                                       | BLIT_OP_COPY_ARGB8888_WITH_ALPHA
                                       | BLIT_OP_COPY_A4
                                       | BLIT_OP_COPY_A8);
}
 8000d78:	f240 30ef 	movw	r0, #1007	; 0x3ef
 8000d7c:	4770      	bx	lr
	...

08000d80 <DMA2D_XferCpltCallback>:
        HAL::getInstance()->signalDMAInterrupt();
 8000d80:	4b02      	ldr	r3, [pc, #8]	; (8000d8c <DMA2D_XferCpltCallback+0xc>)
 8000d82:	681b      	ldr	r3, [r3, #0]
 8000d84:	6858      	ldr	r0, [r3, #4]
        dma.signalDMAInterrupt();
 8000d86:	6803      	ldr	r3, [r0, #0]
 8000d88:	695b      	ldr	r3, [r3, #20]
 8000d8a:	4718      	bx	r3
 8000d8c:	2000a0ec 	.word	0x2000a0ec

08000d90 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTInputFormat(Bitmap::BitmapFormat format)
 8000d90:	b508      	push	{r3, lr}
 8000d92:	280b      	cmp	r0, #11
 8000d94:	d80b      	bhi.n	8000dae <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1e>
 8000d96:	e8df f000 	tbb	[pc, r0]
 8000d9a:	0612      	.short	0x0612
 8000d9c:	0a0a0a10 	.word	0x0a0a0a10
 8000da0:	0808080a 	.word	0x0808080a
 8000da4:	0808      	.short	0x0808
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000da6:	2001      	movs	r0, #1
}
 8000da8:	bd08      	pop	{r3, pc}
        dma2dColorMode = DMA2D_INPUT_L8;
 8000daa:	2005      	movs	r0, #5
        break;
 8000dac:	e7fc      	b.n	8000da8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        assert(0 && "Unsupported Format!");
 8000dae:	4b05      	ldr	r3, [pc, #20]	; (8000dc4 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000db0:	4a05      	ldr	r2, [pc, #20]	; (8000dc8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000db2:	4806      	ldr	r0, [pc, #24]	; (8000dcc <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x3c>)
 8000db4:	2165      	movs	r1, #101	; 0x65
 8000db6:	f018 fb43 	bl	8019440 <__assert_func>
        dma2dColorMode = DMA2D_INPUT_ARGB8888;
 8000dba:	2000      	movs	r0, #0
 8000dbc:	e7f4      	b.n	8000da8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_INPUT_RGB565;
 8000dbe:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000dc0:	e7f2      	b.n	8000da8 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dc2:	bf00      	nop
 8000dc4:	0801a9f6 	.word	0x0801a9f6
 8000dc8:	0801aa11 	.word	0x0801aa11
 8000dcc:	0801aa5d 	.word	0x0801aa5d

08000dd0 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>:
inline uint32_t STM32F4DMA::getChromARTOutputFormat(Bitmap::BitmapFormat format)
 8000dd0:	b508      	push	{r3, lr}
 8000dd2:	280a      	cmp	r0, #10
 8000dd4:	d809      	bhi.n	8000dea <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x1a>
 8000dd6:	e8df f000 	tbb	[pc, r0]
 8000dda:	0610      	.short	0x0610
 8000ddc:	0808080e 	.word	0x0808080e
 8000de0:	06060608 	.word	0x06060608
 8000de4:	06          	.byte	0x06
 8000de5:	00          	.byte	0x00
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000de6:	2001      	movs	r0, #1
}
 8000de8:	bd08      	pop	{r3, pc}
        assert(0 && "Unsupported Format!");
 8000dea:	4b05      	ldr	r3, [pc, #20]	; (8000e00 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x30>)
 8000dec:	4a05      	ldr	r2, [pc, #20]	; (8000e04 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x34>)
 8000dee:	4806      	ldr	r0, [pc, #24]	; (8000e08 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x38>)
 8000df0:	2186      	movs	r1, #134	; 0x86
 8000df2:	f018 fb25 	bl	8019440 <__assert_func>
        dma2dColorMode = DMA2D_OUTPUT_ARGB8888;
 8000df6:	2000      	movs	r0, #0
 8000df8:	e7f6      	b.n	8000de8 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
        dma2dColorMode = DMA2D_OUTPUT_RGB565;
 8000dfa:	2002      	movs	r0, #2
    return dma2dColorMode;
 8000dfc:	e7f4      	b.n	8000de8 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0+0x18>
 8000dfe:	bf00      	nop
 8000e00:	0801a9f6 	.word	0x0801a9f6
 8000e04:	0801aaab 	.word	0x0801aaab
 8000e08:	0801aa5d 	.word	0x0801aa5d

08000e0c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 * BLIT_OP_COPY_ARGB8888_WITH_ALPHA
 * BLIT_OP_COPY_A4
 * BLIT_OP_COPY_A8
 */
void STM32F4DMA::setupDataCopy(const BlitOp& blitOp)
{
 8000e0c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e10:	f891 801d 	ldrb.w	r8, [r1, #29]
{
 8000e14:	460c      	mov	r4, r1
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e16:	4640      	mov	r0, r8
 8000e18:	f7ff ffba 	bl	8000d90 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e1c:	7fa7      	ldrb	r7, [r4, #30]
    uint32_t dma2dForegroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.srcFormat));
 8000e1e:	4605      	mov	r5, r0
    uint32_t dma2dBackgroundColorMode = getChromARTInputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e20:	4638      	mov	r0, r7
 8000e22:	f7ff ffb5 	bl	8000d90 <_ZN10STM32F4DMA22getChromARTInputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>
 8000e26:	4606      	mov	r6, r0
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000e28:	4638      	mov	r0, r7
 8000e2a:	f7ff ffd1 	bl	8000dd0 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e2e:	8aa1      	ldrh	r1, [r4, #20]
 8000e30:	8b62      	ldrh	r2, [r4, #26]
 8000e32:	4b53      	ldr	r3, [pc, #332]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000e34:	1a52      	subs	r2, r2, r1
 8000e36:	641a      	str	r2, [r3, #64]	; 0x40

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000e38:	619a      	str	r2, [r3, #24]

    /* DMA2D FGOR register configuration -------------------------------------*/
    WRITE_REG(DMA2D->FGOR, blitOp.srcLoopStride - blitOp.nSteps);
 8000e3a:	8b22      	ldrh	r2, [r4, #24]
 8000e3c:	1a52      	subs	r2, r2, r1
 8000e3e:	611a      	str	r2, [r3, #16]

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e40:	8ae2      	ldrh	r2, [r4, #22]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000e42:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000e44:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 8000e48:	645a      	str	r2, [r3, #68]	; 0x44

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e4a:	6921      	ldr	r1, [r4, #16]

    /* Configure DMA2D source address */
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e4c:	6862      	ldr	r2, [r4, #4]
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000e4e:	63d9      	str	r1, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pSrc));
 8000e50:	60da      	str	r2, [r3, #12]

    switch (blitOp.operation)
 8000e52:	f8d4 c000 	ldr.w	ip, [r4]
 8000e56:	f894 901c 	ldrb.w	r9, [r4, #28]
 8000e5a:	f1bc 0f80 	cmp.w	ip, #128	; 0x80
 8000e5e:	ea4f 6209 	mov.w	r2, r9, lsl #24
 8000e62:	469e      	mov	lr, r3
 8000e64:	d03b      	beq.n	8000ede <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xd2>
 8000e66:	d815      	bhi.n	8000e94 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x88>
 8000e68:	f1bc 0f20 	cmp.w	ip, #32
 8000e6c:	ea45 0002 	orr.w	r0, r5, r2
 8000e70:	d079      	beq.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
 8000e72:	f1bc 0f40 	cmp.w	ip, #64	; 0x40
 8000e76:	d076      	beq.n	8000f66 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x15a>
 8000e78:	f1bc 0f04 	cmp.w	ip, #4
 8000e7c:	d02b      	beq.n	8000ed6 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xca>
        /* Set DMA2D mode */
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
        break;
    default: /* BLIT_OP_COPY */
        /* Set DMA2D color mode and alpha mode */
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e7e:	4b40      	ldr	r3, [pc, #256]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000e80:	432a      	orrs	r2, r5
 8000e82:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000

        /* Perform pixel-format-conversion (PFC) If Bitmap format is not same format as framebuffer format */
        if (blitOp.srcFormat != blitOp.dstFormat)
 8000e86:	45b8      	cmp	r8, r7
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000e88:	61da      	str	r2, [r3, #28]
        {
            /* Start DMA2D : PFC Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000e8a:	bf14      	ite	ne
 8000e8c:	4a3d      	ldrne	r2, [pc, #244]	; (8000f84 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
        }
        else
        {
            /* Start DMA2D : M2M Mode */
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000e8e:	f240 2201 	movweq	r2, #513	; 0x201
 8000e92:	e01e      	b.n	8000ed2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc6>
    switch (blitOp.operation)
 8000e94:	f5bc 7f80 	cmp.w	ip, #256	; 0x100
 8000e98:	d007      	beq.n	8000eaa <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x9e>
 8000e9a:	f5bc 7f00 	cmp.w	ip, #512	; 0x200
 8000e9e:	d1ee      	bne.n	8000e7e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x72>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ea0:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000ea4:	f042 0209 	orr.w	r2, r2, #9
 8000ea8:	e003      	b.n	8000eb2 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xa6>
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A4 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eaa:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
 8000eae:	f042 020a 	orr.w	r2, r2, #10
        WRITE_REG(DMA2D->FGPFCCR, DMA2D_INPUT_A8 | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eb2:	61da      	str	r2, [r3, #28]
        WRITE_REG(DMA2D->FGCOLR, ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8000eb4:	68e0      	ldr	r0, [r4, #12]
 8000eb6:	0202      	lsls	r2, r0, #8
 8000eb8:	0144      	lsls	r4, r0, #5
 8000eba:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000ebe:	f404 447c 	and.w	r4, r4, #64512	; 0xfc00
 8000ec2:	00c0      	lsls	r0, r0, #3
 8000ec4:	4322      	orrs	r2, r4
 8000ec6:	b2c0      	uxtb	r0, r0
 8000ec8:	4302      	orrs	r2, r0
 8000eca:	621a      	str	r2, [r3, #32]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000ecc:	4a2e      	ldr	r2, [pc, #184]	; (8000f88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ece:	625e      	str	r6, [r3, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ed0:	6159      	str	r1, [r3, #20]
            WRITE_REG(DMA2D->CR, DMA2D_M2M | DMA2D_IT_TC | DMA2D_CR_START);
 8000ed2:	601a      	str	r2, [r3, #0]
        }
        break;
    }
}
 8000ed4:	e043      	b.n	8000f5e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x152>
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ed6:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000eda:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000edc:	e7f6      	b.n	8000ecc <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xc0>
            const clutData_t* const palette = reinterpret_cast<const clutData_t*>(blitOp.pClut);
 8000ede:	68a0      	ldr	r0, [r4, #8]
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000ee0:	432a      	orrs	r2, r5
 8000ee2:	f442 3200 	orr.w	r2, r2, #131072	; 0x20000
            WRITE_REG(DMA2D->FGCMAR, reinterpret_cast<uint32_t>(&palette->data));
 8000ee6:	1d04      	adds	r4, r0, #4
 8000ee8:	62dc      	str	r4, [r3, #44]	; 0x2c
            WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000eea:	61da      	str	r2, [r3, #28]
            switch ((Bitmap::ClutFormat)palette->format)
 8000eec:	7802      	ldrb	r2, [r0, #0]
            WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000eee:	625e      	str	r6, [r3, #36]	; 0x24
            WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000ef0:	6159      	str	r1, [r3, #20]
            switch ((Bitmap::ClutFormat)palette->format)
 8000ef2:	b142      	cbz	r2, 8000f06 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0xfa>
 8000ef4:	2a01      	cmp	r2, #1
 8000ef6:	d01c      	beq.n	8000f32 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x126>
                assert(0 && "Unsupported format");
 8000ef8:	4b24      	ldr	r3, [pc, #144]	; (8000f8c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x180>)
 8000efa:	4a25      	ldr	r2, [pc, #148]	; (8000f90 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x184>)
 8000efc:	4825      	ldr	r0, [pc, #148]	; (8000f94 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x188>)
 8000efe:	f44f 7188 	mov.w	r1, #272	; 0x110
 8000f02:	f018 fa9d 	bl	8019440 <__assert_func>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_ARGB8888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f06:	8842      	ldrh	r2, [r0, #2]
 8000f08:	69d9      	ldr	r1, [r3, #28]
 8000f0a:	1e50      	subs	r0, r2, #1
 8000f0c:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f10:	f022 0210 	bic.w	r2, r2, #16
 8000f14:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8000f18:	61da      	str	r2, [r3, #28]
            bool blend = true;
 8000f1a:	2501      	movs	r5, #1
            SET_BIT(DMA2D->FGPFCCR, DMA2D_FGPFCCR_START);
 8000f1c:	4c18      	ldr	r4, [pc, #96]	; (8000f80 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x174>)
 8000f1e:	69e3      	ldr	r3, [r4, #28]
 8000f20:	f043 0320 	orr.w	r3, r3, #32
 8000f24:	61e3      	str	r3, [r4, #28]
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f26:	69e3      	ldr	r3, [r4, #28]
 8000f28:	069b      	lsls	r3, r3, #26
 8000f2a:	d513      	bpl.n	8000f54 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x148>
                OSWrappers::taskYield();
 8000f2c:	f7ff fef4 	bl	8000d18 <_ZN8touchgfx10OSWrappers9taskYieldEv>
            while ((READ_REG(DMA2D->FGPFCCR) & DMA2D_FGPFCCR_START) != 0U)
 8000f30:	e7f9      	b.n	8000f26 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x11a>
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f32:	8842      	ldrh	r2, [r0, #2]
 8000f34:	69d9      	ldr	r1, [r3, #28]
 8000f36:	1e50      	subs	r0, r2, #1
 8000f38:	f421 427f 	bic.w	r2, r1, #65280	; 0xff00
 8000f3c:	f022 0210 	bic.w	r2, r2, #16
 8000f40:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
                if(blitOp.alpha == 255)
 8000f44:	f1b9 05ff 	subs.w	r5, r9, #255	; 0xff
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f48:	f042 0210 	orr.w	r2, r2, #16
                if(blitOp.alpha == 255)
 8000f4c:	bf18      	it	ne
 8000f4e:	2501      	movne	r5, #1
                MODIFY_REG(DMA2D->FGPFCCR, (DMA2D_FGPFCCR_CS | DMA2D_FGPFCCR_CCM), (((palette->size - 1) << DMA2D_FGPFCCR_CS_Pos) | (DMA2D_CCM_RGB888 << DMA2D_FGPFCCR_CCM_Pos)));
 8000f50:	61da      	str	r2, [r3, #28]
                break;
 8000f52:	e7e3      	b.n	8000f1c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x110>
            DMA2D->IFCR = (DMA2D_FLAG_CTC);
 8000f54:	2310      	movs	r3, #16
 8000f56:	60a3      	str	r3, [r4, #8]
            if(blend)
 8000f58:	b11d      	cbz	r5, 8000f62 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x156>
                WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f5a:	4b0b      	ldr	r3, [pc, #44]	; (8000f88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f5c:	6023      	str	r3, [r4, #0]
}
 8000f5e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
                WRITE_REG(DMA2D->CR, DMA2D_M2M_PFC | DMA2D_IT_TC | DMA2D_CR_START);
 8000f62:	4b08      	ldr	r3, [pc, #32]	; (8000f84 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x178>)
 8000f64:	e7fa      	b.n	8000f5c <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x150>
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f66:	4b08      	ldr	r3, [pc, #32]	; (8000f88 <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x17c>)
        WRITE_REG(DMA2D->FGPFCCR, dma2dForegroundColorMode | (DMA2D_COMBINE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | (blitOp.alpha << 24));
 8000f68:	f440 3000 	orr.w	r0, r0, #131072	; 0x20000
 8000f6c:	f8ce 001c 	str.w	r0, [lr, #28]
        WRITE_REG(DMA2D->BGPFCCR, dma2dBackgroundColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000f70:	f8ce 6024 	str.w	r6, [lr, #36]	; 0x24
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000f74:	f8ce 1014 	str.w	r1, [lr, #20]
        WRITE_REG(DMA2D->CR, DMA2D_M2M_BLEND | DMA2D_IT_TC | DMA2D_CR_START);
 8000f78:	f8ce 3000 	str.w	r3, [lr]
        break;
 8000f7c:	e7ef      	b.n	8000f5e <_ZN10STM32F4DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x152>
 8000f7e:	bf00      	nop
 8000f80:	4002b000 	.word	0x4002b000
 8000f84:	00010201 	.word	0x00010201
 8000f88:	00020201 	.word	0x00020201
 8000f8c:	0801aaf8 	.word	0x0801aaf8
 8000f90:	0801ab12 	.word	0x0801ab12
 8000f94:	0801aa5d 	.word	0x0801aa5d

08000f98 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 * void STM32F4DMA::setupDataFill(const BlitOp& blitOp) handles blit operation of
 * BLIT_OP_FILL
 * BLIT_OP_FILL_WITH_ALPHA
 */
void STM32F4DMA::setupDataFill(const BlitOp& blitOp)
{
 8000f98:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f9a:	7f8e      	ldrb	r6, [r1, #30]
{
 8000f9c:	460c      	mov	r4, r1
    uint32_t dma2dOutputColorMode = getChromARTOutputFormat(static_cast<Bitmap::BitmapFormat>(blitOp.dstFormat));
 8000f9e:	4630      	mov	r0, r6
 8000fa0:	f7ff ff16 	bl	8000dd0 <_ZN10STM32F4DMA23getChromARTOutputFormatEN8touchgfx6Bitmap12BitmapFormatE.isra.0>

    /* DMA2D OPFCCR register configuration ---------------------------------------*/
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);

    /* Configure DMA2D data size */
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fa4:	8aa7      	ldrh	r7, [r4, #20]
 8000fa6:	8ae1      	ldrh	r1, [r4, #22]

    /* Configure DMA2D destination address */
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

    /* DMA2D OOR register configuration ------------------------------------------*/
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fa8:	8b62      	ldrh	r2, [r4, #26]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000faa:	4b1e      	ldr	r3, [pc, #120]	; (8001024 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fac:	6925      	ldr	r5, [r4, #16]
    WRITE_REG(DMA2D->OPFCCR, dma2dOutputColorMode);
 8000fae:	6358      	str	r0, [r3, #52]	; 0x34
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fb0:	ea41 4107 	orr.w	r1, r1, r7, lsl #16
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fb4:	1bd2      	subs	r2, r2, r7
    WRITE_REG(DMA2D->NLR, (blitOp.nLoops | (blitOp.nSteps << DMA2D_NLR_PL_Pos)));
 8000fb6:	6459      	str	r1, [r3, #68]	; 0x44
    WRITE_REG(DMA2D->OMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fb8:	63dd      	str	r5, [r3, #60]	; 0x3c
    WRITE_REG(DMA2D->OOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fba:	641a      	str	r2, [r3, #64]	; 0x40

    if (blitOp.operation == BLIT_OP_FILL_WITH_ALPHA)
 8000fbc:	6821      	ldr	r1, [r4, #0]
 8000fbe:	2908      	cmp	r1, #8
 8000fc0:	d118      	bne.n	8000ff4 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x5c>
    {
        /* DMA2D BGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->BGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc2:	619a      	str	r2, [r3, #24]

        /* DMA2D FGOR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGOR, blitOp.dstLoopStride - blitOp.nSteps);
 8000fc4:	611a      	str	r2, [r3, #16]

        /* Write DMA2D BGPFCCR register */
        WRITE_REG(DMA2D->BGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000fc6:	6258      	str	r0, [r3, #36]	; 0x24

        /* Write DMA2D FGPFCCR register */
        WRITE_REG(DMA2D->FGPFCCR, CM_A8 | (DMA2D_REPLACE_ALPHA << DMA2D_BGPFCCR_AM_Pos) | ((blitOp.alpha << 24) & DMA2D_BGPFCCR_ALPHA));
 8000fc8:	7f21      	ldrb	r1, [r4, #28]
 8000fca:	4a17      	ldr	r2, [pc, #92]	; (8001028 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x90>)
 8000fcc:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8000fd0:	61da      	str	r2, [r3, #28]

        /* DMA2D FGCOLR register configuration -------------------------------------*/
        WRITE_REG(DMA2D->FGCOLR, (((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3)) & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | DMA2D_FGCOLR_RED));
 8000fd2:	68e1      	ldr	r1, [r4, #12]
 8000fd4:	020a      	lsls	r2, r1, #8
 8000fd6:	0148      	lsls	r0, r1, #5
 8000fd8:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 8000fdc:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8000fe0:	00c9      	lsls	r1, r1, #3
 8000fe2:	4302      	orrs	r2, r0
 8000fe4:	b2c9      	uxtb	r1, r1
 8000fe6:	430a      	orrs	r2, r1
 8000fe8:	621a      	str	r2, [r3, #32]

        /* Configure DMA2D source address */
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_M2M_BLEND));
 8000fea:	4a10      	ldr	r2, [pc, #64]	; (800102c <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x94>)
        WRITE_REG(DMA2D->BGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fec:	615d      	str	r5, [r3, #20]
        WRITE_REG(DMA2D->FGMAR, reinterpret_cast<uint32_t>(blitOp.pDst));
 8000fee:	60dd      	str	r5, [r3, #12]
            // set color
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
        }

        /* Enable the Peripheral and Enable the transfer complete interrupt */
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8000ff0:	601a      	str	r2, [r3, #0]
    }
}
 8000ff2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
        WRITE_REG(DMA2D->FGOR, 0);
 8000ff4:	2200      	movs	r2, #0
        WRITE_REG(DMA2D->FGPFCCR, dma2dOutputColorMode | (DMA2D_NO_MODIF_ALPHA << DMA2D_BGPFCCR_AM_Pos));
 8000ff6:	61d8      	str	r0, [r3, #28]
        WRITE_REG(DMA2D->FGOR, 0);
 8000ff8:	611a      	str	r2, [r3, #16]
        if (blitOp.dstFormat == Bitmap::RGB565)
 8000ffa:	68e1      	ldr	r1, [r4, #12]
 8000ffc:	b91e      	cbnz	r6, 8001006 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x6e>
            WRITE_REG(DMA2D->OCOLR, blitOp.color);
 8000ffe:	6399      	str	r1, [r3, #56]	; 0x38
        WRITE_REG(DMA2D->CR, (DMA2D_IT_TC | DMA2D_CR_START | DMA2D_R2M));
 8001000:	4b08      	ldr	r3, [pc, #32]	; (8001024 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x8c>)
 8001002:	4a0b      	ldr	r2, [pc, #44]	; (8001030 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x98>)
 8001004:	e7f4      	b.n	8000ff0 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x58>
            WRITE_REG(DMA2D->OCOLR, (blitOp.alpha << 24) | ((blitOp.color & 0xF800) << 8) | ((blitOp.color & 0x07E0) << 5) | ((blitOp.color & 0x001F) << 3));
 8001006:	020a      	lsls	r2, r1, #8
 8001008:	0148      	lsls	r0, r1, #5
 800100a:	f402 0278 	and.w	r2, r2, #16252928	; 0xf80000
 800100e:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 8001012:	00c9      	lsls	r1, r1, #3
 8001014:	b2c9      	uxtb	r1, r1
 8001016:	4302      	orrs	r2, r0
 8001018:	430a      	orrs	r2, r1
 800101a:	7f21      	ldrb	r1, [r4, #28]
 800101c:	ea42 6201 	orr.w	r2, r2, r1, lsl #24
 8001020:	639a      	str	r2, [r3, #56]	; 0x38
 8001022:	e7ed      	b.n	8001000 <_ZN10STM32F4DMA13setupDataFillERKN8touchgfx6BlitOpE+0x68>
 8001024:	4002b000 	.word	0x4002b000
 8001028:	00010009 	.word	0x00010009
 800102c:	00020201 	.word	0x00020201
 8001030:	00030201 	.word	0x00030201

08001034 <_ZN10STM32F4DMAD1Ev>:
STM32F4DMA::~STM32F4DMA()
 8001034:	4b05      	ldr	r3, [pc, #20]	; (800104c <_ZN10STM32F4DMAD1Ev+0x18>)
 8001036:	6003      	str	r3, [r0, #0]
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001038:	4b05      	ldr	r3, [pc, #20]	; (8001050 <_ZN10STM32F4DMAD1Ev+0x1c>)
 800103a:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 800103e:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__STATIC_FORCEINLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8001042:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 8001046:	f3bf 8f6f 	isb	sy
}
 800104a:	4770      	bx	lr
 800104c:	0801ab5c 	.word	0x0801ab5c
 8001050:	e000e100 	.word	0xe000e100

08001054 <_ZN10STM32F4DMAD0Ev>:
STM32F4DMA::~STM32F4DMA()
 8001054:	b510      	push	{r4, lr}
 8001056:	4604      	mov	r4, r0
}
 8001058:	f7ff ffec 	bl	8001034 <_ZN10STM32F4DMAD1Ev>
 800105c:	4620      	mov	r0, r4
 800105e:	f44f 6142 	mov.w	r1, #3104	; 0xc20
 8001062:	f018 f9be 	bl	80193e2 <_ZdlPvj>
 8001066:	4620      	mov	r0, r4
 8001068:	bd10      	pop	{r4, pc}
	...

0800106c <_ZN10STM32F4DMAC1Ev>:
STM32F4DMA::STM32F4DMA()
 800106c:	b570      	push	{r4, r5, r6, lr}
 800106e:	4604      	mov	r4, r0
    : DMA_Interface(dma_queue), dma_queue(queue_storage, sizeof(queue_storage) / sizeof(queue_storage[0]))
 8001070:	4625      	mov	r5, r4
 8001072:	4b0a      	ldr	r3, [pc, #40]	; (800109c <_ZN10STM32F4DMAC1Ev+0x30>)
 8001074:	300c      	adds	r0, #12
     * Constructs a DMA Interface object.
     *
     * @param [in] dmaQueue Reference to the queue of DMA operations.
     */
    DMA_Interface(DMA_Queue& dmaQueue)
        : queue(dmaQueue), isRunning(false), isAllowed(false)
 8001076:	2600      	movs	r6, #0
 8001078:	6060      	str	r0, [r4, #4]
 800107a:	7226      	strb	r6, [r4, #8]
 800107c:	7266      	strb	r6, [r4, #9]
 800107e:	f845 3b20 	str.w	r3, [r5], #32
 8001082:	2260      	movs	r2, #96	; 0x60
 8001084:	4629      	mov	r1, r5
 8001086:	f008 fe2b 	bl	8009ce0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800108a:	f504 6342 	add.w	r3, r4, #3104	; 0xc20
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
        : color(0)
 800108e:	60ee      	str	r6, [r5, #12]
 8001090:	3520      	adds	r5, #32
 8001092:	42ab      	cmp	r3, r5
 8001094:	d1fb      	bne.n	800108e <_ZN10STM32F4DMAC1Ev+0x22>
}
 8001096:	4620      	mov	r0, r4
 8001098:	bd70      	pop	{r4, r5, r6, pc}
 800109a:	bf00      	nop
 800109c:	0801ab5c 	.word	0x0801ab5c

080010a0 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    };

    virtual uint16_t capacity() const
    {
        return NUMBER_OF_ELEMENTS;
    }
 80010a0:	2001      	movs	r0, #1
 80010a2:	4770      	bx	lr

080010a4 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
    {
        return sizeof(stBlocks[0]);
    }
 80010a4:	200c      	movs	r0, #12
 80010a6:	4770      	bx	lr

080010a8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
    {
        return &stBlocks[index];
 80010a8:	230c      	movs	r3, #12
 80010aa:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010ae:	3008      	adds	r0, #8
 80010b0:	4770      	bx	lr

080010b2 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
    {
        return &stBlocks[index];
 80010b2:	230c      	movs	r3, #12
 80010b4:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010b8:	3008      	adds	r0, #8
 80010ba:	4770      	bx	lr

080010bc <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010bc:	2001      	movs	r0, #1
 80010be:	4770      	bx	lr

080010c0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010c0:	206c      	movs	r0, #108	; 0x6c
 80010c2:	4770      	bx	lr

080010c4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010c4:	236c      	movs	r3, #108	; 0x6c
 80010c6:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010ca:	3008      	adds	r0, #8
 80010cc:	4770      	bx	lr

080010ce <_ZNK8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010ce:	236c      	movs	r3, #108	; 0x6c
 80010d0:	fb03 0001 	mla	r0, r3, r1, r0
    }
 80010d4:	3008      	adds	r0, #8
 80010d6:	4770      	bx	lr

080010d8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    }
 80010d8:	2001      	movs	r0, #1
 80010da:	4770      	bx	lr

080010dc <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    }
 80010dc:	2010      	movs	r0, #16
 80010de:	4770      	bx	lr

080010e0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010e0:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010e4:	3008      	adds	r0, #8
 80010e6:	4770      	bx	lr

080010e8 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
        return &stBlocks[index];
 80010e8:	eb00 1001 	add.w	r0, r0, r1, lsl #4
    }
 80010ec:	3008      	adds	r0, #8
 80010ee:	4770      	bx	lr

080010f0 <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
    {
        app.gotoScreen1ScreenNoTransition();
 80010f0:	4608      	mov	r0, r1
 80010f2:	f001 b811 	b.w	8002118 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
	...

080010f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
class Partition : public AbstractPartition
 80010f8:	b510      	push	{r4, lr}
 80010fa:	4b03      	ldr	r3, [pc, #12]	; (8001108 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 80010fc:	6003      	str	r3, [r0, #0]
 80010fe:	4604      	mov	r4, r0
 8001100:	f007 fc5a 	bl	80089b8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001104:	4620      	mov	r0, r4
 8001106:	bd10      	pop	{r4, pc}
 8001108:	0801ac14 	.word	0x0801ac14

0800110c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800110c:	b510      	push	{r4, lr}
 800110e:	4604      	mov	r4, r0
 8001110:	f7ff fff2 	bl	80010f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001114:	4620      	mov	r0, r4
 8001116:	2114      	movs	r1, #20
 8001118:	f018 f963 	bl	80193e2 <_ZdlPvj>
 800111c:	4620      	mov	r0, r4
 800111e:	bd10      	pop	{r4, pc}

08001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001120:	b510      	push	{r4, lr}
 8001122:	4b03      	ldr	r3, [pc, #12]	; (8001130 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 8001124:	6003      	str	r3, [r0, #0]
 8001126:	4604      	mov	r4, r0
 8001128:	f007 fc46 	bl	80089b8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 800112c:	4620      	mov	r0, r4
 800112e:	bd10      	pop	{r4, pc}
 8001130:	0801abe0 	.word	0x0801abe0

08001134 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 8001134:	b510      	push	{r4, lr}
 8001136:	4604      	mov	r4, r0
 8001138:	f7ff fff2 	bl	8001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800113c:	4620      	mov	r0, r4
 800113e:	2174      	movs	r1, #116	; 0x74
 8001140:	f018 f94f 	bl	80193e2 <_ZdlPvj>
 8001144:	4620      	mov	r0, r4
 8001146:	bd10      	pop	{r4, pc}

08001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 8001148:	b510      	push	{r4, lr}
 800114a:	4b03      	ldr	r3, [pc, #12]	; (8001158 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x10>)
 800114c:	6003      	str	r3, [r0, #0]
 800114e:	4604      	mov	r4, r0
 8001150:	f007 fc32 	bl	80089b8 <_ZN8touchgfx17AbstractPartitionD1Ev>
 8001154:	4620      	mov	r0, r4
 8001156:	bd10      	pop	{r4, pc}
 8001158:	0801abac 	.word	0x0801abac

0800115c <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800115c:	b510      	push	{r4, lr}
 800115e:	4604      	mov	r4, r0
 8001160:	f7ff fff2 	bl	8001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001164:	4620      	mov	r0, r4
 8001166:	2118      	movs	r1, #24
 8001168:	f018 f93b 	bl	80193e2 <_ZdlPvj>
 800116c:	4620      	mov	r0, r4
 800116e:	bd10      	pop	{r4, pc}

08001170 <_ZN12FrontendHeapD1Ev>:
#ifndef FRONTENDHEAP_HPP
#define FRONTENDHEAP_HPP

#include <gui_generated/common/FrontendHeapBase.hpp>

class FrontendHeap : public FrontendHeapBase
 8001170:	b510      	push	{r4, lr}
 8001172:	4b08      	ldr	r3, [pc, #32]	; (8001194 <_ZN12FrontendHeapD1Ev+0x24>)
 8001174:	4604      	mov	r4, r0
 8001176:	f840 3ba0 	str.w	r3, [r0], #160
 800117a:	f7ff ffbd 	bl	80010f8 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800117e:	f104 002c 	add.w	r0, r4, #44	; 0x2c
 8001182:	f7ff ffcd 	bl	8001120 <_ZN8touchgfx9PartitionINS_4meta8TypeListI11Screen1ViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 8001186:	f104 0014 	add.w	r0, r4, #20
 800118a:	f7ff ffdd 	bl	8001148 <_ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800118e:	4620      	mov	r0, r4
 8001190:	bd10      	pop	{r4, pc}
 8001192:	bf00      	nop
 8001194:	0801ac48 	.word	0x0801ac48

08001198 <__tcf_0>:
                            > > CombinedTransitionTypes;
    typedef touchgfx::meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 8001198:	b508      	push	{r3, lr}
 800119a:	4802      	ldr	r0, [pc, #8]	; (80011a4 <__tcf_0+0xc>)
 800119c:	f7ff ffe8 	bl	8001170 <_ZN12FrontendHeapD1Ev>
 80011a0:	bd08      	pop	{r3, pc}
 80011a2:	bf00      	nop
 80011a4:	2000019c 	.word	0x2000019c

080011a8 <_ZN12FrontendHeapD0Ev>:
class FrontendHeap : public FrontendHeapBase
 80011a8:	b510      	push	{r4, lr}
 80011aa:	4604      	mov	r4, r0
 80011ac:	f7ff ffe0 	bl	8001170 <_ZN12FrontendHeapD1Ev>
 80011b0:	4620      	mov	r0, r4
 80011b2:	f44f 7104 	mov.w	r1, #528	; 0x210
 80011b6:	f018 f914 	bl	80193e2 <_ZdlPvj>
 80011ba:	4620      	mov	r0, r4
 80011bc:	bd10      	pop	{r4, pc}
	...

080011c0 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 800, 480);

void touchgfx_init()
{
 80011c0:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 80011c4:	f000 fef6 	bl	8001fb4 <_ZN14BitmapDatabase11getInstanceEv>
 80011c8:	4605      	mov	r5, r0
 80011ca:	f000 fef7 	bl	8001fbc <_ZN14BitmapDatabase15getInstanceSizeEv>
 80011ce:	2400      	movs	r4, #0
 80011d0:	4601      	mov	r1, r0
 80011d2:	4623      	mov	r3, r4
 80011d4:	4628      	mov	r0, r5
 80011d6:	4622      	mov	r2, r4
 80011d8:	9400      	str	r4, [sp, #0]
 80011da:	f00c fa4f 	bl	800d67c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
    {
        texts = t;
 80011de:	4b25      	ldr	r3, [pc, #148]	; (8001274 <touchgfx_init+0xb4>)
 80011e0:	4a25      	ldr	r2, [pc, #148]	; (8001278 <touchgfx_init+0xb8>)
        static FrontendHeap instance;
 80011e2:	4d26      	ldr	r5, [pc, #152]	; (800127c <touchgfx_init+0xbc>)
 80011e4:	601a      	str	r2, [r3, #0]
    TypedText::registerTexts(&texts);
    Texts::setLanguage(0);
 80011e6:	4620      	mov	r0, r4
 80011e8:	f001 fa36 	bl	8002658 <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 80011ec:	4824      	ldr	r0, [pc, #144]	; (8001280 <touchgfx_init+0xc0>)
 80011ee:	f00c f987 	bl	800d500 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>
 80011f2:	782b      	ldrb	r3, [r5, #0]
 80011f4:	f3bf 8f5b 	dmb	ish
 80011f8:	07db      	lsls	r3, r3, #31
 80011fa:	d435      	bmi.n	8001268 <touchgfx_init+0xa8>
 80011fc:	4628      	mov	r0, r5
 80011fe:	f018 f8f2 	bl	80193e6 <__cxa_guard_acquire>
 8001202:	b388      	cbz	r0, 8001268 <touchgfx_init+0xa8>
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 8001204:	4c1f      	ldr	r4, [pc, #124]	; (8001284 <touchgfx_init+0xc4>)
    Model model;
    FrontendApplication app;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
                     app(model, *this)
 8001206:	4b20      	ldr	r3, [pc, #128]	; (8001288 <touchgfx_init+0xc8>)
 8001208:	6023      	str	r3, [r4, #0]
 800120a:	f104 06b8 	add.w	r6, r4, #184	; 0xb8
 800120e:	f104 0014 	add.w	r0, r4, #20
 8001212:	f104 082c 	add.w	r8, r4, #44	; 0x2c
 8001216:	f104 07a0 	add.w	r7, r4, #160	; 0xa0
 800121a:	6060      	str	r0, [r4, #4]
 800121c:	f8c4 8008 	str.w	r8, [r4, #8]
 8001220:	60e7      	str	r7, [r4, #12]
 8001222:	6126      	str	r6, [r4, #16]
 8001224:	f007 fbca 	bl	80089bc <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001228:	4b18      	ldr	r3, [pc, #96]	; (800128c <touchgfx_init+0xcc>)
 800122a:	6163      	str	r3, [r4, #20]
 800122c:	4640      	mov	r0, r8
 800122e:	f007 fbc5 	bl	80089bc <_ZN8touchgfx17AbstractPartitionC1Ev>
 8001232:	4b17      	ldr	r3, [pc, #92]	; (8001290 <touchgfx_init+0xd0>)
 8001234:	62e3      	str	r3, [r4, #44]	; 0x2c
 8001236:	4638      	mov	r0, r7
 8001238:	f007 fbc0 	bl	80089bc <_ZN8touchgfx17AbstractPartitionC1Ev>
 800123c:	4b15      	ldr	r3, [pc, #84]	; (8001294 <touchgfx_init+0xd4>)
 800123e:	f8c4 30a0 	str.w	r3, [r4, #160]	; 0xa0
 8001242:	f104 00b4 	add.w	r0, r4, #180	; 0xb4
 8001246:	f001 fa71 	bl	800272c <_ZN5ModelC1Ev>
 800124a:	4622      	mov	r2, r4
 800124c:	f104 01b4 	add.w	r1, r4, #180	; 0xb4
 8001250:	4630      	mov	r0, r6
 8001252:	f001 fa61 	bl	8002718 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 8001256:	4630      	mov	r0, r6
 8001258:	f000 ff5e 	bl	8002118 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>
        static FrontendHeap instance;
 800125c:	4628      	mov	r0, r5
 800125e:	f018 f8ce 	bl	80193fe <__cxa_guard_release>
 8001262:	480d      	ldr	r0, [pc, #52]	; (8001298 <touchgfx_init+0xd8>)
 8001264:	f018 f90a 	bl	801947c <atexit>
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 8001268:	480c      	ldr	r0, [pc, #48]	; (800129c <touchgfx_init+0xdc>)
}
 800126a:	b002      	add	sp, #8
 800126c:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
    hal.initialize();
 8001270:	f7ff bb02 	b.w	8000878 <_ZN11TouchGFXHAL10initializeEv>
 8001274:	2000a148 	.word	0x2000a148
 8001278:	2000104c 	.word	0x2000104c
 800127c:	20000198 	.word	0x20000198
 8001280:	2000001c 	.word	0x2000001c
 8001284:	2000019c 	.word	0x2000019c
 8001288:	0801ac48 	.word	0x0801ac48
 800128c:	0801abac 	.word	0x0801abac
 8001290:	0801abe0 	.word	0x0801abe0
 8001294:	0801ac14 	.word	0x0801ac14
 8001298:	08001199 	.word	0x08001199
 800129c:	20000fd0 	.word	0x20000fd0

080012a0 <touchgfx_taskEntry>:
     * Main event loop. Will wait for VSYNC signal, and then process next frame. Call
     * this function from your GUI task.
     *
     * Note This function never returns
     */
    hal.taskEntry();
 80012a0:	4801      	ldr	r0, [pc, #4]	; (80012a8 <touchgfx_taskEntry+0x8>)
 80012a2:	f7ff bb03 	b.w	80008ac <_ZN11TouchGFXHAL9taskEntryEv>
 80012a6:	bf00      	nop
 80012a8:	20000fd0 	.word	0x20000fd0

080012ac <_GLOBAL__sub_I_touchgfx_init>:
}
 80012ac:	b570      	push	{r4, r5, r6, lr}
{
public:

    STM32TouchController() {}
 80012ae:	4c24      	ldr	r4, [pc, #144]	; (8001340 <_GLOBAL__sub_I_touchgfx_init+0x94>)
static STM32F4DMA dma;
 80012b0:	4e24      	ldr	r6, [pc, #144]	; (8001344 <_GLOBAL__sub_I_touchgfx_init+0x98>)
 80012b2:	4b25      	ldr	r3, [pc, #148]	; (8001348 <_GLOBAL__sub_I_touchgfx_init+0x9c>)
static LCD16bpp display;
 80012b4:	4d25      	ldr	r5, [pc, #148]	; (800134c <_GLOBAL__sub_I_touchgfx_init+0xa0>)
 80012b6:	6023      	str	r3, [r4, #0]
static STM32F4DMA dma;
 80012b8:	4630      	mov	r0, r6
 80012ba:	f7ff fed7 	bl	800106c <_ZN10STM32F4DMAC1Ev>
static LCD16bpp display;
 80012be:	4628      	mov	r0, r5
 80012c0:	f00f fa60 	bl	8010784 <_ZN8touchgfx8LCD16bppC1Ev>
          lastRenderMethod(HARDWARE)
 80012c4:	4b22      	ldr	r3, [pc, #136]	; (8001350 <_GLOBAL__sub_I_touchgfx_init+0xa4>)
 80012c6:	2200      	movs	r2, #0
 80012c8:	f44f 7180 	mov.w	r1, #256	; 0x100
 80012cc:	e9c3 1212 	strd	r1, r2, [r3, #72]	; 0x48
 80012d0:	4920      	ldr	r1, [pc, #128]	; (8001354 <_GLOBAL__sub_I_touchgfx_init+0xa8>)
 80012d2:	60dc      	str	r4, [r3, #12]
 80012d4:	e9c3 1219 	strd	r1, r2, [r3, #100]	; 0x64
 80012d8:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
 80012dc:	6759      	str	r1, [r3, #116]	; 0x74
 80012de:	2101      	movs	r1, #1
 80012e0:	f883 1078 	strb.w	r1, [r3, #120]	; 0x78
        instance = this;
 80012e4:	491c      	ldr	r1, [pc, #112]	; (8001358 <_GLOBAL__sub_I_touchgfx_init+0xac>)
        DISPLAY_HEIGHT = height;
 80012e6:	4c1d      	ldr	r4, [pc, #116]	; (800135c <_GLOBAL__sub_I_touchgfx_init+0xb0>)
        instance = this;
 80012e8:	600b      	str	r3, [r1, #0]
        DISPLAY_WIDTH = width;
 80012ea:	491d      	ldr	r1, [pc, #116]	; (8001360 <_GLOBAL__sub_I_touchgfx_init+0xb4>)
              downX(0),
              downY(0),
              tickCount(0),
              velocityX(0),
              velocityY(0),
              inProgress(false)
 80012ec:	851a      	strh	r2, [r3, #40]	; 0x28
 80012ee:	f44f 7050 	mov.w	r0, #832	; 0x340
 80012f2:	8008      	strh	r0, [r1, #0]
        DISPLAY_HEIGHT = height;
 80012f4:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
          lastRenderMethod(HARDWARE)
 80012f8:	e9c3 2204 	strd	r2, r2, [r3, #16]
 80012fc:	e9c3 2206 	strd	r2, r2, [r3, #24]
 8001300:	e9c3 2208 	strd	r2, r2, [r3, #32]
 8001304:	e9c3 220e 	strd	r2, r2, [r3, #56]	; 0x38
 8001308:	e9c3 2210 	strd	r2, r2, [r3, #64]	; 0x40
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
        : x(0), y(0), width(0), height(0)
 800130c:	e9c3 2214 	strd	r2, r2, [r3, #80]	; 0x50
 8001310:	e9c3 2216 	strd	r2, r2, [r3, #88]	; 0x58
 8001314:	f883 202a 	strb.w	r2, [r3, #42]	; 0x2a
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
        : drag(), listener(0), dragThresholdValue(0)
 8001318:	62da      	str	r2, [r3, #44]	; 0x2c
 800131a:	861a      	strh	r2, [r3, #48]	; 0x30
 800131c:	661a      	str	r2, [r3, #96]	; 0x60
 800131e:	f883 206c 	strb.w	r2, [r3, #108]	; 0x6c
 8001322:	671a      	str	r2, [r3, #112]	; 0x70
 8001324:	e9c3 6501 	strd	r6, r5, [r3, #4]
        DISPLAY_HEIGHT = height;
 8001328:	8021      	strh	r1, [r4, #0]
        DISPLAY_ROTATION = rotate0;
 800132a:	4c0e      	ldr	r4, [pc, #56]	; (8001364 <_GLOBAL__sub_I_touchgfx_init+0xb8>)
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800132c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
        DISPLAY_ROTATION = rotate0;
 8001330:	7022      	strb	r2, [r4, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH;
 8001332:	4c0d      	ldr	r4, [pc, #52]	; (8001368 <_GLOBAL__sub_I_touchgfx_init+0xbc>)
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width + 32, height) /* Align to match 832 pixel for optimal DSI transfer */
 8001334:	4a0d      	ldr	r2, [pc, #52]	; (800136c <_GLOBAL__sub_I_touchgfx_init+0xc0>)
 8001336:	8020      	strh	r0, [r4, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT;
 8001338:	480d      	ldr	r0, [pc, #52]	; (8001370 <_GLOBAL__sub_I_touchgfx_init+0xc4>)
 800133a:	601a      	str	r2, [r3, #0]
 800133c:	8001      	strh	r1, [r0, #0]
}
 800133e:	bd70      	pop	{r4, r5, r6, pc}
 8001340:	200003ac 	.word	0x200003ac
 8001344:	200003b0 	.word	0x200003b0
 8001348:	0801a744 	.word	0x0801a744
 800134c:	20001050 	.word	0x20001050
 8001350:	20000fd0 	.word	0x20000fd0
 8001354:	01000001 	.word	0x01000001
 8001358:	2000a0ec 	.word	0x2000a0ec
 800135c:	2000a0e2 	.word	0x2000a0e2
 8001360:	2000a0e0 	.word	0x2000a0e0
 8001364:	2000a0e4 	.word	0x2000a0e4
 8001368:	2000a0e6 	.word	0x2000a0e6
 800136c:	0801a828 	.word	0x0801a828
 8001370:	2000a0e8 	.word	0x2000a0e8

08001374 <_GLOBAL__sub_D_touchgfx_init>:
static STM32F4DMA dma;
 8001374:	4801      	ldr	r0, [pc, #4]	; (800137c <_GLOBAL__sub_D_touchgfx_init+0x8>)
 8001376:	f7ff be5d 	b.w	8001034 <_ZN10STM32F4DMAD1Ev>
 800137a:	bf00      	nop
 800137c:	200003b0 	.word	0x200003b0

08001380 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
  if ((int32_t)(IRQn) >= 0)
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8001380:	4b02      	ldr	r3, [pc, #8]	; (800138c <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv+0xc>)
 8001382:	2290      	movs	r2, #144	; 0x90
 8001384:	f883 235a 	strb.w	r2, [r3, #858]	; 0x35a
}

void TouchGFXGeneratedHAL::configureInterrupts()
{
    NVIC_SetPriority(DMA2D_IRQn, 9);
}
 8001388:	4770      	bx	lr
 800138a:	bf00      	nop
 800138c:	e000e100 	.word	0xe000e100

08001390 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8001390:	4b02      	ldr	r3, [pc, #8]	; (800139c <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv+0xc>)
 8001392:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 8001396:	609a      	str	r2, [r3, #8]

void TouchGFXGeneratedHAL::enableInterrupts()
{
    NVIC_EnableIRQ(DMA2D_IRQn);
}
 8001398:	4770      	bx	lr
 800139a:	bf00      	nop
 800139c:	e000e100 	.word	0xe000e100

080013a0 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:
    NVIC_DisableIRQ(DMA2D_IRQn);
}

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
}
 80013a0:	4770      	bx	lr

080013a2 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:
}

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
    //setTFTFrameBuffer() not used for selected display interface
}
 80013a2:	4770      	bx	lr

080013a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
{
 80013a4:	b538      	push	{r3, r4, r5, lr}
 80013a6:	4604      	mov	r4, r0
    HAL::initialize();
 80013a8:	f007 fd45 	bl	8008e36 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80013ac:	6823      	ldr	r3, [r4, #0]
 80013ae:	6ddd      	ldr	r5, [r3, #92]	; 0x5c
 80013b0:	f009 fd22 	bl	800adf8 <_ZN8touchgfx11Application11getInstanceEv>
 80013b4:	4601      	mov	r1, r0
 80013b6:	4620      	mov	r0, r4
 80013b8:	47a8      	blx	r5
    setFrameBufferStartAddresses((void*)0xC0000000, (void*)0, (void*)0);
 80013ba:	6823      	ldr	r3, [r4, #0]
 80013bc:	f8d3 5080 	ldr.w	r5, [r3, #128]	; 0x80
 80013c0:	2300      	movs	r3, #0
 80013c2:	461a      	mov	r2, r3
 80013c4:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 80013c8:	4620      	mov	r0, r4
 80013ca:	47a8      	blx	r5
        lockDMAToPorch = enableLock;
 80013cc:	2301      	movs	r3, #1
 80013ce:	f884 304a 	strb.w	r3, [r4, #74]	; 0x4a
}
 80013d2:	bd38      	pop	{r3, r4, r5, pc}

080013d4 <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
    HAL::flushFrameBuffer(rect);
 80013d4:	f007 bce2 	b.w	8008d9c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>

080013d8 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:
}

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
    return HAL::blockCopy(dest, src, numBytes);
 80013d8:	f007 be3b 	b.w	8009052 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>

080013dc <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80013dc:	4b04      	ldr	r3, [pc, #16]	; (80013f0 <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv+0x14>)
 80013de:	f04f 6280 	mov.w	r2, #67108864	; 0x4000000
 80013e2:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
  __ASM volatile ("dsb 0xF":::"memory");
 80013e6:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 80013ea:	f3bf 8f6f 	isb	sy
}
 80013ee:	4770      	bx	lr
 80013f0:	e000e100 	.word	0xe000e100

080013f4 <vApplicationIdleHook>:
   vTaskDelete() API function (as this demo application does) then it is also
   important that vApplicationIdleHook() is permitted to return to its calling
   function, because it is the responsibility of the idle task to clean up
   memory allocated by the kernel to any task that has since been deleted. */

  vTaskSetApplicationTaskTag(NULL, IdleTaskHook);
 80013f4:	4901      	ldr	r1, [pc, #4]	; (80013fc <vApplicationIdleHook+0x8>)
 80013f6:	2000      	movs	r0, #0
 80013f8:	f006 bdfc 	b.w	8007ff4 <vTaskSetApplicationTaskTag>
 80013fc:	08000c19 	.word	0x08000c19

08001400 <StartDefaultTask>:
  * @param  argument: Not used
  * @retval None
  */
/* USER CODE END Header_StartDefaultTask */
void StartDefaultTask(void *argument)
{
 8001400:	b508      	push	{r3, lr}
  /* USER CODE BEGIN 5 */
  /* Infinite loop */
  for(;;)
  {
    osDelay(100);
 8001402:	2064      	movs	r0, #100	; 0x64
 8001404:	f005 f986 	bl	8006714 <osDelay>
  for(;;)
 8001408:	e7fb      	b.n	8001402 <StartDefaultTask+0x2>
	...

0800140c <SystemClock_Config>:
{
 800140c:	b530      	push	{r4, r5, lr}
 800140e:	b095      	sub	sp, #84	; 0x54
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001410:	2210      	movs	r2, #16
 8001412:	2100      	movs	r1, #0
 8001414:	a809      	add	r0, sp, #36	; 0x24
 8001416:	f018 f999 	bl	801974c <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 800141a:	2214      	movs	r2, #20
 800141c:	2100      	movs	r1, #0
 800141e:	a802      	add	r0, sp, #8
 8001420:	f018 f994 	bl	801974c <memset>
  __HAL_RCC_PWR_CLK_ENABLE();
 8001424:	2400      	movs	r4, #0
 8001426:	4b1f      	ldr	r3, [pc, #124]	; (80014a4 <SystemClock_Config+0x98>)
 8001428:	9400      	str	r4, [sp, #0]
 800142a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800142c:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8001430:	641a      	str	r2, [r3, #64]	; 0x40
 8001432:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001434:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8001438:	9300      	str	r3, [sp, #0]
 800143a:	9b00      	ldr	r3, [sp, #0]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 800143c:	4b1a      	ldr	r3, [pc, #104]	; (80014a8 <SystemClock_Config+0x9c>)
 800143e:	9401      	str	r4, [sp, #4]
 8001440:	681a      	ldr	r2, [r3, #0]
 8001442:	f442 4240 	orr.w	r2, r2, #49152	; 0xc000
 8001446:	601a      	str	r2, [r3, #0]
 8001448:	681b      	ldr	r3, [r3, #0]
 800144a:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 800144e:	9301      	str	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001450:	2201      	movs	r2, #1
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001452:	9b01      	ldr	r3, [sp, #4]
  RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 8001454:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 8001458:	e9cd 2307 	strd	r2, r3, [sp, #28]
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 800145c:	2502      	movs	r5, #2
 800145e:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001462:	2108      	movs	r1, #8
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 8001464:	e9cd 530d 	strd	r5, r3, [sp, #52]	; 0x34
  RCC_OscInitStruct.PLL.PLLN = 360;
 8001468:	f44f 73b4 	mov.w	r3, #360	; 0x168
 800146c:	e9cd 130f 	strd	r1, r3, [sp, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLR = 6;
 8001470:	2004      	movs	r0, #4
 8001472:	2306      	movs	r3, #6
 8001474:	e9cd 0312 	strd	r0, r3, [sp, #72]	; 0x48
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001478:	a807      	add	r0, sp, #28
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800147a:	9511      	str	r5, [sp, #68]	; 0x44
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 800147c:	f004 fd2c 	bl	8005ed8 <HAL_RCC_OscConfig>
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 8001480:	f003 ff7c 	bl	800537c <HAL_PWREx_EnableOverDrive>
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001484:	230f      	movs	r3, #15
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8001486:	e9cd 3502 	strd	r3, r5, [sp, #8]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 800148a:	9404      	str	r4, [sp, #16]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 800148c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8001490:	f44f 54a0 	mov.w	r4, #5120	; 0x1400
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8001494:	2105      	movs	r1, #5
 8001496:	a802      	add	r0, sp, #8
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 8001498:	e9cd 4305 	strd	r4, r3, [sp, #20]
  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 800149c:	f004 faf0 	bl	8005a80 <HAL_RCC_ClockConfig>
}
 80014a0:	b015      	add	sp, #84	; 0x54
 80014a2:	bd30      	pop	{r4, r5, pc}
 80014a4:	40023800 	.word	0x40023800
 80014a8:	40007000 	.word	0x40007000

080014ac <main>:
{
 80014ac:	e92d 4880 	stmdb	sp!, {r7, fp, lr}
 80014b0:	b0b9      	sub	sp, #228	; 0xe4
  HAL_Init();
 80014b2:	f002 f957 	bl	8003764 <HAL_Init>
  SystemClock_Config();
 80014b6:	f7ff ffa9 	bl	800140c <SystemClock_Config>
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014ba:	2214      	movs	r2, #20
 80014bc:	2100      	movs	r1, #0
 80014be:	a82b      	add	r0, sp, #172	; 0xac
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014c0:	2400      	movs	r4, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80014c2:	f018 f943 	bl	801974c <memset>
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014c6:	4bc9      	ldr	r3, [pc, #804]	; (80017ec <main+0x340>)
 80014c8:	9402      	str	r4, [sp, #8]
 80014ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 80014cc:	48c8      	ldr	r0, [pc, #800]	; (80017f0 <main+0x344>)
  __HAL_RCC_GPIOE_CLK_ENABLE();
 80014ce:	f042 0210 	orr.w	r2, r2, #16
 80014d2:	631a      	str	r2, [r3, #48]	; 0x30
 80014d4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014d6:	f002 0210 	and.w	r2, r2, #16
 80014da:	9202      	str	r2, [sp, #8]
 80014dc:	9a02      	ldr	r2, [sp, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80014de:	9403      	str	r4, [sp, #12]
 80014e0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014e2:	f042 0202 	orr.w	r2, r2, #2
 80014e6:	631a      	str	r2, [r3, #48]	; 0x30
 80014e8:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014ea:	f002 0202 	and.w	r2, r2, #2
 80014ee:	9203      	str	r2, [sp, #12]
 80014f0:	9a03      	ldr	r2, [sp, #12]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80014f2:	9404      	str	r4, [sp, #16]
 80014f4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014f6:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80014fa:	631a      	str	r2, [r3, #48]	; 0x30
 80014fc:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80014fe:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8001502:	9204      	str	r2, [sp, #16]
 8001504:	9a04      	ldr	r2, [sp, #16]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8001506:	9405      	str	r4, [sp, #20]
 8001508:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800150a:	f042 0208 	orr.w	r2, r2, #8
 800150e:	631a      	str	r2, [r3, #48]	; 0x30
 8001510:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001512:	f002 0208 	and.w	r2, r2, #8
 8001516:	9205      	str	r2, [sp, #20]
 8001518:	9a05      	ldr	r2, [sp, #20]
  __HAL_RCC_GPIOI_CLK_ENABLE();
 800151a:	9406      	str	r4, [sp, #24]
 800151c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800151e:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8001522:	631a      	str	r2, [r3, #48]	; 0x30
 8001524:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001526:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800152a:	9206      	str	r2, [sp, #24]
 800152c:	9a06      	ldr	r2, [sp, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800152e:	9407      	str	r4, [sp, #28]
 8001530:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001532:	f042 0220 	orr.w	r2, r2, #32
 8001536:	631a      	str	r2, [r3, #48]	; 0x30
 8001538:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800153a:	f002 0220 	and.w	r2, r2, #32
 800153e:	9207      	str	r2, [sp, #28]
 8001540:	9a07      	ldr	r2, [sp, #28]
  __HAL_RCC_GPIOK_CLK_ENABLE();
 8001542:	9408      	str	r4, [sp, #32]
 8001544:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001546:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800154a:	631a      	str	r2, [r3, #48]	; 0x30
 800154c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800154e:	f402 6280 	and.w	r2, r2, #1024	; 0x400
 8001552:	9208      	str	r2, [sp, #32]
 8001554:	9a08      	ldr	r2, [sp, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 8001556:	9409      	str	r4, [sp, #36]	; 0x24
 8001558:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800155a:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800155e:	631a      	str	r2, [r3, #48]	; 0x30
 8001560:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001562:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8001566:	9209      	str	r2, [sp, #36]	; 0x24
 8001568:	9a09      	ldr	r2, [sp, #36]	; 0x24
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800156a:	940a      	str	r4, [sp, #40]	; 0x28
 800156c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800156e:	f042 0204 	orr.w	r2, r2, #4
 8001572:	631a      	str	r2, [r3, #48]	; 0x30
 8001574:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001576:	f002 0204 	and.w	r2, r2, #4
 800157a:	920a      	str	r2, [sp, #40]	; 0x28
 800157c:	9a0a      	ldr	r2, [sp, #40]	; 0x28
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 800157e:	940b      	str	r4, [sp, #44]	; 0x2c
 8001580:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001582:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001586:	631a      	str	r2, [r3, #48]	; 0x30
 8001588:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800158a:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800158e:	930b      	str	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001590:	2201      	movs	r2, #1
 8001592:	2108      	movs	r1, #8
  __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001594:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
  HAL_GPIO_WritePin(GPIOK, GPIO_PIN_3, GPIO_PIN_SET);
 8001596:	f003 f8ed 	bl	8004774 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(RENDER_TIME_GPIO_Port, RENDER_TIME_Pin, GPIO_PIN_RESET);
 800159a:	4896      	ldr	r0, [pc, #600]	; (80017f4 <main+0x348>)
 800159c:	4622      	mov	r2, r4
 800159e:	2110      	movs	r1, #16
 80015a0:	f003 f8e8 	bl	8004774 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
 80015a4:	4894      	ldr	r0, [pc, #592]	; (80017f8 <main+0x34c>)
 80015a6:	4622      	mov	r2, r4
 80015a8:	2140      	movs	r1, #64	; 0x40
 80015aa:	f003 f8e3 	bl	8004774 <HAL_GPIO_WritePin>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 80015ae:	4622      	mov	r2, r4
 80015b0:	4892      	ldr	r0, [pc, #584]	; (80017fc <main+0x350>)
 80015b2:	2180      	movs	r1, #128	; 0x80
 80015b4:	f003 f8de 	bl	8004774 <HAL_GPIO_WritePin>
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015b8:	2611      	movs	r6, #17
 80015ba:	2308      	movs	r3, #8
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015bc:	488c      	ldr	r0, [pc, #560]	; (80017f0 <main+0x344>)
 80015be:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015c0:	2701      	movs	r7, #1
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015c2:	f04f 0802 	mov.w	r8, #2
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 80015c6:	e9cd 362b 	strd	r3, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015ca:	f04f 0b10 	mov.w	fp, #16
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80015ce:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOK, &GPIO_InitStruct);
 80015d2:	f002 ff41 	bl	8004458 <HAL_GPIO_Init>
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015d6:	4887      	ldr	r0, [pc, #540]	; (80017f4 <main+0x348>)
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80015d8:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015da:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015dc:	e9cd b72b 	strd	fp, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015e0:	f8cd 80b8 	str.w	r8, [sp, #184]	; 0xb8
  HAL_GPIO_Init(RENDER_TIME_GPIO_Port, &GPIO_InitStruct);
 80015e4:	f002 ff38 	bl	8004458 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = VSYNC_FREQ_Pin;
 80015e8:	2340      	movs	r3, #64	; 0x40
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015ea:	4883      	ldr	r0, [pc, #524]	; (80017f8 <main+0x34c>)
 80015ec:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 80015ee:	2580      	movs	r5, #128	; 0x80
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80015f0:	e9cd 372b 	strd	r3, r7, [sp, #172]	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80015f4:	e9cd 482d 	strd	r4, r8, [sp, #180]	; 0xb4
  HAL_GPIO_Init(VSYNC_FREQ_GPIO_Port, &GPIO_InitStruct);
 80015f8:	f002 ff2e 	bl	8004458 <HAL_GPIO_Init>
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 80015fc:	a92b      	add	r1, sp, #172	; 0xac
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80015fe:	2303      	movs	r3, #3
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001600:	487e      	ldr	r0, [pc, #504]	; (80017fc <main+0x350>)
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001602:	932e      	str	r3, [sp, #184]	; 0xb8
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_OD;
 8001604:	e9cd 562b 	strd	r5, r6, [sp, #172]	; 0xac
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001608:	942d      	str	r4, [sp, #180]	; 0xb4
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 800160a:	f002 ff25 	bl	8004458 <HAL_GPIO_Init>
  hcrc.Instance = CRC;
 800160e:	487c      	ldr	r0, [pc, #496]	; (8001800 <main+0x354>)
  hdma2d.Instance = DMA2D;
 8001610:	4e7c      	ldr	r6, [pc, #496]	; (8001804 <main+0x358>)
  hcrc.Instance = CRC;
 8001612:	4b7d      	ldr	r3, [pc, #500]	; (8001808 <main+0x35c>)
 8001614:	6003      	str	r3, [r0, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001616:	f002 f93f 	bl	8003898 <HAL_CRC_Init>
  hdma2d.Instance = DMA2D;
 800161a:	4b7c      	ldr	r3, [pc, #496]	; (800180c <main+0x360>)
  hdma2d.LayerCfg[1].InputColorMode = DMA2D_INPUT_ARGB8888;
 800161c:	e9c6 440a 	strd	r4, r4, [r6, #40]	; 0x28
  hdma2d.LayerCfg[1].InputAlpha = 0;
 8001620:	e9c6 440c 	strd	r4, r4, [r6, #48]	; 0x30
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 8001624:	4630      	mov	r0, r6
  hdma2d.Init.Mode = DMA2D_M2M;
 8001626:	e9c6 3400 	strd	r3, r4, [r6]
  hdma2d.Init.OutputOffset = 0;
 800162a:	e9c6 4402 	strd	r4, r4, [r6, #8]
  if (HAL_DMA2D_Init(&hdma2d) != HAL_OK)
 800162e:	f002 fa47 	bl	8003ac0 <HAL_DMA2D_Init>
  if (HAL_DMA2D_ConfigLayer(&hdma2d, 1) != HAL_OK)
 8001632:	4639      	mov	r1, r7
 8001634:	4630      	mov	r0, r6
 8001636:	f002 fafb 	bl	8003c30 <HAL_DMA2D_ConfigLayer>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 800163a:	4629      	mov	r1, r5
 800163c:	4622      	mov	r2, r4
 800163e:	486f      	ldr	r0, [pc, #444]	; (80017fc <main+0x350>)
  hdsi.Instance = DSI;
 8001640:	4e73      	ldr	r6, [pc, #460]	; (8001810 <main+0x364>)
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_RESET);
 8001642:	f003 f897 	bl	8004774 <HAL_GPIO_WritePin>
  HAL_Delay(20); /* wait 20 ms */
 8001646:	2014      	movs	r0, #20
 8001648:	f002 f8ac 	bl	80037a4 <HAL_Delay>
  HAL_GPIO_WritePin(GPIOH, GPIO_PIN_7, GPIO_PIN_SET);
 800164c:	4629      	mov	r1, r5
 800164e:	463a      	mov	r2, r7
 8001650:	486a      	ldr	r0, [pc, #424]	; (80017fc <main+0x350>)
 8001652:	f003 f88f 	bl	8004774 <HAL_GPIO_WritePin>
  HAL_Delay(10);
 8001656:	200a      	movs	r0, #10
 8001658:	f002 f8a4 	bl	80037a4 <HAL_Delay>
  DSI_HOST_TimeoutTypeDef HostTimeouts = {0};
 800165c:	2224      	movs	r2, #36	; 0x24
 800165e:	4621      	mov	r1, r4
 8001660:	a815      	add	r0, sp, #84	; 0x54
 8001662:	f018 f873 	bl	801974c <memset>
  DSI_PHY_TimerTypeDef PhyTimings = {0};
 8001666:	2218      	movs	r2, #24
 8001668:	4621      	mov	r1, r4
 800166a:	a80f      	add	r0, sp, #60	; 0x3c
 800166c:	f018 f86e 	bl	801974c <memset>
  DSI_LPCmdTypeDef LPCmd = {0};
 8001670:	2234      	movs	r2, #52	; 0x34
 8001672:	4621      	mov	r1, r4
 8001674:	a82b      	add	r0, sp, #172	; 0xac
 8001676:	f018 f869 	bl	801974c <memset>
  DSI_CmdCfgTypeDef CmdCfg = {0};
 800167a:	222c      	movs	r2, #44	; 0x2c
 800167c:	4621      	mov	r1, r4
 800167e:	a81e      	add	r0, sp, #120	; 0x78
 8001680:	f018 f864 	bl	801974c <memset>
  hdsi.Instance = DSI;
 8001684:	4b63      	ldr	r3, [pc, #396]	; (8001814 <main+0x368>)
  PLLInit.PLLODF = DSI_PLL_OUT_DIV1;
 8001686:	940e      	str	r4, [sp, #56]	; 0x38
  hdsi.Init.TXEscapeCkdiv = 4;
 8001688:	2504      	movs	r5, #4
  hdsi.Init.AutomaticClockLaneControl = DSI_AUTO_CLK_LANE_CTRL_DISABLE;
 800168a:	e9c6 3400 	strd	r3, r4, [r6]
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800168e:	a90c      	add	r1, sp, #48	; 0x30
  PLLInit.PLLNDIV = 125;
 8001690:	237d      	movs	r3, #125	; 0x7d
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 8001692:	4630      	mov	r0, r6
  hdsi.Init.NumberOfLanes = DSI_TWO_DATA_LANES;
 8001694:	e9c6 5702 	strd	r5, r7, [r6, #8]
  PLLInit.PLLIDF = DSI_PLL_IN_DIV2;
 8001698:	e9cd 380c 	strd	r3, r8, [sp, #48]	; 0x30
  if (HAL_DSI_Init(&hdsi, &PLLInit) != HAL_OK)
 800169c:	f002 fb90 	bl	8003dc0 <HAL_DSI_Init>
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016a0:	a915      	add	r1, sp, #84	; 0x54
 80016a2:	4630      	mov	r0, r6
  HostTimeouts.HighSpeedTransmissionTimeout = 0;
 80016a4:	e9cd 7415 	strd	r7, r4, [sp, #84]	; 0x54
  HostTimeouts.HighSpeedReadTimeout = 0;
 80016a8:	e9cd 4417 	strd	r4, r4, [sp, #92]	; 0x5c
  HostTimeouts.HighSpeedWriteTimeout = 0;
 80016ac:	e9cd 4419 	strd	r4, r4, [sp, #100]	; 0x64
  HostTimeouts.LowPowerWriteTimeout = 0;
 80016b0:	e9cd 441b 	strd	r4, r4, [sp, #108]	; 0x6c
  HostTimeouts.BTATimeout = 0;
 80016b4:	941d      	str	r4, [sp, #116]	; 0x74
  if (HAL_DSI_ConfigHostTimeouts(&hdsi, &HostTimeouts) != HAL_OK)
 80016b6:	f002 fdad 	bl	8004214 <HAL_DSI_ConfigHostTimeouts>
  PhyTimings.ClockLaneLP2HSTime = 33;
 80016ba:	221c      	movs	r2, #28
 80016bc:	2321      	movs	r3, #33	; 0x21
 80016be:	e9cd 230f 	strd	r2, r3, [sp, #60]	; 0x3c
  PhyTimings.DataLaneLP2HSTime = 25;
 80016c2:	210f      	movs	r1, #15
 80016c4:	2319      	movs	r3, #25
 80016c6:	e9cd 1311 	strd	r1, r3, [sp, #68]	; 0x44
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016ca:	4630      	mov	r0, r6
 80016cc:	a90f      	add	r1, sp, #60	; 0x3c
  PhyTimings.StopWaitTime = 0;
 80016ce:	e9cd 4413 	strd	r4, r4, [sp, #76]	; 0x4c
  if (HAL_DSI_ConfigPhyTimer(&hdsi, &PhyTimings) != HAL_OK)
 80016d2:	f002 fd62 	bl	800419a <HAL_DSI_ConfigPhyTimer>
  if (HAL_DSI_ConfigFlowControl(&hdsi, DSI_FLOW_CONTROL_BTA) != HAL_OK)
 80016d6:	4629      	mov	r1, r5
 80016d8:	4630      	mov	r0, r6
 80016da:	f002 fd4d 	bl	8004178 <HAL_DSI_ConfigFlowControl>
  if (HAL_DSI_SetLowPowerRXFilter(&hdsi, 10000) != HAL_OK)
 80016de:	f242 7110 	movw	r1, #10000	; 0x2710
 80016e2:	4630      	mov	r0, r6
 80016e4:	f002 fea1 	bl	800442a <HAL_DSI_SetLowPowerRXFilter>
  if (HAL_DSI_ConfigErrorMonitor(&hdsi, HAL_DSI_ERROR_NONE) != HAL_OK)
 80016e8:	4621      	mov	r1, r4
 80016ea:	4630      	mov	r0, r6
 80016ec:	f002 fb05 	bl	8003cfa <HAL_DSI_ConfigErrorMonitor>
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_ENABLE;
 80016f0:	f44f 7080 	mov.w	r0, #256	; 0x100
 80016f4:	f44f 7300 	mov.w	r3, #512	; 0x200
 80016f8:	e9cd 032b 	strd	r0, r3, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 80016fc:	f44f 6a80 	mov.w	sl, #1024	; 0x400
 8001700:	f44f 6300 	mov.w	r3, #2048	; 0x800
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 8001704:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_ENABLE;
 8001708:	e9cd a32d 	strd	sl, r3, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_ENABLE;
 800170c:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001710:	e9cd 232f 	strd	r2, r3, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001714:	f44f 4980 	mov.w	r9, #16384	; 0x4000
 8001718:	f44f 3380 	mov.w	r3, #65536	; 0x10000
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 800171c:	f44f 3c00 	mov.w	ip, #131072	; 0x20000
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_ENABLE;
 8001720:	e9cd 9331 	strd	r9, r3, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_ENABLE;
 8001724:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8001728:	e9cd c333 	strd	ip, r3, [sp, #204]	; 0xcc
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 800172c:	f44f 2e00 	mov.w	lr, #524288	; 0x80000
 8001730:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001734:	a92b      	add	r1, sp, #172	; 0xac
 8001736:	4630      	mov	r0, r6
  LPCmd.LPMaxReadPacket = DSI_LP_MRDP_ENABLE;
 8001738:	e9cd e335 	strd	lr, r3, [sp, #212]	; 0xd4
  LPCmd.AcknowledgeRequest = DSI_ACKNOWLEDGE_ENABLE;
 800173c:	f8cd 80dc 	str.w	r8, [sp, #220]	; 0xdc
  if (HAL_DSI_ConfigCommand(&hdsi, &LPCmd) != HAL_OK)
 8001740:	f002 fce6 	bl	8004110 <HAL_DSI_ConfigCommand>
  CmdCfg.CommandSize = 200;
 8001744:	23c8      	movs	r3, #200	; 0xc8
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001746:	a91e      	add	r1, sp, #120	; 0x78
 8001748:	4630      	mov	r0, r6
  CmdCfg.TearingEffectSource = DSI_TE_EXTERNAL;
 800174a:	e9cd 3b20 	strd	r3, fp, [sp, #128]	; 0x80
  CmdCfg.HSPolarity = DSI_HSYNC_ACTIVE_LOW;
 800174e:	e9cd 4522 	strd	r4, r5, [sp, #136]	; 0x88
  CmdCfg.ColorCoding = DSI_RGB565;
 8001752:	e9cd 441e 	strd	r4, r4, [sp, #120]	; 0x78
  CmdCfg.DEPolarity = DSI_DATA_ENABLE_ACTIVE_HIGH;
 8001756:	e9cd 8424 	strd	r8, r4, [sp, #144]	; 0x90
  CmdCfg.AutomaticRefresh = DSI_AR_DISABLE;
 800175a:	e9cd 4426 	strd	r4, r4, [sp, #152]	; 0x98
  CmdCfg.TEAcknowledgeRequest = DSI_TE_ACKNOWLEDGE_ENABLE;
 800175e:	9728      	str	r7, [sp, #160]	; 0xa0
  if (HAL_DSI_ConfigAdaptedCommandMode(&hdsi, &CmdCfg) != HAL_OK)
 8001760:	f002 fc64 	bl	800402c <HAL_DSI_ConfigAdaptedCommandMode>
  if (HAL_DSI_SetGenericVCID(&hdsi, 0) != HAL_OK)
 8001764:	4621      	mov	r1, r4
 8001766:	4630      	mov	r0, r6
 8001768:	f002 fc4f 	bl	800400a <HAL_DSI_SetGenericVCID>
  hsdram1.Instance = FMC_SDRAM_DEVICE;
 800176c:	482a      	ldr	r0, [pc, #168]	; (8001818 <main+0x36c>)
 800176e:	492b      	ldr	r1, [pc, #172]	; (800181c <main+0x370>)
  hsdram1.Init.SDClockPeriod = FMC_SDRAM_CLOCK_DISABLE;
 8001770:	6204      	str	r4, [r0, #32]
  hsdram1.Init.SDBank = FMC_SDRAM_BANK1;
 8001772:	e9c0 1400 	strd	r1, r4, [r0]
  hsdram1.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8001776:	2340      	movs	r3, #64	; 0x40
 8001778:	2120      	movs	r1, #32
 800177a:	e9c0 1304 	strd	r1, r3, [r0, #16]
  hsdram1.Init.CASLatency = FMC_SDRAM_CAS_LATENCY_3;
 800177e:	f44f 71c0 	mov.w	r1, #384	; 0x180
  hsdram1.Init.WriteProtection = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8001782:	e9c0 1406 	strd	r1, r4, [r0, #24]
  SdramTiming.ExitSelfRefreshDelay = 7;
 8001786:	2107      	movs	r1, #7
  SdramTiming.WriteRecoveryTime = 3;
 8001788:	2303      	movs	r3, #3
  hsdram1.Init.ReadBurst = FMC_SDRAM_RBURST_ENABLE;
 800178a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
  SdramTiming.SelfRefreshTime = 4;
 800178e:	e9cd 152c 	strd	r1, r5, [sp, #176]	; 0xb0
  SdramTiming.RowCycleDelay = 7;
 8001792:	912e      	str	r1, [sp, #184]	; 0xb8
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 8001794:	a92b      	add	r1, sp, #172	; 0xac
  SdramTiming.RPDelay = 2;
 8001796:	e9cd 382f 	strd	r3, r8, [sp, #188]	; 0xbc
  hsdram1.Init.ReadPipeDelay = FMC_SDRAM_RPIPE_DELAY_2;
 800179a:	e9c0 2909 	strd	r2, r9, [r0, #36]	; 0x24
  hsdram1.Init.RowBitsNumber = FMC_SDRAM_ROW_BITS_NUM_12;
 800179e:	e9c0 4502 	strd	r4, r5, [r0, #8]
  SdramTiming.LoadToActiveDelay = 2;
 80017a2:	f8cd 80ac 	str.w	r8, [sp, #172]	; 0xac
  SdramTiming.RCDDelay = 2;
 80017a6:	f8cd 80c4 	str.w	r8, [sp, #196]	; 0xc4
  if (HAL_SDRAM_Init(&hsdram1, &SdramTiming) != HAL_OK)
 80017aa:	f004 fd4b 	bl	8006244 <HAL_SDRAM_Init>
  BSP_SDRAM_DeInit();
 80017ae:	f001 ff01 	bl	80035b4 <BSP_SDRAM_DeInit>
  if(BSP_SDRAM_Init() != SDRAM_OK)
 80017b2:	f001 feb1 	bl	8003518 <BSP_SDRAM_Init>
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017b6:	2234      	movs	r2, #52	; 0x34
 80017b8:	4621      	mov	r1, r4
 80017ba:	a81e      	add	r0, sp, #120	; 0x78
  hltdc.Instance = LTDC;
 80017bc:	4d18      	ldr	r5, [pc, #96]	; (8001820 <main+0x374>)
  LTDC_LayerCfgTypeDef pLayerCfg = {0};
 80017be:	f017 ffc5 	bl	801974c <memset>
  hltdc.Instance = LTDC;
 80017c2:	4a18      	ldr	r2, [pc, #96]	; (8001824 <main+0x378>)
  hltdc.Init.Backcolor.Blue = 0;
 80017c4:	86ac      	strh	r4, [r5, #52]	; 0x34
  hltdc.Init.HSPolarity = LTDC_HSPOLARITY_AL;
 80017c6:	e9c5 2400 	strd	r2, r4, [r5]
  hltdc.Init.AccumulatedActiveH = 482;
 80017ca:	23ca      	movs	r3, #202	; 0xca
 80017cc:	f44f 72f1 	mov.w	r2, #482	; 0x1e2
 80017d0:	e9c5 3209 	strd	r3, r2, [r5, #36]	; 0x24
  hltdc.Init.TotalHeigh = 483;
 80017d4:	21cb      	movs	r1, #203	; 0xcb
 80017d6:	f240 12e3 	movw	r2, #483	; 0x1e3
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 80017da:	4628      	mov	r0, r5
  hltdc.Init.TotalHeigh = 483;
 80017dc:	e9c5 120b 	strd	r1, r2, [r5, #44]	; 0x2c
  hltdc.Init.DEPolarity = LTDC_DEPOLARITY_AL;
 80017e0:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hltdc.Init.HorizontalSync = 1;
 80017e4:	e9c5 4704 	strd	r4, r7, [r5, #16]
 80017e8:	e01e      	b.n	8001828 <main+0x37c>
 80017ea:	bf00      	nop
 80017ec:	40023800 	.word	0x40023800
 80017f0:	40022800 	.word	0x40022800
 80017f4:	40020c00 	.word	0x40020c00
 80017f8:	40021800 	.word	0x40021800
 80017fc:	40021c00 	.word	0x40021c00
 8001800:	2000a3e0 	.word	0x2000a3e0
 8001804:	2000a4b0 	.word	0x2000a4b0
 8001808:	40023000 	.word	0x40023000
 800180c:	4002b000 	.word	0x4002b000
 8001810:	2000a3e8 	.word	0x2000a3e8
 8001814:	40016c00 	.word	0x40016c00
 8001818:	2000a4f0 	.word	0x2000a4f0
 800181c:	a0000140 	.word	0xa0000140
 8001820:	2000a404 	.word	0x2000a404
 8001824:	40016800 	.word	0x40016800
  hltdc.Init.AccumulatedHBP = 2;
 8001828:	e9c5 7806 	strd	r7, r8, [r5, #24]
  hltdc.Init.AccumulatedVBP = 2;
 800182c:	f8c5 8020 	str.w	r8, [r5, #32]
  hltdc.Init.Backcolor.Red = 0;
 8001830:	f885 4036 	strb.w	r4, [r5, #54]	; 0x36
  if (HAL_LTDC_Init(&hltdc) != HAL_OK)
 8001834:	f003 fc6c 	bl	8005110 <HAL_LTDC_Init>
  pLayerCfg.Alpha = 255;
 8001838:	21ff      	movs	r1, #255	; 0xff
  pLayerCfg.WindowX1 = 200;
 800183a:	23c8      	movs	r3, #200	; 0xc8
  pLayerCfg.WindowY1 = 480;
 800183c:	f44f 72f0 	mov.w	r2, #480	; 0x1e0
  pLayerCfg.Alpha0 = 0;
 8001840:	e9cd 1423 	strd	r1, r4, [sp, #140]	; 0x8c
  pLayerCfg.FBStartAdress = 0xC0000000;
 8001844:	2005      	movs	r0, #5
 8001846:	f04f 4140 	mov.w	r1, #3221225472	; 0xc0000000
 800184a:	e9cd 0126 	strd	r0, r1, [sp, #152]	; 0x98
  pLayerCfg.ImageHeight = 480;
 800184e:	e9cd 3228 	strd	r3, r2, [sp, #160]	; 0xa0
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001852:	a91e      	add	r1, sp, #120	; 0x78
  pLayerCfg.PixelFormat = LTDC_PIXEL_FORMAT_RGB565;
 8001854:	e9cd 2821 	strd	r2, r8, [sp, #132]	; 0x84
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 8001858:	4628      	mov	r0, r5
 800185a:	4622      	mov	r2, r4
  pLayerCfg.WindowY0 = 0;
 800185c:	e9cd 341f 	strd	r3, r4, [sp, #124]	; 0x7c
  pLayerCfg.WindowX0 = 0;
 8001860:	941e      	str	r4, [sp, #120]	; 0x78
  pLayerCfg.BlendingFactor1 = LTDC_BLENDING_FACTOR1_CA;
 8001862:	f8cd a094 	str.w	sl, [sp, #148]	; 0x94
  pLayerCfg.Backcolor.Blue = 0;
 8001866:	f8ad 40a8 	strh.w	r4, [sp, #168]	; 0xa8
  pLayerCfg.Backcolor.Red = 0;
 800186a:	f88d 40aa 	strb.w	r4, [sp, #170]	; 0xaa
  if (HAL_LTDC_ConfigLayer(&hltdc, &pLayerCfg, 0) != HAL_OK)
 800186e:	f003 fd1b 	bl	80052a8 <HAL_LTDC_ConfigLayer>
  __HAL_LTDC_DISABLE(&hltdc);
 8001872:	682a      	ldr	r2, [r5, #0]
 8001874:	6993      	ldr	r3, [r2, #24]
 8001876:	f023 0301 	bic.w	r3, r3, #1
 800187a:	6193      	str	r3, [r2, #24]
  HAL_DSI_Start(&hdsi);
 800187c:	4630      	mov	r0, r6
 800187e:	f002 fd2f 	bl	80042e0 <HAL_DSI_Start>
  OTM8009A_Init(OTM8009A_FORMAT_RBG565, LCD_ORIENTATION_LANDSCAPE);
 8001882:	4639      	mov	r1, r7
 8001884:	4640      	mov	r0, r8
 8001886:	f001 f809 	bl	800289c <OTM8009A_Init>
  HAL_DSI_ShortWrite(&hdsi, 0, DSI_DCS_SHORT_PKT_WRITE_P1, OTM8009A_CMD_DISPOFF, 0x00);
 800188a:	2328      	movs	r3, #40	; 0x28
 800188c:	2215      	movs	r2, #21
 800188e:	4621      	mov	r1, r4
 8001890:	4630      	mov	r0, r6
 8001892:	9400      	str	r4, [sp, #0]
 8001894:	f002 fd57 	bl	8004346 <HAL_DSI_ShortWrite>
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 8001898:	a92b      	add	r1, sp, #172	; 0xac
 800189a:	4630      	mov	r0, r6
  LPCmd.LPGenShortWriteOneP = DSI_LP_GSW1P_DISABLE;
 800189c:	e9cd 442b 	strd	r4, r4, [sp, #172]	; 0xac
  LPCmd.LPGenShortReadNoP = DSI_LP_GSR0P_DISABLE;
 80018a0:	e9cd 442d 	strd	r4, r4, [sp, #180]	; 0xb4
  LPCmd.LPGenShortReadTwoP = DSI_LP_GSR2P_DISABLE;
 80018a4:	e9cd 442f 	strd	r4, r4, [sp, #188]	; 0xbc
  LPCmd.LPDcsShortWriteNoP = DSI_LP_DSW0P_DISABLE;
 80018a8:	e9cd 4431 	strd	r4, r4, [sp, #196]	; 0xc4
  LPCmd.LPDcsShortReadNoP = DSI_LP_DSR0P_DISABLE;
 80018ac:	e9cd 4433 	strd	r4, r4, [sp, #204]	; 0xcc
  LPCmd.LPDcsLongWrite = DSI_LP_DLW_DISABLE;
 80018b0:	9435      	str	r4, [sp, #212]	; 0xd4
  HAL_DSI_ConfigCommand(&hdsi, &LPCmd);
 80018b2:	f002 fc2d 	bl	8004110 <HAL_DSI_ConfigCommand>
  HAL_LTDC_SetPitch(&hltdc, 800, 0);
 80018b6:	f44f 7148 	mov.w	r1, #800	; 0x320
 80018ba:	4622      	mov	r2, r4
 80018bc:	4628      	mov	r0, r5
 80018be:	f003 fd21 	bl	8005304 <HAL_LTDC_SetPitch>
  __HAL_LTDC_ENABLE(&hltdc);
 80018c2:	682a      	ldr	r2, [r5, #0]
  hqspi.Instance = QUADSPI;
 80018c4:	481e      	ldr	r0, [pc, #120]	; (8001940 <main+0x494>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018c6:	6993      	ldr	r3, [r2, #24]
  hi2c1.Instance = I2C1;
 80018c8:	4d1e      	ldr	r5, [pc, #120]	; (8001944 <main+0x498>)
  hi2c1.Init.ClockSpeed = 400000;
 80018ca:	4e1f      	ldr	r6, [pc, #124]	; (8001948 <main+0x49c>)
  __HAL_LTDC_ENABLE(&hltdc);
 80018cc:	433b      	orrs	r3, r7
 80018ce:	6193      	str	r3, [r2, #24]
  hqspi.Instance = QUADSPI;
 80018d0:	4b1e      	ldr	r3, [pc, #120]	; (800194c <main+0x4a0>)
  hqspi.Init.DualFlash = QSPI_DUALFLASH_DISABLE;
 80018d2:	6204      	str	r4, [r0, #32]
  hqspi.Init.ClockPrescaler = 1;
 80018d4:	e9c0 3700 	strd	r3, r7, [r0]
  hqspi.Init.FlashSize = 27;
 80018d8:	231b      	movs	r3, #27
  hqspi.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 80018da:	e9c0 3a04 	strd	r3, sl, [r0, #16]
  hqspi.Init.SampleShifting = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 80018de:	e9c0 7b02 	strd	r7, fp, [r0, #8]
  hqspi.Init.FlashID = QSPI_FLASH_ID_1;
 80018e2:	e9c0 4406 	strd	r4, r4, [r0, #24]
  if (HAL_QSPI_Init(&hqspi) != HAL_OK)
 80018e6:	f003 fe61 	bl	80055ac <HAL_QSPI_Init>
  BSP_QSPI_DeInit();
 80018ea:	f001 fcdb 	bl	80032a4 <BSP_QSPI_DeInit>
  if(BSP_QSPI_Init() != QSPI_OK)
 80018ee:	f001 fc0f 	bl	8003110 <BSP_QSPI_Init>
  if(BSP_QSPI_EnableMemoryMappedMode() != QSPI_OK)
 80018f2:	f001 fb85 	bl	8003000 <BSP_QSPI_EnableMemoryMappedMode>
  hi2c1.Init.ClockSpeed = 400000;
 80018f6:	4b16      	ldr	r3, [pc, #88]	; (8001950 <main+0x4a4>)
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80018f8:	622c      	str	r4, [r5, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 80018fa:	4628      	mov	r0, r5
  hi2c1.Init.ClockSpeed = 400000;
 80018fc:	e9c5 6300 	strd	r6, r3, [r5]
  hi2c1.Init.OwnAddress1 = 0;
 8001900:	e9c5 4402 	strd	r4, r4, [r5, #8]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8001904:	e9c5 9404 	strd	r9, r4, [r5, #16]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8001908:	e9c5 4406 	strd	r4, r4, [r5, #24]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 800190c:	f003 f91c 	bl	8004b48 <HAL_I2C_Init>
  HAL_I2C_DeInit(&hi2c1);
 8001910:	4628      	mov	r0, r5
 8001912:	f003 f9c1 	bl	8004c98 <HAL_I2C_DeInit>
  MX_TouchGFX_Init();
 8001916:	f7fe fe68 	bl	80005ea <MX_TouchGFX_Init>
  osKernelInitialize();
 800191a:	f004 fe73 	bl	8006604 <osKernelInitialize>
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800191e:	4a0d      	ldr	r2, [pc, #52]	; (8001954 <main+0x4a8>)
 8001920:	480d      	ldr	r0, [pc, #52]	; (8001958 <main+0x4ac>)
 8001922:	4621      	mov	r1, r4
 8001924:	f004 fe9a 	bl	800665c <osThreadNew>
 8001928:	4b0c      	ldr	r3, [pc, #48]	; (800195c <main+0x4b0>)
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800192a:	4a0d      	ldr	r2, [pc, #52]	; (8001960 <main+0x4b4>)
  defaultTaskHandle = osThreadNew(StartDefaultTask, NULL, &defaultTask_attributes);
 800192c:	6018      	str	r0, [r3, #0]
  TouchGFXTaskHandle = osThreadNew(TouchGFX_Task, NULL, &TouchGFXTask_attributes);
 800192e:	4621      	mov	r1, r4
 8001930:	480c      	ldr	r0, [pc, #48]	; (8001964 <main+0x4b8>)
 8001932:	f004 fe93 	bl	800665c <osThreadNew>
 8001936:	4b0c      	ldr	r3, [pc, #48]	; (8001968 <main+0x4bc>)
 8001938:	6018      	str	r0, [r3, #0]
  osKernelStart();
 800193a:	f004 fe75 	bl	8006628 <osKernelStart>
  while (1)
 800193e:	e7fe      	b.n	800193e <main+0x492>
 8001940:	2000a524 	.word	0x2000a524
 8001944:	2000a38c 	.word	0x2000a38c
 8001948:	40005400 	.word	0x40005400
 800194c:	a0001000 	.word	0xa0001000
 8001950:	00061a80 	.word	0x00061a80
 8001954:	0801ac94 	.word	0x0801ac94
 8001958:	08001401 	.word	0x08001401
 800195c:	2000a388 	.word	0x2000a388
 8001960:	0801ac70 	.word	0x0801ac70
 8001964:	080005ef 	.word	0x080005ef
 8001968:	2000a4ac 	.word	0x2000a4ac

0800196c <Error_Handler>:
{
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 800196c:	4770      	bx	lr
	...

08001970 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001970:	b082      	sub	sp, #8
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8001972:	4b0e      	ldr	r3, [pc, #56]	; (80019ac <HAL_MspInit+0x3c>)
 8001974:	2200      	movs	r2, #0
 8001976:	9200      	str	r2, [sp, #0]
 8001978:	6c59      	ldr	r1, [r3, #68]	; 0x44
 800197a:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 800197e:	6459      	str	r1, [r3, #68]	; 0x44
 8001980:	6c59      	ldr	r1, [r3, #68]	; 0x44
 8001982:	f401 4180 	and.w	r1, r1, #16384	; 0x4000
 8001986:	9100      	str	r1, [sp, #0]
 8001988:	9900      	ldr	r1, [sp, #0]
  __HAL_RCC_PWR_CLK_ENABLE();
 800198a:	9201      	str	r2, [sp, #4]
 800198c:	6c19      	ldr	r1, [r3, #64]	; 0x40
 800198e:	f041 5180 	orr.w	r1, r1, #268435456	; 0x10000000
 8001992:	6419      	str	r1, [r3, #64]	; 0x40
 8001994:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001996:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800199a:	9301      	str	r3, [sp, #4]
 800199c:	9b01      	ldr	r3, [sp, #4]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800199e:	210f      	movs	r1, #15
 80019a0:	f06f 0001 	mvn.w	r0, #1

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 80019a4:	b002      	add	sp, #8
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 80019a6:	f001 bf23 	b.w	80037f0 <HAL_NVIC_SetPriority>
 80019aa:	bf00      	nop
 80019ac:	40023800 	.word	0x40023800

080019b0 <HAL_CRC_MspInit>:
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
  if(hcrc->Instance==CRC)
 80019b0:	6802      	ldr	r2, [r0, #0]
 80019b2:	4b09      	ldr	r3, [pc, #36]	; (80019d8 <HAL_CRC_MspInit+0x28>)
 80019b4:	429a      	cmp	r2, r3
{
 80019b6:	b082      	sub	sp, #8
  if(hcrc->Instance==CRC)
 80019b8:	d10b      	bne.n	80019d2 <HAL_CRC_MspInit+0x22>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019ba:	2300      	movs	r3, #0
 80019bc:	9301      	str	r3, [sp, #4]
 80019be:	4b07      	ldr	r3, [pc, #28]	; (80019dc <HAL_CRC_MspInit+0x2c>)
 80019c0:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80019c2:	f442 5280 	orr.w	r2, r2, #4096	; 0x1000
 80019c6:	631a      	str	r2, [r3, #48]	; 0x30
 80019c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019ca:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 80019ce:	9301      	str	r3, [sp, #4]
 80019d0:	9b01      	ldr	r3, [sp, #4]
  /* USER CODE BEGIN CRC_MspInit 1 */

  /* USER CODE END CRC_MspInit 1 */
  }

}
 80019d2:	b002      	add	sp, #8
 80019d4:	4770      	bx	lr
 80019d6:	bf00      	nop
 80019d8:	40023000 	.word	0x40023000
 80019dc:	40023800 	.word	0x40023800

080019e0 <HAL_DMA2D_MspInit>:
* This function configures the hardware resources used in this example
* @param hdma2d: DMA2D handle pointer
* @retval None
*/
void HAL_DMA2D_MspInit(DMA2D_HandleTypeDef* hdma2d)
{
 80019e0:	b507      	push	{r0, r1, r2, lr}
  if(hdma2d->Instance==DMA2D)
 80019e2:	4b0f      	ldr	r3, [pc, #60]	; (8001a20 <HAL_DMA2D_MspInit+0x40>)
 80019e4:	6802      	ldr	r2, [r0, #0]
 80019e6:	429a      	cmp	r2, r3
 80019e8:	d116      	bne.n	8001a18 <HAL_DMA2D_MspInit+0x38>
  {
  /* USER CODE BEGIN DMA2D_MspInit 0 */

  /* USER CODE END DMA2D_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DMA2D_CLK_ENABLE();
 80019ea:	2200      	movs	r2, #0
 80019ec:	f5a3 43f0 	sub.w	r3, r3, #30720	; 0x7800
 80019f0:	9201      	str	r2, [sp, #4]
 80019f2:	6b19      	ldr	r1, [r3, #48]	; 0x30
 80019f4:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 80019f8:	6319      	str	r1, [r3, #48]	; 0x30
 80019fa:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80019fc:	f403 0300 	and.w	r3, r3, #8388608	; 0x800000
 8001a00:	9301      	str	r3, [sp, #4]
    /* DMA2D interrupt Init */
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a02:	2105      	movs	r1, #5
 8001a04:	205a      	movs	r0, #90	; 0x5a
    __HAL_RCC_DMA2D_CLK_ENABLE();
 8001a06:	9b01      	ldr	r3, [sp, #4]
    HAL_NVIC_SetPriority(DMA2D_IRQn, 5, 0);
 8001a08:	f001 fef2 	bl	80037f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a0c:	205a      	movs	r0, #90	; 0x5a
  /* USER CODE BEGIN DMA2D_MspInit 1 */

  /* USER CODE END DMA2D_MspInit 1 */
  }

}
 8001a0e:	b003      	add	sp, #12
 8001a10:	f85d eb04 	ldr.w	lr, [sp], #4
    HAL_NVIC_EnableIRQ(DMA2D_IRQn);
 8001a14:	f001 bf1e 	b.w	8003854 <HAL_NVIC_EnableIRQ>
}
 8001a18:	b003      	add	sp, #12
 8001a1a:	f85d fb04 	ldr.w	pc, [sp], #4
 8001a1e:	bf00      	nop
 8001a20:	4002b000 	.word	0x4002b000

08001a24 <HAL_DSI_MspInit>:
* This function configures the hardware resources used in this example
* @param hdsi: DSI handle pointer
* @retval None
*/
void HAL_DSI_MspInit(DSI_HandleTypeDef* hdsi)
{
 8001a24:	b510      	push	{r4, lr}
 8001a26:	4604      	mov	r4, r0
 8001a28:	b088      	sub	sp, #32
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001a2a:	2214      	movs	r2, #20
 8001a2c:	2100      	movs	r1, #0
 8001a2e:	a803      	add	r0, sp, #12
 8001a30:	f017 fe8c 	bl	801974c <memset>
  if(hdsi->Instance==DSI)
 8001a34:	6822      	ldr	r2, [r4, #0]
 8001a36:	4b18      	ldr	r3, [pc, #96]	; (8001a98 <HAL_DSI_MspInit+0x74>)
 8001a38:	429a      	cmp	r2, r3
 8001a3a:	d12a      	bne.n	8001a92 <HAL_DSI_MspInit+0x6e>
  {
  /* USER CODE BEGIN DSI_MspInit 0 */

  /* USER CODE END DSI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a3c:	f503 434c 	add.w	r3, r3, #52224	; 0xcc00
 8001a40:	2400      	movs	r4, #0
 8001a42:	9401      	str	r4, [sp, #4]
 8001a44:	6c5a      	ldr	r2, [r3, #68]	; 0x44
    GPIO_InitStruct.Pin = GPIO_PIN_2;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a46:	4815      	ldr	r0, [pc, #84]	; (8001a9c <HAL_DSI_MspInit+0x78>)
    __HAL_RCC_DSI_CLK_ENABLE();
 8001a48:	f042 6200 	orr.w	r2, r2, #134217728	; 0x8000000
 8001a4c:	645a      	str	r2, [r3, #68]	; 0x44
 8001a4e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001a50:	f002 6200 	and.w	r2, r2, #134217728	; 0x8000000
 8001a54:	9201      	str	r2, [sp, #4]
 8001a56:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a58:	9402      	str	r4, [sp, #8]
 8001a5a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001a5c:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8001a60:	631a      	str	r2, [r3, #48]	; 0x30
 8001a62:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8001a64:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8001a68:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a6a:	2204      	movs	r2, #4
    __HAL_RCC_GPIOJ_CLK_ENABLE();
 8001a6c:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001a6e:	2302      	movs	r3, #2
 8001a70:	e9cd 2303 	strd	r2, r3, [sp, #12]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a74:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF13_DSI;
 8001a76:	230d      	movs	r3, #13
 8001a78:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001a7a:	e9cd 4405 	strd	r4, r4, [sp, #20]
    HAL_GPIO_Init(GPIOJ, &GPIO_InitStruct);
 8001a7e:	f002 fceb 	bl	8004458 <HAL_GPIO_Init>

    /* DSI interrupt Init */
    HAL_NVIC_SetPriority(DSI_IRQn, 5, 0);
 8001a82:	205c      	movs	r0, #92	; 0x5c
 8001a84:	4622      	mov	r2, r4
 8001a86:	2105      	movs	r1, #5
 8001a88:	f001 feb2 	bl	80037f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(DSI_IRQn);
 8001a8c:	205c      	movs	r0, #92	; 0x5c
 8001a8e:	f001 fee1 	bl	8003854 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN DSI_MspInit 1 */

  /* USER CODE END DSI_MspInit 1 */
  }

}
 8001a92:	b008      	add	sp, #32
 8001a94:	bd10      	pop	{r4, pc}
 8001a96:	bf00      	nop
 8001a98:	40016c00 	.word	0x40016c00
 8001a9c:	40022400 	.word	0x40022400

08001aa0 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8001aa0:	b530      	push	{r4, r5, lr}
 8001aa2:	4604      	mov	r4, r0
 8001aa4:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001aa6:	2214      	movs	r2, #20
 8001aa8:	2100      	movs	r1, #0
 8001aaa:	a803      	add	r0, sp, #12
 8001aac:	f017 fe4e 	bl	801974c <memset>
  if(hi2c->Instance==I2C1)
 8001ab0:	6822      	ldr	r2, [r4, #0]
 8001ab2:	4b1a      	ldr	r3, [pc, #104]	; (8001b1c <HAL_I2C_MspInit+0x7c>)
 8001ab4:	429a      	cmp	r2, r3
 8001ab6:	d12f      	bne.n	8001b18 <HAL_I2C_MspInit+0x78>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */
//
  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001ab8:	4c19      	ldr	r4, [pc, #100]	; (8001b20 <HAL_I2C_MspInit+0x80>)
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
    GPIO_InitStruct.Pull = GPIO_PULLUP;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aba:	481a      	ldr	r0, [pc, #104]	; (8001b24 <HAL_I2C_MspInit+0x84>)
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001abc:	2500      	movs	r5, #0
 8001abe:	9501      	str	r5, [sp, #4]
 8001ac0:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001ac2:	f043 0302 	orr.w	r3, r3, #2
 8001ac6:	6323      	str	r3, [r4, #48]	; 0x30
 8001ac8:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8001aca:	f003 0302 	and.w	r3, r3, #2
 8001ace:	9301      	str	r3, [sp, #4]
 8001ad0:	9b01      	ldr	r3, [sp, #4]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001ad2:	f44f 7240 	mov.w	r2, #768	; 0x300
 8001ad6:	2312      	movs	r3, #18
 8001ad8:	e9cd 2303 	strd	r2, r3, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001adc:	2101      	movs	r1, #1
 8001ade:	2303      	movs	r3, #3
 8001ae0:	e9cd 1305 	strd	r1, r3, [sp, #20]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001ae4:	2304      	movs	r3, #4
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001ae6:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8001ae8:	9307      	str	r3, [sp, #28]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001aea:	f002 fcb5 	bl	8004458 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8001aee:	9502      	str	r5, [sp, #8]
 8001af0:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001af2:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001af6:	6423      	str	r3, [r4, #64]	; 0x40
 8001af8:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8001afa:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8001afe:	9302      	str	r3, [sp, #8]
 8001b00:	9b02      	ldr	r3, [sp, #8]
  /* USER CODE BEGIN I2C1_MspInit 1 */
    /* Force the I2C peripheral clock reset */
    __HAL_RCC_I2C1_FORCE_RESET();
 8001b02:	6a23      	ldr	r3, [r4, #32]
 8001b04:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8001b08:	6223      	str	r3, [r4, #32]

    /* Release the I2C peripheral clock reset */
    __HAL_RCC_I2C1_RELEASE_RESET();
 8001b0a:	6a23      	ldr	r3, [r4, #32]
 8001b0c:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b10:	6223      	str	r3, [r4, #32]

    /* Wait for 100 ms */
    HAL_Delay(100);
 8001b12:	2064      	movs	r0, #100	; 0x64
 8001b14:	f001 fe46 	bl	80037a4 <HAL_Delay>
  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8001b18:	b009      	add	sp, #36	; 0x24
 8001b1a:	bd30      	pop	{r4, r5, pc}
 8001b1c:	40005400 	.word	0x40005400
 8001b20:	40023800 	.word	0x40023800
 8001b24:	40020400 	.word	0x40020400

08001b28 <HAL_I2C_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspDeInit(I2C_HandleTypeDef* hi2c)
{
 8001b28:	b508      	push	{r3, lr}
  if(hi2c->Instance==I2C1)
 8001b2a:	6802      	ldr	r2, [r0, #0]
 8001b2c:	4b0a      	ldr	r3, [pc, #40]	; (8001b58 <HAL_I2C_MspDeInit+0x30>)
 8001b2e:	429a      	cmp	r2, r3
 8001b30:	d110      	bne.n	8001b54 <HAL_I2C_MspDeInit+0x2c>
  {
  /* USER CODE BEGIN I2C1_MspDeInit 0 */

  /* USER CODE END I2C1_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b32:	4a0a      	ldr	r2, [pc, #40]	; (8001b5c <HAL_I2C_MspDeInit+0x34>)

    /**I2C1 GPIO Configuration
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b34:	480a      	ldr	r0, [pc, #40]	; (8001b60 <HAL_I2C_MspDeInit+0x38>)
    __HAL_RCC_I2C1_CLK_DISABLE();
 8001b36:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8001b38:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8001b3c:	6413      	str	r3, [r2, #64]	; 0x40
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_8);
 8001b3e:	f44f 7180 	mov.w	r1, #256	; 0x100
 8001b42:	f002 fd6f 	bl	8004624 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN I2C1_MspDeInit 1 */

  /* USER CODE END I2C1_MspDeInit 1 */
  }

}
 8001b46:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_9);
 8001b4a:	4805      	ldr	r0, [pc, #20]	; (8001b60 <HAL_I2C_MspDeInit+0x38>)
 8001b4c:	f44f 7100 	mov.w	r1, #512	; 0x200
 8001b50:	f002 bd68 	b.w	8004624 <HAL_GPIO_DeInit>
}
 8001b54:	bd08      	pop	{r3, pc}
 8001b56:	bf00      	nop
 8001b58:	40005400 	.word	0x40005400
 8001b5c:	40023800 	.word	0x40023800
 8001b60:	40020400 	.word	0x40020400

08001b64 <HAL_LTDC_MspInit>:
* This function configures the hardware resources used in this example
* @param hltdc: LTDC handle pointer
* @retval None
*/
void HAL_LTDC_MspInit(LTDC_HandleTypeDef* hltdc)
{
 8001b64:	b510      	push	{r4, lr}
 8001b66:	4604      	mov	r4, r0
 8001b68:	b090      	sub	sp, #64	; 0x40
  RCC_PeriphCLKInitTypeDef PeriphClkInitStruct = {0};
 8001b6a:	223c      	movs	r2, #60	; 0x3c
 8001b6c:	2100      	movs	r1, #0
 8001b6e:	a801      	add	r0, sp, #4
 8001b70:	f017 fdec 	bl	801974c <memset>
  if(hltdc->Instance==LTDC)
 8001b74:	6822      	ldr	r2, [r4, #0]
 8001b76:	4b13      	ldr	r3, [pc, #76]	; (8001bc4 <HAL_LTDC_MspInit+0x60>)
 8001b78:	429a      	cmp	r2, r3
 8001b7a:	d121      	bne.n	8001bc0 <HAL_LTDC_MspInit+0x5c>
  /* USER CODE BEGIN LTDC_MspInit 0 */

  /* USER CODE END LTDC_MspInit 0 */
  /** Initializes the peripherals clock
  */
    PeriphClkInitStruct.PeriphClockSelection = RCC_PERIPHCLK_LTDC;
 8001b7c:	2308      	movs	r3, #8
 8001b7e:	9301      	str	r3, [sp, #4]
    PeriphClkInitStruct.PLLSAI.PLLSAIN = 360;
 8001b80:	f44f 73b4 	mov.w	r3, #360	; 0x168
 8001b84:	9305      	str	r3, [sp, #20]
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001b86:	2400      	movs	r4, #0
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001b88:	2306      	movs	r3, #6
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001b8a:	a801      	add	r0, sp, #4
    PeriphClkInitStruct.PLLSAI.PLLSAIR = 6;
 8001b8c:	9308      	str	r3, [sp, #32]
    PeriphClkInitStruct.PLLSAIDivR = RCC_PLLSAIDIVR_2;
 8001b8e:	940b      	str	r4, [sp, #44]	; 0x2c
    if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInitStruct) != HAL_OK)
 8001b90:	f004 f840 	bl	8005c14 <HAL_RCCEx_PeriphCLKConfig>
 8001b94:	b108      	cbz	r0, 8001b9a <HAL_LTDC_MspInit+0x36>
    {
      Error_Handler();
 8001b96:	f7ff fee9 	bl	800196c <Error_Handler>
    }

    /* Peripheral clock enable */
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001b9a:	4b0b      	ldr	r3, [pc, #44]	; (8001bc8 <HAL_LTDC_MspInit+0x64>)
 8001b9c:	9400      	str	r4, [sp, #0]
 8001b9e:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8001ba0:	f042 6280 	orr.w	r2, r2, #67108864	; 0x4000000
 8001ba4:	645a      	str	r2, [r3, #68]	; 0x44
 8001ba6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 8001ba8:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 8001bac:	9300      	str	r3, [sp, #0]
    /* LTDC interrupt Init */
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bae:	2058      	movs	r0, #88	; 0x58
 8001bb0:	2200      	movs	r2, #0
 8001bb2:	2105      	movs	r1, #5
    __HAL_RCC_LTDC_CLK_ENABLE();
 8001bb4:	9b00      	ldr	r3, [sp, #0]
    HAL_NVIC_SetPriority(LTDC_IRQn, 5, 0);
 8001bb6:	f001 fe1b 	bl	80037f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(LTDC_IRQn);
 8001bba:	2058      	movs	r0, #88	; 0x58
 8001bbc:	f001 fe4a 	bl	8003854 <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN LTDC_MspInit 1 */

  /* USER CODE END LTDC_MspInit 1 */
  }

}
 8001bc0:	b010      	add	sp, #64	; 0x40
 8001bc2:	bd10      	pop	{r4, pc}
 8001bc4:	40016800 	.word	0x40016800
 8001bc8:	40023800 	.word	0x40023800

08001bcc <HAL_QSPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspInit(QSPI_HandleTypeDef* hqspi)
{
 8001bcc:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001bce:	4604      	mov	r4, r0
 8001bd0:	b089      	sub	sp, #36	; 0x24
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001bd2:	2214      	movs	r2, #20
 8001bd4:	2100      	movs	r1, #0
 8001bd6:	a803      	add	r0, sp, #12
 8001bd8:	f017 fdb8 	bl	801974c <memset>
  if(hqspi->Instance==QUADSPI)
 8001bdc:	6822      	ldr	r2, [r4, #0]
 8001bde:	4b24      	ldr	r3, [pc, #144]	; (8001c70 <HAL_QSPI_MspInit+0xa4>)
 8001be0:	429a      	cmp	r2, r3
 8001be2:	d143      	bne.n	8001c6c <HAL_QSPI_MspInit+0xa0>
  {
  /* USER CODE BEGIN QUADSPI_MspInit 0 */

  /* USER CODE END QUADSPI_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001be4:	4b23      	ldr	r3, [pc, #140]	; (8001c74 <HAL_QSPI_MspInit+0xa8>)
    GPIO_InitStruct.Pin = GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001be6:	4824      	ldr	r0, [pc, #144]	; (8001c78 <HAL_QSPI_MspInit+0xac>)
    __HAL_RCC_QSPI_CLK_ENABLE();
 8001be8:	2400      	movs	r4, #0
 8001bea:	9400      	str	r4, [sp, #0]
 8001bec:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001bee:	f042 0202 	orr.w	r2, r2, #2
 8001bf2:	639a      	str	r2, [r3, #56]	; 0x38
 8001bf4:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8001bf6:	f002 0202 	and.w	r2, r2, #2
 8001bfa:	9200      	str	r2, [sp, #0]
 8001bfc:	9a00      	ldr	r2, [sp, #0]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001bfe:	9401      	str	r4, [sp, #4]
 8001c00:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c02:	f042 0202 	orr.w	r2, r2, #2
 8001c06:	631a      	str	r2, [r3, #48]	; 0x30
 8001c08:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c0a:	f002 0202 	and.w	r2, r2, #2
 8001c0e:	9201      	str	r2, [sp, #4]
 8001c10:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c12:	9402      	str	r4, [sp, #8]
 8001c14:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8001c16:	f042 0220 	orr.w	r2, r2, #32
 8001c1a:	631a      	str	r2, [r3, #48]	; 0x30
 8001c1c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001c1e:	9405      	str	r4, [sp, #20]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c20:	f003 0320 	and.w	r3, r3, #32
 8001c24:	9302      	str	r3, [sp, #8]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c26:	2602      	movs	r6, #2
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c28:	2503      	movs	r5, #3
    __HAL_RCC_GPIOF_CLK_ENABLE();
 8001c2a:	9b02      	ldr	r3, [sp, #8]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c2c:	270a      	movs	r7, #10
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c2e:	2340      	movs	r3, #64	; 0x40
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c30:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c32:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c36:	e9cd 5706 	strd	r5, r7, [sp, #24]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001c3a:	f002 fc0d 	bl	8004458 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10;
 8001c3e:	f44f 6398 	mov.w	r3, #1216	; 0x4c0
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c42:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c46:	480d      	ldr	r0, [pc, #52]	; (8001c7c <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c48:	2309      	movs	r3, #9
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c4a:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Alternate = GPIO_AF9_QSPI;
 8001c4c:	9307      	str	r3, [sp, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c4e:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c52:	f002 fc01 	bl	8004458 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_8;
 8001c56:	f44f 7340 	mov.w	r3, #768	; 0x300
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c5a:	4808      	ldr	r0, [pc, #32]	; (8001c7c <HAL_QSPI_MspInit+0xb0>)
    GPIO_InitStruct.Alternate = GPIO_AF10_QSPI;
 8001c5c:	9707      	str	r7, [sp, #28]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c5e:	a903      	add	r1, sp, #12
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001c60:	e9cd 3603 	strd	r3, r6, [sp, #12]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001c64:	e9cd 4505 	strd	r4, r5, [sp, #20]
    HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001c68:	f002 fbf6 	bl	8004458 <HAL_GPIO_Init>
  /* USER CODE BEGIN QUADSPI_MspInit 1 */

  /* USER CODE END QUADSPI_MspInit 1 */
  }

}
 8001c6c:	b009      	add	sp, #36	; 0x24
 8001c6e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001c70:	a0001000 	.word	0xa0001000
 8001c74:	40023800 	.word	0x40023800
 8001c78:	40020400 	.word	0x40020400
 8001c7c:	40021400 	.word	0x40021400

08001c80 <HAL_QSPI_MspDeInit>:
* This function freeze the hardware resources used in this example
* @param hqspi: QSPI handle pointer
* @retval None
*/
void HAL_QSPI_MspDeInit(QSPI_HandleTypeDef* hqspi)
{
 8001c80:	b508      	push	{r3, lr}
  if(hqspi->Instance==QUADSPI)
 8001c82:	6802      	ldr	r2, [r0, #0]
 8001c84:	4b09      	ldr	r3, [pc, #36]	; (8001cac <HAL_QSPI_MspDeInit+0x2c>)
 8001c86:	429a      	cmp	r2, r3
 8001c88:	d10f      	bne.n	8001caa <HAL_QSPI_MspDeInit+0x2a>
  {
  /* USER CODE BEGIN QUADSPI_MspDeInit 0 */

  /* USER CODE END QUADSPI_MspDeInit 0 */
    /* Peripheral clock disable */
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001c8a:	4a09      	ldr	r2, [pc, #36]	; (8001cb0 <HAL_QSPI_MspDeInit+0x30>)
    PF6     ------> QUADSPI_BK1_IO3
    PF10     ------> QUADSPI_CLK
    PF9     ------> QUADSPI_BK1_IO1
    PF8     ------> QUADSPI_BK1_IO0
    */
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001c8c:	4809      	ldr	r0, [pc, #36]	; (8001cb4 <HAL_QSPI_MspDeInit+0x34>)
    __HAL_RCC_QSPI_CLK_DISABLE();
 8001c8e:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001c90:	f023 0302 	bic.w	r3, r3, #2
 8001c94:	6393      	str	r3, [r2, #56]	; 0x38
    HAL_GPIO_DeInit(GPIOB, GPIO_PIN_6);
 8001c96:	2140      	movs	r1, #64	; 0x40
 8001c98:	f002 fcc4 	bl	8004624 <HAL_GPIO_DeInit>
  /* USER CODE BEGIN QUADSPI_MspDeInit 1 */

  /* USER CODE END QUADSPI_MspDeInit 1 */
  }

}
 8001c9c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    HAL_GPIO_DeInit(GPIOF, GPIO_PIN_7|GPIO_PIN_6|GPIO_PIN_10|GPIO_PIN_9
 8001ca0:	4805      	ldr	r0, [pc, #20]	; (8001cb8 <HAL_QSPI_MspDeInit+0x38>)
 8001ca2:	f44f 61f8 	mov.w	r1, #1984	; 0x7c0
 8001ca6:	f002 bcbd 	b.w	8004624 <HAL_GPIO_DeInit>
}
 8001caa:	bd08      	pop	{r3, pc}
 8001cac:	a0001000 	.word	0xa0001000
 8001cb0:	40023800 	.word	0x40023800
 8001cb4:	40020400 	.word	0x40020400
 8001cb8:	40021400 	.word	0x40021400

08001cbc <HAL_SDRAM_MspInit>:
  /* USER CODE BEGIN FMC_MspInit 1 */

  /* USER CODE END FMC_MspInit 1 */
}

void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cbc:	b5f0      	push	{r4, r5, r6, r7, lr}
  if (FMC_Initialized) {
 8001cbe:	4b31      	ldr	r3, [pc, #196]	; (8001d84 <HAL_SDRAM_MspInit+0xc8>)
 8001cc0:	681c      	ldr	r4, [r3, #0]
void HAL_SDRAM_MspInit(SDRAM_HandleTypeDef* hsdram){
 8001cc2:	b087      	sub	sp, #28
  if (FMC_Initialized) {
 8001cc4:	2c00      	cmp	r4, #0
 8001cc6:	d15b      	bne.n	8001d80 <HAL_SDRAM_MspInit+0xc4>
  FMC_Initialized = 1;
 8001cc8:	2201      	movs	r2, #1
 8001cca:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001ccc:	4b2e      	ldr	r3, [pc, #184]	; (8001d88 <HAL_SDRAM_MspInit+0xcc>)
 8001cce:	9400      	str	r4, [sp, #0]
 8001cd0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cd2:	482e      	ldr	r0, [pc, #184]	; (8001d8c <HAL_SDRAM_MspInit+0xd0>)
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cd4:	f042 0201 	orr.w	r2, r2, #1
 8001cd8:	639a      	str	r2, [r3, #56]	; 0x38
 8001cda:	6b9b      	ldr	r3, [r3, #56]	; 0x38
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001cdc:	9403      	str	r4, [sp, #12]
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cde:	f003 0301 	and.w	r3, r3, #1
 8001ce2:	9300      	str	r3, [sp, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001ce4:	2702      	movs	r7, #2
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001ce6:	2603      	movs	r6, #3
 8001ce8:	250c      	movs	r5, #12
  __HAL_RCC_FMC_CLK_ENABLE();
 8001cea:	9b00      	ldr	r3, [sp, #0]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cec:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001cee:	f64f 7383 	movw	r3, #65411	; 0xff83
 8001cf2:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001cf6:	e9cd 6504 	strd	r6, r5, [sp, #16]
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 8001cfa:	f002 fbad 	bl	8004458 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001cfe:	f248 1333 	movw	r3, #33075	; 0x8133
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d02:	4823      	ldr	r0, [pc, #140]	; (8001d90 <HAL_SDRAM_MspInit+0xd4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d04:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d06:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d08:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d0c:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8001d10:	f002 fba2 	bl	8004458 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001d14:	f24c 7303 	movw	r3, #50947	; 0xc703
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d18:	481e      	ldr	r0, [pc, #120]	; (8001d94 <HAL_SDRAM_MspInit+0xd8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d1a:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d1c:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d1e:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d22:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8001d26:	f002 fb97 	bl	8004458 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001d2a:	f240 63ff 	movw	r3, #1791	; 0x6ff
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d2e:	481a      	ldr	r0, [pc, #104]	; (8001d98 <HAL_SDRAM_MspInit+0xdc>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d30:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d32:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d34:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d38:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOI, &GPIO_InitStruct);
 8001d3c:	f002 fb8c 	bl	8004458 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001d40:	f64f 033f 	movw	r3, #63551	; 0xf83f
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d44:	4815      	ldr	r0, [pc, #84]	; (8001d9c <HAL_SDRAM_MspInit+0xe0>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d46:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d48:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d4a:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d4e:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8001d52:	f002 fb81 	bl	8004458 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001d56:	f44f 437f 	mov.w	r3, #65280	; 0xff00
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d5a:	4811      	ldr	r0, [pc, #68]	; (8001da0 <HAL_SDRAM_MspInit+0xe4>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d5c:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d5e:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d60:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d64:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOH, &GPIO_InitStruct);
 8001d68:	f002 fb76 	bl	8004458 <HAL_GPIO_Init>
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2;
 8001d6c:	230d      	movs	r3, #13
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d6e:	480d      	ldr	r0, [pc, #52]	; (8001da4 <HAL_SDRAM_MspInit+0xe8>)
  GPIO_InitStruct.Alternate = GPIO_AF12_FMC;
 8001d70:	9505      	str	r5, [sp, #20]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d72:	a901      	add	r1, sp, #4
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d74:	e9cd 3701 	strd	r3, r7, [sp, #4]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001d78:	e9cd 4603 	strd	r4, r6, [sp, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001d7c:	f002 fb6c 	bl	8004458 <HAL_GPIO_Init>
  /* USER CODE END SDRAM_MspInit 0 */
  HAL_FMC_MspInit();
  /* USER CODE BEGIN SDRAM_MspInit 1 */

  /* USER CODE END SDRAM_MspInit 1 */
}
 8001d80:	b007      	add	sp, #28
 8001d82:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001d84:	200010cc 	.word	0x200010cc
 8001d88:	40023800 	.word	0x40023800
 8001d8c:	40021000 	.word	0x40021000
 8001d90:	40021800 	.word	0x40021800
 8001d94:	40020c00 	.word	0x40020c00
 8001d98:	40022000 	.word	0x40022000
 8001d9c:	40021400 	.word	0x40021400
 8001da0:	40021c00 	.word	0x40021c00
 8001da4:	40020800 	.word	0x40020800

08001da8 <HAL_SDRAM_MspDeInit>:
  /* USER CODE BEGIN FMC_MspDeInit 1 */

  /* USER CODE END FMC_MspDeInit 1 */
}

void HAL_SDRAM_MspDeInit(SDRAM_HandleTypeDef* hsdram){
 8001da8:	b508      	push	{r3, lr}
  if (FMC_DeInitialized) {
 8001daa:	4b17      	ldr	r3, [pc, #92]	; (8001e08 <HAL_SDRAM_MspDeInit+0x60>)
 8001dac:	681a      	ldr	r2, [r3, #0]
 8001dae:	bb52      	cbnz	r2, 8001e06 <HAL_SDRAM_MspDeInit+0x5e>
  FMC_DeInitialized = 1;
 8001db0:	2201      	movs	r2, #1
 8001db2:	601a      	str	r2, [r3, #0]
  __HAL_RCC_FMC_CLK_DISABLE();
 8001db4:	4a15      	ldr	r2, [pc, #84]	; (8001e0c <HAL_SDRAM_MspDeInit+0x64>)
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001db6:	4816      	ldr	r0, [pc, #88]	; (8001e10 <HAL_SDRAM_MspDeInit+0x68>)
  __HAL_RCC_FMC_CLK_DISABLE();
 8001db8:	6b93      	ldr	r3, [r2, #56]	; 0x38
 8001dba:	f023 0301 	bic.w	r3, r3, #1
 8001dbe:	6393      	str	r3, [r2, #56]	; 0x38
  HAL_GPIO_DeInit(GPIOE, GPIO_PIN_1|GPIO_PIN_0|GPIO_PIN_8|GPIO_PIN_9
 8001dc0:	f64f 7183 	movw	r1, #65411	; 0xff83
 8001dc4:	f002 fc2e 	bl	8004624 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOG, GPIO_PIN_15|GPIO_PIN_8|GPIO_PIN_1|GPIO_PIN_0
 8001dc8:	4812      	ldr	r0, [pc, #72]	; (8001e14 <HAL_SDRAM_MspDeInit+0x6c>)
 8001dca:	f248 1133 	movw	r1, #33075	; 0x8133
 8001dce:	f002 fc29 	bl	8004624 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOD, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_15|GPIO_PIN_10
 8001dd2:	4811      	ldr	r0, [pc, #68]	; (8001e18 <HAL_SDRAM_MspDeInit+0x70>)
 8001dd4:	f24c 7103 	movw	r1, #50947	; 0xc703
 8001dd8:	f002 fc24 	bl	8004624 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOI, GPIO_PIN_4|GPIO_PIN_3|GPIO_PIN_2|GPIO_PIN_5
 8001ddc:	480f      	ldr	r0, [pc, #60]	; (8001e1c <HAL_SDRAM_MspDeInit+0x74>)
 8001dde:	f240 61ff 	movw	r1, #1791	; 0x6ff
 8001de2:	f002 fc1f 	bl	8004624 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOF, GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
 8001de6:	480e      	ldr	r0, [pc, #56]	; (8001e20 <HAL_SDRAM_MspDeInit+0x78>)
 8001de8:	f64f 013f 	movw	r1, #63551	; 0xf83f
 8001dec:	f002 fc1a 	bl	8004624 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(GPIOH, GPIO_PIN_15|GPIO_PIN_13|GPIO_PIN_14|GPIO_PIN_12
 8001df0:	480c      	ldr	r0, [pc, #48]	; (8001e24 <HAL_SDRAM_MspDeInit+0x7c>)
 8001df2:	f44f 417f 	mov.w	r1, #65280	; 0xff00
 8001df6:	f002 fc15 	bl	8004624 <HAL_GPIO_DeInit>
  /* USER CODE END SDRAM_MspDeInit 0 */
  HAL_FMC_MspDeInit();
  /* USER CODE BEGIN SDRAM_MspDeInit 1 */

  /* USER CODE END SDRAM_MspDeInit 1 */
}
 8001dfa:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  HAL_GPIO_DeInit(GPIOC, GPIO_PIN_3|GPIO_PIN_0|GPIO_PIN_2);
 8001dfe:	480a      	ldr	r0, [pc, #40]	; (8001e28 <HAL_SDRAM_MspDeInit+0x80>)
 8001e00:	210d      	movs	r1, #13
 8001e02:	f002 bc0f 	b.w	8004624 <HAL_GPIO_DeInit>
}
 8001e06:	bd08      	pop	{r3, pc}
 8001e08:	200010c8 	.word	0x200010c8
 8001e0c:	40023800 	.word	0x40023800
 8001e10:	40021000 	.word	0x40021000
 8001e14:	40021800 	.word	0x40021800
 8001e18:	40020c00 	.word	0x40020c00
 8001e1c:	40022000 	.word	0x40022000
 8001e20:	40021400 	.word	0x40021400
 8001e24:	40021c00 	.word	0x40021c00
 8001e28:	40020800 	.word	0x40020800

08001e2c <HAL_InitTick>:
  *         reset by HAL_Init() or at any time when clock is configured, by HAL_RCC_ClockConfig().
  * @param  TickPriority: Tick interrupt priority.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8001e2c:	b530      	push	{r4, r5, lr}
 8001e2e:	4601      	mov	r1, r0
 8001e30:	b089      	sub	sp, #36	; 0x24
  RCC_ClkInitTypeDef    clkconfig;
  uint32_t              uwTimclock = 0;
  uint32_t              uwPrescalerValue = 0;
  uint32_t              pFLatency;
  /*Configure the TIM6 IRQ priority */
  HAL_NVIC_SetPriority(TIM6_DAC_IRQn, TickPriority ,0);
 8001e32:	2200      	movs	r2, #0
 8001e34:	2036      	movs	r0, #54	; 0x36
 8001e36:	f001 fcdb 	bl	80037f0 <HAL_NVIC_SetPriority>

  /* Enable the TIM6 global Interrupt */
  HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8001e3a:	2036      	movs	r0, #54	; 0x36
 8001e3c:	f001 fd0a 	bl	8003854 <HAL_NVIC_EnableIRQ>

  /* Enable TIM6 clock */
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e40:	2500      	movs	r5, #0
 8001e42:	4b15      	ldr	r3, [pc, #84]	; (8001e98 <HAL_InitTick+0x6c>)
 8001e44:	9502      	str	r5, [sp, #8]
 8001e46:	6c1a      	ldr	r2, [r3, #64]	; 0x40
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
  /* Compute the prescaler value to have TIM6 counter clock equal to 1MHz */
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);

  /* Initialize TIM6 */
  htim6.Instance = TIM6;
 8001e48:	4c14      	ldr	r4, [pc, #80]	; (8001e9c <HAL_InitTick+0x70>)
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e4a:	f042 0210 	orr.w	r2, r2, #16
 8001e4e:	641a      	str	r2, [r3, #64]	; 0x40
 8001e50:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8001e52:	f003 0310 	and.w	r3, r3, #16
 8001e56:	9302      	str	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e58:	a901      	add	r1, sp, #4
 8001e5a:	a803      	add	r0, sp, #12
  __HAL_RCC_TIM6_CLK_ENABLE();
 8001e5c:	9b02      	ldr	r3, [sp, #8]
  HAL_RCC_GetClockConfig(&clkconfig, &pFLatency);
 8001e5e:	f003 febb 	bl	8005bd8 <HAL_RCC_GetClockConfig>
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e62:	f003 fea9 	bl	8005bb8 <HAL_RCC_GetPCLK1Freq>
  htim6.Instance = TIM6;
 8001e66:	4b0e      	ldr	r3, [pc, #56]	; (8001ea0 <HAL_InitTick+0x74>)
 8001e68:	6023      	str	r3, [r4, #0]
  + Period = [(TIM6CLK/1000) - 1]. to have a (1/1000) s time base.
  + Prescaler = (uwTimclock/1000000 - 1) to have a 1MHz counter clock.
  + ClockDivision = 0
  + Counter direction = Up
  */
  htim6.Init.Period = (1000000U / 1000U) - 1U;
 8001e6a:	f240 33e7 	movw	r3, #999	; 0x3e7
 8001e6e:	60e3      	str	r3, [r4, #12]
  uwTimclock = 2*HAL_RCC_GetPCLK1Freq();
 8001e70:	0040      	lsls	r0, r0, #1
  uwPrescalerValue = (uint32_t) ((uwTimclock / 1000000U) - 1U);
 8001e72:	4b0c      	ldr	r3, [pc, #48]	; (8001ea4 <HAL_InitTick+0x78>)
 8001e74:	fbb0 f0f3 	udiv	r0, r0, r3
 8001e78:	3801      	subs	r0, #1
  htim6.Init.Prescaler = uwPrescalerValue;
 8001e7a:	6060      	str	r0, [r4, #4]
  htim6.Init.ClockDivision = 0;
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;

  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e7c:	4620      	mov	r0, r4
  htim6.Init.ClockDivision = 0;
 8001e7e:	6125      	str	r5, [r4, #16]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001e80:	60a5      	str	r5, [r4, #8]
  if(HAL_TIM_Base_Init(&htim6) == HAL_OK)
 8001e82:	f004 fad7 	bl	8006434 <HAL_TIM_Base_Init>
 8001e86:	b920      	cbnz	r0, 8001e92 <HAL_InitTick+0x66>
  {
    /* Start the TIM time Base generation in interrupt mode */
    return HAL_TIM_Base_Start_IT(&htim6);
 8001e88:	4620      	mov	r0, r4
 8001e8a:	f004 fa33 	bl	80062f4 <HAL_TIM_Base_Start_IT>
  }

  /* Return function status */
  return HAL_ERROR;
}
 8001e8e:	b009      	add	sp, #36	; 0x24
 8001e90:	bd30      	pop	{r4, r5, pc}
  return HAL_ERROR;
 8001e92:	2001      	movs	r0, #1
 8001e94:	e7fb      	b.n	8001e8e <HAL_InitTick+0x62>
 8001e96:	bf00      	nop
 8001e98:	40023800 	.word	0x40023800
 8001e9c:	2000a570 	.word	0x2000a570
 8001ea0:	40001000 	.word	0x40001000
 8001ea4:	000f4240 	.word	0x000f4240

08001ea8 <NMI_Handler>:

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8001ea8:	4770      	bx	lr

08001eaa <HardFault_Handler>:
void HardFault_Handler(void)
{
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001eaa:	e7fe      	b.n	8001eaa <HardFault_Handler>

08001eac <MemManage_Handler>:
void MemManage_Handler(void)
{
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001eac:	e7fe      	b.n	8001eac <MemManage_Handler>

08001eae <BusFault_Handler>:
void BusFault_Handler(void)
{
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001eae:	e7fe      	b.n	8001eae <BusFault_Handler>

08001eb0 <UsageFault_Handler>:
void UsageFault_Handler(void)
{
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001eb0:	e7fe      	b.n	8001eb0 <UsageFault_Handler>

08001eb2 <DebugMon_Handler>:
 8001eb2:	4770      	bx	lr

08001eb4 <TIM6_DAC_IRQHandler>:
 8001eb4:	4770      	bx	lr
	...

08001eb8 <LTDC_IRQHandler>:
void LTDC_IRQHandler(void)
{
  /* USER CODE BEGIN LTDC_IRQn 0 */

  /* USER CODE END LTDC_IRQn 0 */
  HAL_LTDC_IRQHandler(&hltdc);
 8001eb8:	4801      	ldr	r0, [pc, #4]	; (8001ec0 <LTDC_IRQHandler+0x8>)
 8001eba:	f003 b998 	b.w	80051ee <HAL_LTDC_IRQHandler>
 8001ebe:	bf00      	nop
 8001ec0:	2000a404 	.word	0x2000a404

08001ec4 <DMA2D_IRQHandler>:
void DMA2D_IRQHandler(void)
{
  /* USER CODE BEGIN DMA2D_IRQn 0 */

  /* USER CODE END DMA2D_IRQn 0 */
  HAL_DMA2D_IRQHandler(&hdma2d);
 8001ec4:	4801      	ldr	r0, [pc, #4]	; (8001ecc <DMA2D_IRQHandler+0x8>)
 8001ec6:	f001 be29 	b.w	8003b1c <HAL_DMA2D_IRQHandler>
 8001eca:	bf00      	nop
 8001ecc:	2000a4b0 	.word	0x2000a4b0

08001ed0 <DSI_IRQHandler>:
void DSI_IRQHandler(void)
{
  /* USER CODE BEGIN DSI_IRQn 0 */

  /* USER CODE END DSI_IRQn 0 */
  HAL_DSI_IRQHandler(&hdsi);
 8001ed0:	4801      	ldr	r0, [pc, #4]	; (8001ed8 <DSI_IRQHandler+0x8>)
 8001ed2:	f002 b828 	b.w	8003f26 <HAL_DSI_IRQHandler>
 8001ed6:	bf00      	nop
 8001ed8:	2000a3e8 	.word	0x2000a3e8

08001edc <_getpid>:
}

int _getpid(void)
{
	return 1;
}
 8001edc:	2001      	movs	r0, #1
 8001ede:	4770      	bx	lr

08001ee0 <_kill>:

int _kill(int pid, int sig)
{
 8001ee0:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001ee2:	f017 fadf 	bl	80194a4 <__errno>
 8001ee6:	2316      	movs	r3, #22
 8001ee8:	6003      	str	r3, [r0, #0]
	return -1;
}
 8001eea:	f04f 30ff 	mov.w	r0, #4294967295
 8001eee:	bd08      	pop	{r3, pc}

08001ef0 <_exit>:

void _exit (int status)
{
 8001ef0:	b508      	push	{r3, lr}
	errno = EINVAL;
 8001ef2:	f017 fad7 	bl	80194a4 <__errno>
 8001ef6:	2316      	movs	r3, #22
 8001ef8:	6003      	str	r3, [r0, #0]
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
 8001efa:	e7fe      	b.n	8001efa <_exit+0xa>

08001efc <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8001efc:	b570      	push	{r4, r5, r6, lr}
 8001efe:	460e      	mov	r6, r1
 8001f00:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f02:	2500      	movs	r5, #0
 8001f04:	42a5      	cmp	r5, r4
 8001f06:	db01      	blt.n	8001f0c <_read+0x10>
	{
		*ptr++ = __io_getchar();
	}

return len;
}
 8001f08:	4620      	mov	r0, r4
 8001f0a:	bd70      	pop	{r4, r5, r6, pc}
		*ptr++ = __io_getchar();
 8001f0c:	f3af 8000 	nop.w
 8001f10:	5570      	strb	r0, [r6, r5]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f12:	3501      	adds	r5, #1
 8001f14:	e7f6      	b.n	8001f04 <_read+0x8>

08001f16 <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8001f16:	b570      	push	{r4, r5, r6, lr}
 8001f18:	460e      	mov	r6, r1
 8001f1a:	4614      	mov	r4, r2
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f1c:	2500      	movs	r5, #0
 8001f1e:	42a5      	cmp	r5, r4
 8001f20:	db01      	blt.n	8001f26 <_write+0x10>
	{
		__io_putchar(*ptr++);
	}
	return len;
}
 8001f22:	4620      	mov	r0, r4
 8001f24:	bd70      	pop	{r4, r5, r6, pc}
		__io_putchar(*ptr++);
 8001f26:	5d70      	ldrb	r0, [r6, r5]
 8001f28:	f3af 8000 	nop.w
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 8001f2c:	3501      	adds	r5, #1
 8001f2e:	e7f6      	b.n	8001f1e <_write+0x8>

08001f30 <_close>:

int _close(int file)
{
	return -1;
}
 8001f30:	f04f 30ff 	mov.w	r0, #4294967295
 8001f34:	4770      	bx	lr

08001f36 <_fstat>:


int _fstat(int file, struct stat *st)
{
	st->st_mode = S_IFCHR;
 8001f36:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8001f3a:	604b      	str	r3, [r1, #4]
	return 0;
}
 8001f3c:	2000      	movs	r0, #0
 8001f3e:	4770      	bx	lr

08001f40 <_isatty>:

int _isatty(int file)
{
	return 1;
}
 8001f40:	2001      	movs	r0, #1
 8001f42:	4770      	bx	lr

08001f44 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
	return 0;
}
 8001f44:	2000      	movs	r0, #0
 8001f46:	4770      	bx	lr

08001f48 <_sbrk>:
/**
 _sbrk
 Increase program data space. Malloc and related functions depend on this
**/
caddr_t _sbrk(int incr)
{
 8001f48:	b508      	push	{r3, lr}
	extern char end asm("end");
	static char *heap_end;
	char *prev_heap_end;

	if (heap_end == 0)
 8001f4a:	4b0a      	ldr	r3, [pc, #40]	; (8001f74 <_sbrk+0x2c>)
 8001f4c:	6819      	ldr	r1, [r3, #0]
{
 8001f4e:	4602      	mov	r2, r0
	if (heap_end == 0)
 8001f50:	b909      	cbnz	r1, 8001f56 <_sbrk+0xe>
		heap_end = &end;
 8001f52:	4909      	ldr	r1, [pc, #36]	; (8001f78 <_sbrk+0x30>)
 8001f54:	6019      	str	r1, [r3, #0]

	prev_heap_end = heap_end;
 8001f56:	6818      	ldr	r0, [r3, #0]
	if (heap_end + incr > stack_ptr)
 8001f58:	4669      	mov	r1, sp
 8001f5a:	4402      	add	r2, r0
 8001f5c:	428a      	cmp	r2, r1
 8001f5e:	d906      	bls.n	8001f6e <_sbrk+0x26>
	{
		errno = ENOMEM;
 8001f60:	f017 faa0 	bl	80194a4 <__errno>
 8001f64:	230c      	movs	r3, #12
 8001f66:	6003      	str	r3, [r0, #0]
		return (caddr_t) -1;
 8001f68:	f04f 30ff 	mov.w	r0, #4294967295
	}

	heap_end += incr;

	return (caddr_t) prev_heap_end;
}
 8001f6c:	bd08      	pop	{r3, pc}
	heap_end += incr;
 8001f6e:	601a      	str	r2, [r3, #0]
	return (caddr_t) prev_heap_end;
 8001f70:	e7fc      	b.n	8001f6c <_sbrk+0x24>
 8001f72:	bf00      	nop
 8001f74:	200010d0 	.word	0x200010d0
 8001f78:	2000a658 	.word	0x2000a658

08001f7c <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId LARGE = 1;   // verdana_40_4bpp
    static const touchgfx::FontId SMALL = 2;   // verdana_10_4bpp
    static const uint16_t NUMBER_OF_FONTS = 3;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 8001f7c:	4770      	bx	lr

08001f7e <_ZN23ApplicationFontProviderD0Ev>:
 8001f7e:	b510      	push	{r4, lr}
 8001f80:	2104      	movs	r1, #4
 8001f82:	4604      	mov	r4, r0
 8001f84:	f017 fa2d 	bl	80193e2 <_ZdlPvj>
 8001f88:	4620      	mov	r0, r4
 8001f8a:	bd10      	pop	{r4, pc}

08001f8c <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
    switch (typography)
 8001f8c:	2901      	cmp	r1, #1
{
 8001f8e:	b508      	push	{r3, lr}
    switch (typography)
 8001f90:	d006      	beq.n	8001fa0 <_ZN23ApplicationFontProvider7getFontEt+0x14>
 8001f92:	2902      	cmp	r1, #2
 8001f94:	d008      	beq.n	8001fa8 <_ZN23ApplicationFontProvider7getFontEt+0x1c>
 8001f96:	b959      	cbnz	r1, 8001fb0 <_ZN23ApplicationFontProvider7getFontEt+0x24>
    {
    case Typography::DEFAULT:
        // verdana_20_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 8001f98:	f000 fb98 	bl	80026cc <_ZN17TypedTextDatabase8getFontsEv>
 8001f9c:	6800      	ldr	r0, [r0, #0]
        // verdana_10_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
    default:
        return 0;
    }
}
 8001f9e:	bd08      	pop	{r3, pc}
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 8001fa0:	f000 fb94 	bl	80026cc <_ZN17TypedTextDatabase8getFontsEv>
 8001fa4:	6840      	ldr	r0, [r0, #4]
 8001fa6:	e7fa      	b.n	8001f9e <_ZN23ApplicationFontProvider7getFontEt+0x12>
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[2]);
 8001fa8:	f000 fb90 	bl	80026cc <_ZN17TypedTextDatabase8getFontsEv>
 8001fac:	6880      	ldr	r0, [r0, #8]
 8001fae:	e7f6      	b.n	8001f9e <_ZN23ApplicationFontProvider7getFontEt+0x12>
    switch (typography)
 8001fb0:	2000      	movs	r0, #0
 8001fb2:	e7f4      	b.n	8001f9e <_ZN23ApplicationFontProvider7getFontEt+0x12>

08001fb4 <_ZN14BitmapDatabase11getInstanceEv>:
namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
    return bitmap_database;
}
 8001fb4:	4800      	ldr	r0, [pc, #0]	; (8001fb8 <_ZN14BitmapDatabase11getInstanceEv+0x4>)
 8001fb6:	4770      	bx	lr
 8001fb8:	0801accc 	.word	0x0801accc

08001fbc <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
}
 8001fbc:	2001      	movs	r0, #1
 8001fbe:	4770      	bx	lr

08001fc0 <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 8001fc0:	b513      	push	{r0, r1, r4, lr}
 8001fc2:	2400      	movs	r4, #0
    {
        if (unicode == 0)
 8001fc4:	b151      	cbz	r1, 8001fdc <_ZNK8touchgfx4Font8getGlyphEt+0x1c>
        {
            return 0;
        }
        const uint8_t* dummyPixelDataPointer = 0;
        uint8_t bitsPerPixelDummy = 0;
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001fc6:	6803      	ldr	r3, [r0, #0]
        const uint8_t* dummyPixelDataPointer = 0;
 8001fc8:	9401      	str	r4, [sp, #4]
        uint8_t bitsPerPixelDummy = 0;
 8001fca:	f88d 4003 	strb.w	r4, [sp, #3]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 8001fce:	aa01      	add	r2, sp, #4
 8001fd0:	689c      	ldr	r4, [r3, #8]
 8001fd2:	f10d 0303 	add.w	r3, sp, #3
 8001fd6:	47a0      	blx	r4
        return glyph;
    }
 8001fd8:	b002      	add	sp, #8
 8001fda:	bd10      	pop	{r4, pc}
            return 0;
 8001fdc:	4608      	mov	r0, r1
 8001fde:	e7fb      	b.n	8001fd8 <_ZNK8touchgfx4Font8getGlyphEt+0x18>

08001fe0 <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
    {
        return fallbackCharacter;
    }
 8001fe0:	8940      	ldrh	r0, [r0, #10]
 8001fe2:	4770      	bx	lr

08001fe4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
    {
        return ellipsisCharacter;
    }
 8001fe4:	8980      	ldrh	r0, [r0, #12]
 8001fe6:	4770      	bx	lr

08001fe8 <_ZNK8touchgfx4Font13getFontHeightEv>:
     *       getMinimumTextHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getFontHeight() const
    {
        return fontHeight;
    }
 8001fe8:	8880      	ldrh	r0, [r0, #4]
 8001fea:	4770      	bx	lr

08001fec <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
     *
     * @return The minimum height needed for a text field that uses this font.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getMinimumTextHeight() const
    {
        return fontHeight + pixelsBelowBaseline;
 8001fec:	7983      	ldrb	r3, [r0, #6]
 8001fee:	8880      	ldrh	r0, [r0, #4]
 8001ff0:	4418      	add	r0, r3
    }
 8001ff2:	b280      	uxth	r0, r0
 8001ff4:	4770      	bx	lr

08001ff6 <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
    {
        return bPerPixel;
 8001ff6:	79c0      	ldrb	r0, [r0, #7]
    }
 8001ff8:	f000 007f 	and.w	r0, r0, #127	; 0x7f
 8001ffc:	4770      	bx	lr

08001ffe <_ZNK8touchgfx4Font15getByteAlignRowEv>:
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
    {
        return bAlignRow;
 8001ffe:	79c0      	ldrb	r0, [r0, #7]
    }
 8002000:	09c0      	lsrs	r0, r0, #7
 8002002:	4770      	bx	lr

08002004 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
    {
    }
 8002004:	4770      	bx	lr

08002006 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
    {
        redraw = rect;
 8002006:	f500 7396 	add.w	r3, r0, #300	; 0x12c
 800200a:	6808      	ldr	r0, [r1, #0]
 800200c:	6849      	ldr	r1, [r1, #4]
 800200e:	c303      	stmia	r3!, {r0, r1}
    }
 8002010:	4770      	bx	lr

08002012 <_ZN8touchgfx10Transition8tearDownEv>:
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
    {
    }
 8002012:	4770      	bx	lr

08002014 <_ZN8touchgfx10Transition4initEv>:
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
    {
    }
 8002014:	4770      	bx	lr

08002016 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
    {
        screenContainer = &cont;
 8002016:	6041      	str	r1, [r0, #4]
    }
 8002018:	4770      	bx	lr

0800201a <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 800201a:	4770      	bx	lr

0800201c <_ZN8touchgfx12NoTransition15handleTickEventEv>:
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
    {
        done = true;
 800201c:	2301      	movs	r3, #1
 800201e:	7203      	strb	r3, [r0, #8]
    }
 8002020:	4770      	bx	lr

08002022 <_ZN8touchgfx12NoTransitionD1Ev>:
class NoTransition : public Transition
 8002022:	4770      	bx	lr

08002024 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002024:	4770      	bx	lr

08002026 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 8002026:	b410      	push	{r4}
    {
        (pobject->*pmemfun_0)();
 8002028:	68c2      	ldr	r2, [r0, #12]
 800202a:	6841      	ldr	r1, [r0, #4]
 800202c:	1054      	asrs	r4, r2, #1
    virtual void execute()
 800202e:	4603      	mov	r3, r0
        (pobject->*pmemfun_0)();
 8002030:	eb01 0062 	add.w	r0, r1, r2, asr #1
 8002034:	07d2      	lsls	r2, r2, #31
 8002036:	bf48      	it	mi
 8002038:	590a      	ldrmi	r2, [r1, r4]
 800203a:	689b      	ldr	r3, [r3, #8]
    }
 800203c:	f85d 4b04 	ldr.w	r4, [sp], #4
        (pobject->*pmemfun_0)();
 8002040:	bf48      	it	mi
 8002042:	58d3      	ldrmi	r3, [r2, r3]
 8002044:	4718      	bx	r3

08002046 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
    {
        return (pobject != 0) && (pmemfun_0 != 0);
 8002046:	6843      	ldr	r3, [r0, #4]
 8002048:	b12b      	cbz	r3, 8002056 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x10>
 800204a:	6883      	ldr	r3, [r0, #8]
 800204c:	b92b      	cbnz	r3, 800205a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x14>
 800204e:	68c0      	ldr	r0, [r0, #12]
 8002050:	f000 0001 	and.w	r0, r0, #1
 8002054:	4770      	bx	lr
 8002056:	4618      	mov	r0, r3
 8002058:	4770      	bx	lr
 800205a:	2001      	movs	r0, #1
    }
 800205c:	4770      	bx	lr

0800205e <_ZN8touchgfx12NoTransitionD0Ev>:
 800205e:	b510      	push	{r4, lr}
 8002060:	210c      	movs	r1, #12
 8002062:	4604      	mov	r4, r0
 8002064:	f017 f9bd 	bl	80193e2 <_ZdlPvj>
 8002068:	4620      	mov	r0, r4
 800206a:	bd10      	pop	{r4, pc}

0800206c <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 800206c:	b510      	push	{r4, lr}
 800206e:	2110      	movs	r1, #16
 8002070:	4604      	mov	r4, r0
 8002072:	f017 f9b6 	bl	80193e2 <_ZdlPvj>
 8002076:	4620      	mov	r0, r4
 8002078:	bd10      	pop	{r4, pc}

0800207a <_ZN23FrontendApplicationBaseD0Ev>:
 800207a:	b510      	push	{r4, lr}
 800207c:	f44f 71ac 	mov.w	r1, #344	; 0x158
 8002080:	4604      	mov	r4, r0
 8002082:	f017 f9ae 	bl	80193e2 <_ZdlPvj>
 8002086:	4620      	mov	r0, r4
 8002088:	bd10      	pop	{r4, pc}

0800208a <_ZN8touchgfx10Transition10invalidateEv>:
    virtual void invalidate()
 800208a:	b510      	push	{r4, lr}
        Application::getInstance()->draw();
 800208c:	f008 feb4 	bl	800adf8 <_ZN8touchgfx11Application11getInstanceEv>
 8002090:	6803      	ldr	r3, [r0, #0]
    }
 8002092:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        Application::getInstance()->draw();
 8002096:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002098:	4718      	bx	r3

0800209a <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 800209a:	b510      	push	{r4, lr}
 800209c:	4604      	mov	r4, r0
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 800209e:	f8d0 013c 	ldr.w	r0, [r0, #316]	; 0x13c
 80020a2:	b158      	cbz	r0, 80020bc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
 80020a4:	6803      	ldr	r3, [r0, #0]
 80020a6:	68db      	ldr	r3, [r3, #12]
 80020a8:	4798      	blx	r3
 80020aa:	b138      	cbz	r0, 80020bc <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv+0x22>
        {
            pendingScreenTransitionCallback->execute();
 80020ac:	f8d4 013c 	ldr.w	r0, [r4, #316]	; 0x13c
 80020b0:	6803      	ldr	r3, [r0, #0]
 80020b2:	689b      	ldr	r3, [r3, #8]
 80020b4:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80020b6:	2300      	movs	r3, #0
 80020b8:	f8c4 313c 	str.w	r3, [r4, #316]	; 0x13c
    }
 80020bc:	bd10      	pop	{r4, pc}
	...

080020c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/screen1_screen/Screen1View.hpp>
#include <gui/screen1_screen/Screen1Presenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 80020c0:	b570      	push	{r4, r5, r6, lr}
 80020c2:	4604      	mov	r4, r0
 80020c4:	460d      	mov	r5, r1
 80020c6:	4616      	mov	r6, r2
          pendingScreenTransitionCallback(0)
 80020c8:	f008 feb6 	bl	800ae38 <_ZN8touchgfx11ApplicationC1Ev>
        instance = this;
 80020cc:	4b0e      	ldr	r3, [pc, #56]	; (8002108 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x48>)
          pendingScreenTransitionCallback(0)
 80020ce:	2100      	movs	r1, #0
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 80020d0:	e9c4 6554 	strd	r6, r5, [r4, #336]	; 0x150
        return instance;
 80020d4:	4d0d      	ldr	r5, [pc, #52]	; (800210c <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x4c>)
        instance = this;
 80020d6:	601c      	str	r4, [r3, #0]
        : pobject(0), pmemfun_0(0)
 80020d8:	e9c4 1152 	strd	r1, r1, [r4, #328]	; 0x148
 80020dc:	4b0c      	ldr	r3, [pc, #48]	; (8002110 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x50>)
 80020de:	6023      	str	r3, [r4, #0]
 80020e0:	6828      	ldr	r0, [r5, #0]
 80020e2:	4b0c      	ldr	r3, [pc, #48]	; (8002114 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x54>)
 80020e4:	e9c4 3150 	strd	r3, r1, [r4, #320]	; 0x140
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 80020e8:	6803      	ldr	r3, [r0, #0]
          pendingScreenTransitionCallback(0)
 80020ea:	e9c4 114e 	strd	r1, r1, [r4, #312]	; 0x138
 80020ee:	689b      	ldr	r3, [r3, #8]
 80020f0:	4798      	blx	r3
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80020f2:	682b      	ldr	r3, [r5, #0]
 80020f4:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 80020f8:	b10a      	cbz	r2, 80020fe <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x3e>
 80020fa:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 80020fc:	b900      	cbnz	r0, 8002100 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x40>
        return instance->lcdRef;
 80020fe:	6898      	ldr	r0, [r3, #8]
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8002100:	f010 f873 	bl	80121ea <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
}
 8002104:	4620      	mov	r0, r4
 8002106:	bd70      	pop	{r4, r5, r6, pc}
 8002108:	2000a138 	.word	0x2000a138
 800210c:	2000a0ec 	.word	0x2000a0ec
 8002110:	0801b020 	.word	0x0801b020
 8002114:	0801b008 	.word	0x0801b008

08002118 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8002118:	4b06      	ldr	r3, [pc, #24]	; (8002134 <_ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv+0x1c>)
 800211a:	f8c0 3148 	str.w	r3, [r0, #328]	; 0x148
 800211e:	2300      	movs	r3, #0
 8002120:	f8c0 314c 	str.w	r3, [r0, #332]	; 0x14c
// Screen1

void FrontendApplicationBase::gotoScreen1ScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplication::gotoScreen1ScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
 8002124:	f500 73a0 	add.w	r3, r0, #320	; 0x140
 8002128:	f8c0 0144 	str.w	r0, [r0, #324]	; 0x144
 800212c:	f8c0 313c 	str.w	r3, [r0, #316]	; 0x13c
}
 8002130:	4770      	bx	lr
 8002132:	bf00      	nop
 8002134:	08002275 	.word	0x08002275

08002138 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002138:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800213c:	4607      	mov	r7, r0
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800213e:	6890      	ldr	r0, [r2, #8]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8002140:	f8dd a028 	ldr.w	sl, [sp, #40]	; 0x28
 8002144:	4699      	mov	r9, r3
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8002146:	6803      	ldr	r3, [r0, #0]
 8002148:	6a1b      	ldr	r3, [r3, #32]
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 800214a:	4688      	mov	r8, r1
 800214c:	4614      	mov	r4, r2
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 800214e:	4798      	blx	r3
 8002150:	286b      	cmp	r0, #107	; 0x6b
 8002152:	d805      	bhi.n	8002160 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x28>
 8002154:	4b41      	ldr	r3, [pc, #260]	; (800225c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x124>)
 8002156:	4a42      	ldr	r2, [pc, #264]	; (8002260 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002158:	21a3      	movs	r1, #163	; 0xa3
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 800215a:	4842      	ldr	r0, [pc, #264]	; (8002264 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>)
 800215c:	f017 f970 	bl	8019440 <__assert_func>
 8002160:	6860      	ldr	r0, [r4, #4]
 8002162:	6803      	ldr	r3, [r0, #0]
 8002164:	6a1b      	ldr	r3, [r3, #32]
 8002166:	4798      	blx	r3
 8002168:	280f      	cmp	r0, #15
 800216a:	d803      	bhi.n	8002174 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x3c>
 800216c:	4b3e      	ldr	r3, [pc, #248]	; (8002268 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x130>)
 800216e:	4a3c      	ldr	r2, [pc, #240]	; (8002260 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002170:	21a4      	movs	r1, #164	; 0xa4
 8002172:	e7f2      	b.n	800215a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8002174:	68e0      	ldr	r0, [r4, #12]
 8002176:	6803      	ldr	r3, [r0, #0]
 8002178:	6a1b      	ldr	r3, [r3, #32]
 800217a:	4798      	blx	r3
 800217c:	280b      	cmp	r0, #11
 800217e:	d803      	bhi.n	8002188 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x50>
 8002180:	4b3a      	ldr	r3, [pc, #232]	; (800226c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x134>)
 8002182:	4a37      	ldr	r2, [pc, #220]	; (8002260 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x128>)
 8002184:	21a5      	movs	r1, #165	; 0xa5
 8002186:	e7e8      	b.n	800215a <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22>
    Application::getInstance()->clearAllTimerWidgets();
 8002188:	f008 fe36 	bl	800adf8 <_ZN8touchgfx11Application11getInstanceEv>
 800218c:	f008 fe3a 	bl	800ae04 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8002190:	f8d9 0000 	ldr.w	r0, [r9]
 8002194:	b110      	cbz	r0, 800219c <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x64>
        (*currentTrans)->tearDown();
 8002196:	6803      	ldr	r3, [r0, #0]
 8002198:	68db      	ldr	r3, [r3, #12]
 800219a:	4798      	blx	r3
    if (*currentTrans)
 800219c:	f8d9 0000 	ldr.w	r0, [r9]
 80021a0:	b110      	cbz	r0, 80021a8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x70>
        (*currentTrans)->~Transition();
 80021a2:	6803      	ldr	r3, [r0, #0]
 80021a4:	681b      	ldr	r3, [r3, #0]
 80021a6:	4798      	blx	r3
    if (*currentScreen)
 80021a8:	6838      	ldr	r0, [r7, #0]
 80021aa:	b110      	cbz	r0, 80021b2 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7a>
        (*currentScreen)->tearDownScreen();
 80021ac:	6803      	ldr	r3, [r0, #0]
 80021ae:	695b      	ldr	r3, [r3, #20]
 80021b0:	4798      	blx	r3
    if (*currentPresenter)
 80021b2:	f8d8 0000 	ldr.w	r0, [r8]
 80021b6:	b110      	cbz	r0, 80021be <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x86>
        (*currentPresenter)->deactivate();
 80021b8:	6803      	ldr	r3, [r0, #0]
 80021ba:	685b      	ldr	r3, [r3, #4]
 80021bc:	4798      	blx	r3
    if (*currentScreen)
 80021be:	6838      	ldr	r0, [r7, #0]
 80021c0:	b110      	cbz	r0, 80021c8 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x90>
        (*currentScreen)->~Screen();
 80021c2:	6803      	ldr	r3, [r0, #0]
 80021c4:	681b      	ldr	r3, [r3, #0]
 80021c6:	4798      	blx	r3
    if (*currentPresenter)
 80021c8:	f8d8 0000 	ldr.w	r0, [r8]
 80021cc:	b110      	cbz	r0, 80021d4 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x9c>
        (*currentPresenter)->~Presenter();
 80021ce:	6803      	ldr	r3, [r0, #0]
 80021d0:	689b      	ldr	r3, [r3, #8]
 80021d2:	4798      	blx	r3

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80021d4:	68e0      	ldr	r0, [r4, #12]
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
    {
        return *static_cast<T*>(element(index));
 80021d6:	6803      	ldr	r3, [r0, #0]
 80021d8:	2100      	movs	r1, #0
 80021da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021dc:	4798      	blx	r3
        : screenContainer(0), done(false)
 80021de:	f04f 0b00 	mov.w	fp, #0
 80021e2:	4b23      	ldr	r3, [pc, #140]	; (8002270 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x138>)
 80021e4:	6003      	str	r3, [r0, #0]
 80021e6:	4605      	mov	r5, r0
 80021e8:	f8c0 b004 	str.w	fp, [r0, #4]
 80021ec:	f880 b008 	strb.w	fp, [r0, #8]
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 80021f0:	68a0      	ldr	r0, [r4, #8]
 80021f2:	6803      	ldr	r3, [r0, #0]
 80021f4:	4659      	mov	r1, fp
 80021f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80021f8:	4798      	blx	r3
 80021fa:	4606      	mov	r6, r0
 80021fc:	f000 fac2 	bl	8002784 <_ZN11Screen1ViewC1Ev>
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8002200:	6860      	ldr	r0, [r4, #4]
 8002202:	6803      	ldr	r3, [r0, #0]
 8002204:	4659      	mov	r1, fp
 8002206:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002208:	4798      	blx	r3
 800220a:	4631      	mov	r1, r6
 800220c:	4604      	mov	r4, r0
 800220e:	f000 fa9f 	bl	8002750 <_ZN16Screen1PresenterC1ER11Screen1View>
    *currentTrans = newTransition;
 8002212:	f8c9 5000 	str.w	r5, [r9]
    *currentPresenter = newPresenter;
 8002216:	f8c8 4000 	str.w	r4, [r8]
    *currentScreen = newScreen;
 800221a:	603e      	str	r6, [r7, #0]
    model->bind(newPresenter);
 800221c:	b1e4      	cbz	r4, 8002258 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x120>
 800221e:	1d23      	adds	r3, r4, #4
public:
    Model();

    void bind(ModelListener* listener)
    {
        modelListener = listener;
 8002220:	f8ca 3000 	str.w	r3, [sl]
    newScreen->setupScreen();
 8002224:	6833      	ldr	r3, [r6, #0]
    
    virtual ~ModelListener() {}

    void bind(Model* m)
    {
        model = m;
 8002226:	f8c4 a008 	str.w	sl, [r4, #8]
 800222a:	4630      	mov	r0, r6
 800222c:	68db      	ldr	r3, [r3, #12]
     *
     * @param [in] presenter The specific Presenter to be associated with the View.
     */
    void bind(T& presenter)
    {
        this->presenter = &presenter;
 800222e:	63f4      	str	r4, [r6, #60]	; 0x3c
 8002230:	4798      	blx	r3
    newPresenter->activate();
 8002232:	6823      	ldr	r3, [r4, #0]
 8002234:	4620      	mov	r0, r4
 8002236:	681b      	ldr	r3, [r3, #0]
 8002238:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800223a:	4629      	mov	r1, r5
 800223c:	4630      	mov	r0, r6
 800223e:	f00a fa10 	bl	800c662 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8002242:	682b      	ldr	r3, [r5, #0]
 8002244:	4628      	mov	r0, r5
 8002246:	691b      	ldr	r3, [r3, #16]
 8002248:	4798      	blx	r3
    newTransition->invalidate();
 800224a:	682b      	ldr	r3, [r5, #0]
 800224c:	4628      	mov	r0, r5
 800224e:	695b      	ldr	r3, [r3, #20]
 8002250:	4798      	blx	r3
    newScreen->bind(*newPresenter);

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
}
 8002252:	4620      	mov	r0, r4
 8002254:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    model->bind(newPresenter);
 8002258:	4623      	mov	r3, r4
 800225a:	e7e1      	b.n	8002220 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe8>
 800225c:	0801ace0 	.word	0x0801ace0
 8002260:	0801ad6e 	.word	0x0801ad6e
 8002264:	0801ae72 	.word	0x0801ae72
 8002268:	0801aeb9 	.word	0x0801aeb9
 800226c:	0801af5c 	.word	0x0801af5c
 8002270:	0801b064 	.word	0x0801b064

08002274 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
{
 8002274:	b507      	push	{r0, r1, r2, lr}
    touchgfx::makeTransition<Screen1View, Screen1Presenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8002276:	f8d0 3154 	ldr.w	r3, [r0, #340]	; 0x154
 800227a:	9300      	str	r3, [sp, #0]
 800227c:	f8d0 2150 	ldr.w	r2, [r0, #336]	; 0x150
 8002280:	4b04      	ldr	r3, [pc, #16]	; (8002294 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x20>)
 8002282:	f500 719c 	add.w	r1, r0, #312	; 0x138
 8002286:	4804      	ldr	r0, [pc, #16]	; (8002298 <_ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv+0x24>)
 8002288:	f7ff ff56 	bl	8002138 <_ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 800228c:	b003      	add	sp, #12
 800228e:	f85d fb04 	ldr.w	pc, [sp], #4
 8002292:	bf00      	nop
 8002294:	2000a12c 	.word	0x2000a12c
 8002298:	2000a128 	.word	0x2000a128

0800229c <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return gsubTable;
    }
 800229c:	6a00      	ldr	r0, [r0, #32]
 800229e:	4770      	bx	lr

080022a0 <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return arabicTable;
    }
 80022a0:	6a40      	ldr	r0, [r0, #36]	; 0x24
 80022a2:	4770      	bx	lr

080022a4 <_ZN8touchgfx13GeneratedFontD1Ev>:
class GeneratedFont : public ConstFont
 80022a4:	4770      	bx	lr

080022a6 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:
}

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80022a6:	888b      	ldrh	r3, [r1, #4]
 80022a8:	6980      	ldr	r0, [r0, #24]
 80022aa:	680a      	ldr	r2, [r1, #0]
 80022ac:	0adb      	lsrs	r3, r3, #11
 80022ae:	f850 0023 	ldr.w	r0, [r0, r3, lsl #2]
}
 80022b2:	4410      	add	r0, r2
 80022b4:	4770      	bx	lr

080022b6 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 80022b6:	b510      	push	{r4, lr}
    if (!glyph || glyph->kerningTableSize == 0)
 80022b8:	b1c2      	cbz	r2, 80022ec <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
 80022ba:	7b13      	ldrb	r3, [r2, #12]
 80022bc:	b1b3      	cbz	r3, 80022ec <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 80022be:	7b54      	ldrb	r4, [r2, #13]
 80022c0:	7ad2      	ldrb	r2, [r2, #11]
 80022c2:	0224      	lsls	r4, r4, #8
 80022c4:	f404 64e0 	and.w	r4, r4, #1792	; 0x700
    {
        return 0;
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80022c8:	4314      	orrs	r4, r2
 80022ca:	69c2      	ldr	r2, [r0, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80022cc:	b298      	uxth	r0, r3
    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 80022ce:	eb02 0284 	add.w	r2, r2, r4, lsl #2
    {
        if (prevChar == kerndata->unicodePrevChar)
 80022d2:	8813      	ldrh	r3, [r2, #0]
 80022d4:	428b      	cmp	r3, r1
 80022d6:	d102      	bne.n	80022de <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x28>
        {
            return kerndata->distance;
 80022d8:	f992 0002 	ldrsb.w	r0, [r2, #2]
        {
            break;
        }
    }
    return 0;
}
 80022dc:	bd10      	pop	{r4, pc}
        if (prevChar < kerndata->unicodePrevChar)
 80022de:	d805      	bhi.n	80022ec <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x36>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 80022e0:	3801      	subs	r0, #1
 80022e2:	b280      	uxth	r0, r0
 80022e4:	3204      	adds	r2, #4
 80022e6:	2800      	cmp	r0, #0
 80022e8:	d1f3      	bne.n	80022d2 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 80022ea:	e7f7      	b.n	80022dc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>
        return 0;
 80022ec:	2000      	movs	r0, #0
 80022ee:	e7f5      	b.n	80022dc <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x26>

080022f0 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80022f0:	b510      	push	{r4, lr}
 80022f2:	2128      	movs	r1, #40	; 0x28
 80022f4:	4604      	mov	r4, r0
 80022f6:	f017 f874 	bl	80193e2 <_ZdlPvj>
 80022fa:	4620      	mov	r0, r4
 80022fc:	bd10      	pop	{r4, pc}
	...

08002300 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
GeneratedFont::GeneratedFont(const GlyphNode* list, uint16_t size, uint16_t height, uint8_t pixBelowBase, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8002300:	b530      	push	{r4, r5, lr}
 8002302:	b089      	sub	sp, #36	; 0x24
 8002304:	4604      	mov	r4, r0
      arabicTable(formsTable)
 8002306:	f8bd 5050 	ldrh.w	r5, [sp, #80]	; 0x50
 800230a:	9506      	str	r5, [sp, #24]
 800230c:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8002310:	9505      	str	r5, [sp, #20]
 8002312:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8002316:	9504      	str	r5, [sp, #16]
 8002318:	f89d 503c 	ldrb.w	r5, [sp, #60]	; 0x3c
 800231c:	9503      	str	r5, [sp, #12]
 800231e:	f89d 5038 	ldrb.w	r5, [sp, #56]	; 0x38
 8002322:	9502      	str	r5, [sp, #8]
 8002324:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8002328:	9501      	str	r5, [sp, #4]
 800232a:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 800232e:	9500      	str	r5, [sp, #0]
 8002330:	f009 fd9a 	bl	800be68 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>
 8002334:	4b06      	ldr	r3, [pc, #24]	; (8002350 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x50>)
 8002336:	6023      	str	r3, [r4, #0]
 8002338:	9b11      	ldr	r3, [sp, #68]	; 0x44
 800233a:	61a3      	str	r3, [r4, #24]
 800233c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800233e:	61e3      	str	r3, [r4, #28]
 8002340:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8002342:	6223      	str	r3, [r4, #32]
 8002344:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8002346:	6263      	str	r3, [r4, #36]	; 0x24
}
 8002348:	4620      	mov	r0, r4
 800234a:	b009      	add	sp, #36	; 0x24
 800234c:	bd30      	pop	{r4, r5, pc}
 800234e:	bf00      	nop
 8002350:	0801b088 	.word	0x0801b088

08002354 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
    {
        return 0;
    }
 8002354:	2000      	movs	r0, #0
 8002356:	4770      	bx	lr

08002358 <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
    {
        rect.x = x;
 8002358:	8081      	strh	r1, [r0, #4]
    }
 800235a:	4770      	bx	lr

0800235c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
    {
        rect.y = y;
 800235c:	80c1      	strh	r1, [r0, #6]
    }
 800235e:	4770      	bx	lr

08002360 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
    {
        rect.width = width;
 8002360:	8101      	strh	r1, [r0, #8]
    }
 8002362:	4770      	bx	lr

08002364 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
    {
        rect.height = height;
 8002364:	8141      	strh	r1, [r0, #10]
    }
 8002366:	4770      	bx	lr

08002368 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
    {
    }
 8002368:	4770      	bx	lr

0800236a <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
    {
    }
 800236a:	4770      	bx	lr

0800236c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
    {
    }
 800236c:	4770      	bx	lr

0800236e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
    {
    }
 800236e:	4770      	bx	lr

08002370 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
    {
    }
 8002370:	4770      	bx	lr

08002372 <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8002372:	b410      	push	{r4}
    {
        moveRelative(x - rect.x, y - rect.y);
 8002374:	88c4      	ldrh	r4, [r0, #6]
 8002376:	6803      	ldr	r3, [r0, #0]
 8002378:	1b12      	subs	r2, r2, r4
 800237a:	8884      	ldrh	r4, [r0, #4]
 800237c:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800237e:	1b09      	subs	r1, r1, r4
 8002380:	b212      	sxth	r2, r2
    }
 8002382:	f85d 4b04 	ldr.w	r4, [sp], #4
        moveRelative(x - rect.x, y - rect.y);
 8002386:	b209      	sxth	r1, r1
 8002388:	4718      	bx	r3

0800238a <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 800238a:	f64f 73ff 	movw	r3, #65535	; 0xffff
 800238e:	8183      	strh	r3, [r0, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8002390:	f04f 33ff 	mov.w	r3, #4294967295
 8002394:	6203      	str	r3, [r0, #32]
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
    {
        resetDrawChainCache();
        nextDrawChainElement = *nextPreviousElement;
 8002396:	6813      	ldr	r3, [r2, #0]
 8002398:	61c3      	str	r3, [r0, #28]
        *nextPreviousElement = this;
 800239a:	6010      	str	r0, [r2, #0]
    }
 800239c:	4770      	bx	lr

0800239e <_ZN8touchgfx6Screen11setupScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
    {
    }
 800239e:	4770      	bx	lr

080023a0 <_ZN8touchgfx6Screen15afterTransitionEv>:
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
    {
    }
 80023a0:	4770      	bx	lr

080023a2 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
    {
    }
 80023a2:	4770      	bx	lr

080023a4 <_ZN8touchgfx6Screen15handleTickEventEv>:
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
    {
    }
 80023a4:	4770      	bx	lr

080023a6 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
    {
    }
 80023a6:	4770      	bx	lr

080023a8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     */
    virtual void getLastChild(int16_t x, int16_t y, Drawable** last)
    {
        (void)x;
        (void)y;
        if (isVisible() && isTouchable())
 80023a8:	f890 2025 	ldrb.w	r2, [r0, #37]	; 0x25
 80023ac:	b11a      	cbz	r2, 80023b6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
 80023ae:	f890 2024 	ldrb.w	r2, [r0, #36]	; 0x24
 80023b2:	b102      	cbz	r2, 80023b6 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0xe>
        {
            *last = this;
 80023b4:	6018      	str	r0, [r3, #0]
        }
    }
 80023b6:	4770      	bx	lr

080023b8 <_ZN15Screen1ViewBaseD1Ev>:

class Screen1ViewBase : public touchgfx::View<Screen1Presenter>
{
public:
    Screen1ViewBase();
    virtual ~Screen1ViewBase() {}
 80023b8:	4770      	bx	lr

080023ba <_ZN15Screen1ViewBase11setupScreenEv>:
}

void Screen1ViewBase::setupScreen()
{

}
 80023ba:	4770      	bx	lr

080023bc <_ZN15Screen1ViewBaseD0Ev>:
 80023bc:	b510      	push	{r4, lr}
 80023be:	216c      	movs	r1, #108	; 0x6c
 80023c0:	4604      	mov	r4, r0
 80023c2:	f017 f80e 	bl	80193e2 <_ZdlPvj>
 80023c6:	4620      	mov	r0, r4
 80023c8:	bd10      	pop	{r4, pc}
	...

080023cc <_ZN15Screen1ViewBaseC1Ev>:
Screen1ViewBase::Screen1ViewBase()
 80023cc:	b538      	push	{r3, r4, r5, lr}
 80023ce:	4604      	mov	r4, r0
 80023d0:	4625      	mov	r5, r4
        : presenter(0)
 80023d2:	f009 ffc9 	bl	800c368 <_ZN8touchgfx6ScreenC1Ev>
 80023d6:	2300      	movs	r3, #0
 80023d8:	4a14      	ldr	r2, [pc, #80]	; (800242c <_ZN15Screen1ViewBaseC1Ev+0x60>)
 80023da:	63e3      	str	r3, [r4, #60]	; 0x3c
 80023dc:	f845 2b40 	str.w	r2, [r5], #64
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
        : Widget(), alpha(255), color(0)
 80023e0:	4a13      	ldr	r2, [pc, #76]	; (8002430 <_ZN15Screen1ViewBaseC1Ev+0x64>)
          visible(true)
 80023e2:	6623      	str	r3, [r4, #96]	; 0x60
 80023e4:	e9c4 2310 	strd	r2, r3, [r4, #64]	; 0x40
 80023e8:	f44f 7280 	mov.w	r2, #256	; 0x100
 80023ec:	f8a4 2064 	strh.w	r2, [r4, #100]	; 0x64
 80023f0:	22ff      	movs	r2, #255	; 0xff
 80023f2:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 80023f6:	e9c4 3314 	strd	r3, r3, [r4, #80]	; 0x50
 80023fa:	e9c4 3316 	strd	r3, r3, [r4, #88]	; 0x58
 80023fe:	f884 2066 	strb.w	r2, [r4, #102]	; 0x66
        : color(col)
 8002402:	66a3      	str	r3, [r4, #104]	; 0x68
        setWidth(width);
 8002404:	4628      	mov	r0, r5
 8002406:	f44f 7148 	mov.w	r1, #800	; 0x320
 800240a:	f7ff ffa9 	bl	8002360 <_ZN8touchgfx8Drawable8setWidthEs>
        setHeight(height);
 800240e:	4628      	mov	r0, r5
 8002410:	f44f 71f0 	mov.w	r1, #480	; 0x1e0
 8002414:	f7ff ffa6 	bl	8002364 <_ZN8touchgfx8Drawable9setHeightEs>
     *
     * @see getColor, Color::getColorFrom24BitRGB
     */
    void setColor(colortype color)
    {
        this->color = color;
 8002418:	f04f 437f 	mov.w	r3, #4278190080	; 0xff000000
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
    {
        container.add(d);
 800241c:	1d20      	adds	r0, r4, #4
 800241e:	66a3      	str	r3, [r4, #104]	; 0x68
 8002420:	4629      	mov	r1, r5
 8002422:	f006 fb75 	bl	8008b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>
}
 8002426:	4620      	mov	r0, r4
 8002428:	bd38      	pop	{r3, r4, r5, pc}
 800242a:	bf00      	nop
 800242c:	0801b0e0 	.word	0x0801b0e0
 8002430:	0801c088 	.word	0x0801c088

08002434 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_10_4bpp();

touchgfx::GeneratedFont& getFont_verdana_10_4bpp()
{
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002434:	4770      	bx	lr
	...

08002438 <_Z23getFont_verdana_10_4bppv>:
{
 8002438:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 800243a:	4d15      	ldr	r5, [pc, #84]	; (8002490 <_Z23getFont_verdana_10_4bppv+0x58>)
 800243c:	782c      	ldrb	r4, [r5, #0]
 800243e:	f3bf 8f5b 	dmb	ish
 8002442:	f014 0401 	ands.w	r4, r4, #1
{
 8002446:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_10_4bpp(glyphs_verdana_10_4bpp, 1, 10, 0, 4, 1, 0, 0, unicodes_verdana_10_4bpp, kerning_verdana_10_4bpp, 63, 0, 0, 0);
 8002448:	d11e      	bne.n	8002488 <_Z23getFont_verdana_10_4bppv+0x50>
 800244a:	4628      	mov	r0, r5
 800244c:	f016 ffcb 	bl	80193e6 <__cxa_guard_acquire>
 8002450:	b1d0      	cbz	r0, 8002488 <_Z23getFont_verdana_10_4bppv+0x50>
 8002452:	233f      	movs	r3, #63	; 0x3f
 8002454:	9307      	str	r3, [sp, #28]
 8002456:	4b0f      	ldr	r3, [pc, #60]	; (8002494 <_Z23getFont_verdana_10_4bppv+0x5c>)
 8002458:	9306      	str	r3, [sp, #24]
 800245a:	4b0f      	ldr	r3, [pc, #60]	; (8002498 <_Z23getFont_verdana_10_4bppv+0x60>)
 800245c:	490f      	ldr	r1, [pc, #60]	; (800249c <_Z23getFont_verdana_10_4bppv+0x64>)
 800245e:	4810      	ldr	r0, [pc, #64]	; (80024a0 <_Z23getFont_verdana_10_4bppv+0x68>)
 8002460:	9408      	str	r4, [sp, #32]
 8002462:	2201      	movs	r2, #1
 8002464:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002468:	2304      	movs	r3, #4
 800246a:	e9cd 3201 	strd	r3, r2, [sp, #4]
 800246e:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 8002472:	230a      	movs	r3, #10
 8002474:	9403      	str	r4, [sp, #12]
 8002476:	9400      	str	r4, [sp, #0]
 8002478:	f7ff ff42 	bl	8002300 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800247c:	4628      	mov	r0, r5
 800247e:	f016 ffbe 	bl	80193fe <__cxa_guard_release>
 8002482:	4808      	ldr	r0, [pc, #32]	; (80024a4 <_Z23getFont_verdana_10_4bppv+0x6c>)
 8002484:	f016 fffa 	bl	801947c <atexit>
    return verdana_10_4bpp;
}
 8002488:	4805      	ldr	r0, [pc, #20]	; (80024a0 <_Z23getFont_verdana_10_4bppv+0x68>)
 800248a:	b00d      	add	sp, #52	; 0x34
 800248c:	bd30      	pop	{r4, r5, pc}
 800248e:	bf00      	nop
 8002490:	200010d4 	.word	0x200010d4
 8002494:	0801d720 	.word	0x0801d720
 8002498:	0801b10c 	.word	0x0801b10c
 800249c:	90000178 	.word	0x90000178
 80024a0:	200010d8 	.word	0x200010d8
 80024a4:	08002435 	.word	0x08002435

080024a8 <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_20_4bpp();

touchgfx::GeneratedFont& getFont_verdana_20_4bpp()
{
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80024a8:	4770      	bx	lr
	...

080024ac <_Z23getFont_verdana_20_4bppv>:
{
 80024ac:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80024ae:	4d15      	ldr	r5, [pc, #84]	; (8002504 <_Z23getFont_verdana_20_4bppv+0x58>)
 80024b0:	782c      	ldrb	r4, [r5, #0]
 80024b2:	f3bf 8f5b 	dmb	ish
 80024b6:	f014 0401 	ands.w	r4, r4, #1
{
 80024ba:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_20_4bpp(glyphs_verdana_20_4bpp, 1, 20, 0, 4, 1, 0, 0, unicodes_verdana_20_4bpp, kerning_verdana_20_4bpp, 63, 0, 0, 0);
 80024bc:	d11e      	bne.n	80024fc <_Z23getFont_verdana_20_4bppv+0x50>
 80024be:	4628      	mov	r0, r5
 80024c0:	f016 ff91 	bl	80193e6 <__cxa_guard_acquire>
 80024c4:	b1d0      	cbz	r0, 80024fc <_Z23getFont_verdana_20_4bppv+0x50>
 80024c6:	233f      	movs	r3, #63	; 0x3f
 80024c8:	9307      	str	r3, [sp, #28]
 80024ca:	4b0f      	ldr	r3, [pc, #60]	; (8002508 <_Z23getFont_verdana_20_4bppv+0x5c>)
 80024cc:	9306      	str	r3, [sp, #24]
 80024ce:	4b0f      	ldr	r3, [pc, #60]	; (800250c <_Z23getFont_verdana_20_4bppv+0x60>)
 80024d0:	490f      	ldr	r1, [pc, #60]	; (8002510 <_Z23getFont_verdana_20_4bppv+0x64>)
 80024d2:	4810      	ldr	r0, [pc, #64]	; (8002514 <_Z23getFont_verdana_20_4bppv+0x68>)
 80024d4:	9408      	str	r4, [sp, #32]
 80024d6:	2201      	movs	r2, #1
 80024d8:	e9cd 4304 	strd	r4, r3, [sp, #16]
 80024dc:	2304      	movs	r3, #4
 80024de:	e9cd 3201 	strd	r3, r2, [sp, #4]
 80024e2:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 80024e6:	2314      	movs	r3, #20
 80024e8:	9403      	str	r4, [sp, #12]
 80024ea:	9400      	str	r4, [sp, #0]
 80024ec:	f7ff ff08 	bl	8002300 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80024f0:	4628      	mov	r0, r5
 80024f2:	f016 ff84 	bl	80193fe <__cxa_guard_release>
 80024f6:	4808      	ldr	r0, [pc, #32]	; (8002518 <_Z23getFont_verdana_20_4bppv+0x6c>)
 80024f8:	f016 ffc0 	bl	801947c <atexit>
    return verdana_20_4bpp;
}
 80024fc:	4805      	ldr	r0, [pc, #20]	; (8002514 <_Z23getFont_verdana_20_4bppv+0x68>)
 80024fe:	b00d      	add	sp, #52	; 0x34
 8002500:	bd30      	pop	{r4, r5, pc}
 8002502:	bf00      	nop
 8002504:	20001100 	.word	0x20001100
 8002508:	0801d724 	.word	0x0801d724
 800250c:	0801b110 	.word	0x0801b110
 8002510:	90000188 	.word	0x90000188
 8002514:	20001104 	.word	0x20001104
 8002518:	080024a9 	.word	0x080024a9

0800251c <__tcf_0>:

touchgfx::GeneratedFont& getFont_verdana_40_4bpp();

touchgfx::GeneratedFont& getFont_verdana_40_4bpp()
{
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 800251c:	4770      	bx	lr
	...

08002520 <_Z23getFont_verdana_40_4bppv>:
{
 8002520:	b530      	push	{r4, r5, lr}
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002522:	4d15      	ldr	r5, [pc, #84]	; (8002578 <_Z23getFont_verdana_40_4bppv+0x58>)
 8002524:	782c      	ldrb	r4, [r5, #0]
 8002526:	f3bf 8f5b 	dmb	ish
 800252a:	f014 0401 	ands.w	r4, r4, #1
{
 800252e:	b08d      	sub	sp, #52	; 0x34
    static touchgfx::GeneratedFont verdana_40_4bpp(glyphs_verdana_40_4bpp, 1, 40, 0, 4, 1, 0, 0, unicodes_verdana_40_4bpp, kerning_verdana_40_4bpp, 63, 0, 0, 0);
 8002530:	d11e      	bne.n	8002570 <_Z23getFont_verdana_40_4bppv+0x50>
 8002532:	4628      	mov	r0, r5
 8002534:	f016 ff57 	bl	80193e6 <__cxa_guard_acquire>
 8002538:	b1d0      	cbz	r0, 8002570 <_Z23getFont_verdana_40_4bppv+0x50>
 800253a:	233f      	movs	r3, #63	; 0x3f
 800253c:	9307      	str	r3, [sp, #28]
 800253e:	4b0f      	ldr	r3, [pc, #60]	; (800257c <_Z23getFont_verdana_40_4bppv+0x5c>)
 8002540:	9306      	str	r3, [sp, #24]
 8002542:	4b0f      	ldr	r3, [pc, #60]	; (8002580 <_Z23getFont_verdana_40_4bppv+0x60>)
 8002544:	490f      	ldr	r1, [pc, #60]	; (8002584 <_Z23getFont_verdana_40_4bppv+0x64>)
 8002546:	4810      	ldr	r0, [pc, #64]	; (8002588 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002548:	9408      	str	r4, [sp, #32]
 800254a:	2201      	movs	r2, #1
 800254c:	e9cd 4304 	strd	r4, r3, [sp, #16]
 8002550:	2304      	movs	r3, #4
 8002552:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002556:	e9cd 4409 	strd	r4, r4, [sp, #36]	; 0x24
 800255a:	2328      	movs	r3, #40	; 0x28
 800255c:	9403      	str	r4, [sp, #12]
 800255e:	9400      	str	r4, [sp, #0]
 8002560:	f7ff fece 	bl	8002300 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEtthhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 8002564:	4628      	mov	r0, r5
 8002566:	f016 ff4a 	bl	80193fe <__cxa_guard_release>
 800256a:	4808      	ldr	r0, [pc, #32]	; (800258c <_Z23getFont_verdana_40_4bppv+0x6c>)
 800256c:	f016 ff86 	bl	801947c <atexit>
    return verdana_40_4bpp;
}
 8002570:	4805      	ldr	r0, [pc, #20]	; (8002588 <_Z23getFont_verdana_40_4bppv+0x68>)
 8002572:	b00d      	add	sp, #52	; 0x34
 8002574:	bd30      	pop	{r4, r5, pc}
 8002576:	bf00      	nop
 8002578:	2000112c 	.word	0x2000112c
 800257c:	0801d728 	.word	0x0801d728
 8002580:	0801b114 	.word	0x0801b114
 8002584:	90000198 	.word	0x90000198
 8002588:	20001130 	.word	0x20001130
 800258c:	0800251d 	.word	0x0800251d

08002590 <_ZNK8touchgfx4Font12getGSUBTableEv>:
     * @return The GSUB table or null if font has GSUB no table.
     */
    virtual const uint16_t* getGSUBTable() const
    {
        return 0;
    }
 8002590:	2000      	movs	r0, #0
 8002592:	4770      	bx	lr

08002594 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
     * @return The FontContextualFormsTable or null if the font has no table.
     */
    virtual const FontContextualFormsTable* getContextualFormsTable() const
    {
        return 0;
    }
 8002594:	2000      	movs	r0, #0
 8002596:	4770      	bx	lr

08002598 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 8002598:	b40e      	push	{r1, r2, r3}
 800259a:	b503      	push	{r0, r1, lr}
 800259c:	ab03      	add	r3, sp, #12
    va_list pArg;
    va_start(pArg, text);
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800259e:	2100      	movs	r1, #0
{
 80025a0:	f853 2b04 	ldr.w	r2, [r3], #4
    va_start(pArg, text);
 80025a4:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 80025a6:	f009 fa7d 	bl	800baa4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80025aa:	b002      	add	sp, #8
 80025ac:	f85d eb04 	ldr.w	lr, [sp], #4
 80025b0:	b003      	add	sp, #12
 80025b2:	4770      	bx	lr

080025b4 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 80025b4:	b40c      	push	{r2, r3}
 80025b6:	b507      	push	{r0, r1, r2, lr}
 80025b8:	ab04      	add	r3, sp, #16
 80025ba:	f853 2b04 	ldr.w	r2, [r3], #4
    va_list pArg;
    va_start(pArg, text);
 80025be:	9301      	str	r3, [sp, #4]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 80025c0:	f009 fa70 	bl	800baa4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
    va_end(pArg);
    return width;
}
 80025c4:	b003      	add	sp, #12
 80025c6:	f85d eb04 	ldr.w	lr, [sp], #4
 80025ca:	b002      	add	sp, #8
 80025cc:	4770      	bx	lr
	...

080025d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
    if (fontGsubTable && nextCharacters.peekChar())
 80025d0:	6bc3      	ldr	r3, [r0, #60]	; 0x3c
{
 80025d2:	b510      	push	{r4, lr}
 80025d4:	4604      	mov	r4, r0
    if (fontGsubTable && nextCharacters.peekChar())
 80025d6:	b373      	cbz	r3, 8002636 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        {
            return used == size;
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 80025d8:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 80025da:	b92b      	cbnz	r3, 80025e8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x18>
 80025dc:	4b18      	ldr	r3, [pc, #96]	; (8002640 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x70>)
 80025de:	4a19      	ldr	r2, [pc, #100]	; (8002644 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x74>)
 80025e0:	21bf      	movs	r1, #191	; 0xbf
            return buffer[pos];
        }
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 80025e2:	4819      	ldr	r0, [pc, #100]	; (8002648 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x78>)
 80025e4:	f016 ff2c 	bl	8019440 <__assert_func>
            return buffer[pos];
 80025e8:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 80025ea:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80025ee:	8b5b      	ldrh	r3, [r3, #26]
 80025f0:	b30b      	cbz	r3, 8002636 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
    {
        substituteGlyphs();
 80025f2:	f00a fd3f 	bl	800d074 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
            assert(offset < used);
 80025f6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 80025f8:	2b01      	cmp	r3, #1
 80025fa:	d803      	bhi.n	8002604 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x34>
 80025fc:	4b13      	ldr	r3, [pc, #76]	; (800264c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x7c>)
 80025fe:	4a14      	ldr	r2, [pc, #80]	; (8002650 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x80>)
 8002600:	21c4      	movs	r1, #196	; 0xc4
 8002602:	e7ee      	b.n	80025e2 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x12>
            const uint16_t index = pos + offset;
 8002604:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 8002606:	1c53      	adds	r3, r2, #1
 8002608:	b29b      	uxth	r3, r3
            return buffer[index < size ? index : index - size];
 800260a:	2b09      	cmp	r3, #9
 800260c:	4619      	mov	r1, r3
 800260e:	bf88      	it	hi
 8002610:	f1a3 010a 	subhi.w	r1, r3, #10
 8002614:	eb04 0141 	add.w	r1, r4, r1, lsl #1
        if (nextCharacters.peekChar(1) == 0x093F) //Hindi I-matra
 8002618:	f640 103f 	movw	r0, #2367	; 0x93f
 800261c:	8b49      	ldrh	r1, [r1, #26]
 800261e:	4281      	cmp	r1, r0
 8002620:	d109      	bne.n	8002636 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x66>
        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
 8002622:	2b0a      	cmp	r3, #10
 8002624:	eb04 0242 	add.w	r2, r4, r2, lsl #1
 8002628:	bf28      	it	cs
 800262a:	2300      	movcs	r3, #0
        }
        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
            const uint16_t index = pos + 1;
            buffer[index < size ? index : 0] = newChar;
 800262c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
            return buffer[pos];
 8002630:	8b50      	ldrh	r0, [r2, #26]
            buffer[index < size ? index : 0] = newChar;
 8002632:	8358      	strh	r0, [r3, #26]
            buffer[pos] = newChar;
 8002634:	8351      	strh	r1, [r2, #26]
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
            nextCharacters.replaceAt0(0x093F);
        }
    }
    return getNextChar();
 8002636:	4620      	mov	r0, r4
}
 8002638:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
    return getNextChar();
 800263c:	f00a bbfe 	b.w	800ce3c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8002640:	0801b118 	.word	0x0801b118
 8002644:	0801b121 	.word	0x0801b121
 8002648:	0801b1cc 	.word	0x0801b1cc
 800264c:	0801b216 	.word	0x0801b216
 8002650:	0801b224 	.word	0x0801b224

08002654 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
    fillInputBuffer();
 8002654:	f00a bbac 	b.w	800cdb0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08002658 <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 8002658:	b538      	push	{r3, r4, r5, lr}
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
    if (id < 1)
 800265a:	bb10      	cbnz	r0, 80026a2 <_ZN8touchgfx5Texts11setLanguageEt+0x4a>
    {
        if (languagesArray[id] != 0)
 800265c:	4b11      	ldr	r3, [pc, #68]	; (80026a4 <_ZN8touchgfx5Texts11setLanguageEt+0x4c>)
 800265e:	4812      	ldr	r0, [pc, #72]	; (80026a8 <_ZN8touchgfx5Texts11setLanguageEt+0x50>)
 8002660:	681b      	ldr	r3, [r3, #0]
 8002662:	4912      	ldr	r1, [pc, #72]	; (80026ac <_ZN8touchgfx5Texts11setLanguageEt+0x54>)
 8002664:	b1b3      	cbz	r3, 8002694 <_ZN8touchgfx5Texts11setLanguageEt+0x3c>
        {
            //dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 8002666:	681a      	ldr	r2, [r3, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002668:	689c      	ldr	r4, [r3, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800266a:	441a      	add	r2, r3
 800266c:	6002      	str	r2, [r0, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800266e:	685a      	ldr	r2, [r3, #4]
 8002670:	441a      	add	r2, r3
 8002672:	600a      	str	r2, [r1, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 8002674:	441c      	add	r4, r3
        }
    }

    if (currentLanguageTypedText)
    {
        currentLanguage = id;
 8002676:	4b0e      	ldr	r3, [pc, #56]	; (80026b0 <_ZN8touchgfx5Texts11setLanguageEt+0x58>)
 8002678:	2200      	movs	r2, #0
 800267a:	801a      	strh	r2, [r3, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800267c:	f000 f826 	bl	80026cc <_ZN17TypedTextDatabase8getFontsEv>
 8002680:	4605      	mov	r5, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 8002682:	f000 f821 	bl	80026c8 <_ZN17TypedTextDatabase15getInstanceSizeEv>
        typedTexts = data;
 8002686:	4b0b      	ldr	r3, [pc, #44]	; (80026b4 <_ZN8touchgfx5Texts11setLanguageEt+0x5c>)
 8002688:	601c      	str	r4, [r3, #0]
        fonts = f;
 800268a:	4b0b      	ldr	r3, [pc, #44]	; (80026b8 <_ZN8touchgfx5Texts11setLanguageEt+0x60>)
 800268c:	601d      	str	r5, [r3, #0]
        numberOfTypedTexts = n;
 800268e:	4b0b      	ldr	r3, [pc, #44]	; (80026bc <_ZN8touchgfx5Texts11setLanguageEt+0x64>)
 8002690:	8018      	strh	r0, [r3, #0]
    }
}
 8002692:	e006      	b.n	80026a2 <_ZN8touchgfx5Texts11setLanguageEt+0x4a>
            currentLanguageIndices = staticLanguageIndices[id];
 8002694:	600b      	str	r3, [r1, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 8002696:	4b0a      	ldr	r3, [pc, #40]	; (80026c0 <_ZN8touchgfx5Texts11setLanguageEt+0x68>)
            currentLanguagePtr = texts_all_languages;
 8002698:	4a0a      	ldr	r2, [pc, #40]	; (80026c4 <_ZN8touchgfx5Texts11setLanguageEt+0x6c>)
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800269a:	681c      	ldr	r4, [r3, #0]
            currentLanguagePtr = texts_all_languages;
 800269c:	6002      	str	r2, [r0, #0]
    if (currentLanguageTypedText)
 800269e:	2c00      	cmp	r4, #0
 80026a0:	d1e9      	bne.n	8002676 <_ZN8touchgfx5Texts11setLanguageEt+0x1e>
}
 80026a2:	bd38      	pop	{r3, r4, r5, pc}
 80026a4:	20001158 	.word	0x20001158
 80026a8:	2000115c 	.word	0x2000115c
 80026ac:	20001160 	.word	0x20001160
 80026b0:	20001164 	.word	0x20001164
 80026b4:	2000a13c 	.word	0x2000a13c
 80026b8:	2000a144 	.word	0x2000a144
 80026bc:	2000a140 	.word	0x2000a140
 80026c0:	900001b0 	.word	0x900001b0
 80026c4:	900001a8 	.word	0x900001a8

080026c8 <_ZN17TypedTextDatabase15getInstanceSizeEv>:
}

uint16_t getInstanceSize()
{
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
}
 80026c8:	2001      	movs	r0, #1
 80026ca:	4770      	bx	lr

080026cc <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
    return touchgfx_fonts;
}
 80026cc:	4800      	ldr	r0, [pc, #0]	; (80026d0 <_ZN17TypedTextDatabase8getFontsEv+0x4>)
 80026ce:	4770      	bx	lr
 80026d0:	20001168 	.word	0x20001168

080026d4 <_GLOBAL__sub_I_touchgfx_fonts>:
    case 2:
        touchgfx_fonts[2] = &(getFont_verdana_10_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 80026d4:	b510      	push	{r4, lr}
    &(getFont_verdana_20_4bpp()),
 80026d6:	f7ff fee9 	bl	80024ac <_Z23getFont_verdana_20_4bppv>
};
 80026da:	4c04      	ldr	r4, [pc, #16]	; (80026ec <_GLOBAL__sub_I_touchgfx_fonts+0x18>)
 80026dc:	6020      	str	r0, [r4, #0]
    &(getFont_verdana_40_4bpp()),
 80026de:	f7ff ff1f 	bl	8002520 <_Z23getFont_verdana_40_4bppv>
};
 80026e2:	6060      	str	r0, [r4, #4]
    &(getFont_verdana_10_4bpp())
 80026e4:	f7ff fea8 	bl	8002438 <_Z23getFont_verdana_10_4bppv>
};
 80026e8:	60a0      	str	r0, [r4, #8]
} // namespace TypedTextDatabase
 80026ea:	bd10      	pop	{r4, pc}
 80026ec:	20001168 	.word	0x20001168

080026f0 <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 80026f0:	4770      	bx	lr

080026f2 <_ZN19FrontendApplicationD0Ev>:
 80026f2:	b510      	push	{r4, lr}
 80026f4:	f44f 71ac 	mov.w	r1, #344	; 0x158
 80026f8:	4604      	mov	r4, r0
 80026fa:	f016 fe72 	bl	80193e2 <_ZdlPvj>
 80026fe:	4620      	mov	r0, r4
 8002700:	bd10      	pop	{r4, pc}

08002702 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 8002702:	b510      	push	{r4, lr}
 8002704:	4604      	mov	r4, r0
    {
        model.tick();
 8002706:	f8d0 0154 	ldr.w	r0, [r0, #340]	; 0x154
 800270a:	f000 f812 	bl	8002732 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800270e:	4620      	mov	r0, r4
    }
 8002710:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
        FrontendApplicationBase::handleTickEvent();
 8002714:	f008 ba48 	b.w	800aba8 <_ZN8touchgfx11Application15handleTickEventEv>

08002718 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 8002718:	b510      	push	{r4, lr}
 800271a:	4604      	mov	r4, r0
    : FrontendApplicationBase(m, heap)
 800271c:	f7ff fcd0 	bl	80020c0 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 8002720:	4b01      	ldr	r3, [pc, #4]	; (8002728 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x10>)
 8002722:	6023      	str	r3, [r4, #0]
{

}
 8002724:	4620      	mov	r0, r4
 8002726:	bd10      	pop	{r4, pc}
 8002728:	0801b300 	.word	0x0801b300

0800272c <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>

Model::Model() : modelListener(0)
 800272c:	2200      	movs	r2, #0
 800272e:	6002      	str	r2, [r0, #0]
{

}
 8002730:	4770      	bx	lr

08002732 <_ZN5Model4tickEv>:

void Model::tick()
{

}
 8002732:	4770      	bx	lr

08002734 <_ZN16Screen1PresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~Screen1Presenter() {};
 8002734:	4770      	bx	lr

08002736 <_ZThn4_N16Screen1PresenterD1Ev>:
 8002736:	3804      	subs	r0, #4
 8002738:	4770      	bx	lr

0800273a <_ZN16Screen1Presenter10deactivateEv>:
}

void Screen1Presenter::activate()
{

}
 800273a:	4770      	bx	lr

0800273c <_ZN16Screen1PresenterD0Ev>:
 800273c:	b510      	push	{r4, lr}
 800273e:	2110      	movs	r1, #16
 8002740:	4604      	mov	r4, r0
 8002742:	f016 fe4e 	bl	80193e2 <_ZdlPvj>
 8002746:	4620      	mov	r0, r4
 8002748:	bd10      	pop	{r4, pc}

0800274a <_ZThn4_N16Screen1PresenterD0Ev>:
 800274a:	f1a0 0004 	sub.w	r0, r0, #4
 800274e:	e7f5      	b.n	800273c <_ZN16Screen1PresenterD0Ev>

08002750 <_ZN16Screen1PresenterC1ER11Screen1View>:
Screen1Presenter::Screen1Presenter(Screen1View& v)
 8002750:	b510      	push	{r4, lr}
    ModelListener() : model(0) {}
 8002752:	2200      	movs	r2, #0
 8002754:	6082      	str	r2, [r0, #8]
    : view(v)
 8002756:	4a04      	ldr	r2, [pc, #16]	; (8002768 <_ZN16Screen1PresenterC1ER11Screen1View+0x18>)
 8002758:	60c1      	str	r1, [r0, #12]
 800275a:	f102 0408 	add.w	r4, r2, #8
 800275e:	3220      	adds	r2, #32
 8002760:	6004      	str	r4, [r0, #0]
 8002762:	6042      	str	r2, [r0, #4]
}
 8002764:	bd10      	pop	{r4, pc}
 8002766:	bf00      	nop
 8002768:	0801b33c 	.word	0x0801b33c

0800276c <_ZN11Screen1ViewD1Ev>:

class Screen1View : public Screen1ViewBase
{
public:
    Screen1View();
    virtual ~Screen1View() {}
 800276c:	4770      	bx	lr

0800276e <_ZN11Screen1View14tearDownScreenEv>:
}

void Screen1View::tearDownScreen()
{
    Screen1ViewBase::tearDownScreen();
}
 800276e:	4770      	bx	lr

08002770 <_ZN11Screen1View11setupScreenEv>:
    Screen1ViewBase::setupScreen();
 8002770:	f7ff be23 	b.w	80023ba <_ZN15Screen1ViewBase11setupScreenEv>

08002774 <_ZN11Screen1ViewD0Ev>:
 8002774:	b510      	push	{r4, lr}
 8002776:	216c      	movs	r1, #108	; 0x6c
 8002778:	4604      	mov	r4, r0
 800277a:	f016 fe32 	bl	80193e2 <_ZdlPvj>
 800277e:	4620      	mov	r0, r4
 8002780:	bd10      	pop	{r4, pc}
	...

08002784 <_ZN11Screen1ViewC1Ev>:
Screen1View::Screen1View()
 8002784:	b510      	push	{r4, lr}
 8002786:	4604      	mov	r4, r0
 8002788:	f7ff fe20 	bl	80023cc <_ZN15Screen1ViewBaseC1Ev>
 800278c:	4b01      	ldr	r3, [pc, #4]	; (8002794 <_ZN11Screen1ViewC1Ev+0x10>)
 800278e:	6023      	str	r3, [r4, #0]
}
 8002790:	4620      	mov	r0, r4
 8002792:	bd10      	pop	{r4, pc}
 8002794:	0801b36c 	.word	0x0801b36c

08002798 <ft6x06_Reset>:
  */
void ft6x06_Reset(uint16_t DeviceAddr)
{
  /* Do nothing */
  /* No software reset sequence available in FT6206 IC */
}
 8002798:	4770      	bx	lr

0800279a <ft6x06_TS_ITStatus>:
  */
uint8_t ft6x06_TS_ITStatus(uint16_t DeviceAddr)
{
  /* Always return 0 as feature not applicable to FT6206 */
  return 0;
}
 800279a:	2000      	movs	r0, #0
 800279c:	4770      	bx	lr

0800279e <ft6x06_ReadID>:
{
 800279e:	b510      	push	{r4, lr}
 80027a0:	4604      	mov	r4, r0
  TS_IO_Init();
 80027a2:	f000 fb7d 	bl	8002ea0 <TS_IO_Init>
  return (TS_IO_Read(DeviceAddr, FT6206_CHIP_ID_REG));
 80027a6:	21a8      	movs	r1, #168	; 0xa8
 80027a8:	b2e0      	uxtb	r0, r4
 80027aa:	f000 fb93 	bl	8002ed4 <TS_IO_Read>
}
 80027ae:	b280      	uxth	r0, r0
 80027b0:	bd10      	pop	{r4, pc}
	...

080027b4 <ft6x06_TS_DetectTouch>:
{
 80027b4:	b513      	push	{r0, r1, r4, lr}
  volatile uint8_t nbTouch = 0;
 80027b6:	2400      	movs	r4, #0
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80027b8:	2102      	movs	r1, #2
 80027ba:	b2c0      	uxtb	r0, r0
  volatile uint8_t nbTouch = 0;
 80027bc:	f88d 4007 	strb.w	r4, [sp, #7]
  nbTouch = TS_IO_Read(DeviceAddr, FT6206_TD_STAT_REG);
 80027c0:	f000 fb88 	bl	8002ed4 <TS_IO_Read>
 80027c4:	f88d 0007 	strb.w	r0, [sp, #7]
  nbTouch &= FT6206_TD_STAT_MASK;
 80027c8:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80027cc:	f003 030f 	and.w	r3, r3, #15
 80027d0:	f88d 3007 	strb.w	r3, [sp, #7]
  if(nbTouch > FT6206_MAX_DETECTABLE_TOUCH)
 80027d4:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80027d8:	2b02      	cmp	r3, #2
    nbTouch = 0;
 80027da:	bf88      	it	hi
 80027dc:	f88d 4007 	strbhi.w	r4, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80027e0:	4b04      	ldr	r3, [pc, #16]	; (80027f4 <ft6x06_TS_DetectTouch+0x40>)
 80027e2:	f89d 2007 	ldrb.w	r2, [sp, #7]
  return(nbTouch);
 80027e6:	f89d 0007 	ldrb.w	r0, [sp, #7]
  ft6x06_handle.currActiveTouchNb = nbTouch;
 80027ea:	705a      	strb	r2, [r3, #1]
  ft6x06_handle.currActiveTouchIdx = 0;
 80027ec:	2200      	movs	r2, #0
 80027ee:	709a      	strb	r2, [r3, #2]
}
 80027f0:	b002      	add	sp, #8
 80027f2:	bd10      	pop	{r4, pc}
 80027f4:	20001176 	.word	0x20001176

080027f8 <ft6x06_TS_GetXY>:
{
 80027f8:	b573      	push	{r0, r1, r4, r5, r6, lr}
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80027fa:	4c15      	ldr	r4, [pc, #84]	; (8002850 <ft6x06_TS_GetXY+0x58>)
{
 80027fc:	4615      	mov	r5, r2
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 80027fe:	78a3      	ldrb	r3, [r4, #2]
 8002800:	7862      	ldrb	r2, [r4, #1]
 8002802:	429a      	cmp	r2, r3
{
 8002804:	460e      	mov	r6, r1
  if(ft6x06_handle.currActiveTouchIdx < ft6x06_handle.currActiveTouchNb)
 8002806:	d91f      	bls.n	8002848 <ft6x06_TS_GetXY+0x50>
    switch(ft6x06_handle.currActiveTouchIdx)
 8002808:	b303      	cbz	r3, 800284c <ft6x06_TS_GetXY+0x54>
      regAddress = FT6206_P2_XH_REG; 
 800280a:	2b01      	cmp	r3, #1
 800280c:	bf14      	ite	ne
 800280e:	2100      	movne	r1, #0
 8002810:	2109      	moveq	r1, #9
    TS_IO_ReadMultiple(DeviceAddr, regAddress, dataxy, sizeof(dataxy)); 
 8002812:	2304      	movs	r3, #4
 8002814:	eb0d 0203 	add.w	r2, sp, r3
 8002818:	b2c0      	uxtb	r0, r0
 800281a:	f000 fb77 	bl	8002f0c <TS_IO_ReadMultiple>
    *X = ((dataxy[0] & FT6206_MSB_MASK) << 8) | (dataxy[1] & FT6206_LSB_MASK);
 800281e:	f89d 3004 	ldrb.w	r3, [sp, #4]
 8002822:	f89d 2005 	ldrb.w	r2, [sp, #5]
 8002826:	021b      	lsls	r3, r3, #8
 8002828:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800282c:	4313      	orrs	r3, r2
 800282e:	8033      	strh	r3, [r6, #0]
    *Y = ((dataxy[2] & FT6206_MSB_MASK) << 8) | (dataxy[3] & FT6206_LSB_MASK);
 8002830:	f89d 3006 	ldrb.w	r3, [sp, #6]
 8002834:	f89d 2007 	ldrb.w	r2, [sp, #7]
 8002838:	021b      	lsls	r3, r3, #8
 800283a:	f403 6370 	and.w	r3, r3, #3840	; 0xf00
 800283e:	4313      	orrs	r3, r2
 8002840:	802b      	strh	r3, [r5, #0]
    ft6x06_handle.currActiveTouchIdx++;
 8002842:	78a3      	ldrb	r3, [r4, #2]
 8002844:	3301      	adds	r3, #1
 8002846:	70a3      	strb	r3, [r4, #2]
}
 8002848:	b002      	add	sp, #8
 800284a:	bd70      	pop	{r4, r5, r6, pc}
    switch(ft6x06_handle.currActiveTouchIdx)
 800284c:	2103      	movs	r1, #3
 800284e:	e7e0      	b.n	8002812 <ft6x06_TS_GetXY+0x1a>
 8002850:	20001176 	.word	0x20001176

08002854 <ft6x06_TS_EnableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 8002854:	2201      	movs	r2, #1
 8002856:	21a4      	movs	r1, #164	; 0xa4
 8002858:	b2c0      	uxtb	r0, r0
 800285a:	f000 bb23 	b.w	8002ea4 <TS_IO_Write>

0800285e <ft6x06_TS_DisableIT>:
  TS_IO_Write(DeviceAddr, FT6206_GMODE_REG, regValue);
 800285e:	2200      	movs	r2, #0
 8002860:	21a4      	movs	r1, #164	; 0xa4
 8002862:	b2c0      	uxtb	r0, r0
 8002864:	f000 bb1e 	b.w	8002ea4 <TS_IO_Write>

08002868 <ft6x06_TS_Start>:
  ft6x06_TS_DisableIT(DeviceAddr);
 8002868:	f7ff bff9 	b.w	800285e <ft6x06_TS_DisableIT>

0800286c <ft6x06_TS_ClearIT>:
 800286c:	4770      	bx	lr
	...

08002870 <ft6x06_Init>:
{  
 8002870:	b410      	push	{r4}
  uint8_t idx = 0;
  
  /* Check all the registered instances */
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
  {
    if(ft6x06[idx] == DeviceAddr)
 8002872:	4b09      	ldr	r3, [pc, #36]	; (8002898 <ft6x06_Init+0x28>)
 8002874:	781a      	ldrb	r2, [r3, #0]
 8002876:	4290      	cmp	r0, r2
 8002878:	d00a      	beq.n	8002890 <ft6x06_Init+0x20>
 800287a:	7859      	ldrb	r1, [r3, #1]
 800287c:	4288      	cmp	r0, r1
 800287e:	d007      	beq.n	8002890 <ft6x06_Init+0x20>
 8002880:	b10a      	cbz	r2, 8002886 <ft6x06_Init+0x16>
 8002882:	b929      	cbnz	r1, 8002890 <ft6x06_Init+0x20>
  for(idx = 0; idx < FT6x06_MAX_INSTANCE ; idx ++)
 8002884:	2201      	movs	r2, #1
      ft6x06[empty] = DeviceAddr;
 8002886:	5498      	strb	r0, [r3, r2]
}
 8002888:	f85d 4b04 	ldr.w	r4, [sp], #4
      TS_IO_Init(); 
 800288c:	f000 bb08 	b.w	8002ea0 <TS_IO_Init>
}
 8002890:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002894:	4770      	bx	lr
 8002896:	bf00      	nop
 8002898:	20001174 	.word	0x20001174

0800289c <OTM8009A_Init>:
  * @param  hdsi_eval : pointer on DSI configuration structure
  * @param  hdsivideo_handle : pointer on DSI video mode configuration structure
  * @retval Status
  */
uint8_t OTM8009A_Init(uint32_t ColorCoding, uint32_t orientation)
{
 800289c:	b538      	push	{r3, r4, r5, lr}
 800289e:	4604      	mov	r4, r0
 80028a0:	460d      	mov	r5, r1
  /* Enable CMD2 to access vendor specific commands                               */
  /* Enter in command 2 mode and set EXTC to enable address shift function (0x00) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 80028a2:	2000      	movs	r0, #0
 80028a4:	49cb      	ldr	r1, [pc, #812]	; (8002bd4 <OTM8009A_Init+0x338>)
 80028a6:	f7fe f8b7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData1);
 80028aa:	49cb      	ldr	r1, [pc, #812]	; (8002bd8 <OTM8009A_Init+0x33c>)
 80028ac:	2003      	movs	r0, #3
 80028ae:	f7fe f8b3 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Enter ORISE Command 2 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2); /* Shift address to 0x80 */
 80028b2:	49ca      	ldr	r1, [pc, #808]	; (8002bdc <OTM8009A_Init+0x340>)
 80028b4:	2000      	movs	r0, #0
 80028b6:	f7fe f8af 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData2);
 80028ba:	49c9      	ldr	r1, [pc, #804]	; (8002be0 <OTM8009A_Init+0x344>)
 80028bc:	2002      	movs	r0, #2
 80028be:	f7fe f8ab 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////
  /* SD_PCH_CTRL - 0xC480h - 129th parameter - Default 0x00          */
  /* Set SD_PT                                                       */
  /* -> Source output level during porch and non-display area to GND */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80028c2:	49c6      	ldr	r1, [pc, #792]	; (8002bdc <OTM8009A_Init+0x340>)
 80028c4:	2000      	movs	r0, #0
 80028c6:	f7fe f8a7 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData3);
 80028ca:	49c6      	ldr	r1, [pc, #792]	; (8002be4 <OTM8009A_Init+0x348>)
 80028cc:	2000      	movs	r0, #0
 80028ce:	f7fe f8a3 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 80028d2:	200a      	movs	r0, #10
 80028d4:	f000 fb30 	bl	8002f38 <OTM8009A_IO_Delay>
  /* Not documented */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData4);
 80028d8:	49c3      	ldr	r1, [pc, #780]	; (8002be8 <OTM8009A_Init+0x34c>)
 80028da:	2000      	movs	r0, #0
 80028dc:	f7fe f89c 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData5);
 80028e0:	49c2      	ldr	r1, [pc, #776]	; (8002bec <OTM8009A_Init+0x350>)
 80028e2:	2000      	movs	r0, #0
 80028e4:	f7fe f898 	bl	8000a18 <DSI_IO_WriteCmd>
  OTM8009A_IO_Delay(10);
 80028e8:	200a      	movs	r0, #10
 80028ea:	f000 fb25 	bl	8002f38 <OTM8009A_IO_Delay>
  /////////////////////////////////////////////////////////////////////

  /* PWR_CTRL4 - 0xC4B0h - 178th parameter - Default 0xA8 */
  /* Set gvdd_en_test                                     */
  /* -> enable GVDD test mode !!!                         */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData6);
 80028ee:	49c0      	ldr	r1, [pc, #768]	; (8002bf0 <OTM8009A_Init+0x354>)
 80028f0:	2000      	movs	r0, #0
 80028f2:	f7fe f891 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData7);
 80028f6:	49bf      	ldr	r1, [pc, #764]	; (8002bf4 <OTM8009A_Init+0x358>)
 80028f8:	2000      	movs	r0, #0
 80028fa:	f7fe f88d 	bl	8000a18 <DSI_IO_WriteCmd>
  /* PWR_CTRL2 - 0xC590h - 146th parameter - Default 0x79      */
  /* Set pump 4 vgh voltage                                    */
  /* -> from 15.0v down to 13.0v                               */
  /* Set pump 5 vgh voltage                                    */
  /* -> from -12.0v downto -9.0v                               */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData8);
 80028fe:	49be      	ldr	r1, [pc, #760]	; (8002bf8 <OTM8009A_Init+0x35c>)
 8002900:	2000      	movs	r0, #0
 8002902:	f7fe f889 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002906:	49bd      	ldr	r1, [pc, #756]	; (8002bfc <OTM8009A_Init+0x360>)
 8002908:	2000      	movs	r0, #0
 800290a:	f7fe f885 	bl	8000a18 <DSI_IO_WriteCmd>

  /* P_DRV_M - 0xC0B4h - 181th parameter - Default 0x00 */
  /* -> Column inversion                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData10);
 800290e:	49bc      	ldr	r1, [pc, #752]	; (8002c00 <OTM8009A_Init+0x364>)
 8002910:	2000      	movs	r0, #0
 8002912:	f7fe f881 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData11);
 8002916:	49bb      	ldr	r1, [pc, #748]	; (8002c04 <OTM8009A_Init+0x368>)
 8002918:	2000      	movs	r0, #0
 800291a:	f7fe f87d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* VCOMDC - 0xD900h - 1st parameter - Default 0x39h */
  /* VCOM Voltage settings                            */
  /* -> from -1.0000v downto -1.2625v                 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800291e:	49ad      	ldr	r1, [pc, #692]	; (8002bd4 <OTM8009A_Init+0x338>)
 8002920:	2000      	movs	r0, #0
 8002922:	f7fe f879 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData12);
 8002926:	49b8      	ldr	r1, [pc, #736]	; (8002c08 <OTM8009A_Init+0x36c>)
 8002928:	2000      	movs	r0, #0
 800292a:	f7fe f875 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Oscillator adjustment for Idle/Normal mode (LPDT only) set to 65Hz (default is 60Hz) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 800292e:	49b7      	ldr	r1, [pc, #732]	; (8002c0c <OTM8009A_Init+0x370>)
 8002930:	2000      	movs	r0, #0
 8002932:	f7fe f871 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData14);
 8002936:	49b6      	ldr	r1, [pc, #728]	; (8002c10 <OTM8009A_Init+0x374>)
 8002938:	2000      	movs	r0, #0
 800293a:	f7fe f86d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Video mode internal */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 800293e:	49b5      	ldr	r1, [pc, #724]	; (8002c14 <OTM8009A_Init+0x378>)
 8002940:	2000      	movs	r0, #0
 8002942:	f7fe f869 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData16);
 8002946:	49b4      	ldr	r1, [pc, #720]	; (8002c18 <OTM8009A_Init+0x37c>)
 8002948:	2000      	movs	r0, #0
 800294a:	f7fe f865 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 147h parameter - Default 0x00 */
  /* Set pump 4&5 x6                                     */
  /* -> ONLY VALID when PUMP4_EN_ASDM_HV = "0"           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData17);
 800294e:	49b3      	ldr	r1, [pc, #716]	; (8002c1c <OTM8009A_Init+0x380>)
 8002950:	2000      	movs	r0, #0
 8002952:	f7fe f861 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData18);
 8002956:	49b2      	ldr	r1, [pc, #712]	; (8002c20 <OTM8009A_Init+0x384>)
 8002958:	2000      	movs	r0, #0
 800295a:	f7fe f85d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 150th parameter - Default 0x33h */
  /* Change pump4 clock ratio                              */
  /* -> from 1 line to 1/2 line                            */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData19);
 800295e:	49b1      	ldr	r1, [pc, #708]	; (8002c24 <OTM8009A_Init+0x388>)
 8002960:	2000      	movs	r0, #0
 8002962:	f7fe f859 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData9);
 8002966:	49a5      	ldr	r1, [pc, #660]	; (8002bfc <OTM8009A_Init+0x360>)
 8002968:	2000      	movs	r0, #0
 800296a:	f7fe f855 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GVDD/NGVDD settings */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 800296e:	4999      	ldr	r1, [pc, #612]	; (8002bd4 <OTM8009A_Init+0x338>)
 8002970:	2000      	movs	r0, #0
 8002972:	f7fe f851 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData5);
 8002976:	49ac      	ldr	r1, [pc, #688]	; (8002c28 <OTM8009A_Init+0x38c>)
 8002978:	2002      	movs	r0, #2
 800297a:	f7fe f84d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* PWR_CTRL2 - 0xC590h - 149th parameter - Default 0x33h */
  /* Rewrite the default value !                           */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData20);
 800297e:	49ab      	ldr	r1, [pc, #684]	; (8002c2c <OTM8009A_Init+0x390>)
 8002980:	2000      	movs	r0, #0
 8002982:	f7fe f849 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData21);
 8002986:	49aa      	ldr	r1, [pc, #680]	; (8002c30 <OTM8009A_Init+0x394>)
 8002988:	2000      	movs	r0, #0
 800298a:	f7fe f845 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Panel display timing Setting 3 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData22);
 800298e:	49a9      	ldr	r1, [pc, #676]	; (8002c34 <OTM8009A_Init+0x398>)
 8002990:	2000      	movs	r0, #0
 8002992:	f7fe f841 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData23);
 8002996:	49a8      	ldr	r1, [pc, #672]	; (8002c38 <OTM8009A_Init+0x39c>)
 8002998:	2000      	movs	r0, #0
 800299a:	f7fe f83d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Power control 1 */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData24);
 800299e:	49a7      	ldr	r1, [pc, #668]	; (8002c3c <OTM8009A_Init+0x3a0>)
 80029a0:	2000      	movs	r0, #0
 80029a2:	f7fe f839 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData25);
 80029a6:	49a6      	ldr	r1, [pc, #664]	; (8002c40 <OTM8009A_Init+0x3a4>)
 80029a8:	2000      	movs	r0, #0
 80029aa:	f7fe f835 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Source driver precharge */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 80029ae:	4997      	ldr	r1, [pc, #604]	; (8002c0c <OTM8009A_Init+0x370>)
 80029b0:	2000      	movs	r0, #0
 80029b2:	f7fe f831 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData26);
 80029b6:	49a3      	ldr	r1, [pc, #652]	; (8002c44 <OTM8009A_Init+0x3a8>)
 80029b8:	2000      	movs	r0, #0
 80029ba:	f7fe f82d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData15);
 80029be:	4995      	ldr	r1, [pc, #596]	; (8002c14 <OTM8009A_Init+0x378>)
 80029c0:	2000      	movs	r0, #0
 80029c2:	f7fe f829 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData27);
 80029c6:	49a0      	ldr	r1, [pc, #640]	; (8002c48 <OTM8009A_Init+0x3ac>)
 80029c8:	2000      	movs	r0, #0
 80029ca:	f7fe f825 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData28);
 80029ce:	499f      	ldr	r1, [pc, #636]	; (8002c4c <OTM8009A_Init+0x3b0>)
 80029d0:	2000      	movs	r0, #0
 80029d2:	f7fe f821 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 2, (uint8_t *)lcdRegData6);
 80029d6:	499e      	ldr	r1, [pc, #632]	; (8002c50 <OTM8009A_Init+0x3b4>)
 80029d8:	2002      	movs	r0, #2
 80029da:	f7fe f81d 	bl	8000a18 <DSI_IO_WriteCmd>

  /* GOAVST */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 80029de:	497f      	ldr	r1, [pc, #508]	; (8002bdc <OTM8009A_Init+0x340>)
 80029e0:	2000      	movs	r0, #0
 80029e2:	f7fe f819 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 6, (uint8_t *)lcdRegData7);
 80029e6:	499b      	ldr	r1, [pc, #620]	; (8002c54 <OTM8009A_Init+0x3b8>)
 80029e8:	2006      	movs	r0, #6
 80029ea:	f7fe f815 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 80029ee:	499a      	ldr	r1, [pc, #616]	; (8002c58 <OTM8009A_Init+0x3bc>)
 80029f0:	2000      	movs	r0, #0
 80029f2:	f7fe f811 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData8);
 80029f6:	4999      	ldr	r1, [pc, #612]	; (8002c5c <OTM8009A_Init+0x3c0>)
 80029f8:	200e      	movs	r0, #14
 80029fa:	f7fe f80d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 80029fe:	4998      	ldr	r1, [pc, #608]	; (8002c60 <OTM8009A_Init+0x3c4>)
 8002a00:	2000      	movs	r0, #0
 8002a02:	f7fe f809 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 14, (uint8_t *)lcdRegData9);
 8002a06:	4997      	ldr	r1, [pc, #604]	; (8002c64 <OTM8009A_Init+0x3c8>)
 8002a08:	200e      	movs	r0, #14
 8002a0a:	f7fe f805 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002a0e:	4996      	ldr	r1, [pc, #600]	; (8002c68 <OTM8009A_Init+0x3cc>)
 8002a10:	2000      	movs	r0, #0
 8002a12:	f7fe f801 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData10);
 8002a16:	4995      	ldr	r1, [pc, #596]	; (8002c6c <OTM8009A_Init+0x3d0>)
 8002a18:	200a      	movs	r0, #10
 8002a1a:	f7fd fffd 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002a1e:	4994      	ldr	r1, [pc, #592]	; (8002c70 <OTM8009A_Init+0x3d4>)
 8002a20:	2000      	movs	r0, #0
 8002a22:	f7fd fff9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData46);
 8002a26:	4993      	ldr	r1, [pc, #588]	; (8002c74 <OTM8009A_Init+0x3d8>)
 8002a28:	2000      	movs	r0, #0
 8002a2a:	f7fd fff5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002a2e:	496b      	ldr	r1, [pc, #428]	; (8002bdc <OTM8009A_Init+0x340>)
 8002a30:	2000      	movs	r0, #0
 8002a32:	f7fd fff1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData11);
 8002a36:	4990      	ldr	r1, [pc, #576]	; (8002c78 <OTM8009A_Init+0x3dc>)
 8002a38:	200a      	movs	r0, #10
 8002a3a:	f7fd ffed 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002a3e:	498f      	ldr	r1, [pc, #572]	; (8002c7c <OTM8009A_Init+0x3e0>)
 8002a40:	2000      	movs	r0, #0
 8002a42:	f7fd ffe9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData12);
 8002a46:	498e      	ldr	r1, [pc, #568]	; (8002c80 <OTM8009A_Init+0x3e4>)
 8002a48:	200f      	movs	r0, #15
 8002a4a:	f7fd ffe5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002a4e:	4982      	ldr	r1, [pc, #520]	; (8002c58 <OTM8009A_Init+0x3bc>)
 8002a50:	2000      	movs	r0, #0
 8002a52:	f7fd ffe1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData13);
 8002a56:	498b      	ldr	r1, [pc, #556]	; (8002c84 <OTM8009A_Init+0x3e8>)
 8002a58:	200f      	movs	r0, #15
 8002a5a:	f7fd ffdd 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002a5e:	4980      	ldr	r1, [pc, #512]	; (8002c60 <OTM8009A_Init+0x3c4>)
 8002a60:	2000      	movs	r0, #0
 8002a62:	f7fd ffd9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData14);
 8002a66:	4988      	ldr	r1, [pc, #544]	; (8002c88 <OTM8009A_Init+0x3ec>)
 8002a68:	200a      	movs	r0, #10
 8002a6a:	f7fd ffd5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002a6e:	497e      	ldr	r1, [pc, #504]	; (8002c68 <OTM8009A_Init+0x3cc>)
 8002a70:	2000      	movs	r0, #0
 8002a72:	f7fd ffd1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData15);
 8002a76:	4985      	ldr	r1, [pc, #532]	; (8002c8c <OTM8009A_Init+0x3f0>)
 8002a78:	200f      	movs	r0, #15
 8002a7a:	f7fd ffcd 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002a7e:	497c      	ldr	r1, [pc, #496]	; (8002c70 <OTM8009A_Init+0x3d4>)
 8002a80:	2000      	movs	r0, #0
 8002a82:	f7fd ffc9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData16);
 8002a86:	4982      	ldr	r1, [pc, #520]	; (8002c90 <OTM8009A_Init+0x3f4>)
 8002a88:	200f      	movs	r0, #15
 8002a8a:	f7fd ffc5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData34);
 8002a8e:	4981      	ldr	r1, [pc, #516]	; (8002c94 <OTM8009A_Init+0x3f8>)
 8002a90:	2000      	movs	r0, #0
 8002a92:	f7fd ffc1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData17);
 8002a96:	4980      	ldr	r1, [pc, #512]	; (8002c98 <OTM8009A_Init+0x3fc>)
 8002a98:	200a      	movs	r0, #10
 8002a9a:	f7fd ffbd 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData35);
 8002a9e:	497f      	ldr	r1, [pc, #508]	; (8002c9c <OTM8009A_Init+0x400>)
 8002aa0:	2000      	movs	r0, #0
 8002aa2:	f7fd ffb9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData18);
 8002aa6:	497e      	ldr	r1, [pc, #504]	; (8002ca0 <OTM8009A_Init+0x404>)
 8002aa8:	200a      	movs	r0, #10
 8002aaa:	f7fd ffb5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData2);
 8002aae:	494b      	ldr	r1, [pc, #300]	; (8002bdc <OTM8009A_Init+0x340>)
 8002ab0:	2000      	movs	r0, #0
 8002ab2:	f7fd ffb1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData19);
 8002ab6:	497b      	ldr	r1, [pc, #492]	; (8002ca4 <OTM8009A_Init+0x408>)
 8002ab8:	200a      	movs	r0, #10
 8002aba:	f7fd ffad 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData33);
 8002abe:	496f      	ldr	r1, [pc, #444]	; (8002c7c <OTM8009A_Init+0x3e0>)
 8002ac0:	2000      	movs	r0, #0
 8002ac2:	f7fd ffa9 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData20);
 8002ac6:	4978      	ldr	r1, [pc, #480]	; (8002ca8 <OTM8009A_Init+0x40c>)
 8002ac8:	200f      	movs	r0, #15
 8002aca:	f7fd ffa5 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData29);
 8002ace:	4962      	ldr	r1, [pc, #392]	; (8002c58 <OTM8009A_Init+0x3bc>)
 8002ad0:	2000      	movs	r0, #0
 8002ad2:	f7fd ffa1 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData21);
 8002ad6:	4975      	ldr	r1, [pc, #468]	; (8002cac <OTM8009A_Init+0x410>)
 8002ad8:	200f      	movs	r0, #15
 8002ada:	f7fd ff9d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData30);
 8002ade:	4960      	ldr	r1, [pc, #384]	; (8002c60 <OTM8009A_Init+0x3c4>)
 8002ae0:	2000      	movs	r0, #0
 8002ae2:	f7fd ff99 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 10, (uint8_t *)lcdRegData22);
 8002ae6:	4972      	ldr	r1, [pc, #456]	; (8002cb0 <OTM8009A_Init+0x414>)
 8002ae8:	200a      	movs	r0, #10
 8002aea:	f7fd ff95 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData31);
 8002aee:	495e      	ldr	r1, [pc, #376]	; (8002c68 <OTM8009A_Init+0x3cc>)
 8002af0:	2000      	movs	r0, #0
 8002af2:	f7fd ff91 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData23);
 8002af6:	496f      	ldr	r1, [pc, #444]	; (8002cb4 <OTM8009A_Init+0x418>)
 8002af8:	200f      	movs	r0, #15
 8002afa:	f7fd ff8d 	bl	8000a18 <DSI_IO_WriteCmd>

  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData32);
 8002afe:	495c      	ldr	r1, [pc, #368]	; (8002c70 <OTM8009A_Init+0x3d4>)
 8002b00:	2000      	movs	r0, #0
 8002b02:	f7fd ff89 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 15, (uint8_t *)lcdRegData24);
 8002b06:	496c      	ldr	r1, [pc, #432]	; (8002cb8 <OTM8009A_Init+0x41c>)
 8002b08:	200f      	movs	r0, #15
 8002b0a:	f7fd ff85 	bl	8000a18 <DSI_IO_WriteCmd>

  /////////////////////////////////////////////////////////////////////////////
  /* PWR_CTRL1 - 0xc580h - 130th parameter - default 0x00 */
  /* Pump 1 min and max DM                                */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData13);
 8002b0e:	493f      	ldr	r1, [pc, #252]	; (8002c0c <OTM8009A_Init+0x370>)
 8002b10:	2000      	movs	r0, #0
 8002b12:	f7fd ff81 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData47);
 8002b16:	4969      	ldr	r1, [pc, #420]	; (8002cbc <OTM8009A_Init+0x420>)
 8002b18:	2000      	movs	r0, #0
 8002b1a:	f7fd ff7d 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData48);
 8002b1e:	4968      	ldr	r1, [pc, #416]	; (8002cc0 <OTM8009A_Init+0x424>)
 8002b20:	2000      	movs	r0, #0
 8002b22:	f7fd ff79 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData49);
 8002b26:	4967      	ldr	r1, [pc, #412]	; (8002cc4 <OTM8009A_Init+0x428>)
 8002b28:	2000      	movs	r0, #0
 8002b2a:	f7fd ff75 	bl	8000a18 <DSI_IO_WriteCmd>
  /////////////////////////////////////////////////////////////////////////////

  /* CABC LEDPWM frequency adjusted to 19,5kHz */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData50);
 8002b2e:	4966      	ldr	r1, [pc, #408]	; (8002cc8 <OTM8009A_Init+0x42c>)
 8002b30:	2000      	movs	r0, #0
 8002b32:	f7fd ff71 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData51);
 8002b36:	4965      	ldr	r1, [pc, #404]	; (8002ccc <OTM8009A_Init+0x430>)
 8002b38:	2000      	movs	r0, #0
 8002b3a:	f7fd ff6d 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Exit CMD2 mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002b3e:	4925      	ldr	r1, [pc, #148]	; (8002bd4 <OTM8009A_Init+0x338>)
 8002b40:	2000      	movs	r0, #0
 8002b42:	f7fd ff69 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 3, (uint8_t *)lcdRegData25);
 8002b46:	4962      	ldr	r1, [pc, #392]	; (8002cd0 <OTM8009A_Init+0x434>)
 8002b48:	2003      	movs	r0, #3
 8002b4a:	f7fd ff65 	bl	8000a18 <DSI_IO_WriteCmd>
  /*************************************************************************** */
  /* Standard DCS Initialization TO KEEP CAN BE DONE IN HSDT                   */
  /*************************************************************************** */

  /* NOP - goes back to DCS std command ? */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002b4e:	4921      	ldr	r1, [pc, #132]	; (8002bd4 <OTM8009A_Init+0x338>)
 8002b50:	2000      	movs	r0, #0
 8002b52:	f7fd ff61 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Gamma correction 2.2+ table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002b56:	491f      	ldr	r1, [pc, #124]	; (8002bd4 <OTM8009A_Init+0x338>)
 8002b58:	2000      	movs	r0, #0
 8002b5a:	f7fd ff5d 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData3);
 8002b5e:	495d      	ldr	r1, [pc, #372]	; (8002cd4 <OTM8009A_Init+0x438>)
 8002b60:	2010      	movs	r0, #16
 8002b62:	f7fd ff59 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Gamma correction 2.2- table (HSDT possible) */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002b66:	491b      	ldr	r1, [pc, #108]	; (8002bd4 <OTM8009A_Init+0x338>)
 8002b68:	2000      	movs	r0, #0
 8002b6a:	f7fd ff55 	bl	8000a18 <DSI_IO_WriteCmd>
  DSI_IO_WriteCmd( 16, (uint8_t *)lcdRegData4);
 8002b6e:	495a      	ldr	r1, [pc, #360]	; (8002cd8 <OTM8009A_Init+0x43c>)
 8002b70:	2010      	movs	r0, #16
 8002b72:	f7fd ff51 	bl	8000a18 <DSI_IO_WriteCmd>
          
  /* Send Sleep Out command to display : no parameter */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData36);
 8002b76:	2000      	movs	r0, #0
 8002b78:	4958      	ldr	r1, [pc, #352]	; (8002cdc <OTM8009A_Init+0x440>)
 8002b7a:	f7fd ff4d 	bl	8000a18 <DSI_IO_WriteCmd>
  
  /* Wait for sleep out exit */
  OTM8009A_IO_Delay(120);
 8002b7e:	2078      	movs	r0, #120	; 0x78
 8002b80:	f000 f9da 	bl	8002f38 <OTM8009A_IO_Delay>

  switch(ColorCoding)
 8002b84:	2c00      	cmp	r4, #0
 8002b86:	f000 80c9 	beq.w	8002d1c <OTM8009A_Init+0x480>
 8002b8a:	2c02      	cmp	r4, #2
 8002b8c:	d103      	bne.n	8002b96 <OTM8009A_Init+0x2fa>
  {
  case OTM8009A_FORMAT_RBG565 :
    /* Set Pixel color format to RGB565 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData37);
 8002b8e:	4954      	ldr	r1, [pc, #336]	; (8002ce0 <OTM8009A_Init+0x444>)
 8002b90:	2000      	movs	r0, #0
    break;
  case OTM8009A_FORMAT_RGB888 :
    /* Set Pixel color format to RGB888 */
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8002b92:	f7fd ff41 	bl	8000a18 <DSI_IO_WriteCmd>
    break;
  }

  /* Send command to configure display in landscape orientation mode. By default
      the orientation mode is portrait  */
  if(orientation == OTM8009A_ORIENTATION_LANDSCAPE)
 8002b96:	2d01      	cmp	r5, #1
 8002b98:	d10b      	bne.n	8002bb2 <OTM8009A_Init+0x316>
  {
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData39);
 8002b9a:	4952      	ldr	r1, [pc, #328]	; (8002ce4 <OTM8009A_Init+0x448>)
 8002b9c:	2000      	movs	r0, #0
 8002b9e:	f7fd ff3b 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData27);
 8002ba2:	4951      	ldr	r1, [pc, #324]	; (8002ce8 <OTM8009A_Init+0x44c>)
 8002ba4:	2004      	movs	r0, #4
 8002ba6:	f7fd ff37 	bl	8000a18 <DSI_IO_WriteCmd>
    DSI_IO_WriteCmd( 4, (uint8_t *)lcdRegData28);
 8002baa:	4950      	ldr	r1, [pc, #320]	; (8002cec <OTM8009A_Init+0x450>)
 8002bac:	2004      	movs	r0, #4
 8002bae:	f7fd ff33 	bl	8000a18 <DSI_IO_WriteCmd>
  }

  /** CABC : Content Adaptive Backlight Control section start >> */
  /* Note : defaut is 0 (lowest Brightness), 0xFF is highest Brightness, try 0x7F : intermediate value */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData40);
 8002bb2:	494f      	ldr	r1, [pc, #316]	; (8002cf0 <OTM8009A_Init+0x454>)
 8002bb4:	2000      	movs	r0, #0
 8002bb6:	f7fd ff2f 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x2C - Brightness Control Block, Display Dimming & BackLight on */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData41);
 8002bba:	494e      	ldr	r1, [pc, #312]	; (8002cf4 <OTM8009A_Init+0x458>)
 8002bbc:	2000      	movs	r0, #0
 8002bbe:	f7fd ff2b 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0, try 0x02 - image Content based Adaptive Brightness [Still Picture] */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData42);
 8002bc2:	494d      	ldr	r1, [pc, #308]	; (8002cf8 <OTM8009A_Init+0x45c>)
 8002bc4:	2000      	movs	r0, #0
 8002bc6:	f7fd ff27 	bl	8000a18 <DSI_IO_WriteCmd>

  /* defaut is 0 (lowest Brightness), 0xFF is highest Brightness */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData43);
 8002bca:	494c      	ldr	r1, [pc, #304]	; (8002cfc <OTM8009A_Init+0x460>)
 8002bcc:	2000      	movs	r0, #0
 8002bce:	f7fd ff23 	bl	8000a18 <DSI_IO_WriteCmd>
 8002bd2:	e095      	b.n	8002d00 <OTM8009A_Init+0x464>
 8002bd4:	0801b398 	.word	0x0801b398
 8002bd8:	0801b3fe 	.word	0x0801b3fe
 8002bdc:	0801b3ae 	.word	0x0801b3ae
 8002be0:	0801b484 	.word	0x0801b484
 8002be4:	0801b3c4 	.word	0x0801b3c4
 8002be8:	0801b3da 	.word	0x0801b3da
 8002bec:	0801b3f0 	.word	0x0801b3f0
 8002bf0:	0801b3f6 	.word	0x0801b3f6
 8002bf4:	0801b3f8 	.word	0x0801b3f8
 8002bf8:	0801b3fa 	.word	0x0801b3fa
 8002bfc:	0801b3fc 	.word	0x0801b3fc
 8002c00:	0801b39a 	.word	0x0801b39a
 8002c04:	0801b39c 	.word	0x0801b39c
 8002c08:	0801b39e 	.word	0x0801b39e
 8002c0c:	0801b3a0 	.word	0x0801b3a0
 8002c10:	0801b3a2 	.word	0x0801b3a2
 8002c14:	0801b3a4 	.word	0x0801b3a4
 8002c18:	0801b3a6 	.word	0x0801b3a6
 8002c1c:	0801b3a8 	.word	0x0801b3a8
 8002c20:	0801b3aa 	.word	0x0801b3aa
 8002c24:	0801b3ac 	.word	0x0801b3ac
 8002c28:	0801b502 	.word	0x0801b502
 8002c2c:	0801b3b0 	.word	0x0801b3b0
 8002c30:	0801b3b2 	.word	0x0801b3b2
 8002c34:	0801b3b4 	.word	0x0801b3b4
 8002c38:	0801b3b6 	.word	0x0801b3b6
 8002c3c:	0801b3b8 	.word	0x0801b3b8
 8002c40:	0801b3ba 	.word	0x0801b3ba
 8002c44:	0801b3bc 	.word	0x0801b3bc
 8002c48:	0801b3be 	.word	0x0801b3be
 8002c4c:	0801b3c0 	.word	0x0801b3c0
 8002c50:	0801b505 	.word	0x0801b505
 8002c54:	0801b508 	.word	0x0801b508
 8002c58:	0801b3c2 	.word	0x0801b3c2
 8002c5c:	0801b50f 	.word	0x0801b50f
 8002c60:	0801b3c6 	.word	0x0801b3c6
 8002c64:	0801b51e 	.word	0x0801b51e
 8002c68:	0801b3c8 	.word	0x0801b3c8
 8002c6c:	0801b402 	.word	0x0801b402
 8002c70:	0801b3ca 	.word	0x0801b3ca
 8002c74:	0801b3e8 	.word	0x0801b3e8
 8002c78:	0801b40d 	.word	0x0801b40d
 8002c7c:	0801b3cc 	.word	0x0801b3cc
 8002c80:	0801b418 	.word	0x0801b418
 8002c84:	0801b428 	.word	0x0801b428
 8002c88:	0801b438 	.word	0x0801b438
 8002c8c:	0801b443 	.word	0x0801b443
 8002c90:	0801b453 	.word	0x0801b453
 8002c94:	0801b3ce 	.word	0x0801b3ce
 8002c98:	0801b463 	.word	0x0801b463
 8002c9c:	0801b3d0 	.word	0x0801b3d0
 8002ca0:	0801b46e 	.word	0x0801b46e
 8002ca4:	0801b479 	.word	0x0801b479
 8002ca8:	0801b487 	.word	0x0801b487
 8002cac:	0801b497 	.word	0x0801b497
 8002cb0:	0801b4a7 	.word	0x0801b4a7
 8002cb4:	0801b4b2 	.word	0x0801b4b2
 8002cb8:	0801b4c2 	.word	0x0801b4c2
 8002cbc:	0801b3ea 	.word	0x0801b3ea
 8002cc0:	0801b3ec 	.word	0x0801b3ec
 8002cc4:	0801b3ee 	.word	0x0801b3ee
 8002cc8:	0801b3f2 	.word	0x0801b3f2
 8002ccc:	0801b3f4 	.word	0x0801b3f4
 8002cd0:	0801b4d2 	.word	0x0801b4d2
 8002cd4:	0801b4e0 	.word	0x0801b4e0
 8002cd8:	0801b4f1 	.word	0x0801b4f1
 8002cdc:	0801b3d2 	.word	0x0801b3d2
 8002ce0:	0801b3d4 	.word	0x0801b3d4
 8002ce4:	0801b3d8 	.word	0x0801b3d8
 8002ce8:	0801b4d6 	.word	0x0801b4d6
 8002cec:	0801b4db 	.word	0x0801b4db
 8002cf0:	0801b3dc 	.word	0x0801b3dc
 8002cf4:	0801b3de 	.word	0x0801b3de
 8002cf8:	0801b3e0 	.word	0x0801b3e0
 8002cfc:	0801b3e2 	.word	0x0801b3e2

  /** CABC : Content Adaptive Backlight Control section end << */

  /* Send Command Display On */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData44);
 8002d00:	4908      	ldr	r1, [pc, #32]	; (8002d24 <OTM8009A_Init+0x488>)
 8002d02:	2000      	movs	r0, #0
 8002d04:	f7fd fe88 	bl	8000a18 <DSI_IO_WriteCmd>

  /* NOP command */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData1);
 8002d08:	4907      	ldr	r1, [pc, #28]	; (8002d28 <OTM8009A_Init+0x48c>)
 8002d0a:	2000      	movs	r0, #0
 8002d0c:	f7fd fe84 	bl	8000a18 <DSI_IO_WriteCmd>

  /* Send Command GRAM memory write (no parameters) : this initiates frame write via other DSI commands sent by */
  /* DSI host from LTDC incoming pixels in video mode */
  DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData45);
 8002d10:	4906      	ldr	r1, [pc, #24]	; (8002d2c <OTM8009A_Init+0x490>)
 8002d12:	2000      	movs	r0, #0
 8002d14:	f7fd fe80 	bl	8000a18 <DSI_IO_WriteCmd>

  return 0;
}
 8002d18:	2000      	movs	r0, #0
 8002d1a:	bd38      	pop	{r3, r4, r5, pc}
    DSI_IO_WriteCmd(0, (uint8_t *)ShortRegData38);
 8002d1c:	4904      	ldr	r1, [pc, #16]	; (8002d30 <OTM8009A_Init+0x494>)
 8002d1e:	4620      	mov	r0, r4
 8002d20:	e737      	b.n	8002b92 <OTM8009A_Init+0x2f6>
 8002d22:	bf00      	nop
 8002d24:	0801b3e4 	.word	0x0801b3e4
 8002d28:	0801b398 	.word	0x0801b398
 8002d2c:	0801b3e6 	.word	0x0801b3e6
 8002d30:	0801b3d6 	.word	0x0801b3d6

08002d34 <I2C1_Init>:

/**
  * @brief  Initializes I2C HAL.
  */
static void I2C1_Init(void)
{
 8002d34:	b570      	push	{r4, r5, r6, lr}
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8002d36:	4d2e      	ldr	r5, [pc, #184]	; (8002df0 <I2C1_Init+0xbc>)
{
 8002d38:	b088      	sub	sp, #32
  if(HAL_I2C_GetState(&heval_I2c1) == HAL_I2C_STATE_RESET)
 8002d3a:	4628      	mov	r0, r5
 8002d3c:	f002 f95e 	bl	8004ffc <HAL_I2C_GetState>
 8002d40:	4604      	mov	r4, r0
 8002d42:	2800      	cmp	r0, #0
 8002d44:	d151      	bne.n	8002dea <I2C1_Init+0xb6>
  {
    heval_I2c1.Instance = I2C1;
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8002d46:	4a2b      	ldr	r2, [pc, #172]	; (8002df4 <I2C1_Init+0xc0>)
 8002d48:	4b2b      	ldr	r3, [pc, #172]	; (8002df8 <I2C1_Init+0xc4>)
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002d4a:	4e2c      	ldr	r6, [pc, #176]	; (8002dfc <I2C1_Init+0xc8>)
 8002d4c:	9001      	str	r0, [sp, #4]
    heval_I2c1.Init.ClockSpeed      = I2C1_SCL_FREQ_KHZ;
 8002d4e:	e9c5 2300 	strd	r2, r3, [r5]
    heval_I2c1.Init.DutyCycle       = I2C_DUTYCYCLE_2;
    heval_I2c1.Init.OwnAddress1     = 0;
    heval_I2c1.Init.AddressingMode  = I2C_ADDRESSINGMODE_7BIT;
 8002d52:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    heval_I2c1.Init.OwnAddress1     = 0;
 8002d56:	e9c5 0002 	strd	r0, r0, [r5, #8]
    heval_I2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002d5a:	e9c5 3004 	strd	r3, r0, [r5, #16]
    heval_I2c1.Init.OwnAddress2     = 0;
    heval_I2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8002d5e:	e9c5 0006 	strd	r0, r0, [r5, #24]
    heval_I2c1.Init.NoStretchMode   = I2C_NOSTRETCH_DISABLE;
 8002d62:	6228      	str	r0, [r5, #32]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002d64:	6b33      	ldr	r3, [r6, #48]	; 0x30
 8002d66:	f043 0302 	orr.w	r3, r3, #2
 8002d6a:	6333      	str	r3, [r6, #48]	; 0x30
 8002d6c:	6b33      	ldr	r3, [r6, #48]	; 0x30
  gpio_init_structure.Pull = GPIO_NOPULL;
 8002d6e:	9005      	str	r0, [sp, #20]
  DISCO_I2C1_SCL_SDA_GPIO_CLK_ENABLE();
 8002d70:	f003 0302 	and.w	r3, r3, #2
 8002d74:	9301      	str	r3, [sp, #4]
 8002d76:	9b01      	ldr	r3, [sp, #4]
  gpio_init_structure.Mode = GPIO_MODE_AF_OD;
 8002d78:	f44f 7180 	mov.w	r1, #256	; 0x100
 8002d7c:	2312      	movs	r3, #18
 8002d7e:	e9cd 1303 	strd	r1, r3, [sp, #12]
  gpio_init_structure.Alternate = DISCO_I2C1_SCL_SDA_AF;
 8002d82:	2002      	movs	r0, #2
 8002d84:	2304      	movs	r3, #4
 8002d86:	e9cd 0306 	strd	r0, r3, [sp, #24]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002d8a:	a903      	add	r1, sp, #12
 8002d8c:	481c      	ldr	r0, [pc, #112]	; (8002e00 <I2C1_Init+0xcc>)
 8002d8e:	f001 fb63 	bl	8004458 <HAL_GPIO_Init>
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8002d92:	f44f 7300 	mov.w	r3, #512	; 0x200
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002d96:	481a      	ldr	r0, [pc, #104]	; (8002e00 <I2C1_Init+0xcc>)
  gpio_init_structure.Pin = DISCO_I2C1_SDA_PIN;
 8002d98:	9303      	str	r3, [sp, #12]
  HAL_GPIO_Init(DISCO_I2C1_SCL_SDA_GPIO_PORT, &gpio_init_structure);
 8002d9a:	a903      	add	r1, sp, #12
 8002d9c:	f001 fb5c 	bl	8004458 <HAL_GPIO_Init>
  DISCO_I2C1_CLK_ENABLE();
 8002da0:	9402      	str	r4, [sp, #8]
 8002da2:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8002da4:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002da8:	6433      	str	r3, [r6, #64]	; 0x40
 8002daa:	6c33      	ldr	r3, [r6, #64]	; 0x40
 8002dac:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8002db0:	9302      	str	r3, [sp, #8]
 8002db2:	9b02      	ldr	r3, [sp, #8]
  DISCO_I2C1_FORCE_RESET();
 8002db4:	6a33      	ldr	r3, [r6, #32]
 8002db6:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002dba:	6233      	str	r3, [r6, #32]
  DISCO_I2C1_RELEASE_RESET();
 8002dbc:	6a33      	ldr	r3, [r6, #32]
 8002dbe:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 8002dc2:	6233      	str	r3, [r6, #32]
  HAL_NVIC_SetPriority(DISCO_I2C1_EV_IRQn, 0x05, 0);
 8002dc4:	4622      	mov	r2, r4
 8002dc6:	2105      	movs	r1, #5
 8002dc8:	201f      	movs	r0, #31
 8002dca:	f000 fd11 	bl	80037f0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_EV_IRQn);
 8002dce:	201f      	movs	r0, #31
 8002dd0:	f000 fd40 	bl	8003854 <HAL_NVIC_EnableIRQ>
  HAL_NVIC_SetPriority(DISCO_I2C1_ER_IRQn, 0x05, 0);
 8002dd4:	4622      	mov	r2, r4
 8002dd6:	2105      	movs	r1, #5
 8002dd8:	2020      	movs	r0, #32
 8002dda:	f000 fd09 	bl	80037f0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DISCO_I2C1_ER_IRQn);
 8002dde:	2020      	movs	r0, #32
 8002de0:	f000 fd38 	bl	8003854 <HAL_NVIC_EnableIRQ>

    /* Init the I2C */
    I2C1_MspInit();
    HAL_I2C_Init(&heval_I2c1);
 8002de4:	4628      	mov	r0, r5
 8002de6:	f001 feaf 	bl	8004b48 <HAL_I2C_Init>
  }
}
 8002dea:	b008      	add	sp, #32
 8002dec:	bd70      	pop	{r4, r5, r6, pc}
 8002dee:	bf00      	nop
 8002df0:	2000117c 	.word	0x2000117c
 8002df4:	40005400 	.word	0x40005400
 8002df8:	00061a80 	.word	0x00061a80
 8002dfc:	40023800 	.word	0x40023800
 8002e00:	40020400 	.word	0x40020400

08002e04 <I2C1_Error.isra.0>:

/**
  * @brief  Manages error callback by re-initializing I2C.
  * @param  Addr: I2C Address
  */
static void I2C1_Error(uint8_t Addr)
 8002e04:	b508      	push	{r3, lr}
{
  /* De-initialize the I2C comunication bus */
  HAL_I2C_DeInit(&heval_I2c1);
 8002e06:	4803      	ldr	r0, [pc, #12]	; (8002e14 <I2C1_Error.isra.0+0x10>)
 8002e08:	f001 ff46 	bl	8004c98 <HAL_I2C_DeInit>

  /* Re-Initiaize the I2C comunication bus */
  I2C1_Init();
}
 8002e0c:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
  I2C1_Init();
 8002e10:	f7ff bf90 	b.w	8002d34 <I2C1_Init>
 8002e14:	2000117c 	.word	0x2000117c

08002e18 <BSP_PB_Init>:
{
 8002e18:	b510      	push	{r4, lr}
 8002e1a:	b086      	sub	sp, #24
  BUTTON_GPIO_CLK_ENABLE();
 8002e1c:	4b19      	ldr	r3, [pc, #100]	; (8002e84 <BSP_PB_Init+0x6c>)
 8002e1e:	2400      	movs	r4, #0
 8002e20:	9400      	str	r4, [sp, #0]
 8002e22:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8002e24:	f042 0201 	orr.w	r2, r2, #1
 8002e28:	631a      	str	r2, [r3, #48]	; 0x30
 8002e2a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002e2c:	f003 0301 	and.w	r3, r3, #1
 8002e30:	9300      	str	r3, [sp, #0]
 8002e32:	9b00      	ldr	r3, [sp, #0]
  if(Button_Mode == BUTTON_MODE_GPIO)
 8002e34:	b969      	cbnz	r1, 8002e52 <BSP_PB_Init+0x3a>
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8002e36:	2301      	movs	r3, #1
    gpio_init_structure.Mode = GPIO_MODE_INPUT;
 8002e38:	e9cd 3101 	strd	r3, r1, [sp, #4]
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8002e3c:	2302      	movs	r3, #2
 8002e3e:	9304      	str	r3, [sp, #16]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002e40:	4b11      	ldr	r3, [pc, #68]	; (8002e88 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pull = GPIO_NOPULL;
 8002e42:	9103      	str	r1, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002e44:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002e48:	a901      	add	r1, sp, #4
 8002e4a:	f001 fb05 	bl	8004458 <HAL_GPIO_Init>
}
 8002e4e:	b006      	add	sp, #24
 8002e50:	bd10      	pop	{r4, pc}
  if(Button_Mode == BUTTON_MODE_EXTI)
 8002e52:	2901      	cmp	r1, #1
 8002e54:	d1fb      	bne.n	8002e4e <BSP_PB_Init+0x36>
    gpio_init_structure.Speed = GPIO_SPEED_FAST;
 8002e56:	2302      	movs	r3, #2
 8002e58:	9304      	str	r3, [sp, #16]
    gpio_init_structure.Mode = GPIO_MODE_IT_RISING;
 8002e5a:	f44f 1388 	mov.w	r3, #1114112	; 0x110000
 8002e5e:	9302      	str	r3, [sp, #8]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002e60:	4b09      	ldr	r3, [pc, #36]	; (8002e88 <BSP_PB_Init+0x70>)
    gpio_init_structure.Pin = BUTTON_PIN[Button];
 8002e62:	9101      	str	r1, [sp, #4]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002e64:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
    gpio_init_structure.Pull = GPIO_NOPULL;
 8002e68:	9403      	str	r4, [sp, #12]
    HAL_GPIO_Init(BUTTON_PORT[Button], &gpio_init_structure);
 8002e6a:	a901      	add	r1, sp, #4
 8002e6c:	f001 faf4 	bl	8004458 <HAL_GPIO_Init>
    HAL_NVIC_SetPriority((IRQn_Type)(BUTTON_IRQn[Button]), 0x0F, 0x00);
 8002e70:	4622      	mov	r2, r4
 8002e72:	210f      	movs	r1, #15
 8002e74:	2006      	movs	r0, #6
 8002e76:	f000 fcbb 	bl	80037f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ((IRQn_Type)(BUTTON_IRQn[Button]));
 8002e7a:	2006      	movs	r0, #6
 8002e7c:	f000 fcea 	bl	8003854 <HAL_NVIC_EnableIRQ>
}
 8002e80:	e7e5      	b.n	8002e4e <BSP_PB_Init+0x36>
 8002e82:	bf00      	nop
 8002e84:	40023800 	.word	0x40023800
 8002e88:	20000048 	.word	0x20000048

08002e8c <BSP_PB_GetState>:
{
 8002e8c:	b508      	push	{r3, lr}
  return HAL_GPIO_ReadPin(BUTTON_PORT[Button], BUTTON_PIN[Button]);
 8002e8e:	4b03      	ldr	r3, [pc, #12]	; (8002e9c <BSP_PB_GetState+0x10>)
 8002e90:	2101      	movs	r1, #1
 8002e92:	f853 0020 	ldr.w	r0, [r3, r0, lsl #2]
 8002e96:	f001 fc67 	bl	8004768 <HAL_GPIO_ReadPin>
}
 8002e9a:	bd08      	pop	{r3, pc}
 8002e9c:	20000048 	.word	0x20000048

08002ea0 <TS_IO_Init>:
 8002ea0:	f7ff bf48 	b.w	8002d34 <I2C1_Init>

08002ea4 <TS_IO_Write>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @param  Value: Data to be written
  */
void TS_IO_Write(uint8_t Addr, uint8_t Reg, uint8_t Value)
{
 8002ea4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  status = HAL_I2C_Mem_Write(&heval_I2c1,
 8002ea6:	2301      	movs	r3, #1
 8002ea8:	f88d 2017 	strb.w	r2, [sp, #23]
 8002eac:	2264      	movs	r2, #100	; 0x64
 8002eae:	e9cd 3201 	strd	r3, r2, [sp, #4]
 8002eb2:	f10d 0217 	add.w	r2, sp, #23
 8002eb6:	9200      	str	r2, [sp, #0]
 8002eb8:	460a      	mov	r2, r1
 8002eba:	4601      	mov	r1, r0
 8002ebc:	4804      	ldr	r0, [pc, #16]	; (8002ed0 <TS_IO_Write+0x2c>)
 8002ebe:	f001 ff05 	bl	8004ccc <HAL_I2C_Mem_Write>
  if(status != HAL_OK)
 8002ec2:	b108      	cbz	r0, 8002ec8 <TS_IO_Write+0x24>
    I2C1_Error(Addr);
 8002ec4:	f7ff ff9e 	bl	8002e04 <I2C1_Error.isra.0>
  I2C1_Write(Addr, Reg, Value);
}
 8002ec8:	b007      	add	sp, #28
 8002eca:	f85d fb04 	ldr.w	pc, [sp], #4
 8002ece:	bf00      	nop
 8002ed0:	2000117c 	.word	0x2000117c

08002ed4 <TS_IO_Read>:
  * @param  Addr: I2C address
  * @param  Reg: Register address
  * @retval Read data
  */
uint8_t TS_IO_Read(uint8_t Addr, uint8_t Reg)
{
 8002ed4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
  uint8_t Value = 0;
 8002ed6:	2300      	movs	r3, #0
{
 8002ed8:	460a      	mov	r2, r1
  uint8_t Value = 0;
 8002eda:	f88d 3017 	strb.w	r3, [sp, #23]
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8002ede:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8002ee2:	2301      	movs	r3, #1
 8002ee4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 8002ee8:	f10d 0117 	add.w	r1, sp, #23
 8002eec:	9100      	str	r1, [sp, #0]
 8002eee:	4601      	mov	r1, r0
 8002ef0:	4805      	ldr	r0, [pc, #20]	; (8002f08 <TS_IO_Read+0x34>)
 8002ef2:	f001 ff7b 	bl	8004dec <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8002ef6:	b108      	cbz	r0, 8002efc <TS_IO_Read+0x28>
    I2C1_Error(Addr);
 8002ef8:	f7ff ff84 	bl	8002e04 <I2C1_Error.isra.0>
  return I2C1_Read(Addr, Reg);
}
 8002efc:	f89d 0017 	ldrb.w	r0, [sp, #23]
 8002f00:	b007      	add	sp, #28
 8002f02:	f85d fb04 	ldr.w	pc, [sp], #4
 8002f06:	bf00      	nop
 8002f08:	2000117c 	.word	0x2000117c

08002f0c <TS_IO_ReadMultiple>:
  * @param  Buffer: Pointer to data buffer
  * @param  Length: Length of the data
  * @retval Number of read data
  */
uint16_t TS_IO_ReadMultiple(uint8_t Addr, uint8_t Reg, uint8_t *Buffer, uint16_t Length)
{
 8002f0c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
  status = HAL_I2C_Mem_Read(&heval_I2c1,
 8002f0e:	f44f 747a 	mov.w	r4, #1000	; 0x3e8
 8002f12:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8002f16:	9200      	str	r2, [sp, #0]
 8002f18:	2301      	movs	r3, #1
 8002f1a:	460a      	mov	r2, r1
 8002f1c:	4601      	mov	r1, r0
 8002f1e:	4805      	ldr	r0, [pc, #20]	; (8002f34 <TS_IO_ReadMultiple+0x28>)
 8002f20:	f001 ff64 	bl	8004dec <HAL_I2C_Mem_Read>
  if(status != HAL_OK)
 8002f24:	4604      	mov	r4, r0
 8002f26:	b108      	cbz	r0, 8002f2c <TS_IO_ReadMultiple+0x20>
    I2C1_Error(Addr);
 8002f28:	f7ff ff6c 	bl	8002e04 <I2C1_Error.isra.0>
 return I2C1_ReadMultiple(Addr, (uint16_t)Reg, I2C_MEMADD_SIZE_8BIT, Buffer, Length);
}
 8002f2c:	b2a0      	uxth	r0, r4
 8002f2e:	b004      	add	sp, #16
 8002f30:	bd10      	pop	{r4, pc}
 8002f32:	bf00      	nop
 8002f34:	2000117c 	.word	0x2000117c

08002f38 <OTM8009A_IO_Delay>:
 8002f38:	f000 bc34 	b.w	80037a4 <HAL_Delay>

08002f3c <QSPI_AutoPollingMemReady.constprop.0>:
/**
  * @brief  This function read the SR of the memory and wait the EOP.
  * @param  hqspi: QSPI handle
  * @param  Timeout: timeout value before returning an error
  */
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8002f3c:	b500      	push	{lr}
 8002f3e:	b095      	sub	sp, #84	; 0x54
{
  QSPI_CommandTypeDef     s_command;
  QSPI_AutoPollingTypeDef s_config;

  /* Configure automatic polling mode to wait for memory ready */  
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8002f40:	f44f 7280 	mov.w	r2, #256	; 0x100
 8002f44:	920c      	str	r2, [sp, #48]	; 0x30
  s_command.Instruction       = READ_STATUS_REG_CMD;
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8002f46:	f04f 7180 	mov.w	r1, #16777216	; 0x1000000
  s_command.Instruction       = READ_STATUS_REG_CMD;
 8002f4a:	2205      	movs	r2, #5
 8002f4c:	9206      	str	r2, [sp, #24]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 8002f4e:	910f      	str	r1, [sp, #60]	; 0x3c
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8002f50:	2200      	movs	r2, #0
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;

  s_config.Match           = 0;
  s_config.Mask            = N25Q128A_SR_WIP;
 8002f52:	2101      	movs	r1, #1
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
  s_config.StatusBytesSize = 1;
 8002f54:	e9cd 1203 	strd	r1, r2, [sp, #12]
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8002f58:	e9cd 220d 	strd	r2, r2, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8002f5c:	e9cd 2211 	strd	r2, r2, [sp, #68]	; 0x44
  s_command.DummyCycles       = 0;
 8002f60:	920b      	str	r2, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8002f62:	9213      	str	r2, [sp, #76]	; 0x4c
  s_config.Match           = 0;
 8002f64:	9200      	str	r2, [sp, #0]
  s_config.Interval        = 0x10;
 8002f66:	2210      	movs	r2, #16
 8002f68:	9202      	str	r2, [sp, #8]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8002f6a:	f44f 0280 	mov.w	r2, #4194304	; 0x400000
static uint8_t QSPI_AutoPollingMemReady(QSPI_HandleTypeDef *hqspi, uint32_t Timeout)
 8002f6e:	4603      	mov	r3, r0
  s_config.Mask            = N25Q128A_SR_WIP;
 8002f70:	9101      	str	r1, [sp, #4]
  s_config.AutomaticStop   = QSPI_AUTOMATIC_STOP_ENABLE;
 8002f72:	9205      	str	r2, [sp, #20]

  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, Timeout) != HAL_OK)
 8002f74:	a906      	add	r1, sp, #24
 8002f76:	466a      	mov	r2, sp
 8002f78:	4804      	ldr	r0, [pc, #16]	; (8002f8c <QSPI_AutoPollingMemReady.constprop.0+0x50>)
 8002f7a:	f002 fbc2 	bl	8005702 <HAL_QSPI_AutoPolling>
  {
    return QSPI_ERROR;
  }

  return QSPI_OK;
}
 8002f7e:	3800      	subs	r0, #0
 8002f80:	bf18      	it	ne
 8002f82:	2001      	movne	r0, #1
 8002f84:	b015      	add	sp, #84	; 0x54
 8002f86:	f85d fb04 	ldr.w	pc, [sp], #4
 8002f8a:	bf00      	nop
 8002f8c:	2000a5b8 	.word	0x2000a5b8

08002f90 <QSPI_WriteEnable.constprop.0>:
static uint8_t QSPI_WriteEnable(QSPI_HandleTypeDef *hqspi)
 8002f90:	b500      	push	{lr}
 8002f92:	b095      	sub	sp, #84	; 0x54
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8002f94:	f44f 7380 	mov.w	r3, #256	; 0x100
 8002f98:	930c      	str	r3, [sp, #48]	; 0x30
  s_command.Instruction       = WRITE_ENABLE_CMD;
 8002f9a:	2306      	movs	r3, #6
 8002f9c:	9306      	str	r3, [sp, #24]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002f9e:	4817      	ldr	r0, [pc, #92]	; (8002ffc <QSPI_WriteEnable.constprop.0+0x6c>)
  s_command.AddressMode       = QSPI_ADDRESS_NONE;
 8002fa0:	2300      	movs	r3, #0
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002fa2:	f241 3288 	movw	r2, #5000	; 0x1388
 8002fa6:	a906      	add	r1, sp, #24
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8002fa8:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8002fac:	e9cd 3311 	strd	r3, r3, [sp, #68]	; 0x44
  s_command.DataMode          = QSPI_DATA_NONE;
 8002fb0:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DummyCycles       = 0;
 8002fb2:	930b      	str	r3, [sp, #44]	; 0x2c
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8002fb4:	9313      	str	r3, [sp, #76]	; 0x4c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002fb6:	f002 fb60 	bl	800567a <HAL_QSPI_Command>
 8002fba:	b9e0      	cbnz	r0, 8002ff6 <QSPI_WriteEnable.constprop.0+0x66>
  s_config.Match           = N25Q128A_SR_WREN;
 8002fbc:	2302      	movs	r3, #2
  s_config.Mask            = N25Q128A_SR_WREN;
 8002fbe:	e9cd 3300 	strd	r3, r3, [sp]
  s_config.Interval        = 0x10;
 8002fc2:	2201      	movs	r2, #1
 8002fc4:	2310      	movs	r3, #16
 8002fc6:	e9cd 3202 	strd	r3, r2, [sp, #8]
  s_command.Instruction    = READ_STATUS_REG_CMD;
 8002fca:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 8002fce:	2305      	movs	r3, #5
 8002fd0:	e9cd 1305 	strd	r1, r3, [sp, #20]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8002fd4:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
  s_config.MatchMode       = QSPI_MATCH_MODE_AND;
 8002fd8:	9004      	str	r0, [sp, #16]
  s_command.DataMode       = QSPI_DATA_1_LINE;
 8002fda:	930f      	str	r3, [sp, #60]	; 0x3c
  if (HAL_QSPI_AutoPolling(hqspi, &s_command, &s_config, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8002fdc:	4807      	ldr	r0, [pc, #28]	; (8002ffc <QSPI_WriteEnable.constprop.0+0x6c>)
 8002fde:	f241 3388 	movw	r3, #5000	; 0x1388
 8002fe2:	466a      	mov	r2, sp
 8002fe4:	a906      	add	r1, sp, #24
 8002fe6:	f002 fb8c 	bl	8005702 <HAL_QSPI_AutoPolling>
    return QSPI_ERROR;
 8002fea:	3800      	subs	r0, #0
 8002fec:	bf18      	it	ne
 8002fee:	2001      	movne	r0, #1
}
 8002ff0:	b015      	add	sp, #84	; 0x54
 8002ff2:	f85d fb04 	ldr.w	pc, [sp], #4
    return QSPI_ERROR;
 8002ff6:	2001      	movs	r0, #1
 8002ff8:	e7fa      	b.n	8002ff0 <QSPI_WriteEnable.constprop.0+0x60>
 8002ffa:	bf00      	nop
 8002ffc:	2000a5b8 	.word	0x2000a5b8

08003000 <BSP_QSPI_EnableMemoryMappedMode>:
{
 8003000:	b500      	push	{lr}
 8003002:	b091      	sub	sp, #68	; 0x44
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 8003004:	f44f 7380 	mov.w	r3, #256	; 0x100
 8003008:	9308      	str	r3, [sp, #32]
  s_command.Instruction       = QUAD_INOUT_FAST_READ_CMD;
 800300a:	23eb      	movs	r3, #235	; 0xeb
 800300c:	9302      	str	r3, [sp, #8]
  s_command.AddressMode       = QSPI_ADDRESS_4_LINES;
 800300e:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003012:	9309      	str	r3, [sp, #36]	; 0x24
  s_command.AddressSize       = QSPI_ADDRESS_24_BITS;
 8003014:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 8003018:	9305      	str	r3, [sp, #20]
  s_command.DataMode          = QSPI_DATA_4_LINES;
 800301a:	f04f 7240 	mov.w	r2, #50331648	; 0x3000000
 800301e:	2300      	movs	r3, #0
 8003020:	e9cd 320a 	strd	r3, r2, [sp, #40]	; 0x28
  s_command.DummyCycles       = N25Q128A_DUMMY_CYCLES_READ_QUAD;
 8003024:	220a      	movs	r2, #10
 8003026:	9207      	str	r2, [sp, #28]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003028:	a902      	add	r1, sp, #8
 800302a:	466a      	mov	r2, sp
 800302c:	4806      	ldr	r0, [pc, #24]	; (8003048 <BSP_QSPI_EnableMemoryMappedMode+0x48>)
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 800302e:	930f      	str	r3, [sp, #60]	; 0x3c
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003030:	e9cd 330d 	strd	r3, r3, [sp, #52]	; 0x34
  s_mem_mapped_cfg.TimeOutActivation = QSPI_TIMEOUT_COUNTER_DISABLE;
 8003034:	9301      	str	r3, [sp, #4]
  if (HAL_QSPI_MemoryMapped(&QSPIHandle, &s_command, &s_mem_mapped_cfg) != HAL_OK)
 8003036:	f002 fbb4 	bl	80057a2 <HAL_QSPI_MemoryMapped>
}
 800303a:	3800      	subs	r0, #0
 800303c:	bf18      	it	ne
 800303e:	2001      	movne	r0, #1
 8003040:	b011      	add	sp, #68	; 0x44
 8003042:	f85d fb04 	ldr.w	pc, [sp], #4
 8003046:	bf00      	nop
 8003048:	2000a5b8 	.word	0x2000a5b8

0800304c <BSP_QSPI_MspInit>:
{
 800304c:	b570      	push	{r4, r5, r6, lr}
 800304e:	b088      	sub	sp, #32
  QSPI_CLK_ENABLE();
 8003050:	4b2c      	ldr	r3, [pc, #176]	; (8003104 <BSP_QSPI_MspInit+0xb8>)
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 8003052:	482d      	ldr	r0, [pc, #180]	; (8003108 <BSP_QSPI_MspInit+0xbc>)
  QSPI_CLK_ENABLE();
 8003054:	2400      	movs	r4, #0
 8003056:	9400      	str	r4, [sp, #0]
 8003058:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800305a:	f042 0202 	orr.w	r2, r2, #2
 800305e:	639a      	str	r2, [r3, #56]	; 0x38
 8003060:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003062:	f002 0202 	and.w	r2, r2, #2
 8003066:	9200      	str	r2, [sp, #0]
 8003068:	9a00      	ldr	r2, [sp, #0]
  QSPI_FORCE_RESET();
 800306a:	699a      	ldr	r2, [r3, #24]
 800306c:	f042 0202 	orr.w	r2, r2, #2
 8003070:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003072:	699a      	ldr	r2, [r3, #24]
 8003074:	f022 0202 	bic.w	r2, r2, #2
 8003078:	619a      	str	r2, [r3, #24]
  QSPI_CS_GPIO_CLK_ENABLE();
 800307a:	9401      	str	r4, [sp, #4]
 800307c:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800307e:	f042 0202 	orr.w	r2, r2, #2
 8003082:	631a      	str	r2, [r3, #48]	; 0x30
 8003084:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003086:	f002 0202 	and.w	r2, r2, #2
 800308a:	9201      	str	r2, [sp, #4]
 800308c:	9a01      	ldr	r2, [sp, #4]
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 800308e:	9402      	str	r4, [sp, #8]
 8003090:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003092:	f042 0220 	orr.w	r2, r2, #32
 8003096:	631a      	str	r2, [r3, #48]	; 0x30
 8003098:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800309a:	f003 0320 	and.w	r3, r3, #32
 800309e:	9302      	str	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80030a0:	2240      	movs	r2, #64	; 0x40
  QSPI_DX_CLK_GPIO_CLK_ENABLE();
 80030a2:	9b02      	ldr	r3, [sp, #8]
  gpio_init_structure.Mode      = GPIO_MODE_AF_PP;
 80030a4:	2302      	movs	r3, #2
 80030a6:	e9cd 2303 	strd	r2, r3, [sp, #12]
  gpio_init_structure.Speed     = GPIO_SPEED_HIGH;
 80030aa:	2101      	movs	r1, #1
 80030ac:	2303      	movs	r3, #3
 80030ae:	e9cd 1305 	strd	r1, r3, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80030b2:	260a      	movs	r6, #10
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80030b4:	a903      	add	r1, sp, #12
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80030b6:	2509      	movs	r5, #9
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80030b8:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_CS_GPIO_PORT, &gpio_init_structure);
 80030ba:	f001 f9cd 	bl	8004458 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80030be:	f44f 6380 	mov.w	r3, #1024	; 0x400
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80030c2:	a903      	add	r1, sp, #12
 80030c4:	4811      	ldr	r0, [pc, #68]	; (800310c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = QSPI_CLK_PIN;
 80030c6:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Pull      = GPIO_NOPULL;
 80030c8:	9405      	str	r4, [sp, #20]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80030ca:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_CLK_GPIO_PORT, &gpio_init_structure);
 80030cc:	f001 f9c4 	bl	8004458 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80030d0:	f44f 7340 	mov.w	r3, #768	; 0x300
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80030d4:	a903      	add	r1, sp, #12
 80030d6:	480d      	ldr	r0, [pc, #52]	; (800310c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D0_PIN | QSPI_D1_PIN);
 80030d8:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF10_QSPI;
 80030da:	9607      	str	r6, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80030dc:	f001 f9bc 	bl	8004458 <HAL_GPIO_Init>
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80030e0:	23c0      	movs	r3, #192	; 0xc0
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80030e2:	a903      	add	r1, sp, #12
 80030e4:	4809      	ldr	r0, [pc, #36]	; (800310c <BSP_QSPI_MspInit+0xc0>)
  gpio_init_structure.Pin       = (QSPI_D2_PIN | QSPI_D3_PIN) ;
 80030e6:	9303      	str	r3, [sp, #12]
  gpio_init_structure.Alternate = GPIO_AF9_QSPI;
 80030e8:	9507      	str	r5, [sp, #28]
  HAL_GPIO_Init(QSPI_DX_GPIO_PORT, &gpio_init_structure);
 80030ea:	f001 f9b5 	bl	8004458 <HAL_GPIO_Init>
  HAL_NVIC_SetPriority(QUADSPI_IRQn, 0x0F, 0);
 80030ee:	4622      	mov	r2, r4
 80030f0:	210f      	movs	r1, #15
 80030f2:	205b      	movs	r0, #91	; 0x5b
 80030f4:	f000 fb7c 	bl	80037f0 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(QUADSPI_IRQn);
 80030f8:	205b      	movs	r0, #91	; 0x5b
 80030fa:	f000 fbab 	bl	8003854 <HAL_NVIC_EnableIRQ>
}
 80030fe:	b008      	add	sp, #32
 8003100:	bd70      	pop	{r4, r5, r6, pc}
 8003102:	bf00      	nop
 8003104:	40023800 	.word	0x40023800
 8003108:	40020400 	.word	0x40020400
 800310c:	40021400 	.word	0x40021400

08003110 <BSP_QSPI_Init>:
{
 8003110:	b5f0      	push	{r4, r5, r6, r7, lr}
  QSPIHandle.Instance = QUADSPI;
 8003112:	4c48      	ldr	r4, [pc, #288]	; (8003234 <BSP_QSPI_Init+0x124>)
 8003114:	4b48      	ldr	r3, [pc, #288]	; (8003238 <BSP_QSPI_Init+0x128>)
 8003116:	6023      	str	r3, [r4, #0]
{
 8003118:	b091      	sub	sp, #68	; 0x44
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 800311a:	4620      	mov	r0, r4
 800311c:	f002 fa9a 	bl	8005654 <HAL_QSPI_DeInit>
 8003120:	4605      	mov	r5, r0
 8003122:	b110      	cbz	r0, 800312a <BSP_QSPI_Init+0x1a>
    return QSPI_ERROR;
 8003124:	2001      	movs	r0, #1
}
 8003126:	b011      	add	sp, #68	; 0x44
 8003128:	bdf0      	pop	{r4, r5, r6, r7, pc}
  BSP_QSPI_MspInit(&QSPIHandle, NULL);
 800312a:	4601      	mov	r1, r0
 800312c:	4620      	mov	r0, r4
 800312e:	f7ff ff8d 	bl	800304c <BSP_QSPI_MspInit>
  QSPIHandle.Init.ClockPrescaler     = 1; /* QSPI Freq= 180 MHz / (1+1) = 90 MHz */
 8003132:	2601      	movs	r6, #1
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 8003134:	2310      	movs	r3, #16
  QSPIHandle.Init.FifoThreshold      = 1;
 8003136:	e9c4 6601 	strd	r6, r6, [r4, #4]
  QSPIHandle.Init.SampleShifting     = QSPI_SAMPLE_SHIFTING_HALFCYCLE;
 800313a:	60e3      	str	r3, [r4, #12]
  uint32_t result;

#if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
     (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
     (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 800313c:	f04f 7780 	mov.w	r7, #16777216	; 0x1000000
 8003140:	fa97 f3a7 	rbit	r3, r7
  QSPIHandle.Init.FlashSize          = POSITION_VAL(N25Q128A_FLASH_SIZE) - 1;
 8003144:	fab3 f383 	clz	r3, r3
 8003148:	3b01      	subs	r3, #1
 800314a:	6123      	str	r3, [r4, #16]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800314c:	4620      	mov	r0, r4
  QSPIHandle.Init.ChipSelectHighTime = QSPI_CS_HIGH_TIME_5_CYCLE;
 800314e:	f44f 6380 	mov.w	r3, #1024	; 0x400
  QSPIHandle.Init.ClockMode          = QSPI_CLOCK_MODE_0;
 8003152:	e9c4 3505 	strd	r3, r5, [r4, #20]
  QSPIHandle.Init.DualFlash          = QSPI_DUALFLASH_DISABLE;
 8003156:	e9c4 5507 	strd	r5, r5, [r4, #28]
  if (HAL_QSPI_Init(&QSPIHandle) != HAL_OK)
 800315a:	f002 fa27 	bl	80055ac <HAL_QSPI_Init>
 800315e:	2800      	cmp	r0, #0
 8003160:	d1e0      	bne.n	8003124 <BSP_QSPI_Init+0x14>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 8003162:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrHoldHalfCycle  = QSPI_DDR_HHC_ANALOG_DELAY;
 8003166:	e9cd 000d 	strd	r0, r0, [sp, #52]	; 0x34
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800316a:	f44f 7580 	mov.w	r5, #256	; 0x100
  s_command.Instruction       = RESET_ENABLE_CMD;
 800316e:	2366      	movs	r3, #102	; 0x66
  s_command.DataMode          = QSPI_DATA_NONE;
 8003170:	900b      	str	r0, [sp, #44]	; 0x2c
  s_command.DummyCycles       = 0;
 8003172:	9007      	str	r0, [sp, #28]
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 8003174:	900f      	str	r0, [sp, #60]	; 0x3c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003176:	f241 3288 	movw	r2, #5000	; 0x1388
 800317a:	a902      	add	r1, sp, #8
 800317c:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 800317e:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = RESET_ENABLE_CMD;
 8003180:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003182:	f002 fa7a 	bl	800567a <HAL_QSPI_Command>
 8003186:	b108      	cbz	r0, 800318c <BSP_QSPI_Init+0x7c>
    return QSPI_NOT_SUPPORTED;
 8003188:	2004      	movs	r0, #4
 800318a:	e7cc      	b.n	8003126 <BSP_QSPI_Init+0x16>
  s_command.Instruction = RESET_MEMORY_CMD;
 800318c:	2399      	movs	r3, #153	; 0x99
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800318e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003192:	a902      	add	r1, sp, #8
 8003194:	4620      	mov	r0, r4
  s_command.Instruction = RESET_MEMORY_CMD;
 8003196:	9302      	str	r3, [sp, #8]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003198:	f002 fa6f 	bl	800567a <HAL_QSPI_Command>
 800319c:	2800      	cmp	r0, #0
 800319e:	d1f3      	bne.n	8003188 <BSP_QSPI_Init+0x78>
  if (QSPI_AutoPollingMemReady(hqspi, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != QSPI_OK)
 80031a0:	f241 3088 	movw	r0, #5000	; 0x1388
 80031a4:	f7ff feca 	bl	8002f3c <QSPI_AutoPollingMemReady.constprop.0>
 80031a8:	2800      	cmp	r0, #0
 80031aa:	d1ed      	bne.n	8003188 <BSP_QSPI_Init+0x78>
  s_command.AlternateByteMode = QSPI_ALTERNATE_BYTES_NONE;
 80031ac:	e9cd 0009 	strd	r0, r0, [sp, #36]	; 0x24
  s_command.DdrMode           = QSPI_DDR_MODE_DISABLE;
 80031b0:	e9cd 600c 	strd	r6, r0, [sp, #48]	; 0x30
  s_command.SIOOMode          = QSPI_SIOO_INST_EVERY_CMD;
 80031b4:	e9cd 000e 	strd	r0, r0, [sp, #56]	; 0x38
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80031b8:	2385      	movs	r3, #133	; 0x85
  s_command.DummyCycles       = 0;
 80031ba:	9007      	str	r0, [sp, #28]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80031bc:	f241 3288 	movw	r2, #5000	; 0x1388
 80031c0:	a902      	add	r1, sp, #8
 80031c2:	4620      	mov	r0, r4
  s_command.InstructionMode   = QSPI_INSTRUCTION_1_LINE;
 80031c4:	9508      	str	r5, [sp, #32]
  s_command.Instruction       = READ_VOL_CFG_REG_CMD;
 80031c6:	9302      	str	r3, [sp, #8]
  s_command.DataMode          = QSPI_DATA_1_LINE;
 80031c8:	970b      	str	r7, [sp, #44]	; 0x2c
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80031ca:	f002 fa56 	bl	800567a <HAL_QSPI_Command>
 80031ce:	2800      	cmp	r0, #0
 80031d0:	d1da      	bne.n	8003188 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Receive(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 80031d2:	f241 3288 	movw	r2, #5000	; 0x1388
 80031d6:	f10d 0107 	add.w	r1, sp, #7
 80031da:	4620      	mov	r0, r4
 80031dc:	f002 fbc0 	bl	8005960 <HAL_QSPI_Receive>
 80031e0:	2800      	cmp	r0, #0
 80031e2:	d1d1      	bne.n	8003188 <BSP_QSPI_Init+0x78>
  if (QSPI_WriteEnable(hqspi) != QSPI_OK)
 80031e4:	f7ff fed4 	bl	8002f90 <QSPI_WriteEnable.constprop.0>
 80031e8:	2800      	cmp	r0, #0
 80031ea:	d1cd      	bne.n	8003188 <BSP_QSPI_Init+0x78>
  s_command.Instruction = WRITE_VOL_CFG_REG_CMD;
 80031ec:	2381      	movs	r3, #129	; 0x81
 80031ee:	9302      	str	r3, [sp, #8]
 80031f0:	22f0      	movs	r2, #240	; 0xf0
 80031f2:	fa92 f2a2 	rbit	r2, r2
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 80031f6:	f89d 3007 	ldrb.w	r3, [sp, #7]
 80031fa:	210a      	movs	r1, #10
 80031fc:	fab2 f282 	clz	r2, r2
 8003200:	fa01 f202 	lsl.w	r2, r1, r2
 8003204:	f003 030f 	and.w	r3, r3, #15
 8003208:	4313      	orrs	r3, r2
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800320a:	a902      	add	r1, sp, #8
 800320c:	f241 3288 	movw	r2, #5000	; 0x1388
 8003210:	4620      	mov	r0, r4
  MODIFY_REG(reg, N25Q128A_VCR_NB_DUMMY, (N25Q128A_DUMMY_CYCLES_READ_QUAD << POSITION_VAL(N25Q128A_VCR_NB_DUMMY)));
 8003212:	f88d 3007 	strb.w	r3, [sp, #7]
  if (HAL_QSPI_Command(hqspi, &s_command, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 8003216:	f002 fa30 	bl	800567a <HAL_QSPI_Command>
 800321a:	2800      	cmp	r0, #0
 800321c:	d1b4      	bne.n	8003188 <BSP_QSPI_Init+0x78>
  if (HAL_QSPI_Transmit(hqspi, &reg, HAL_QPSI_TIMEOUT_DEFAULT_VALUE) != HAL_OK)
 800321e:	f241 3288 	movw	r2, #5000	; 0x1388
 8003222:	f10d 0107 	add.w	r1, sp, #7
 8003226:	4620      	mov	r0, r4
 8003228:	f002 fb3e 	bl	80058a8 <HAL_QSPI_Transmit>
 800322c:	2800      	cmp	r0, #0
 800322e:	f43f af7a 	beq.w	8003126 <BSP_QSPI_Init+0x16>
 8003232:	e7a9      	b.n	8003188 <BSP_QSPI_Init+0x78>
 8003234:	2000a5b8 	.word	0x2000a5b8
 8003238:	a0001000 	.word	0xa0001000

0800323c <BSP_QSPI_MspDeInit>:
{
 800323c:	b508      	push	{r3, lr}
  HAL_NVIC_DisableIRQ(QUADSPI_IRQn);
 800323e:	205b      	movs	r0, #91	; 0x5b
 8003240:	f000 fb16 	bl	8003870 <HAL_NVIC_DisableIRQ>
  HAL_GPIO_DeInit(QSPI_CS_GPIO_PORT, QSPI_CS_PIN);
 8003244:	4814      	ldr	r0, [pc, #80]	; (8003298 <BSP_QSPI_MspDeInit+0x5c>)
 8003246:	2140      	movs	r1, #64	; 0x40
 8003248:	f001 f9ec 	bl	8004624 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_CLK_GPIO_PORT, QSPI_CLK_PIN);
 800324c:	4813      	ldr	r0, [pc, #76]	; (800329c <BSP_QSPI_MspDeInit+0x60>)
 800324e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 8003252:	f001 f9e7 	bl	8004624 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D0_PIN);
 8003256:	4811      	ldr	r0, [pc, #68]	; (800329c <BSP_QSPI_MspDeInit+0x60>)
 8003258:	f44f 7180 	mov.w	r1, #256	; 0x100
 800325c:	f001 f9e2 	bl	8004624 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D1_PIN);
 8003260:	480e      	ldr	r0, [pc, #56]	; (800329c <BSP_QSPI_MspDeInit+0x60>)
 8003262:	f44f 7100 	mov.w	r1, #512	; 0x200
 8003266:	f001 f9dd 	bl	8004624 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D2_PIN);
 800326a:	480c      	ldr	r0, [pc, #48]	; (800329c <BSP_QSPI_MspDeInit+0x60>)
 800326c:	2180      	movs	r1, #128	; 0x80
 800326e:	f001 f9d9 	bl	8004624 <HAL_GPIO_DeInit>
  HAL_GPIO_DeInit(QSPI_DX_GPIO_PORT, QSPI_D3_PIN);
 8003272:	480a      	ldr	r0, [pc, #40]	; (800329c <BSP_QSPI_MspDeInit+0x60>)
 8003274:	2140      	movs	r1, #64	; 0x40
 8003276:	f001 f9d5 	bl	8004624 <HAL_GPIO_DeInit>
  QSPI_FORCE_RESET();
 800327a:	4b09      	ldr	r3, [pc, #36]	; (80032a0 <BSP_QSPI_MspDeInit+0x64>)
 800327c:	699a      	ldr	r2, [r3, #24]
 800327e:	f042 0202 	orr.w	r2, r2, #2
 8003282:	619a      	str	r2, [r3, #24]
  QSPI_RELEASE_RESET();
 8003284:	699a      	ldr	r2, [r3, #24]
 8003286:	f022 0202 	bic.w	r2, r2, #2
 800328a:	619a      	str	r2, [r3, #24]
  QSPI_CLK_DISABLE();
 800328c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800328e:	f022 0202 	bic.w	r2, r2, #2
 8003292:	639a      	str	r2, [r3, #56]	; 0x38
}
 8003294:	bd08      	pop	{r3, pc}
 8003296:	bf00      	nop
 8003298:	40020400 	.word	0x40020400
 800329c:	40021400 	.word	0x40021400
 80032a0:	40023800 	.word	0x40023800

080032a4 <BSP_QSPI_DeInit>:
{
 80032a4:	b538      	push	{r3, r4, r5, lr}
  QSPIHandle.Instance = QUADSPI;
 80032a6:	4d08      	ldr	r5, [pc, #32]	; (80032c8 <BSP_QSPI_DeInit+0x24>)
 80032a8:	4b08      	ldr	r3, [pc, #32]	; (80032cc <BSP_QSPI_DeInit+0x28>)
 80032aa:	602b      	str	r3, [r5, #0]
  if (HAL_QSPI_DeInit(&QSPIHandle) != HAL_OK)
 80032ac:	4628      	mov	r0, r5
 80032ae:	f002 f9d1 	bl	8005654 <HAL_QSPI_DeInit>
 80032b2:	4604      	mov	r4, r0
 80032b4:	b928      	cbnz	r0, 80032c2 <BSP_QSPI_DeInit+0x1e>
  BSP_QSPI_MspDeInit(&QSPIHandle, NULL);
 80032b6:	4601      	mov	r1, r0
 80032b8:	4628      	mov	r0, r5
 80032ba:	f7ff ffbf 	bl	800323c <BSP_QSPI_MspDeInit>
}
 80032be:	4620      	mov	r0, r4
 80032c0:	bd38      	pop	{r3, r4, r5, pc}
    return QSPI_ERROR;
 80032c2:	2401      	movs	r4, #1
 80032c4:	e7fb      	b.n	80032be <BSP_QSPI_DeInit+0x1a>
 80032c6:	bf00      	nop
 80032c8:	2000a5b8 	.word	0x2000a5b8
 80032cc:	a0001000 	.word	0xa0001000

080032d0 <BSP_SDRAM_Initialization_sequence>:
/**
  * @brief  Programs the SDRAM device.
  * @param  RefreshCount: SDRAM refresh counter value
  */
void BSP_SDRAM_Initialization_sequence(uint32_t RefreshCount)
{
 80032d0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
  __IO uint32_t tmpmrd = 0;

  /* Step 1: Configure a clock configuration enable command */
  Command.CommandMode            = FMC_SDRAM_CMD_CLK_ENABLE;
 80032d4:	4c21      	ldr	r4, [pc, #132]	; (800335c <BSP_SDRAM_Initialization_sequence+0x8c>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80032d6:	4d22      	ldr	r5, [pc, #136]	; (8003360 <BSP_SDRAM_Initialization_sequence+0x90>)
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80032d8:	2601      	movs	r6, #1
  __IO uint32_t tmpmrd = 0;
 80032da:	f04f 0800 	mov.w	r8, #0
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80032de:	2710      	movs	r7, #16
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80032e0:	4621      	mov	r1, r4
{
 80032e2:	4681      	mov	r9, r0
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80032e4:	f64f 72ff 	movw	r2, #65535	; 0xffff
 80032e8:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 80032ea:	e9c4 6700 	strd	r6, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 80032ee:	e9c4 6802 	strd	r6, r8, [r4, #8]
  __IO uint32_t tmpmrd = 0;
 80032f2:	f8cd 8004 	str.w	r8, [sp, #4]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 80032f6:	f002 ffd3 	bl	80062a0 <HAL_SDRAM_SendCommand>

  /* Step 2: Insert 100 us minimum delay */
  /* Inserted delay is equal to 1 ms due to systick time base unit (ms) */
  HAL_Delay(1);
 80032fa:	4630      	mov	r0, r6
 80032fc:	f000 fa52 	bl	80037a4 <HAL_Delay>

  /* Step 3: Configure a PALL (precharge all) command */
  Command.CommandMode            = FMC_SDRAM_CMD_PALL;
 8003300:	2302      	movs	r3, #2
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003302:	4621      	mov	r1, r4
 8003304:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003308:	4628      	mov	r0, r5
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 800330a:	e9c4 3700 	strd	r3, r7, [r4]
  Command.ModeRegisterDefinition = 0;
 800330e:	e9c4 6802 	strd	r6, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003312:	f002 ffc5 	bl	80062a0 <HAL_SDRAM_SendCommand>

  /* Step 4: Configure an Auto Refresh command */
  Command.CommandMode            = FMC_SDRAM_CMD_AUTOREFRESH_MODE;
 8003316:	2303      	movs	r3, #3
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003318:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 8;
  Command.ModeRegisterDefinition = 0;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800331c:	4621      	mov	r1, r4
  Command.AutoRefreshNumber      = 8;
 800331e:	2308      	movs	r3, #8
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003320:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003324:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = 0;
 8003326:	e9c4 3802 	strd	r3, r8, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800332a:	f002 ffb9 	bl	80062a0 <HAL_SDRAM_SendCommand>

  /* Step 5: Program the external memory mode register */
  tmpmrd = (uint32_t)SDRAM_MODEREG_BURST_LENGTH_1          |\
 800332e:	f44f 730c 	mov.w	r3, #560	; 0x230
 8003332:	9301      	str	r3, [sp, #4]
                     SDRAM_MODEREG_BURST_TYPE_SEQUENTIAL   |\
                     SDRAM_MODEREG_CAS_LATENCY_3           |\
                     SDRAM_MODEREG_OPERATING_MODE_STANDARD |\
                     SDRAM_MODEREG_WRITEBURST_MODE_SINGLE;

  Command.CommandMode            = FMC_SDRAM_CMD_LOAD_MODE;
 8003334:	2304      	movs	r3, #4
  Command.CommandTarget          = FMC_SDRAM_CMD_TARGET_BANK1;
 8003336:	e9c4 3700 	strd	r3, r7, [r4]
  Command.AutoRefreshNumber      = 1;
  Command.ModeRegisterDefinition = tmpmrd;

  /* Send the command */
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 800333a:	4621      	mov	r1, r4
  Command.ModeRegisterDefinition = tmpmrd;
 800333c:	9b01      	ldr	r3, [sp, #4]
  Command.AutoRefreshNumber      = 1;
 800333e:	60a6      	str	r6, [r4, #8]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003340:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8003344:	4628      	mov	r0, r5
  Command.ModeRegisterDefinition = tmpmrd;
 8003346:	60e3      	str	r3, [r4, #12]
  HAL_SDRAM_SendCommand(&sdramHandle, &Command, SDRAM_TIMEOUT);
 8003348:	f002 ffaa 	bl	80062a0 <HAL_SDRAM_SendCommand>

  /* Step 6: Set the refresh rate counter */
  /* Set the device refresh rate */
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 800334c:	4649      	mov	r1, r9
 800334e:	4628      	mov	r0, r5
}
 8003350:	b003      	add	sp, #12
 8003352:	e8bd 43f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, lr}
  HAL_SDRAM_ProgramRefreshRate(&sdramHandle, RefreshCount);
 8003356:	f002 bfba 	b.w	80062ce <HAL_SDRAM_ProgramRefreshRate>
 800335a:	bf00      	nop
 800335c:	200011d0 	.word	0x200011d0
 8003360:	200012bc 	.word	0x200012bc

08003364 <BSP_SDRAM_MspInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003364:	b570      	push	{r4, r5, r6, lr}
  static DMA_HandleTypeDef dma_handle;
  GPIO_InitTypeDef gpio_init_structure;

  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003366:	4606      	mov	r6, r0
{
 8003368:	b08e      	sub	sp, #56	; 0x38
  if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 800336a:	2800      	cmp	r0, #0
 800336c:	f000 80bd 	beq.w	80034ea <BSP_SDRAM_MspInit+0x186>
  {
    /* Enable FMC clock */
    __HAL_RCC_FMC_CLK_ENABLE();
 8003370:	4b5f      	ldr	r3, [pc, #380]	; (80034f0 <BSP_SDRAM_MspInit+0x18c>)
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
    gpio_init_structure.Alternate = GPIO_AF12_FMC;

    /* GPIOC configuration : PC0 is SDNWE */
    gpio_init_structure.Pin   = GPIO_PIN_0;
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003372:	4860      	ldr	r0, [pc, #384]	; (80034f4 <BSP_SDRAM_MspInit+0x190>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
                                GPIO_PIN_5 | GPIO_PIN_6 | GPIO_PIN_7 | GPIO_PIN_9 | GPIO_PIN_10;
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);

    /* Configure common DMA parameters */
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 8003374:	4c60      	ldr	r4, [pc, #384]	; (80034f8 <BSP_SDRAM_MspInit+0x194>)
    __HAL_RCC_FMC_CLK_ENABLE();
 8003376:	2500      	movs	r5, #0
 8003378:	9500      	str	r5, [sp, #0]
 800337a:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800337c:	f042 0201 	orr.w	r2, r2, #1
 8003380:	639a      	str	r2, [r3, #56]	; 0x38
 8003382:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003384:	f002 0201 	and.w	r2, r2, #1
 8003388:	9200      	str	r2, [sp, #0]
 800338a:	9a00      	ldr	r2, [sp, #0]
    __DMAx_CLK_ENABLE();
 800338c:	9501      	str	r5, [sp, #4]
 800338e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003390:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8003394:	631a      	str	r2, [r3, #48]	; 0x30
 8003396:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003398:	f402 0280 	and.w	r2, r2, #4194304	; 0x400000
 800339c:	9201      	str	r2, [sp, #4]
 800339e:	9a01      	ldr	r2, [sp, #4]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 80033a0:	9502      	str	r5, [sp, #8]
 80033a2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033a4:	f042 0204 	orr.w	r2, r2, #4
 80033a8:	631a      	str	r2, [r3, #48]	; 0x30
 80033aa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033ac:	f002 0204 	and.w	r2, r2, #4
 80033b0:	9202      	str	r2, [sp, #8]
 80033b2:	9a02      	ldr	r2, [sp, #8]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 80033b4:	9503      	str	r5, [sp, #12]
 80033b6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033b8:	f042 0208 	orr.w	r2, r2, #8
 80033bc:	631a      	str	r2, [r3, #48]	; 0x30
 80033be:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033c0:	f002 0208 	and.w	r2, r2, #8
 80033c4:	9203      	str	r2, [sp, #12]
 80033c6:	9a03      	ldr	r2, [sp, #12]
    __HAL_RCC_GPIOE_CLK_ENABLE();
 80033c8:	9504      	str	r5, [sp, #16]
 80033ca:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033cc:	f042 0210 	orr.w	r2, r2, #16
 80033d0:	631a      	str	r2, [r3, #48]	; 0x30
 80033d2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033d4:	f002 0210 	and.w	r2, r2, #16
 80033d8:	9204      	str	r2, [sp, #16]
 80033da:	9a04      	ldr	r2, [sp, #16]
    __HAL_RCC_GPIOF_CLK_ENABLE();
 80033dc:	9505      	str	r5, [sp, #20]
 80033de:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033e0:	f042 0220 	orr.w	r2, r2, #32
 80033e4:	631a      	str	r2, [r3, #48]	; 0x30
 80033e6:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033e8:	f002 0220 	and.w	r2, r2, #32
 80033ec:	9205      	str	r2, [sp, #20]
 80033ee:	9a05      	ldr	r2, [sp, #20]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80033f0:	9506      	str	r5, [sp, #24]
 80033f2:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033f4:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 80033f8:	631a      	str	r2, [r3, #48]	; 0x30
 80033fa:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80033fc:	f002 0240 	and.w	r2, r2, #64	; 0x40
 8003400:	9206      	str	r2, [sp, #24]
 8003402:	9a06      	ldr	r2, [sp, #24]
    __HAL_RCC_GPIOH_CLK_ENABLE();
 8003404:	9507      	str	r5, [sp, #28]
 8003406:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003408:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 800340c:	631a      	str	r2, [r3, #48]	; 0x30
 800340e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8003410:	f002 0280 	and.w	r2, r2, #128	; 0x80
 8003414:	9207      	str	r2, [sp, #28]
 8003416:	9a07      	ldr	r2, [sp, #28]
    __HAL_RCC_GPIOI_CLK_ENABLE();
 8003418:	9508      	str	r5, [sp, #32]
 800341a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800341c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8003420:	631a      	str	r2, [r3, #48]	; 0x30
 8003422:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003424:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8003428:	9308      	str	r3, [sp, #32]
    gpio_init_structure.Pull      = GPIO_PULLUP;
 800342a:	2202      	movs	r2, #2
    __HAL_RCC_GPIOI_CLK_ENABLE();
 800342c:	9b08      	ldr	r3, [sp, #32]
    gpio_init_structure.Speed     = GPIO_SPEED_FAST;
 800342e:	920c      	str	r2, [sp, #48]	; 0x30
    gpio_init_structure.Pull      = GPIO_PULLUP;
 8003430:	2301      	movs	r3, #1
 8003432:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 8003436:	a909      	add	r1, sp, #36	; 0x24
    gpio_init_structure.Alternate = GPIO_AF12_FMC;
 8003438:	220c      	movs	r2, #12
 800343a:	920d      	str	r2, [sp, #52]	; 0x34
    gpio_init_structure.Pin   = GPIO_PIN_0;
 800343c:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOC, &gpio_init_structure);
 800343e:	f001 f80b 	bl	8004458 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003442:	f24c 7303 	movw	r3, #50947	; 0xc703
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 8003446:	482d      	ldr	r0, [pc, #180]	; (80034fc <BSP_SDRAM_MspInit+0x198>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_8| GPIO_PIN_9 | GPIO_PIN_10 |\
 8003448:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &gpio_init_structure);
 800344a:	a909      	add	r1, sp, #36	; 0x24
 800344c:	f001 f804 	bl	8004458 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003450:	f64f 7383 	movw	r3, #65411	; 0xff83
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003454:	482a      	ldr	r0, [pc, #168]	; (8003500 <BSP_SDRAM_MspInit+0x19c>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_7| GPIO_PIN_8 | GPIO_PIN_9 |\
 8003456:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOE, &gpio_init_structure);
 8003458:	a909      	add	r1, sp, #36	; 0x24
 800345a:	f000 fffd 	bl	8004458 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 800345e:	f64f 033f 	movw	r3, #63551	; 0xf83f
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003462:	4828      	ldr	r0, [pc, #160]	; (8003504 <BSP_SDRAM_MspInit+0x1a0>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2| GPIO_PIN_3 | GPIO_PIN_4 |\
 8003464:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOF, &gpio_init_structure);
 8003466:	a909      	add	r1, sp, #36	; 0x24
 8003468:	f000 fff6 	bl	8004458 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 800346c:	f248 1333 	movw	r3, #33075	; 0x8133
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003470:	4825      	ldr	r0, [pc, #148]	; (8003508 <BSP_SDRAM_MspInit+0x1a4>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_4| GPIO_PIN_5 | GPIO_PIN_8 |\
 8003472:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOG, &gpio_init_structure);
 8003474:	a909      	add	r1, sp, #36	; 0x24
 8003476:	f000 ffef 	bl	8004458 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 800347a:	f64f 730c 	movw	r3, #65292	; 0xff0c
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 800347e:	4823      	ldr	r0, [pc, #140]	; (800350c <BSP_SDRAM_MspInit+0x1a8>)
    gpio_init_structure.Pin   = GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_8 | GPIO_PIN_9 |\
 8003480:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOH, &gpio_init_structure);
 8003482:	a909      	add	r1, sp, #36	; 0x24
 8003484:	f000 ffe8 	bl	8004458 <HAL_GPIO_Init>
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 8003488:	f240 63ff 	movw	r3, #1791	; 0x6ff
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 800348c:	4820      	ldr	r0, [pc, #128]	; (8003510 <BSP_SDRAM_MspInit+0x1ac>)
    gpio_init_structure.Pin   = GPIO_PIN_0 | GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 |\
 800348e:	9309      	str	r3, [sp, #36]	; 0x24
    HAL_GPIO_Init(GPIOI, &gpio_init_structure);
 8003490:	a909      	add	r1, sp, #36	; 0x24
 8003492:	f000 ffe1 	bl	8004458 <HAL_GPIO_Init>
    dma_handle.Init.Direction           = DMA_MEMORY_TO_MEMORY;
    dma_handle.Init.PeriphInc           = DMA_PINC_ENABLE;
 8003496:	2280      	movs	r2, #128	; 0x80
 8003498:	f44f 7300 	mov.w	r3, #512	; 0x200
 800349c:	e9c4 2302 	strd	r2, r3, [r4, #8]
    dma_handle.Init.MemInc              = DMA_MINC_ENABLE;
    dma_handle.Init.PeriphDataAlignment = DMA_PDATAALIGN_WORD;
 80034a0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 80034a4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80034a8:	e9c4 1304 	strd	r1, r3, [r4, #16]
    dma_handle.Init.MemDataAlignment    = DMA_MDATAALIGN_WORD;
 80034ac:	f44f 4380 	mov.w	r3, #16384	; 0x4000
    dma_handle.Init.Mode                = DMA_NORMAL;
 80034b0:	e9c4 3506 	strd	r3, r5, [r4, #24]
    dma_handle.Init.Priority            = DMA_PRIORITY_HIGH;
 80034b4:	f44f 3300 	mov.w	r3, #131072	; 0x20000
    dma_handle.Init.FIFOMode            = DMA_FIFOMODE_DISABLE;
 80034b8:	e9c4 3508 	strd	r3, r5, [r4, #32]
    dma_handle.Init.FIFOThreshold       = DMA_FIFO_THRESHOLD_FULL;
 80034bc:	2303      	movs	r3, #3
    dma_handle.Init.MemBurst            = DMA_MBURST_SINGLE;
 80034be:	e9c4 350a 	strd	r3, r5, [r4, #40]	; 0x28
    dma_handle.Init.PeriphBurst         = DMA_PBURST_SINGLE;
 80034c2:	6325      	str	r5, [r4, #48]	; 0x30

    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80034c4:	4b13      	ldr	r3, [pc, #76]	; (8003514 <BSP_SDRAM_MspInit+0x1b0>)

    /* Associate the DMA handle */
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80034c6:	6334      	str	r4, [r6, #48]	; 0x30

    /* Deinitialize the stream for new transfer */
    HAL_DMA_DeInit(&dma_handle);
 80034c8:	4620      	mov	r0, r4
    dma_handle.Instance = SDRAM_DMAx_STREAM;
 80034ca:	6023      	str	r3, [r4, #0]
    dma_handle.Init.Channel             = SDRAM_DMAx_CHANNEL;
 80034cc:	6065      	str	r5, [r4, #4]
    __HAL_LINKDMA(hsdram, hdma, dma_handle);
 80034ce:	63a6      	str	r6, [r4, #56]	; 0x38
    HAL_DMA_DeInit(&dma_handle);
 80034d0:	f000 fa88 	bl	80039e4 <HAL_DMA_DeInit>

    /* Configure the DMA stream */
    HAL_DMA_Init(&dma_handle);
 80034d4:	4620      	mov	r0, r4
 80034d6:	f000 fa05 	bl	80038e4 <HAL_DMA_Init>

    /* NVIC configuration for DMA transfer complete interrupt */
    HAL_NVIC_SetPriority(SDRAM_DMAx_IRQn, 5, 0);
 80034da:	2038      	movs	r0, #56	; 0x38
 80034dc:	462a      	mov	r2, r5
 80034de:	2105      	movs	r1, #5
 80034e0:	f000 f986 	bl	80037f0 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SDRAM_DMAx_IRQn);
 80034e4:	2038      	movs	r0, #56	; 0x38
 80034e6:	f000 f9b5 	bl	8003854 <HAL_NVIC_EnableIRQ>

  } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80034ea:	b00e      	add	sp, #56	; 0x38
 80034ec:	bd70      	pop	{r4, r5, r6, pc}
 80034ee:	bf00      	nop
 80034f0:	40023800 	.word	0x40023800
 80034f4:	40020800 	.word	0x40020800
 80034f8:	200011fc 	.word	0x200011fc
 80034fc:	40020c00 	.word	0x40020c00
 8003500:	40021000 	.word	0x40021000
 8003504:	40021400 	.word	0x40021400
 8003508:	40021800 	.word	0x40021800
 800350c:	40021c00 	.word	0x40021c00
 8003510:	40022000 	.word	0x40022000
 8003514:	40026410 	.word	0x40026410

08003518 <BSP_SDRAM_Init>:
{
 8003518:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800351a:	4c19      	ldr	r4, [pc, #100]	; (8003580 <BSP_SDRAM_Init+0x68>)
  Timing.LoadToActiveDelay    = 2;
 800351c:	4d19      	ldr	r5, [pc, #100]	; (8003584 <BSP_SDRAM_Init+0x6c>)
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 800351e:	4b1a      	ldr	r3, [pc, #104]	; (8003588 <BSP_SDRAM_Init+0x70>)
 8003520:	6023      	str	r3, [r4, #0]
  Timing.ExitSelfRefreshDelay = 7;
 8003522:	2107      	movs	r1, #7
 8003524:	2302      	movs	r3, #2
  Timing.SelfRefreshTime      = 4;
 8003526:	2204      	movs	r2, #4
  Timing.ExitSelfRefreshDelay = 7;
 8003528:	e9c5 3100 	strd	r3, r1, [r5]
  Timing.RowCycleDelay        = 7;
 800352c:	e9c5 2102 	strd	r2, r1, [r5, #8]
  Timing.RPDelay              = 2;
 8003530:	e9c5 3304 	strd	r3, r3, [r5, #16]
  Timing.RCDDelay             = 2;
 8003534:	61ab      	str	r3, [r5, #24]
  sdramHandle.Init.RowBitsNumber      = FMC_SDRAM_ROW_BITS_NUM_12;
 8003536:	60e2      	str	r2, [r4, #12]
  sdramHandle.Init.InternalBankNumber = FMC_SDRAM_INTERN_BANKS_NUM_4;
 8003538:	2340      	movs	r3, #64	; 0x40
 800353a:	2220      	movs	r2, #32
 800353c:	e9c4 2304 	strd	r2, r3, [r4, #16]
  sdramHandle.Init.SDBank             = FMC_SDRAM_BANK1;
 8003540:	2100      	movs	r1, #0
  sdramHandle.Init.CASLatency         = FMC_SDRAM_CAS_LATENCY_3;
 8003542:	f44f 73c0 	mov.w	r3, #384	; 0x180
  sdramHandle.Init.WriteProtection    = FMC_SDRAM_WRITE_PROTECTION_DISABLE;
 8003546:	e9c4 3106 	strd	r3, r1, [r4, #24]
  sdramHandle.Init.ReadBurst          = FMC_SDRAM_RBURST_ENABLE;
 800354a:	f44f 6000 	mov.w	r0, #2048	; 0x800
 800354e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003552:	e9c4 0308 	strd	r0, r3, [r4, #32]
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 8003556:	4620      	mov	r0, r4
  sdramHandle.Init.ColumnBitsNumber   = FMC_SDRAM_COLUMN_BITS_NUM_8;
 8003558:	e9c4 1101 	strd	r1, r1, [r4, #4]
  sdramHandle.Init.ReadPipeDelay      = FMC_SDRAM_RPIPE_DELAY_0;
 800355c:	62a1      	str	r1, [r4, #40]	; 0x28
  BSP_SDRAM_MspInit(&sdramHandle, (void *)NULL);
 800355e:	f7ff ff01 	bl	8003364 <BSP_SDRAM_MspInit>
  if(HAL_SDRAM_Init(&sdramHandle, &Timing) != HAL_OK)
 8003562:	4629      	mov	r1, r5
 8003564:	4620      	mov	r0, r4
 8003566:	f002 fe6d 	bl	8006244 <HAL_SDRAM_Init>
 800356a:	4c08      	ldr	r4, [pc, #32]	; (800358c <BSP_SDRAM_Init+0x74>)
 800356c:	3800      	subs	r0, #0
 800356e:	bf18      	it	ne
 8003570:	2001      	movne	r0, #1
 8003572:	7020      	strb	r0, [r4, #0]
  BSP_SDRAM_Initialization_sequence(REFRESH_COUNT);
 8003574:	f240 5069 	movw	r0, #1385	; 0x569
 8003578:	f7ff feaa 	bl	80032d0 <BSP_SDRAM_Initialization_sequence>
}
 800357c:	7820      	ldrb	r0, [r4, #0]
 800357e:	bd38      	pop	{r3, r4, r5, pc}
 8003580:	200012bc 	.word	0x200012bc
 8003584:	200011e0 	.word	0x200011e0
 8003588:	a0000140 	.word	0xa0000140
 800358c:	2000004c 	.word	0x2000004c

08003590 <BSP_SDRAM_MspDeInit>:
  * @note   This function can be surcharged by application code.
  * @param  hsdram: pointer on SDRAM handle
  * @param  Params: pointer on additional configuration parameters, can be NULL.
  */
__weak void BSP_SDRAM_MspDeInit(SDRAM_HandleTypeDef  *hsdram, void *Params)
{
 8003590:	b508      	push	{r3, lr}
    static DMA_HandleTypeDef dma_handle;

    if(hsdram != (SDRAM_HandleTypeDef  *)NULL)
 8003592:	b148      	cbz	r0, 80035a8 <BSP_SDRAM_MspDeInit+0x18>
    {
      /* Disable NVIC configuration for DMA interrupt */
      HAL_NVIC_DisableIRQ(SDRAM_DMAx_IRQn);
 8003594:	2038      	movs	r0, #56	; 0x38
 8003596:	f000 f96b 	bl	8003870 <HAL_NVIC_DisableIRQ>

      /* Deinitialize the stream for new transfer */
      dma_handle.Instance = SDRAM_DMAx_STREAM;
 800359a:	4804      	ldr	r0, [pc, #16]	; (80035ac <BSP_SDRAM_MspDeInit+0x1c>)
 800359c:	4b04      	ldr	r3, [pc, #16]	; (80035b0 <BSP_SDRAM_MspDeInit+0x20>)
 800359e:	6003      	str	r3, [r0, #0]

      /* GPIO pins clock, FMC clock and DMA clock can be shut down in the application
       by surcharging this __weak function */

    } /* of if(hsdram != (SDRAM_HandleTypeDef  *)NULL) */
}
 80035a0:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
      HAL_DMA_DeInit(&dma_handle);
 80035a4:	f000 ba1e 	b.w	80039e4 <HAL_DMA_DeInit>
}
 80035a8:	bd08      	pop	{r3, pc}
 80035aa:	bf00      	nop
 80035ac:	2000125c 	.word	0x2000125c
 80035b0:	40026410 	.word	0x40026410

080035b4 <BSP_SDRAM_DeInit>:
{
 80035b4:	b538      	push	{r3, r4, r5, lr}
  sdramHandle.Instance = FMC_SDRAM_DEVICE;
 80035b6:	4c07      	ldr	r4, [pc, #28]	; (80035d4 <BSP_SDRAM_DeInit+0x20>)
 80035b8:	4b07      	ldr	r3, [pc, #28]	; (80035d8 <BSP_SDRAM_DeInit+0x24>)
 80035ba:	6023      	str	r3, [r4, #0]
  if(HAL_SDRAM_DeInit(&sdramHandle) == HAL_OK)
 80035bc:	4620      	mov	r0, r4
 80035be:	f002 fe61 	bl	8006284 <HAL_SDRAM_DeInit>
 80035c2:	4d06      	ldr	r5, [pc, #24]	; (80035dc <BSP_SDRAM_DeInit+0x28>)
 80035c4:	4601      	mov	r1, r0
 80035c6:	b918      	cbnz	r0, 80035d0 <BSP_SDRAM_DeInit+0x1c>
    sdramstatus = SDRAM_OK;
 80035c8:	7028      	strb	r0, [r5, #0]
   BSP_SDRAM_MspDeInit(&sdramHandle, (void *)NULL);
 80035ca:	4620      	mov	r0, r4
 80035cc:	f7ff ffe0 	bl	8003590 <BSP_SDRAM_MspDeInit>
}
 80035d0:	7828      	ldrb	r0, [r5, #0]
 80035d2:	bd38      	pop	{r3, r4, r5, pc}
 80035d4:	200012bc 	.word	0x200012bc
 80035d8:	a0000140 	.word	0xa0000140
 80035dc:	2000004d 	.word	0x2000004d

080035e0 <BSP_TS_Init>:
  * @param  ts_SizeX : Maximum X size of the TS area on LCD
  * @param  ts_SizeY : Maximum Y size of the TS area on LCD
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_Init(uint16_t ts_SizeX, uint16_t ts_SizeY)
{
 80035e0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
  /* Note : I2C_Address is un-initialized here, but is not used at all in init function */
  /* but the prototype of Init() is like that in template and should be respected       */

  /* Initialize the communication channel to sensor (I2C) if necessary */
  /* that is initialization is done only once after a power up         */
  ft6x06_ts_drv.Init(I2C_Address);
 80035e4:	4d19      	ldr	r5, [pc, #100]	; (800364c <BSP_TS_Init+0x6c>)
 80035e6:	f8df 8070 	ldr.w	r8, [pc, #112]	; 8003658 <BSP_TS_Init+0x78>
 80035ea:	682b      	ldr	r3, [r5, #0]
{
 80035ec:	4604      	mov	r4, r0
  ft6x06_ts_drv.Init(I2C_Address);
 80035ee:	f898 0000 	ldrb.w	r0, [r8]
{
 80035f2:	460f      	mov	r7, r1
  ft6x06_ts_drv.Init(I2C_Address);
 80035f4:	4798      	blx	r3

  ts_id1 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS);
 80035f6:	686b      	ldr	r3, [r5, #4]
 80035f8:	2054      	movs	r0, #84	; 0x54
 80035fa:	4798      	blx	r3
  if(ts_id1 != FT6206_ID_VALUE)
 80035fc:	b2c0      	uxtb	r0, r0
 80035fe:	2811      	cmp	r0, #17
 8003600:	4646      	mov	r6, r8
 8003602:	46a9      	mov	r9, r5
 8003604:	d00b      	beq.n	800361e <BSP_TS_Init+0x3e>
  {
    ts_id2 = ft6x06_ts_drv.ReadID(TS_I2C_ADDRESS_A02);
 8003606:	686b      	ldr	r3, [r5, #4]
 8003608:	2070      	movs	r0, #112	; 0x70
 800360a:	4798      	blx	r3
    I2C_Address    = TS_I2C_ADDRESS;    
  }
  
  /* Scan FT6xx6 TouchScreen IC controller ID register by I2C Read       */
  /* Verify this is a FT6206 or FT6336G, otherwise this is an error case */
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 800360c:	b2c0      	uxtb	r0, r0
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 800360e:	2370      	movs	r3, #112	; 0x70
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003610:	2811      	cmp	r0, #17
    I2C_Address    = TS_I2C_ADDRESS_A02;    
 8003612:	f888 3000 	strb.w	r3, [r8]
  if((ts_id1 == FT6206_ID_VALUE) || (ts_id2 == FT6206_ID_VALUE))
 8003616:	d005      	beq.n	8003624 <BSP_TS_Init+0x44>

    } /* of if(ts_status == TS_OK) */
  }
  else
  {
    ts_status = TS_DEVICE_NOT_FOUND;
 8003618:	2003      	movs	r0, #3
  }

  return (ts_status);
}
 800361a:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
    I2C_Address    = TS_I2C_ADDRESS;    
 800361e:	2354      	movs	r3, #84	; 0x54
 8003620:	f888 3000 	strb.w	r3, [r8]
    ts_driver = &ft6x06_ts_drv;
 8003624:	4b0a      	ldr	r3, [pc, #40]	; (8003650 <BSP_TS_Init+0x70>)
 8003626:	4d0b      	ldr	r5, [pc, #44]	; (8003654 <BSP_TS_Init+0x74>)
      ts_driver->Reset(I2C_Address);
 8003628:	7830      	ldrb	r0, [r6, #0]
    ts_driver = &ft6x06_ts_drv;
 800362a:	f8c5 9000 	str.w	r9, [r5]
      ts_orientation = TS_SWAP_XY | TS_SWAP_Y;                 
 800362e:	42bc      	cmp	r4, r7
 8003630:	bf34      	ite	cc
 8003632:	2101      	movcc	r1, #1
 8003634:	210c      	movcs	r1, #12
 8003636:	7019      	strb	r1, [r3, #0]
      ts_driver->Reset(I2C_Address);
 8003638:	f8d9 3008 	ldr.w	r3, [r9, #8]
 800363c:	4798      	blx	r3
      ts_driver->Start(I2C_Address);
 800363e:	682b      	ldr	r3, [r5, #0]
 8003640:	7830      	ldrb	r0, [r6, #0]
 8003642:	68db      	ldr	r3, [r3, #12]
 8003644:	4798      	blx	r3
  uint8_t ts_status = TS_OK;
 8003646:	2000      	movs	r0, #0
 8003648:	e7e7      	b.n	800361a <BSP_TS_Init+0x3a>
 800364a:	bf00      	nop
 800364c:	20000020 	.word	0x20000020
 8003650:	20001308 	.word	0x20001308
 8003654:	20001304 	.word	0x20001304
 8003658:	200012f0 	.word	0x200012f0

0800365c <BSP_TS_GetState>:
  * @brief  Returns status and positions of the touch screen.
  * @param  TS_State: Pointer to touch screen current state structure
  * @retval TS_OK if all initializations are OK. Other value if error.
  */
uint8_t BSP_TS_GetState(TS_StateTypeDef *TS_State)
{
 800365c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
  uint32_t area = 0;
  uint32_t event = 0;
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  /* Check and update the number of touches active detected */
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 8003660:	4c34      	ldr	r4, [pc, #208]	; (8003734 <BSP_TS_GetState+0xd8>)
 8003662:	4d35      	ldr	r5, [pc, #212]	; (8003738 <BSP_TS_GetState+0xdc>)
 8003664:	6823      	ldr	r3, [r4, #0]
{
 8003666:	b085      	sub	sp, #20
 8003668:	4606      	mov	r6, r0
  TS_State->touchDetected = ts_driver->DetectTouch(I2C_Address);
 800366a:	691b      	ldr	r3, [r3, #16]
 800366c:	7828      	ldrb	r0, [r5, #0]
 800366e:	4798      	blx	r3
 8003670:	46a1      	mov	r9, r4
 8003672:	7030      	strb	r0, [r6, #0]
  if(TS_State->touchDetected)
 8003674:	9501      	str	r5, [sp, #4]
 8003676:	b158      	cbz	r0, 8003690 <BSP_TS_GetState+0x34>
 8003678:	f8df 80c8 	ldr.w	r8, [pc, #200]	; 8003744 <BSP_TS_GetState+0xe8>
 800367c:	4f2f      	ldr	r7, [pc, #188]	; (800373c <BSP_TS_GetState+0xe0>)
 800367e:	f106 0b02 	add.w	fp, r6, #2
 8003682:	ad03      	add	r5, sp, #12
 8003684:	a902      	add	r1, sp, #8
  {
    for(index=0; index < TS_State->touchDetected; index++)
 8003686:	f04f 0a00 	mov.w	sl, #0
 800368a:	7833      	ldrb	r3, [r6, #0]
 800368c:	4553      	cmp	r3, sl
 800368e:	d803      	bhi.n	8003698 <BSP_TS_GetState+0x3c>
#endif /* TS_MULTI_TOUCH_SUPPORTED == 1 */

  } /* end of if(TS_State->touchDetected != 0) */

  return (ts_status);
}
 8003690:	2000      	movs	r0, #0
 8003692:	b005      	add	sp, #20
 8003694:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      ts_driver->GetXY(I2C_Address, &(Raw_x[index]), &(Raw_y[index]));
 8003698:	f8d9 3000 	ldr.w	r3, [r9]
 800369c:	9801      	ldr	r0, [sp, #4]
 800369e:	695b      	ldr	r3, [r3, #20]
 80036a0:	7800      	ldrb	r0, [r0, #0]
 80036a2:	9100      	str	r1, [sp, #0]
 80036a4:	462a      	mov	r2, r5
 80036a6:	4798      	blx	r3
      if(ts_orientation & TS_SWAP_XY)
 80036a8:	4b25      	ldr	r3, [pc, #148]	; (8003740 <BSP_TS_GetState+0xe4>)
 80036aa:	9900      	ldr	r1, [sp, #0]
 80036ac:	781b      	ldrb	r3, [r3, #0]
 80036ae:	f013 0f08 	tst.w	r3, #8
        tmp = Raw_x[index];
 80036b2:	bf1f      	itttt	ne
 80036b4:	880a      	ldrhne	r2, [r1, #0]
        Raw_x[index] = Raw_y[index]; 
 80036b6:	8828      	ldrhne	r0, [r5, #0]
 80036b8:	8008      	strhne	r0, [r1, #0]
        Raw_y[index] = tmp;
 80036ba:	802a      	strhne	r2, [r5, #0]
      if(ts_orientation & TS_SWAP_X)
 80036bc:	079a      	lsls	r2, r3, #30
        Raw_x[index] = FT_6206_MAX_WIDTH - 1 - Raw_x[index];
 80036be:	bf41      	itttt	mi
 80036c0:	880a      	ldrhmi	r2, [r1, #0]
 80036c2:	f5c2 7247 	rsbmi	r2, r2, #796	; 0x31c
 80036c6:	3203      	addmi	r2, #3
 80036c8:	800a      	strhmi	r2, [r1, #0]
      if(ts_orientation & TS_SWAP_Y)
 80036ca:	075b      	lsls	r3, r3, #29
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80036cc:	bf48      	it	mi
 80036ce:	882b      	ldrhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80036d0:	f8d8 2000 	ldr.w	r2, [r8]
 80036d4:	f831 0b02 	ldrh.w	r0, [r1], #2
        Raw_y[index] = FT_6206_MAX_HEIGHT - 1 - Raw_y[index];
 80036d8:	bf42      	ittt	mi
 80036da:	f5c3 73ef 	rsbmi	r3, r3, #478	; 0x1de
 80036de:	3301      	addmi	r3, #1
 80036e0:	802b      	strhmi	r3, [r5, #0]
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80036e2:	b293      	uxth	r3, r2
 80036e4:	4290      	cmp	r0, r2
 80036e6:	bf8c      	ite	hi
 80036e8:	1ac3      	subhi	r3, r0, r3
 80036ea:	1a1b      	subls	r3, r3, r0
 80036ec:	b29b      	uxth	r3, r3
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80036ee:	f835 2b02 	ldrh.w	r2, [r5], #2
      xDiff = Raw_x[index] > _x[index]? (Raw_x[index] - _x[index]): (_x[index] - Raw_x[index]);
 80036f2:	9300      	str	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 80036f4:	683b      	ldr	r3, [r7, #0]
 80036f6:	b29c      	uxth	r4, r3
 80036f8:	429a      	cmp	r2, r3
 80036fa:	bf88      	it	hi
 80036fc:	1b14      	subhi	r4, r2, r4
      if ((xDiff + yDiff) > 5)
 80036fe:	9b00      	ldr	r3, [sp, #0]
      yDiff = Raw_y[index] > _y[index]? (Raw_y[index] - _y[index]): (_y[index] - Raw_y[index]);
 8003700:	bf98      	it	ls
 8003702:	1aa4      	subls	r4, r4, r2
 8003704:	b2a4      	uxth	r4, r4
      if ((xDiff + yDiff) > 5)
 8003706:	441c      	add	r4, r3
 8003708:	46c4      	mov	ip, r8
 800370a:	2c05      	cmp	r4, #5
        _x[index] = Raw_x[index];
 800370c:	bfc8      	it	gt
 800370e:	f8c8 0000 	strgt.w	r0, [r8]
      TS_State->touchX[index] = _x[index];
 8003712:	f8dc 3000 	ldr.w	r3, [ip]
        _y[index] = Raw_y[index];
 8003716:	bfc8      	it	gt
 8003718:	603a      	strgt	r2, [r7, #0]
      TS_State->touchX[index] = _x[index];
 800371a:	46be      	mov	lr, r7
 800371c:	f82b 3b02 	strh.w	r3, [fp], #2
      TS_State->touchY[index] = _y[index];
 8003720:	f8de 3000 	ldr.w	r3, [lr]
 8003724:	f8ab 3002 	strh.w	r3, [fp, #2]
    for(index=0; index < TS_State->touchDetected; index++)
 8003728:	f108 0804 	add.w	r8, r8, #4
 800372c:	3704      	adds	r7, #4
 800372e:	f10a 0a01 	add.w	sl, sl, #1
 8003732:	e7aa      	b.n	800368a <BSP_TS_GetState+0x2e>
 8003734:	20001304 	.word	0x20001304
 8003738:	200012f0 	.word	0x200012f0
 800373c:	200012fc 	.word	0x200012fc
 8003740:	20001308 	.word	0x20001308
 8003744:	200012f4 	.word	0x200012f4

08003748 <SystemInit>:
  */
void SystemInit(void)
{
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8003748:	4b05      	ldr	r3, [pc, #20]	; (8003760 <SystemInit+0x18>)
 800374a:	f8d3 2088 	ldr.w	r2, [r3, #136]	; 0x88
 800374e:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8003752:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 8003756:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800375a:	609a      	str	r2, [r3, #8]
#endif
}
 800375c:	4770      	bx	lr
 800375e:	bf00      	nop
 8003760:	e000ed00 	.word	0xe000ed00

08003764 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003764:	b508      	push	{r3, lr}
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8003766:	4b0b      	ldr	r3, [pc, #44]	; (8003794 <HAL_Init+0x30>)
 8003768:	681a      	ldr	r2, [r3, #0]
 800376a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 800376e:	601a      	str	r2, [r3, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 8003770:	681a      	ldr	r2, [r3, #0]
 8003772:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8003776:	601a      	str	r2, [r3, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 8003778:	681a      	ldr	r2, [r3, #0]
 800377a:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 800377e:	601a      	str	r2, [r3, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 8003780:	2003      	movs	r0, #3
 8003782:	f000 f823 	bl	80037cc <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 8003786:	2000      	movs	r0, #0
 8003788:	f7fe fb50 	bl	8001e2c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 800378c:	f7fe f8f0 	bl	8001970 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
}
 8003790:	2000      	movs	r0, #0
 8003792:	bd08      	pop	{r3, pc}
 8003794:	40023c00 	.word	0x40023c00

08003798 <HAL_GetTick>:
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
  return uwTick;
 8003798:	4b01      	ldr	r3, [pc, #4]	; (80037a0 <HAL_GetTick+0x8>)
 800379a:	6818      	ldr	r0, [r3, #0]
}
 800379c:	4770      	bx	lr
 800379e:	bf00      	nop
 80037a0:	2000a604 	.word	0x2000a604

080037a4 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80037a4:	b538      	push	{r3, r4, r5, lr}
 80037a6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80037a8:	f7ff fff6 	bl	8003798 <HAL_GetTick>
  uint32_t wait = Delay;

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80037ac:	1c63      	adds	r3, r4, #1
  {
    wait += (uint32_t)(uwTickFreq);
 80037ae:	bf1c      	itt	ne
 80037b0:	4b05      	ldrne	r3, [pc, #20]	; (80037c8 <HAL_Delay+0x24>)
 80037b2:	781b      	ldrbne	r3, [r3, #0]
  uint32_t tickstart = HAL_GetTick();
 80037b4:	4605      	mov	r5, r0
    wait += (uint32_t)(uwTickFreq);
 80037b6:	bf18      	it	ne
 80037b8:	18e4      	addne	r4, r4, r3
  }

  while((HAL_GetTick() - tickstart) < wait)
 80037ba:	f7ff ffed 	bl	8003798 <HAL_GetTick>
 80037be:	1b43      	subs	r3, r0, r5
 80037c0:	42a3      	cmp	r3, r4
 80037c2:	d3fa      	bcc.n	80037ba <HAL_Delay+0x16>
  {
  }
}
 80037c4:	bd38      	pop	{r3, r4, r5, pc}
 80037c6:	bf00      	nop
 80037c8:	20000054 	.word	0x20000054

080037cc <HAL_NVIC_SetPriorityGrouping>:
  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 80037cc:	4907      	ldr	r1, [pc, #28]	; (80037ec <HAL_NVIC_SetPriorityGrouping+0x20>)
 80037ce:	68ca      	ldr	r2, [r1, #12]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80037d0:	f422 62e0 	bic.w	r2, r2, #1792	; 0x700
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80037d4:	0203      	lsls	r3, r0, #8
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80037d6:	0412      	lsls	r2, r2, #16
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 80037d8:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 80037dc:	0c12      	lsrs	r2, r2, #16
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 80037de:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 80037e0:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 80037e4:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
  SCB->AIRCR =  reg_value;
 80037e8:	60cb      	str	r3, [r1, #12]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
}
 80037ea:	4770      	bx	lr
 80037ec:	e000ed00 	.word	0xe000ed00

080037f0 <HAL_NVIC_SetPriority>:
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 80037f0:	4b16      	ldr	r3, [pc, #88]	; (800384c <HAL_NVIC_SetPriority+0x5c>)
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 80037f2:	b530      	push	{r4, r5, lr}
 80037f4:	68dc      	ldr	r4, [r3, #12]
 80037f6:	f3c4 2402 	ubfx	r4, r4, #8, #3
{
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80037fa:	f1c4 0507 	rsb	r5, r4, #7
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80037fe:	1d23      	adds	r3, r4, #4
  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 8003800:	2d04      	cmp	r5, #4
 8003802:	bf28      	it	cs
 8003804:	2504      	movcs	r5, #4
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 8003806:	2b06      	cmp	r3, #6

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003808:	f04f 33ff 	mov.w	r3, #4294967295
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 800380c:	bf8c      	ite	hi
 800380e:	3c03      	subhi	r4, #3
 8003810:	2400      	movls	r4, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003812:	fa03 f505 	lsl.w	r5, r3, r5
 8003816:	ea21 0105 	bic.w	r1, r1, r5
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800381a:	40a3      	lsls	r3, r4
 800381c:	ea22 0203 	bic.w	r2, r2, r3
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003820:	40a1      	lsls	r1, r4
  if ((int32_t)(IRQn) >= 0)
 8003822:	2800      	cmp	r0, #0
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 8003824:	ea41 0302 	orr.w	r3, r1, r2
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003828:	bfac      	ite	ge
 800382a:	f100 4060 	addge.w	r0, r0, #3758096384	; 0xe0000000
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800382e:	4a08      	ldrlt	r2, [pc, #32]	; (8003850 <HAL_NVIC_SetPriority+0x60>)
 8003830:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8003834:	bfb8      	it	lt
 8003836:	f000 000f 	andlt.w	r0, r0, #15
 800383a:	b2db      	uxtb	r3, r3
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800383c:	bfaa      	itet	ge
 800383e:	f500 4061 	addge.w	r0, r0, #57600	; 0xe100
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003842:	5413      	strblt	r3, [r2, r0]
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003844:	f880 3300 	strbge.w	r3, [r0, #768]	; 0x300
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
}
 8003848:	bd30      	pop	{r4, r5, pc}
 800384a:	bf00      	nop
 800384c:	e000ed00 	.word	0xe000ed00
 8003850:	e000ed14 	.word	0xe000ed14

08003854 <HAL_NVIC_EnableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003854:	2800      	cmp	r0, #0
 8003856:	db08      	blt.n	800386a <HAL_NVIC_EnableIRQ+0x16>
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003858:	0942      	lsrs	r2, r0, #5
 800385a:	2301      	movs	r3, #1
 800385c:	f000 001f 	and.w	r0, r0, #31
 8003860:	fa03 f000 	lsl.w	r0, r3, r0
 8003864:	4b01      	ldr	r3, [pc, #4]	; (800386c <HAL_NVIC_EnableIRQ+0x18>)
 8003866:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
}
 800386a:	4770      	bx	lr
 800386c:	e000e100 	.word	0xe000e100

08003870 <HAL_NVIC_DisableIRQ>:
  if ((int32_t)(IRQn) >= 0)
 8003870:	2800      	cmp	r0, #0
 8003872:	db0d      	blt.n	8003890 <HAL_NVIC_DisableIRQ+0x20>
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003874:	0943      	lsrs	r3, r0, #5
 8003876:	2201      	movs	r2, #1
 8003878:	f000 001f 	and.w	r0, r0, #31
 800387c:	fa02 f000 	lsl.w	r0, r2, r0
 8003880:	3320      	adds	r3, #32
 8003882:	4a04      	ldr	r2, [pc, #16]	; (8003894 <HAL_NVIC_DisableIRQ+0x24>)
 8003884:	f842 0023 	str.w	r0, [r2, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003888:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("isb 0xF":::"memory");
 800388c:	f3bf 8f6f 	isb	sy
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
}
 8003890:	4770      	bx	lr
 8003892:	bf00      	nop
 8003894:	e000e100 	.word	0xe000e100

08003898 <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 8003898:	b510      	push	{r4, lr}
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 800389a:	4604      	mov	r4, r0
 800389c:	b150      	cbz	r0, 80038b4 <HAL_CRC_Init+0x1c>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800389e:	7943      	ldrb	r3, [r0, #5]
 80038a0:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 80038a4:	b913      	cbnz	r3, 80038ac <HAL_CRC_Init+0x14>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 80038a6:	7102      	strb	r2, [r0, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 80038a8:	f7fe f882 	bl	80019b0 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 80038ac:	2301      	movs	r3, #1
 80038ae:	7163      	strb	r3, [r4, #5]

  /* Return function status */
  return HAL_OK;
 80038b0:	2000      	movs	r0, #0
}
 80038b2:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 80038b4:	2001      	movs	r0, #1
 80038b6:	e7fc      	b.n	80038b2 <HAL_CRC_Init+0x1a>

080038b8 <DMA_CalcBaseAndBitshift>:
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80038b8:	6803      	ldr	r3, [r0, #0]
{
 80038ba:	b510      	push	{r4, lr}
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80038bc:	4c08      	ldr	r4, [pc, #32]	; (80038e0 <DMA_CalcBaseAndBitshift+0x28>)
{
 80038be:	4602      	mov	r2, r0
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 80038c0:	b2d9      	uxtb	r1, r3
 80038c2:	3910      	subs	r1, #16
 80038c4:	2018      	movs	r0, #24
 80038c6:	fbb1 f0f0 	udiv	r0, r1, r0
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 80038ca:	5c20      	ldrb	r0, [r4, r0]
 80038cc:	65d0      	str	r0, [r2, #92]	; 0x5c
  
  if (stream_number > 3U)
 80038ce:	f423 707f 	bic.w	r0, r3, #1020	; 0x3fc
 80038d2:	f020 0003 	bic.w	r0, r0, #3
 80038d6:	295f      	cmp	r1, #95	; 0x5f
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 80038d8:	bf88      	it	hi
 80038da:	3004      	addhi	r0, #4
 80038dc:	6590      	str	r0, [r2, #88]	; 0x58
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
  }
  
  return hdma->StreamBaseAddress;
}
 80038de:	bd10      	pop	{r4, pc}
 80038e0:	0801b545 	.word	0x0801b545

080038e4 <HAL_DMA_Init>:
{
 80038e4:	b570      	push	{r4, r5, r6, lr}
 80038e6:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80038e8:	f7ff ff56 	bl	8003798 <HAL_GetTick>
 80038ec:	4605      	mov	r5, r0
  if(hdma == NULL)
 80038ee:	2c00      	cmp	r4, #0
 80038f0:	d073      	beq.n	80039da <HAL_DMA_Init+0xf6>
  hdma->State = HAL_DMA_STATE_BUSY;
 80038f2:	2302      	movs	r3, #2
 80038f4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  __HAL_DMA_DISABLE(hdma);
 80038f8:	6822      	ldr	r2, [r4, #0]
  __HAL_UNLOCK(hdma);
 80038fa:	2300      	movs	r3, #0
 80038fc:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  __HAL_DMA_DISABLE(hdma);
 8003900:	6813      	ldr	r3, [r2, #0]
 8003902:	f023 0301 	bic.w	r3, r3, #1
 8003906:	6013      	str	r3, [r2, #0]
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003908:	6821      	ldr	r1, [r4, #0]
 800390a:	680b      	ldr	r3, [r1, #0]
 800390c:	07d8      	lsls	r0, r3, #31
 800390e:	d42f      	bmi.n	8003970 <HAL_DMA_Init+0x8c>
  tmp = hdma->Instance->CR;
 8003910:	680b      	ldr	r3, [r1, #0]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003912:	4d33      	ldr	r5, [pc, #204]	; (80039e0 <HAL_DMA_Init+0xfc>)
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003914:	69a0      	ldr	r0, [r4, #24]
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 8003916:	401d      	ands	r5, r3
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003918:	e9d4 2301 	ldrd	r2, r3, [r4, #4]
 800391c:	4313      	orrs	r3, r2
 800391e:	68e2      	ldr	r2, [r4, #12]
 8003920:	4313      	orrs	r3, r2
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 8003922:	6922      	ldr	r2, [r4, #16]
 8003924:	4313      	orrs	r3, r2
 8003926:	6962      	ldr	r2, [r4, #20]
 8003928:	4313      	orrs	r3, r2
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 800392a:	69e2      	ldr	r2, [r4, #28]
 800392c:	4303      	orrs	r3, r0
 800392e:	4313      	orrs	r3, r2
          hdma->Init.Mode                | hdma->Init.Priority;
 8003930:	6a22      	ldr	r2, [r4, #32]
 8003932:	4313      	orrs	r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003934:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8003936:	2a04      	cmp	r2, #4
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 8003938:	ea43 0305 	orr.w	r3, r3, r5
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800393c:	bf02      	ittt	eq
 800393e:	e9d4 560b 	ldrdeq	r5, r6, [r4, #44]	; 0x2c
 8003942:	4335      	orreq	r5, r6
 8003944:	432b      	orreq	r3, r5
  hdma->Instance->CR = tmp;  
 8003946:	600b      	str	r3, [r1, #0]
  tmp = hdma->Instance->FCR;
 8003948:	694b      	ldr	r3, [r1, #20]
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800394a:	2a04      	cmp	r2, #4
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800394c:	f023 0307 	bic.w	r3, r3, #7
  tmp |= hdma->Init.FIFOMode;
 8003950:	ea43 0302 	orr.w	r3, r3, r2
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003954:	d133      	bne.n	80039be <HAL_DMA_Init+0xda>
    tmp |= hdma->Init.FIFOThreshold;
 8003956:	6aa2      	ldr	r2, [r4, #40]	; 0x28
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003958:	6ae5      	ldr	r5, [r4, #44]	; 0x2c
    tmp |= hdma->Init.FIFOThreshold;
 800395a:	4313      	orrs	r3, r2
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 800395c:	b37d      	cbz	r5, 80039be <HAL_DMA_Init+0xda>
{
  HAL_StatusTypeDef status = HAL_OK;
  uint32_t tmp = hdma->Init.FIFOThreshold;
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 800395e:	b990      	cbnz	r0, 8003986 <HAL_DMA_Init+0xa2>
  {
    switch (tmp)
 8003960:	2a01      	cmp	r2, #1
 8003962:	d021      	beq.n	80039a8 <HAL_DMA_Init+0xc4>
 8003964:	f032 0202 	bics.w	r2, r2, #2
 8003968:	d129      	bne.n	80039be <HAL_DMA_Init+0xda>
    case DMA_FIFO_THRESHOLD_HALFFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
      break;
    case DMA_FIFO_THRESHOLD_FULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 800396a:	01ea      	lsls	r2, r5, #7
 800396c:	d527      	bpl.n	80039be <HAL_DMA_Init+0xda>
 800396e:	e01e      	b.n	80039ae <HAL_DMA_Init+0xca>
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003970:	f7ff ff12 	bl	8003798 <HAL_GetTick>
 8003974:	1b40      	subs	r0, r0, r5
 8003976:	2805      	cmp	r0, #5
 8003978:	d9c6      	bls.n	8003908 <HAL_DMA_Init+0x24>
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 800397a:	2320      	movs	r3, #32
 800397c:	6563      	str	r3, [r4, #84]	; 0x54
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 800397e:	2003      	movs	r0, #3
        hdma->State = HAL_DMA_STATE_READY;
 8003980:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
}
 8003984:	bd70      	pop	{r4, r5, r6, pc}
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003986:	f5b0 5f00 	cmp.w	r0, #8192	; 0x2000
 800398a:	d114      	bne.n	80039b6 <HAL_DMA_Init+0xd2>
    switch (tmp)
 800398c:	2a03      	cmp	r2, #3
 800398e:	d816      	bhi.n	80039be <HAL_DMA_Init+0xda>
 8003990:	a001      	add	r0, pc, #4	; (adr r0, 8003998 <HAL_DMA_Init+0xb4>)
 8003992:	f850 f022 	ldr.w	pc, [r0, r2, lsl #2]
 8003996:	bf00      	nop
 8003998:	080039af 	.word	0x080039af
 800399c:	0800396b 	.word	0x0800396b
 80039a0:	080039af 	.word	0x080039af
 80039a4:	080039a9 	.word	0x080039a9
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 80039a8:	f1b5 7fc0 	cmp.w	r5, #25165824	; 0x1800000
 80039ac:	d107      	bne.n	80039be <HAL_DMA_Init+0xda>
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 80039ae:	2340      	movs	r3, #64	; 0x40
 80039b0:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_READY;
 80039b2:	2001      	movs	r0, #1
 80039b4:	e7e4      	b.n	8003980 <HAL_DMA_Init+0x9c>
    switch (tmp)
 80039b6:	2a02      	cmp	r2, #2
 80039b8:	d9f9      	bls.n	80039ae <HAL_DMA_Init+0xca>
 80039ba:	2a03      	cmp	r2, #3
 80039bc:	d0d5      	beq.n	800396a <HAL_DMA_Init+0x86>
  hdma->Instance->FCR = tmp;
 80039be:	614b      	str	r3, [r1, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 80039c0:	4620      	mov	r0, r4
 80039c2:	f7ff ff79 	bl	80038b8 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 80039c6:	6de2      	ldr	r2, [r4, #92]	; 0x5c
 80039c8:	233f      	movs	r3, #63	; 0x3f
 80039ca:	4093      	lsls	r3, r2
 80039cc:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80039ce:	2000      	movs	r0, #0
  hdma->State = HAL_DMA_STATE_READY;
 80039d0:	2301      	movs	r3, #1
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80039d2:	6560      	str	r0, [r4, #84]	; 0x54
  hdma->State = HAL_DMA_STATE_READY;
 80039d4:	f884 3035 	strb.w	r3, [r4, #53]	; 0x35
  return HAL_OK;
 80039d8:	e7d4      	b.n	8003984 <HAL_DMA_Init+0xa0>
    return HAL_ERROR;
 80039da:	2001      	movs	r0, #1
 80039dc:	e7d2      	b.n	8003984 <HAL_DMA_Init+0xa0>
 80039de:	bf00      	nop
 80039e0:	f010803f 	.word	0xf010803f

080039e4 <HAL_DMA_DeInit>:
{
 80039e4:	b538      	push	{r3, r4, r5, lr}
  if(hdma == NULL)
 80039e6:	4605      	mov	r5, r0
 80039e8:	b320      	cbz	r0, 8003a34 <HAL_DMA_DeInit+0x50>
  if(hdma->State == HAL_DMA_STATE_BUSY)
 80039ea:	f890 3035 	ldrb.w	r3, [r0, #53]	; 0x35
 80039ee:	2b02      	cmp	r3, #2
 80039f0:	b2dc      	uxtb	r4, r3
 80039f2:	d01d      	beq.n	8003a30 <HAL_DMA_DeInit+0x4c>
  __HAL_DMA_DISABLE(hdma);
 80039f4:	6803      	ldr	r3, [r0, #0]
 80039f6:	681a      	ldr	r2, [r3, #0]
 80039f8:	f022 0201 	bic.w	r2, r2, #1
  hdma->Instance->CR   = 0U;
 80039fc:	2400      	movs	r4, #0
  __HAL_DMA_DISABLE(hdma);
 80039fe:	601a      	str	r2, [r3, #0]
  hdma->Instance->FCR  = 0x00000021U;
 8003a00:	2221      	movs	r2, #33	; 0x21
  hdma->Instance->CR   = 0U;
 8003a02:	601c      	str	r4, [r3, #0]
  hdma->Instance->NDTR = 0U;
 8003a04:	605c      	str	r4, [r3, #4]
  hdma->Instance->PAR  = 0U;
 8003a06:	609c      	str	r4, [r3, #8]
  hdma->Instance->M0AR = 0U;
 8003a08:	60dc      	str	r4, [r3, #12]
  hdma->Instance->M1AR = 0U;
 8003a0a:	611c      	str	r4, [r3, #16]
  hdma->Instance->FCR  = 0x00000021U;
 8003a0c:	615a      	str	r2, [r3, #20]
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 8003a0e:	f7ff ff53 	bl	80038b8 <DMA_CalcBaseAndBitshift>
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003a12:	6dea      	ldr	r2, [r5, #92]	; 0x5c
 8003a14:	233f      	movs	r3, #63	; 0x3f
 8003a16:	4093      	lsls	r3, r2
  hdma->XferHalfCpltCallback = NULL;
 8003a18:	e9c5 440f 	strd	r4, r4, [r5, #60]	; 0x3c
  hdma->XferM1HalfCpltCallback = NULL;
 8003a1c:	e9c5 4411 	strd	r4, r4, [r5, #68]	; 0x44
  hdma->XferAbortCallback = NULL;
 8003a20:	e9c5 4413 	strd	r4, r4, [r5, #76]	; 0x4c
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003a24:	6083      	str	r3, [r0, #8]
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003a26:	656c      	str	r4, [r5, #84]	; 0x54
  __HAL_UNLOCK(hdma);
 8003a28:	f885 4034 	strb.w	r4, [r5, #52]	; 0x34
  hdma->State = HAL_DMA_STATE_RESET;
 8003a2c:	f885 4035 	strb.w	r4, [r5, #53]	; 0x35
}
 8003a30:	4620      	mov	r0, r4
 8003a32:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8003a34:	2401      	movs	r4, #1
 8003a36:	e7fb      	b.n	8003a30 <HAL_DMA_DeInit+0x4c>

08003a38 <HAL_DMA_Abort>:
{
 8003a38:	b570      	push	{r4, r5, r6, lr}
 8003a3a:	4604      	mov	r4, r0
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003a3c:	6d86      	ldr	r6, [r0, #88]	; 0x58
  uint32_t tickstart = HAL_GetTick();
 8003a3e:	f7ff feab 	bl	8003798 <HAL_GetTick>
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003a42:	f894 3035 	ldrb.w	r3, [r4, #53]	; 0x35
 8003a46:	2b02      	cmp	r3, #2
  uint32_t tickstart = HAL_GetTick();
 8003a48:	4605      	mov	r5, r0
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003a4a:	d006      	beq.n	8003a5a <HAL_DMA_Abort+0x22>
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003a4c:	2380      	movs	r3, #128	; 0x80
 8003a4e:	6563      	str	r3, [r4, #84]	; 0x54
    __HAL_UNLOCK(hdma);
 8003a50:	2300      	movs	r3, #0
 8003a52:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
    return HAL_ERROR;
 8003a56:	2001      	movs	r0, #1
}
 8003a58:	bd70      	pop	{r4, r5, r6, pc}
    hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003a5a:	6823      	ldr	r3, [r4, #0]
 8003a5c:	681a      	ldr	r2, [r3, #0]
 8003a5e:	f022 0216 	bic.w	r2, r2, #22
 8003a62:	601a      	str	r2, [r3, #0]
    hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003a64:	695a      	ldr	r2, [r3, #20]
 8003a66:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 8003a6a:	615a      	str	r2, [r3, #20]
    if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003a6c:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8003a6e:	b90a      	cbnz	r2, 8003a74 <HAL_DMA_Abort+0x3c>
 8003a70:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8003a72:	b11a      	cbz	r2, 8003a7c <HAL_DMA_Abort+0x44>
      hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003a74:	681a      	ldr	r2, [r3, #0]
 8003a76:	f022 0208 	bic.w	r2, r2, #8
 8003a7a:	601a      	str	r2, [r3, #0]
    __HAL_DMA_DISABLE(hdma);
 8003a7c:	681a      	ldr	r2, [r3, #0]
 8003a7e:	f022 0201 	bic.w	r2, r2, #1
 8003a82:	601a      	str	r2, [r3, #0]
    while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 8003a84:	6823      	ldr	r3, [r4, #0]
 8003a86:	681b      	ldr	r3, [r3, #0]
 8003a88:	f013 0301 	ands.w	r3, r3, #1
 8003a8c:	d10a      	bne.n	8003aa4 <HAL_DMA_Abort+0x6c>
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003a8e:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8003a90:	223f      	movs	r2, #63	; 0x3f
 8003a92:	408a      	lsls	r2, r1
 8003a94:	60b2      	str	r2, [r6, #8]
    hdma->State = HAL_DMA_STATE_READY;
 8003a96:	2201      	movs	r2, #1
 8003a98:	f884 2035 	strb.w	r2, [r4, #53]	; 0x35
    __HAL_UNLOCK(hdma);
 8003a9c:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
  return HAL_OK;
 8003aa0:	4618      	mov	r0, r3
 8003aa2:	e7d9      	b.n	8003a58 <HAL_DMA_Abort+0x20>
      if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 8003aa4:	f7ff fe78 	bl	8003798 <HAL_GetTick>
 8003aa8:	1b40      	subs	r0, r0, r5
 8003aaa:	2805      	cmp	r0, #5
 8003aac:	d9ea      	bls.n	8003a84 <HAL_DMA_Abort+0x4c>
        hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 8003aae:	2320      	movs	r3, #32
 8003ab0:	6563      	str	r3, [r4, #84]	; 0x54
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003ab2:	2003      	movs	r0, #3
        __HAL_UNLOCK(hdma);
 8003ab4:	2300      	movs	r3, #0
        hdma->State = HAL_DMA_STATE_TIMEOUT;
 8003ab6:	f884 0035 	strb.w	r0, [r4, #53]	; 0x35
        __HAL_UNLOCK(hdma);
 8003aba:	f884 3034 	strb.w	r3, [r4, #52]	; 0x34
        return HAL_TIMEOUT;
 8003abe:	e7cb      	b.n	8003a58 <HAL_DMA_Abort+0x20>

08003ac0 <HAL_DMA2D_Init>:
  * @param  hdma2d pointer to a DMA2D_HandleTypeDef structure that contains
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_Init(DMA2D_HandleTypeDef *hdma2d)
{
 8003ac0:	b510      	push	{r4, lr}
  /* Check the DMA2D peripheral state */
  if (hdma2d == NULL)
 8003ac2:	4604      	mov	r4, r0
 8003ac4:	b330      	cbz	r0, 8003b14 <HAL_DMA2D_Init+0x54>

    /* Init the low level hardware */
    hdma2d->MspInitCallback(hdma2d);
  }
#else
  if (hdma2d->State == HAL_DMA2D_STATE_RESET)
 8003ac6:	f890 3039 	ldrb.w	r3, [r0, #57]	; 0x39
 8003aca:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8003ace:	b91b      	cbnz	r3, 8003ad8 <HAL_DMA2D_Init+0x18>
  {
    /* Allocate lock resource and initialize it */
    hdma2d->Lock = HAL_UNLOCKED;
 8003ad0:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38
    /* Init the low level hardware */
    HAL_DMA2D_MspInit(hdma2d);
 8003ad4:	f7fd ff84 	bl	80019e0 <HAL_DMA2D_MspInit>

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;

  /* DMA2D CR register configuration -------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003ad8:	6822      	ldr	r2, [r4, #0]
 8003ada:	6861      	ldr	r1, [r4, #4]
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003adc:	2302      	movs	r3, #2
 8003ade:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39
  MODIFY_REG(hdma2d->Instance->CR, DMA2D_CR_MODE, hdma2d->Init.Mode);
 8003ae2:	6813      	ldr	r3, [r2, #0]
 8003ae4:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8003ae8:	430b      	orrs	r3, r1
 8003aea:	6013      	str	r3, [r2, #0]

  /* DMA2D OPFCCR register configuration ---------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OPFCCR, DMA2D_OPFCCR_CM, hdma2d->Init.ColorMode);
 8003aec:	6b53      	ldr	r3, [r2, #52]	; 0x34
 8003aee:	68a1      	ldr	r1, [r4, #8]
 8003af0:	f023 0307 	bic.w	r3, r3, #7
 8003af4:	430b      	orrs	r3, r1
 8003af6:	6353      	str	r3, [r2, #52]	; 0x34

  /* DMA2D OOR register configuration ------------------------------------------*/
  MODIFY_REG(hdma2d->Instance->OOR, DMA2D_OOR_LO, hdma2d->Init.OutputOffset);
 8003af8:	6c13      	ldr	r3, [r2, #64]	; 0x40
 8003afa:	68e1      	ldr	r1, [r4, #12]
 8003afc:	f423 537f 	bic.w	r3, r3, #16320	; 0x3fc0
 8003b00:	f023 033f 	bic.w	r3, r3, #63	; 0x3f
 8003b04:	430b      	orrs	r3, r1
 8003b06:	6413      	str	r3, [r2, #64]	; 0x40


  /* Update error code */
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003b08:	2000      	movs	r0, #0

  /* Initialize the DMA2D state*/
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003b0a:	2301      	movs	r3, #1
  hdma2d->ErrorCode = HAL_DMA2D_ERROR_NONE;
 8003b0c:	63e0      	str	r0, [r4, #60]	; 0x3c
  hdma2d->State  = HAL_DMA2D_STATE_READY;
 8003b0e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

  return HAL_OK;
}
 8003b12:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8003b14:	2001      	movs	r0, #1
 8003b16:	e7fc      	b.n	8003b12 <HAL_DMA2D_Init+0x52>

08003b18 <HAL_DMA2D_LineEventCallback>:
 8003b18:	4770      	bx	lr

08003b1a <HAL_DMA2D_CLUTLoadingCpltCallback>:
 8003b1a:	4770      	bx	lr

08003b1c <HAL_DMA2D_IRQHandler>:
  *                 the configuration information for the DMA2D.
  * @retval HAL status
  */
void HAL_DMA2D_IRQHandler(DMA2D_HandleTypeDef *hdma2d)
{
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003b1c:	6803      	ldr	r3, [r0, #0]
{
 8003b1e:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags = READ_REG(hdma2d->Instance->ISR);
 8003b20:	685e      	ldr	r6, [r3, #4]
  uint32_t crflags = READ_REG(hdma2d->Instance->CR);
 8003b22:	681d      	ldr	r5, [r3, #0]

  /* Transfer Error Interrupt management ***************************************/
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003b24:	07f2      	lsls	r2, r6, #31
{
 8003b26:	4604      	mov	r4, r0
  if ((isrflags & DMA2D_FLAG_TE) != 0U)
 8003b28:	d514      	bpl.n	8003b54 <HAL_DMA2D_IRQHandler+0x38>
  {
    if ((crflags & DMA2D_IT_TE) != 0U)
 8003b2a:	05e9      	lsls	r1, r5, #23
 8003b2c:	d512      	bpl.n	8003b54 <HAL_DMA2D_IRQHandler+0x38>
    {
      /* Disable the transfer Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TE);
 8003b2e:	681a      	ldr	r2, [r3, #0]
 8003b30:	f422 7280 	bic.w	r2, r2, #256	; 0x100
 8003b34:	601a      	str	r2, [r3, #0]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_TE;
 8003b36:	6bc2      	ldr	r2, [r0, #60]	; 0x3c
 8003b38:	f042 0201 	orr.w	r2, r2, #1
 8003b3c:	63c2      	str	r2, [r0, #60]	; 0x3c

      /* Clear the transfer error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TE);
 8003b3e:	2201      	movs	r2, #1
 8003b40:	609a      	str	r2, [r3, #8]

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003b42:	2304      	movs	r3, #4
 8003b44:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003b48:	2300      	movs	r3, #0
 8003b4a:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003b4e:	6943      	ldr	r3, [r0, #20]
 8003b50:	b103      	cbz	r3, 8003b54 <HAL_DMA2D_IRQHandler+0x38>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003b52:	4798      	blx	r3
      }
    }
  }
  /* Configuration Error Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_CE) != 0U)
 8003b54:	06b2      	lsls	r2, r6, #26
 8003b56:	d516      	bpl.n	8003b86 <HAL_DMA2D_IRQHandler+0x6a>
  {
    if ((crflags & DMA2D_IT_CE) != 0U)
 8003b58:	04ab      	lsls	r3, r5, #18
 8003b5a:	d514      	bpl.n	8003b86 <HAL_DMA2D_IRQHandler+0x6a>
    {
      /* Disable the Configuration Error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CE);
 8003b5c:	6823      	ldr	r3, [r4, #0]
 8003b5e:	681a      	ldr	r2, [r3, #0]
 8003b60:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 8003b64:	601a      	str	r2, [r3, #0]

      /* Clear the Configuration error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CE);
 8003b66:	2220      	movs	r2, #32
 8003b68:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CE;
 8003b6a:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003b6c:	f043 0302 	orr.w	r3, r3, #2
 8003b70:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003b72:	2304      	movs	r3, #4
 8003b74:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003b78:	2300      	movs	r3, #0
 8003b7a:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003b7e:	6963      	ldr	r3, [r4, #20]
 8003b80:	b10b      	cbz	r3, 8003b86 <HAL_DMA2D_IRQHandler+0x6a>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003b82:	4620      	mov	r0, r4
 8003b84:	4798      	blx	r3
      }
    }
  }
  /* CLUT access Error Interrupt management ***********************************/
  if ((isrflags & DMA2D_FLAG_CAE) != 0U)
 8003b86:	0730      	lsls	r0, r6, #28
 8003b88:	d516      	bpl.n	8003bb8 <HAL_DMA2D_IRQHandler+0x9c>
  {
    if ((crflags & DMA2D_IT_CAE) != 0U)
 8003b8a:	0529      	lsls	r1, r5, #20
 8003b8c:	d514      	bpl.n	8003bb8 <HAL_DMA2D_IRQHandler+0x9c>
    {
      /* Disable the CLUT access error interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CAE);
 8003b8e:	6823      	ldr	r3, [r4, #0]
 8003b90:	681a      	ldr	r2, [r3, #0]
 8003b92:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 8003b96:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT access error flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CAE);
 8003b98:	2208      	movs	r2, #8
 8003b9a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_CAE;
 8003b9c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003b9e:	f043 0304 	orr.w	r3, r3, #4
 8003ba2:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_ERROR;
 8003ba4:	2304      	movs	r3, #4
 8003ba6:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003baa:	2300      	movs	r3, #0
 8003bac:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferErrorCallback != NULL)
 8003bb0:	6963      	ldr	r3, [r4, #20]
 8003bb2:	b10b      	cbz	r3, 8003bb8 <HAL_DMA2D_IRQHandler+0x9c>
      {
        /* Transfer error Callback */
        hdma2d->XferErrorCallback(hdma2d);
 8003bb4:	4620      	mov	r0, r4
 8003bb6:	4798      	blx	r3
      }
    }
  }
  /* Transfer watermark Interrupt management **********************************/
  if ((isrflags & DMA2D_FLAG_TW) != 0U)
 8003bb8:	0772      	lsls	r2, r6, #29
 8003bba:	d50b      	bpl.n	8003bd4 <HAL_DMA2D_IRQHandler+0xb8>
  {
    if ((crflags & DMA2D_IT_TW) != 0U)
 8003bbc:	056b      	lsls	r3, r5, #21
 8003bbe:	d509      	bpl.n	8003bd4 <HAL_DMA2D_IRQHandler+0xb8>
    {
      /* Disable the transfer watermark interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TW);
 8003bc0:	6823      	ldr	r3, [r4, #0]
 8003bc2:	681a      	ldr	r2, [r3, #0]
 8003bc4:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8003bc8:	601a      	str	r2, [r3, #0]

      /* Clear the transfer watermark flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TW);
 8003bca:	2204      	movs	r2, #4
 8003bcc:	609a      	str	r2, [r3, #8]

      /* Transfer watermark Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->LineEventCallback(hdma2d);
#else
      HAL_DMA2D_LineEventCallback(hdma2d);
 8003bce:	4620      	mov	r0, r4
 8003bd0:	f7ff ffa2 	bl	8003b18 <HAL_DMA2D_LineEventCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */

    }
  }
  /* Transfer Complete Interrupt management ************************************/
  if ((isrflags & DMA2D_FLAG_TC) != 0U)
 8003bd4:	07b0      	lsls	r0, r6, #30
 8003bd6:	d514      	bpl.n	8003c02 <HAL_DMA2D_IRQHandler+0xe6>
  {
    if ((crflags & DMA2D_IT_TC) != 0U)
 8003bd8:	05a9      	lsls	r1, r5, #22
 8003bda:	d512      	bpl.n	8003c02 <HAL_DMA2D_IRQHandler+0xe6>
    {
      /* Disable the transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_TC);
 8003bdc:	6823      	ldr	r3, [r4, #0]
 8003bde:	681a      	ldr	r2, [r3, #0]
 8003be0:	f422 7200 	bic.w	r2, r2, #512	; 0x200
 8003be4:	601a      	str	r2, [r3, #0]

      /* Clear the transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_TC);
 8003be6:	2202      	movs	r2, #2
 8003be8:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003bea:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003bec:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003bee:	2301      	movs	r3, #1
 8003bf0:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003bf4:	2300      	movs	r3, #0
 8003bf6:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      if (hdma2d->XferCpltCallback != NULL)
 8003bfa:	6923      	ldr	r3, [r4, #16]
 8003bfc:	b10b      	cbz	r3, 8003c02 <HAL_DMA2D_IRQHandler+0xe6>
      {
        /* Transfer complete Callback */
        hdma2d->XferCpltCallback(hdma2d);
 8003bfe:	4620      	mov	r0, r4
 8003c00:	4798      	blx	r3
      }
    }
  }
  /* CLUT Transfer Complete Interrupt management ******************************/
  if ((isrflags & DMA2D_FLAG_CTC) != 0U)
 8003c02:	06f2      	lsls	r2, r6, #27
 8003c04:	d513      	bpl.n	8003c2e <HAL_DMA2D_IRQHandler+0x112>
  {
    if ((crflags & DMA2D_IT_CTC) != 0U)
 8003c06:	04eb      	lsls	r3, r5, #19
 8003c08:	d511      	bpl.n	8003c2e <HAL_DMA2D_IRQHandler+0x112>
    {
      /* Disable the CLUT transfer complete interrupt */
      __HAL_DMA2D_DISABLE_IT(hdma2d, DMA2D_IT_CTC);
 8003c0a:	6823      	ldr	r3, [r4, #0]
 8003c0c:	681a      	ldr	r2, [r3, #0]
 8003c0e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8003c12:	601a      	str	r2, [r3, #0]

      /* Clear the CLUT transfer complete flag */
      __HAL_DMA2D_CLEAR_FLAG(hdma2d, DMA2D_FLAG_CTC);
 8003c14:	2210      	movs	r2, #16
 8003c16:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma2d->ErrorCode |= HAL_DMA2D_ERROR_NONE;
 8003c18:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8003c1a:	63e3      	str	r3, [r4, #60]	; 0x3c

      /* Change DMA2D state */
      hdma2d->State = HAL_DMA2D_STATE_READY;
 8003c1c:	2301      	movs	r3, #1
 8003c1e:	f884 3039 	strb.w	r3, [r4, #57]	; 0x39

      /* Process Unlocked */
      __HAL_UNLOCK(hdma2d);
 8003c22:	2300      	movs	r3, #0
 8003c24:	f884 3038 	strb.w	r3, [r4, #56]	; 0x38

      /* CLUT Transfer complete Callback */
#if (USE_HAL_DMA2D_REGISTER_CALLBACKS == 1)
      hdma2d->CLUTLoadingCpltCallback(hdma2d);
#else
      HAL_DMA2D_CLUTLoadingCpltCallback(hdma2d);
 8003c28:	4620      	mov	r0, r4
 8003c2a:	f7ff ff76 	bl	8003b1a <HAL_DMA2D_CLUTLoadingCpltCallback>
#endif /* USE_HAL_DMA2D_REGISTER_CALLBACKS */
    }
  }

}
 8003c2e:	bd70      	pop	{r4, r5, r6, pc}

08003c30 <HAL_DMA2D_ConfigLayer>:
  *                   This parameter can be one of the following values:
  *                   DMA2D_BACKGROUND_LAYER(0) / DMA2D_FOREGROUND_LAYER(1)
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA2D_ConfigLayer(DMA2D_HandleTypeDef *hdma2d, uint32_t LayerIdx)
{
 8003c30:	b5f0      	push	{r4, r5, r6, r7, lr}
      assert_param(IS_DMA2D_ALPHA_MODE(hdma2d->LayerCfg[LayerIdx].AlphaMode));
    }
  }

  /* Process locked */
  __HAL_LOCK(hdma2d);
 8003c32:	f890 3038 	ldrb.w	r3, [r0, #56]	; 0x38
 8003c36:	2b01      	cmp	r3, #1
 8003c38:	f04f 0302 	mov.w	r3, #2
 8003c3c:	d02b      	beq.n	8003c96 <HAL_DMA2D_ConfigLayer+0x66>
 8003c3e:	2201      	movs	r2, #1

  /* Change DMA2D peripheral state */
  hdma2d->State = HAL_DMA2D_STATE_BUSY;
 8003c40:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39
  __HAL_LOCK(hdma2d);
 8003c44:	f880 2038 	strb.w	r2, [r0, #56]	; 0x38

  pLayerCfg = &hdma2d->LayerCfg[LayerIdx];

  /* Prepare the value to be written to the BGPFCCR or FGPFCCR register */
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003c48:	eb00 1301 	add.w	r3, r0, r1, lsl #4
 8003c4c:	e9d3 4207 	ldrd	r4, r2, [r3, #28]
 8003c50:	6a5d      	ldr	r5, [r3, #36]	; 0x24
 8003c52:	4f18      	ldr	r7, [pc, #96]	; (8003cb4 <HAL_DMA2D_ConfigLayer+0x84>)
 8003c54:	ea44 4202 	orr.w	r2, r4, r2, lsl #16
  regMask  = DMA2D_BGPFCCR_CM | DMA2D_BGPFCCR_AM | DMA2D_BGPFCCR_ALPHA;


  if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003c58:	3c09      	subs	r4, #9
 8003c5a:	2c01      	cmp	r4, #1
  {
    regValue |= (pLayerCfg->InputAlpha & DMA2D_BGPFCCR_ALPHA);
 8003c5c:	bf9c      	itt	ls
 8003c5e:	f005 437f 	andls.w	r3, r5, #4278190080	; 0xff000000
 8003c62:	431a      	orrls	r2, r3
  regValue = pLayerCfg->InputColorMode | (pLayerCfg->AlphaMode << DMA2D_BGPFCCR_AM_Pos);
 8003c64:	ea4f 1601 	mov.w	r6, r1, lsl #4
 8003c68:	6803      	ldr	r3, [r0, #0]
  }
  else
  {
    regValue |= (pLayerCfg->InputAlpha << DMA2D_BGPFCCR_ALPHA_Pos);
 8003c6a:	bf88      	it	hi
 8003c6c:	ea42 6205 	orrhi.w	r2, r2, r5, lsl #24
  }

  /* Configure the background DMA2D layer */
  if (LayerIdx == DMA2D_BACKGROUND_LAYER)
 8003c70:	b999      	cbnz	r1, 8003c9a <HAL_DMA2D_ConfigLayer+0x6a>
  {
    /* Write DMA2D BGPFCCR register */
    MODIFY_REG(hdma2d->Instance->BGPFCCR, regMask, regValue);
 8003c72:	6a59      	ldr	r1, [r3, #36]	; 0x24
 8003c74:	4039      	ands	r1, r7
 8003c76:	430a      	orrs	r2, r1
 8003c78:	625a      	str	r2, [r3, #36]	; 0x24

    /* DMA2D BGOR register configuration -------------------------------------*/
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);

    /* DMA2D BGCOLR register configuration -------------------------------------*/
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003c7a:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->BGOR, pLayerCfg->InputOffset);
 8003c7c:	6982      	ldr	r2, [r0, #24]
 8003c7e:	619a      	str	r2, [r3, #24]
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003c80:	d803      	bhi.n	8003c8a <HAL_DMA2D_ConfigLayer+0x5a>
    {
      WRITE_REG(hdma2d->Instance->BGCOLR, pLayerCfg->InputAlpha & (DMA2D_BGCOLR_BLUE | DMA2D_BGCOLR_GREEN | \
 8003c82:	6a42      	ldr	r2, [r0, #36]	; 0x24
 8003c84:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 8003c88:	629a      	str	r2, [r3, #40]	; 0x28
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
                                                                   DMA2D_FGCOLR_RED));
    }
  }
  /* Initialize the DMA2D state*/
  hdma2d->State = HAL_DMA2D_STATE_READY;
 8003c8a:	2301      	movs	r3, #1
 8003c8c:	f880 3039 	strb.w	r3, [r0, #57]	; 0x39

  /* Process unlocked */
  __HAL_UNLOCK(hdma2d);
 8003c90:	2300      	movs	r3, #0
 8003c92:	f880 3038 	strb.w	r3, [r0, #56]	; 0x38
  __HAL_LOCK(hdma2d);
 8003c96:	4618      	mov	r0, r3

  return HAL_OK;
}
 8003c98:	bdf0      	pop	{r4, r5, r6, r7, pc}
    MODIFY_REG(hdma2d->Instance->FGPFCCR, regMask, regValue);
 8003c9a:	69d9      	ldr	r1, [r3, #28]
 8003c9c:	4039      	ands	r1, r7
 8003c9e:	430a      	orrs	r2, r1
 8003ca0:	61da      	str	r2, [r3, #28]
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003ca2:	1982      	adds	r2, r0, r6
    if ((pLayerCfg->InputColorMode == DMA2D_INPUT_A4) || (pLayerCfg->InputColorMode == DMA2D_INPUT_A8))
 8003ca4:	2c01      	cmp	r4, #1
    WRITE_REG(hdma2d->Instance->FGOR, pLayerCfg->InputOffset);
 8003ca6:	6992      	ldr	r2, [r2, #24]
 8003ca8:	611a      	str	r2, [r3, #16]
      WRITE_REG(hdma2d->Instance->FGCOLR, pLayerCfg->InputAlpha & (DMA2D_FGCOLR_BLUE | DMA2D_FGCOLR_GREEN | \
 8003caa:	bf9c      	itt	ls
 8003cac:	f025 457f 	bicls.w	r5, r5, #4278190080	; 0xff000000
 8003cb0:	621d      	strls	r5, [r3, #32]
 8003cb2:	e7ea      	b.n	8003c8a <HAL_DMA2D_ConfigLayer+0x5a>
 8003cb4:	00fcfff0 	.word	0x00fcfff0

08003cb8 <DSI_ShortWrite>:
static HAL_StatusTypeDef DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                        uint32_t ChannelID,
                                        uint32_t Mode,
                                        uint32_t Param1,
                                        uint32_t Param2)
{
 8003cb8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8003cbc:	4607      	mov	r7, r0
 8003cbe:	460d      	mov	r5, r1
 8003cc0:	4614      	mov	r4, r2
 8003cc2:	461e      	mov	r6, r3
  uint32_t tickstart;

  /* Get tick */
  tickstart = HAL_GetTick();
 8003cc4:	f7ff fd68 	bl	8003798 <HAL_GetTick>
 8003cc8:	4680      	mov	r8, r0

  /* Wait for Command FIFO Empty */
  while((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8003cca:	683a      	ldr	r2, [r7, #0]
 8003ccc:	6f53      	ldr	r3, [r2, #116]	; 0x74
 8003cce:	07db      	lsls	r3, r3, #31
 8003cd0:	d50a      	bpl.n	8003ce8 <DSI_ShortWrite+0x30>
    }
  }

  /* Configure the packet to send a short DCS command with 0 or 1 parameter */
  /* Update the DSI packet header with new information */
  hdsi->Instance->GHCR = (Mode | (ChannelID << 6U) | (Param1 << 8U) | (Param2 << 16U));
 8003cd2:	ea44 2306 	orr.w	r3, r4, r6, lsl #8
 8003cd6:	9c06      	ldr	r4, [sp, #24]
 8003cd8:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8003cdc:	ea44 1485 	orr.w	r4, r4, r5, lsl #6
 8003ce0:	66d4      	str	r4, [r2, #108]	; 0x6c

  return HAL_OK;
 8003ce2:	2000      	movs	r0, #0
}
 8003ce4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if((HAL_GetTick() - tickstart ) > DSI_TIMEOUT_VALUE)
 8003ce8:	f7ff fd56 	bl	8003798 <HAL_GetTick>
 8003cec:	eba0 0008 	sub.w	r0, r0, r8
 8003cf0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003cf4:	d9e9      	bls.n	8003cca <DSI_ShortWrite+0x12>
      return HAL_TIMEOUT;
 8003cf6:	2003      	movs	r0, #3
 8003cf8:	e7f4      	b.n	8003ce4 <DSI_ShortWrite+0x2c>

08003cfa <HAL_DSI_ConfigErrorMonitor>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigErrorMonitor(DSI_HandleTypeDef *hdsi, uint32_t ActiveErrors)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8003cfa:	7c03      	ldrb	r3, [r0, #16]
 8003cfc:	2b01      	cmp	r3, #1
 8003cfe:	d05d      	beq.n	8003dbc <HAL_DSI_ConfigErrorMonitor+0xc2>

  hdsi->Instance->IER[0U] = 0U;
 8003d00:	6803      	ldr	r3, [r0, #0]
 8003d02:	2200      	movs	r2, #0
 8003d04:	f8c3 20c4 	str.w	r2, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8003d08:	f8c3 20c8 	str.w	r2, [r3, #200]	; 0xc8

  /* Store active errors to the handle */
  hdsi->ErrorMsk = ActiveErrors;

  if ((ActiveErrors & HAL_DSI_ERROR_ACK) != 0U)
 8003d0c:	07ca      	lsls	r2, r1, #31
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8003d0e:	bf48      	it	mi
 8003d10:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
  hdsi->ErrorMsk = ActiveErrors;
 8003d14:	6181      	str	r1, [r0, #24]
    hdsi->Instance->IER[0U] |= DSI_ERROR_ACK_MASK;
 8003d16:	bf42      	ittt	mi
 8003d18:	ea6f 4212 	mvnmi.w	r2, r2, lsr #16
 8003d1c:	ea6f 4202 	mvnmi.w	r2, r2, lsl #16
 8003d20:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PHY) != 0U)
 8003d24:	078a      	lsls	r2, r1, #30
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[0U] |= DSI_ERROR_PHY_MASK;
 8003d26:	bf42      	ittt	mi
 8003d28:	f8d3 20c4 	ldrmi.w	r2, [r3, #196]	; 0xc4
 8003d2c:	f442 12f8 	orrmi.w	r2, r2, #2031616	; 0x1f0000
 8003d30:	f8c3 20c4 	strmi.w	r2, [r3, #196]	; 0xc4
  }

  if ((ActiveErrors & HAL_DSI_ERROR_TX) != 0U)
 8003d34:	074a      	lsls	r2, r1, #29
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_TX_MASK;
 8003d36:	bf42      	ittt	mi
 8003d38:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003d3c:	f042 0201 	orrmi.w	r2, r2, #1
 8003d40:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_RX) != 0U)
 8003d44:	070a      	lsls	r2, r1, #28
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_RX_MASK;
 8003d46:	bf42      	ittt	mi
 8003d48:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003d4c:	f042 0202 	orrmi.w	r2, r2, #2
 8003d50:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_ECC) != 0U)
 8003d54:	06ca      	lsls	r2, r1, #27
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_ECC_MASK;
 8003d56:	bf42      	ittt	mi
 8003d58:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003d5c:	f042 020c 	orrmi.w	r2, r2, #12
 8003d60:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_CRC) != 0U)
 8003d64:	068a      	lsls	r2, r1, #26
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_CRC_MASK;
 8003d66:	bf42      	ittt	mi
 8003d68:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003d6c:	f042 0210 	orrmi.w	r2, r2, #16
 8003d70:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_PSE) != 0U)
 8003d74:	064a      	lsls	r2, r1, #25
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_PSE_MASK;
 8003d76:	bf42      	ittt	mi
 8003d78:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003d7c:	f042 0220 	orrmi.w	r2, r2, #32
 8003d80:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_EOT) != 0U)
 8003d84:	060a      	lsls	r2, r1, #24
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_EOT_MASK;
 8003d86:	bf42      	ittt	mi
 8003d88:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003d8c:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8003d90:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_OVF) != 0U)
 8003d94:	05ca      	lsls	r2, r1, #23
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_OVF_MASK;
 8003d96:	bf42      	ittt	mi
 8003d98:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003d9c:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8003da0:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  if ((ActiveErrors & HAL_DSI_ERROR_GEN) != 0U)
 8003da4:	058a      	lsls	r2, r1, #22
  {
    /* Enable the interrupt generation on selected errors */
    hdsi->Instance->IER[1U] |= DSI_ERROR_GEN_MASK;
 8003da6:	bf42      	ittt	mi
 8003da8:	f8d3 20c8 	ldrmi.w	r2, [r3, #200]	; 0xc8
 8003dac:	f442 52f8 	orrmi.w	r2, r2, #7936	; 0x1f00
 8003db0:	f8c3 20c8 	strmi.w	r2, [r3, #200]	; 0xc8
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hdsi);
 8003db4:	2300      	movs	r3, #0
 8003db6:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8003db8:	4618      	mov	r0, r3
 8003dba:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8003dbc:	2002      	movs	r0, #2
}
 8003dbe:	4770      	bx	lr

08003dc0 <HAL_DSI_Init>:
{
 8003dc0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8003dc2:	460d      	mov	r5, r1
  if (hdsi == NULL)
 8003dc4:	4604      	mov	r4, r0
 8003dc6:	2800      	cmp	r0, #0
 8003dc8:	f000 80a7 	beq.w	8003f1a <HAL_DSI_Init+0x15a>
  if (hdsi->State == HAL_DSI_STATE_RESET)
 8003dcc:	7c43      	ldrb	r3, [r0, #17]
 8003dce:	b90b      	cbnz	r3, 8003dd4 <HAL_DSI_Init+0x14>
    HAL_DSI_MspInit(hdsi);
 8003dd0:	f7fd fe28 	bl	8001a24 <HAL_DSI_MspInit>
  hdsi->State = HAL_DSI_STATE_BUSY;
 8003dd4:	2303      	movs	r3, #3
 8003dd6:	7463      	strb	r3, [r4, #17]
  __HAL_DSI_REG_ENABLE(hdsi);
 8003dd8:	2300      	movs	r3, #0
 8003dda:	9300      	str	r3, [sp, #0]
 8003ddc:	6823      	ldr	r3, [r4, #0]
 8003dde:	f8d3 2430 	ldr.w	r2, [r3, #1072]	; 0x430
 8003de2:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8003de6:	f8c3 2430 	str.w	r2, [r3, #1072]	; 0x430
 8003dea:	f8d3 3430 	ldr.w	r3, [r3, #1072]	; 0x430
 8003dee:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 8003df2:	9300      	str	r3, [sp, #0]
 8003df4:	9b00      	ldr	r3, [sp, #0]
  tickstart = HAL_GetTick();
 8003df6:	f7ff fccf 	bl	8003798 <HAL_GetTick>
 8003dfa:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_RRS) == 0U)
 8003dfc:	6822      	ldr	r2, [r4, #0]
 8003dfe:	f8d2 340c 	ldr.w	r3, [r2, #1036]	; 0x40c
 8003e02:	04d9      	lsls	r1, r3, #19
 8003e04:	d578      	bpl.n	8003ef8 <HAL_DSI_Init+0x138>
  hdsi->Instance->WRPCR &= ~(DSI_WRPCR_PLL_NDIV | DSI_WRPCR_PLL_IDF | DSI_WRPCR_PLL_ODF);
 8003e06:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8003e0a:	f423 335e 	bic.w	r3, r3, #227328	; 0x37800
 8003e0e:	f423 73fe 	bic.w	r3, r3, #508	; 0x1fc
 8003e12:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  hdsi->Instance->WRPCR |= (((PLLInit->PLLNDIV) << 2U) | ((PLLInit->PLLIDF) << 11U) | ((PLLInit->PLLODF) << 16U));
 8003e16:	e9d5 0300 	ldrd	r0, r3, [r5]
 8003e1a:	02db      	lsls	r3, r3, #11
 8003e1c:	ea43 0380 	orr.w	r3, r3, r0, lsl #2
 8003e20:	68a8      	ldr	r0, [r5, #8]
 8003e22:	f8d2 1430 	ldr.w	r1, [r2, #1072]	; 0x430
 8003e26:	ea43 4300 	orr.w	r3, r3, r0, lsl #16
 8003e2a:	430b      	orrs	r3, r1
 8003e2c:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
  __HAL_DSI_PLL_ENABLE(hdsi);
 8003e30:	2300      	movs	r3, #0
 8003e32:	9301      	str	r3, [sp, #4]
 8003e34:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8003e38:	f043 0301 	orr.w	r3, r3, #1
 8003e3c:	f8c2 3430 	str.w	r3, [r2, #1072]	; 0x430
 8003e40:	f8d2 3430 	ldr.w	r3, [r2, #1072]	; 0x430
 8003e44:	f003 0301 	and.w	r3, r3, #1
 8003e48:	9301      	str	r3, [sp, #4]
 8003e4a:	9b01      	ldr	r3, [sp, #4]
  tickstart = HAL_GetTick();
 8003e4c:	f7ff fca4 	bl	8003798 <HAL_GetTick>
 8003e50:	4606      	mov	r6, r0
  while (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_PLLLS) == 0U)
 8003e52:	6823      	ldr	r3, [r4, #0]
 8003e54:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8003e58:	05d2      	lsls	r2, r2, #23
 8003e5a:	d557      	bpl.n	8003f0c <HAL_DSI_Init+0x14c>
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8003e5c:	f8d3 20a0 	ldr.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8003e60:	6861      	ldr	r1, [r4, #4]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8003e62:	6828      	ldr	r0, [r5, #0]
  hdsi->Instance->PCTLR |= (DSI_PCTLR_CKE | DSI_PCTLR_DEN);
 8003e64:	f042 0206 	orr.w	r2, r2, #6
 8003e68:	f8c3 20a0 	str.w	r2, [r3, #160]	; 0xa0
  hdsi->Instance->CLCR &= ~(DSI_CLCR_DPCC | DSI_CLCR_ACR);
 8003e6c:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8003e70:	f022 0203 	bic.w	r2, r2, #3
 8003e74:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->CLCR |= (DSI_CLCR_DPCC | hdsi->Init.AutomaticClockLaneControl);
 8003e78:	f8d3 2094 	ldr.w	r2, [r3, #148]	; 0x94
 8003e7c:	430a      	orrs	r2, r1
 8003e7e:	f042 0201 	orr.w	r2, r2, #1
 8003e82:	f8c3 2094 	str.w	r2, [r3, #148]	; 0x94
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8003e86:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8003e8a:	68e1      	ldr	r1, [r4, #12]
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_NL;
 8003e8c:	f022 0203 	bic.w	r2, r2, #3
 8003e90:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= hdsi->Init.NumberOfLanes;
 8003e94:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 8003e98:	430a      	orrs	r2, r1
 8003e9a:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8003e9e:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8003ea0:	68a1      	ldr	r1, [r4, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TXECKDIV;
 8003ea2:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8003ea6:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= hdsi->Init.TXEscapeCkdiv;
 8003ea8:	689a      	ldr	r2, [r3, #8]
 8003eaa:	430a      	orrs	r2, r1
 8003eac:	609a      	str	r2, [r3, #8]
  unitIntervalx4 = (4000000U * tempIDF * ((1UL << (0x3U & PLLInit->PLLODF)))) / ((HSE_VALUE / 1000U) * PLLInit->PLLNDIV);
 8003eae:	686a      	ldr	r2, [r5, #4]
 8003eb0:	2a01      	cmp	r2, #1
 8003eb2:	bf38      	it	cc
 8003eb4:	2201      	movcc	r2, #1
 8003eb6:	4611      	mov	r1, r2
 8003eb8:	4a19      	ldr	r2, [pc, #100]	; (8003f20 <HAL_DSI_Init+0x160>)
 8003eba:	434a      	muls	r2, r1
 8003ebc:	68a9      	ldr	r1, [r5, #8]
 8003ebe:	f001 0103 	and.w	r1, r1, #3
 8003ec2:	408a      	lsls	r2, r1
 8003ec4:	f44f 51fa 	mov.w	r1, #8000	; 0x1f40
 8003ec8:	4341      	muls	r1, r0
 8003eca:	fbb2 f2f1 	udiv	r2, r2, r1
  hdsi->Instance->WPCR[0U] &= ~DSI_WPCR0_UIX4;
 8003ece:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
 8003ed2:	f021 013f 	bic.w	r1, r1, #63	; 0x3f
 8003ed6:	f8c3 1418 	str.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8003eda:	f8d3 1418 	ldr.w	r1, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8003ede:	2000      	movs	r0, #0
  hdsi->Instance->WPCR[0U] |= unitIntervalx4;
 8003ee0:	430a      	orrs	r2, r1
 8003ee2:	f8c3 2418 	str.w	r2, [r3, #1048]	; 0x418
  hdsi->Instance->IER[0U] = 0U;
 8003ee6:	f8c3 00c4 	str.w	r0, [r3, #196]	; 0xc4
  hdsi->Instance->IER[1U] = 0U;
 8003eea:	f8c3 00c8 	str.w	r0, [r3, #200]	; 0xc8
  hdsi->State = HAL_DSI_STATE_READY;
 8003eee:	2301      	movs	r3, #1
  hdsi->ErrorCode = HAL_DSI_ERROR_NONE;
 8003ef0:	6160      	str	r0, [r4, #20]
  hdsi->ErrorMsk = 0U;
 8003ef2:	61a0      	str	r0, [r4, #24]
  hdsi->State = HAL_DSI_STATE_READY;
 8003ef4:	7463      	strb	r3, [r4, #17]
  return HAL_OK;
 8003ef6:	e007      	b.n	8003f08 <HAL_DSI_Init+0x148>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8003ef8:	f7ff fc4e 	bl	8003798 <HAL_GetTick>
 8003efc:	1b80      	subs	r0, r0, r6
 8003efe:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003f02:	f67f af7b 	bls.w	8003dfc <HAL_DSI_Init+0x3c>
      return HAL_TIMEOUT;
 8003f06:	2003      	movs	r0, #3
}
 8003f08:	b002      	add	sp, #8
 8003f0a:	bd70      	pop	{r4, r5, r6, pc}
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 8003f0c:	f7ff fc44 	bl	8003798 <HAL_GetTick>
 8003f10:	1b80      	subs	r0, r0, r6
 8003f12:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 8003f16:	d99c      	bls.n	8003e52 <HAL_DSI_Init+0x92>
 8003f18:	e7f5      	b.n	8003f06 <HAL_DSI_Init+0x146>
    return HAL_ERROR;
 8003f1a:	2001      	movs	r0, #1
 8003f1c:	e7f4      	b.n	8003f08 <HAL_DSI_Init+0x148>
 8003f1e:	bf00      	nop
 8003f20:	003d0900 	.word	0x003d0900

08003f24 <HAL_DSI_ErrorCallback>:
 8003f24:	4770      	bx	lr

08003f26 <HAL_DSI_IRQHandler>:
void HAL_DSI_IRQHandler(DSI_HandleTypeDef *hdsi)
{
  uint32_t ErrorStatus0, ErrorStatus1;

  /* Tearing Effect Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8003f26:	6803      	ldr	r3, [r0, #0]
 8003f28:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8003f2c:	07d1      	lsls	r1, r2, #31
{
 8003f2e:	b510      	push	{r4, lr}
 8003f30:	4604      	mov	r4, r0
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_TE) != 0U)
 8003f32:	d508      	bpl.n	8003f46 <HAL_DSI_IRQHandler+0x20>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_TE) != 0U)
 8003f34:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8003f38:	07d2      	lsls	r2, r2, #31
 8003f3a:	d504      	bpl.n	8003f46 <HAL_DSI_IRQHandler+0x20>
    {
      /* Clear the Tearing Effect Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_TE);
 8003f3c:	2201      	movs	r2, #1
 8003f3e:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Tearing Effect callback */
      hdsi->TearingEffectCallback(hdsi);
#else
      /*Call legacy Tearing Effect callback*/
      HAL_DSI_TearingEffectCallback(hdsi);
 8003f42:	f7fc fdbd 	bl	8000ac0 <HAL_DSI_TearingEffectCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* End of Refresh Interrupt management ***************************************/
  if (__HAL_DSI_GET_FLAG(hdsi, DSI_FLAG_ER) != 0U)
 8003f46:	6823      	ldr	r3, [r4, #0]
 8003f48:	f8d3 240c 	ldr.w	r2, [r3, #1036]	; 0x40c
 8003f4c:	0791      	lsls	r1, r2, #30
 8003f4e:	d509      	bpl.n	8003f64 <HAL_DSI_IRQHandler+0x3e>
  {
    if (__HAL_DSI_GET_IT_SOURCE(hdsi, DSI_IT_ER) != 0U)
 8003f50:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 8003f54:	0792      	lsls	r2, r2, #30
 8003f56:	d505      	bpl.n	8003f64 <HAL_DSI_IRQHandler+0x3e>
    {
      /* Clear the End of Refresh Interrupt Flag */
      __HAL_DSI_CLEAR_FLAG(hdsi, DSI_FLAG_ER);
 8003f58:	2202      	movs	r2, #2
 8003f5a:	f8c3 2410 	str.w	r2, [r3, #1040]	; 0x410
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered End of refresh callback */
      hdsi->EndOfRefreshCallback(hdsi);
#else
      /*Call Legacy End of refresh callback */
      HAL_DSI_EndOfRefreshCallback(hdsi);
 8003f5e:	4620      	mov	r0, r4
 8003f60:	f7fc fde2 	bl	8000b28 <HAL_DSI_EndOfRefreshCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }

  /* Error Interrupts management ***********************************************/
  if (hdsi->ErrorMsk != 0U)
 8003f64:	69a3      	ldr	r3, [r4, #24]
 8003f66:	2b00      	cmp	r3, #0
 8003f68:	d04e      	beq.n	8004008 <HAL_DSI_IRQHandler+0xe2>
  {
    ErrorStatus0 = hdsi->Instance->ISR[0U];
 8003f6a:	6821      	ldr	r1, [r4, #0]
 8003f6c:	f8d1 20bc 	ldr.w	r2, [r1, #188]	; 0xbc
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8003f70:	f8d1 30c4 	ldr.w	r3, [r1, #196]	; 0xc4
    ErrorStatus1 = hdsi->Instance->ISR[1U];
 8003f74:	f8d1 00c0 	ldr.w	r0, [r1, #192]	; 0xc0
    ErrorStatus0 &= hdsi->Instance->IER[0U];
 8003f78:	401a      	ands	r2, r3
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8003f7a:	f8d1 30c8 	ldr.w	r3, [r1, #200]	; 0xc8

    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8003f7e:	b291      	uxth	r1, r2
    ErrorStatus1 &= hdsi->Instance->IER[1U];
 8003f80:	4003      	ands	r3, r0
    if ((ErrorStatus0 & DSI_ERROR_ACK_MASK) != 0U)
 8003f82:	b119      	cbz	r1, 8003f8c <HAL_DSI_IRQHandler+0x66>
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ACK;
 8003f84:	6961      	ldr	r1, [r4, #20]
 8003f86:	f041 0101 	orr.w	r1, r1, #1
 8003f8a:	6161      	str	r1, [r4, #20]
    }

    if ((ErrorStatus0 & DSI_ERROR_PHY_MASK) != 0U)
 8003f8c:	f412 1ff8 	tst.w	r2, #2031616	; 0x1f0000
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PHY;
 8003f90:	bf1e      	ittt	ne
 8003f92:	6962      	ldrne	r2, [r4, #20]
 8003f94:	f042 0202 	orrne.w	r2, r2, #2
 8003f98:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_TX_MASK) != 0U)
 8003f9a:	07d8      	lsls	r0, r3, #31
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_TX;
 8003f9c:	bf42      	ittt	mi
 8003f9e:	6962      	ldrmi	r2, [r4, #20]
 8003fa0:	f042 0204 	orrmi.w	r2, r2, #4
 8003fa4:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_RX_MASK) != 0U)
 8003fa6:	0799      	lsls	r1, r3, #30
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_RX;
 8003fa8:	bf42      	ittt	mi
 8003faa:	6962      	ldrmi	r2, [r4, #20]
 8003fac:	f042 0208 	orrmi.w	r2, r2, #8
 8003fb0:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_ECC_MASK) != 0U)
 8003fb2:	f013 0f0c 	tst.w	r3, #12
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_ECC;
 8003fb6:	bf1e      	ittt	ne
 8003fb8:	6962      	ldrne	r2, [r4, #20]
 8003fba:	f042 0210 	orrne.w	r2, r2, #16
 8003fbe:	6162      	strne	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_CRC_MASK) != 0U)
 8003fc0:	06da      	lsls	r2, r3, #27
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_CRC;
 8003fc2:	bf42      	ittt	mi
 8003fc4:	6962      	ldrmi	r2, [r4, #20]
 8003fc6:	f042 0220 	orrmi.w	r2, r2, #32
 8003fca:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_PSE_MASK) != 0U)
 8003fcc:	0698      	lsls	r0, r3, #26
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_PSE;
 8003fce:	bf42      	ittt	mi
 8003fd0:	6962      	ldrmi	r2, [r4, #20]
 8003fd2:	f042 0240 	orrmi.w	r2, r2, #64	; 0x40
 8003fd6:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_EOT_MASK) != 0U)
 8003fd8:	0659      	lsls	r1, r3, #25
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_EOT;
 8003fda:	bf42      	ittt	mi
 8003fdc:	6962      	ldrmi	r2, [r4, #20]
 8003fde:	f042 0280 	orrmi.w	r2, r2, #128	; 0x80
 8003fe2:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_OVF_MASK) != 0U)
 8003fe4:	061a      	lsls	r2, r3, #24
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_OVF;
 8003fe6:	bf42      	ittt	mi
 8003fe8:	6962      	ldrmi	r2, [r4, #20]
 8003fea:	f442 7280 	orrmi.w	r2, r2, #256	; 0x100
 8003fee:	6162      	strmi	r2, [r4, #20]
    }

    if ((ErrorStatus1 & DSI_ERROR_GEN_MASK) != 0U)
 8003ff0:	f413 5ff8 	tst.w	r3, #7936	; 0x1f00
    {
      hdsi->ErrorCode |= HAL_DSI_ERROR_GEN;
 8003ff4:	bf1e      	ittt	ne
 8003ff6:	6963      	ldrne	r3, [r4, #20]
 8003ff8:	f443 7300 	orrne.w	r3, r3, #512	; 0x200
 8003ffc:	6163      	strne	r3, [r4, #20]
    }

    /* Check only selected errors */
    if (hdsi->ErrorCode != HAL_DSI_ERROR_NONE)
 8003ffe:	6963      	ldr	r3, [r4, #20]
 8004000:	b113      	cbz	r3, 8004008 <HAL_DSI_IRQHandler+0xe2>
#if (USE_HAL_DSI_REGISTER_CALLBACKS == 1)
      /*Call registered Error callback */
      hdsi->ErrorCallback(hdsi);
#else
      /*Call Legacy Error callback */
      HAL_DSI_ErrorCallback(hdsi);
 8004002:	4620      	mov	r0, r4
 8004004:	f7ff ff8e 	bl	8003f24 <HAL_DSI_ErrorCallback>
#endif /* USE_HAL_DSI_REGISTER_CALLBACKS */
    }
  }
}
 8004008:	bd10      	pop	{r4, pc}

0800400a <HAL_DSI_SetGenericVCID>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetGenericVCID(DSI_HandleTypeDef *hdsi, uint32_t VirtualChannelID)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800400a:	7c03      	ldrb	r3, [r0, #16]
 800400c:	2b01      	cmp	r3, #1
 800400e:	d00b      	beq.n	8004028 <HAL_DSI_SetGenericVCID+0x1e>

  /* Update the GVCID register */
  hdsi->Instance->GVCIDR &= ~DSI_GVCIDR_VCID;
 8004010:	6803      	ldr	r3, [r0, #0]
 8004012:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 8004014:	f022 0203 	bic.w	r2, r2, #3
 8004018:	631a      	str	r2, [r3, #48]	; 0x30
  hdsi->Instance->GVCIDR |= VirtualChannelID;
 800401a:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800401c:	4311      	orrs	r1, r2
 800401e:	6319      	str	r1, [r3, #48]	; 0x30

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004020:	2300      	movs	r3, #0
 8004022:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004024:	4618      	mov	r0, r3
 8004026:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004028:	2002      	movs	r0, #2
}
 800402a:	4770      	bx	lr

0800402c <HAL_DSI_ConfigAdaptedCommandMode>:
  * @param  CmdCfg  pointer to a DSI_CmdCfgTypeDef structure that contains
  *                 the DSI command mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigAdaptedCommandMode(DSI_HandleTypeDef *hdsi, DSI_CmdCfgTypeDef *CmdCfg)
{
 800402c:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 800402e:	7c03      	ldrb	r3, [r0, #16]
 8004030:	2b01      	cmp	r3, #1
 8004032:	d06a      	beq.n	800410a <HAL_DSI_ConfigAdaptedCommandMode+0xde>
  assert_param(IS_DSI_DE_POLARITY(CmdCfg->DEPolarity));
  assert_param(IS_DSI_VSYNC_POLARITY(CmdCfg->VSPolarity));
  assert_param(IS_DSI_HSYNC_POLARITY(CmdCfg->HSPolarity));

  /* Select command mode by setting CMDM and DSIM bits */
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004034:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;

  /* Select the virtual channel for the LTDC interface traffic */
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8004036:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->MCR |= DSI_MCR_CMDM;
 8004038:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800403a:	f042 0201 	orr.w	r2, r2, #1
 800403e:	635a      	str	r2, [r3, #52]	; 0x34
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_DSIM;
 8004040:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004044:	f022 0201 	bic.w	r2, r2, #1
 8004048:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= DSI_WCFGR_DSIM;
 800404c:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 8004050:	f042 0201 	orr.w	r2, r2, #1
 8004054:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LVCIDR &= ~DSI_LVCIDR_VCID;
 8004058:	68da      	ldr	r2, [r3, #12]
 800405a:	f022 0203 	bic.w	r2, r2, #3
 800405e:	60da      	str	r2, [r3, #12]
  hdsi->Instance->LVCIDR |= CmdCfg->VirtualChannelID;
 8004060:	68da      	ldr	r2, [r3, #12]
 8004062:	4322      	orrs	r2, r4
 8004064:	60da      	str	r2, [r3, #12]

  /* Configure the polarity of control signals */
  hdsi->Instance->LPCR &= ~(DSI_LPCR_DEP | DSI_LPCR_VSP | DSI_LPCR_HSP);
 8004066:	695a      	ldr	r2, [r3, #20]
 8004068:	f022 0207 	bic.w	r2, r2, #7
 800406c:	615a      	str	r2, [r3, #20]
  hdsi->Instance->LPCR |= (CmdCfg->DEPolarity | CmdCfg->VSPolarity | CmdCfg->HSPolarity);
 800406e:	e9d1 5206 	ldrd	r5, r2, [r1, #24]
 8004072:	432a      	orrs	r2, r5
 8004074:	694d      	ldr	r5, [r1, #20]
 8004076:	695c      	ldr	r4, [r3, #20]
 8004078:	432a      	orrs	r2, r5
 800407a:	4322      	orrs	r2, r4
 800407c:	615a      	str	r2, [r3, #20]

  /* Select the color coding for the host */
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 800407e:	691a      	ldr	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004080:	684d      	ldr	r5, [r1, #4]
  hdsi->Instance->LCOLCR &= ~DSI_LCOLCR_COLC;
 8004082:	f022 020f 	bic.w	r2, r2, #15
 8004086:	611a      	str	r2, [r3, #16]
  hdsi->Instance->LCOLCR |= CmdCfg->ColorCoding;
 8004088:	691c      	ldr	r4, [r3, #16]
 800408a:	432c      	orrs	r4, r5
 800408c:	611c      	str	r4, [r3, #16]

  /* Select the color coding for the wrapper */
  hdsi->Instance->WCFGR &= ~DSI_WCFGR_COLMUX;
 800408e:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 8004092:	f024 040e 	bic.w	r4, r4, #14
 8004096:	f8c3 4400 	str.w	r4, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 800409a:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400

  /* Configure the maximum allowed size for write memory command */
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 800409e:	688c      	ldr	r4, [r1, #8]
  hdsi->Instance->WCFGR |= ((CmdCfg->ColorCoding) << 1U);
 80040a0:	ea42 0245 	orr.w	r2, r2, r5, lsl #1
 80040a4:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->LCCR &= ~DSI_LCCR_CMDSIZE;
 80040a8:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80040aa:	0c12      	lsrs	r2, r2, #16
 80040ac:	0412      	lsls	r2, r2, #16
 80040ae:	665a      	str	r2, [r3, #100]	; 0x64
  hdsi->Instance->LCCR |= CmdCfg->CommandSize;
 80040b0:	6e5a      	ldr	r2, [r3, #100]	; 0x64
 80040b2:	4322      	orrs	r2, r4
 80040b4:	665a      	str	r2, [r3, #100]	; 0x64

  /* Configure the tearing effect source and polarity and select the refresh mode */
  hdsi->Instance->WCFGR &= ~(DSI_WCFGR_TESRC | DSI_WCFGR_TEPOL | DSI_WCFGR_AR | DSI_WCFGR_VSPOL);
 80040b6:	f8d3 2400 	ldr.w	r2, [r3, #1024]	; 0x400
 80040ba:	f022 02f0 	bic.w	r2, r2, #240	; 0xf0
 80040be:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80040c2:	e9d1 2503 	ldrd	r2, r5, [r1, #12]
 80040c6:	432a      	orrs	r2, r5
 80040c8:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 80040ca:	f8d3 4400 	ldr.w	r4, [r3, #1024]	; 0x400
 80040ce:	432a      	orrs	r2, r5
 80040d0:	6a0d      	ldr	r5, [r1, #32]
                            CmdCfg->VSyncPol);

  /* Configure the tearing effect acknowledge request */
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80040d2:	6a89      	ldr	r1, [r1, #40]	; 0x28
  hdsi->Instance->WCFGR |= (CmdCfg->TearingEffectSource | CmdCfg->TearingEffectPolarity | CmdCfg->AutomaticRefresh |
 80040d4:	432a      	orrs	r2, r5
 80040d6:	4322      	orrs	r2, r4
 80040d8:	f8c3 2400 	str.w	r2, [r3, #1024]	; 0x400
  hdsi->Instance->CMCR &= ~DSI_CMCR_TEARE;
 80040dc:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80040de:	f022 0201 	bic.w	r2, r2, #1
 80040e2:	669a      	str	r2, [r3, #104]	; 0x68
  hdsi->Instance->CMCR |= CmdCfg->TEAcknowledgeRequest;
 80040e4:	6e9a      	ldr	r2, [r3, #104]	; 0x68
 80040e6:	430a      	orrs	r2, r1
 80040e8:	669a      	str	r2, [r3, #104]	; 0x68

  /* Enable the Tearing Effect interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_TE);
 80040ea:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80040ee:	f042 0201 	orr.w	r2, r2, #1
 80040f2:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Enable the End of Refresh interrupt */
  __HAL_DSI_ENABLE_IT(hdsi, DSI_IT_ER);
 80040f6:	f8d3 2408 	ldr.w	r2, [r3, #1032]	; 0x408
 80040fa:	f042 0202 	orr.w	r2, r2, #2
 80040fe:	f8c3 2408 	str.w	r2, [r3, #1032]	; 0x408

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004102:	2300      	movs	r3, #0
 8004104:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004106:	4618      	mov	r0, r3
}
 8004108:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800410a:	2002      	movs	r0, #2
 800410c:	e7fc      	b.n	8004108 <HAL_DSI_ConfigAdaptedCommandMode+0xdc>
	...

08004110 <HAL_DSI_ConfigCommand>:
  * @param  LPCmd  pointer to a DSI_LPCmdTypeDef structure that contains
  *                the DSI command transmission mode configuration parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigCommand(DSI_HandleTypeDef *hdsi, DSI_LPCmdTypeDef *LPCmd)
{
 8004110:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004112:	7c03      	ldrb	r3, [r0, #16]
 8004114:	2b01      	cmp	r3, #1
 8004116:	d02a      	beq.n	800416e <HAL_DSI_ConfigCommand+0x5e>
  assert_param(IS_DSI_LP_DLW(LPCmd->LPDcsLongWrite));
  assert_param(IS_DSI_LP_MRDP(LPCmd->LPMaxReadPacket));
  assert_param(IS_DSI_ACK_REQUEST(LPCmd->AcknowledgeRequest));

  /* Select High-speed or Low-power for command transmission */
  hdsi->Instance->CMCR &= ~(DSI_CMCR_GSW0TX | \
 8004118:	6802      	ldr	r2, [r0, #0]
 800411a:	4b16      	ldr	r3, [pc, #88]	; (8004174 <HAL_DSI_ConfigCommand+0x64>)
 800411c:	6e94      	ldr	r4, [r2, #104]	; 0x68
 800411e:	4023      	ands	r3, r4
 8004120:	6693      	str	r3, [r2, #104]	; 0x68
                            DSI_CMCR_DSW0TX | \
                            DSI_CMCR_DSW1TX | \
                            DSI_CMCR_DSR0TX | \
                            DSI_CMCR_DLWTX  | \
                            DSI_CMCR_MRDPS);
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004122:	e9d1 3500 	ldrd	r3, r5, [r1]
 8004126:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteOneP | \
 8004128:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 800412a:	6e94      	ldr	r4, [r2, #104]	; 0x68
                           LPCmd->LPGenShortWriteOneP | \
 800412c:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortWriteTwoP | \
 800412e:	68cd      	ldr	r5, [r1, #12]
 8004130:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadNoP   | \
 8004132:	690d      	ldr	r5, [r1, #16]
 8004134:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadOneP  | \
 8004136:	694d      	ldr	r5, [r1, #20]
 8004138:	432b      	orrs	r3, r5
                           LPCmd->LPGenShortReadTwoP  | \
 800413a:	698d      	ldr	r5, [r1, #24]
 800413c:	432b      	orrs	r3, r5
                           LPCmd->LPGenLongWrite      | \
 800413e:	69cd      	ldr	r5, [r1, #28]
 8004140:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteNoP  | \
 8004142:	6a0d      	ldr	r5, [r1, #32]
 8004144:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortWriteOneP | \
 8004146:	6a4d      	ldr	r5, [r1, #36]	; 0x24
 8004148:	432b      	orrs	r3, r5
                           LPCmd->LPDcsShortReadNoP   | \
 800414a:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800414c:	432b      	orrs	r3, r5
                           LPCmd->LPDcsLongWrite      | \
 800414e:	6acd      	ldr	r5, [r1, #44]	; 0x2c
                           LPCmd->LPMaxReadPacket);

  /* Configure the acknowledge request after each packet transmission */
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004150:	6b09      	ldr	r1, [r1, #48]	; 0x30
                           LPCmd->LPDcsLongWrite      | \
 8004152:	432b      	orrs	r3, r5
  hdsi->Instance->CMCR |= (LPCmd->LPGenShortWriteNoP  | \
 8004154:	4323      	orrs	r3, r4
 8004156:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR &= ~DSI_CMCR_ARE;
 8004158:	6e93      	ldr	r3, [r2, #104]	; 0x68
 800415a:	f023 0302 	bic.w	r3, r3, #2
 800415e:	6693      	str	r3, [r2, #104]	; 0x68
  hdsi->Instance->CMCR |= LPCmd->AcknowledgeRequest;
 8004160:	6e93      	ldr	r3, [r2, #104]	; 0x68
 8004162:	430b      	orrs	r3, r1
 8004164:	6693      	str	r3, [r2, #104]	; 0x68

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004166:	2300      	movs	r3, #0
 8004168:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800416a:	4618      	mov	r0, r3
}
 800416c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800416e:	2002      	movs	r0, #2
 8004170:	e7fc      	b.n	800416c <HAL_DSI_ConfigCommand+0x5c>
 8004172:	bf00      	nop
 8004174:	fef080ff 	.word	0xfef080ff

08004178 <HAL_DSI_ConfigFlowControl>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigFlowControl(DSI_HandleTypeDef *hdsi, uint32_t FlowControl)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004178:	7c03      	ldrb	r3, [r0, #16]
 800417a:	2b01      	cmp	r3, #1
 800417c:	d00b      	beq.n	8004196 <HAL_DSI_ConfigFlowControl+0x1e>

  /* Check the parameters */
  assert_param(IS_DSI_FLOW_CONTROL(FlowControl));

  /* Set the DSI Host Protocol Configuration Register */
  hdsi->Instance->PCR &= ~DSI_FLOW_CONTROL_ALL;
 800417e:	6803      	ldr	r3, [r0, #0]
 8004180:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8004182:	f022 021f 	bic.w	r2, r2, #31
 8004186:	62da      	str	r2, [r3, #44]	; 0x2c
  hdsi->Instance->PCR |= FlowControl;
 8004188:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800418a:	4311      	orrs	r1, r2
 800418c:	62d9      	str	r1, [r3, #44]	; 0x2c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800418e:	2300      	movs	r3, #0
 8004190:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 8004192:	4618      	mov	r0, r3
 8004194:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004196:	2002      	movs	r0, #2
}
 8004198:	4770      	bx	lr

0800419a <HAL_DSI_ConfigPhyTimer>:
  * @param  PhyTimers  DSI_PHY_TimerTypeDef structure that contains
  *                    the DSI PHY timing parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigPhyTimer(DSI_HandleTypeDef *hdsi, DSI_PHY_TimerTypeDef *PhyTimers)
{
 800419a:	b530      	push	{r4, r5, lr}
  uint32_t maxTime;
  /* Process locked */
  __HAL_LOCK(hdsi);
 800419c:	7c03      	ldrb	r3, [r0, #16]
 800419e:	2b01      	cmp	r3, #1
 80041a0:	d035      	beq.n	800420e <HAL_DSI_ConfigPhyTimer+0x74>

  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80041a2:	e9d1 2400 	ldrd	r2, r4, [r1]
     This timings are configured by the HS2LP_TIME and LP2HS_TIME in the DSI Host Clock Lane Timer Configuration Register (DSI_CLTCR).
     But the DSI Host is not calculating LP2HS_TIME + HS2LP_TIME but 2 x HS2LP_TIME.

     Workaround : Configure HS2LP_TIME and LP2HS_TIME with the same value being the max of HS2LP_TIME or LP2HS_TIME.
    */
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80041a6:	6803      	ldr	r3, [r0, #0]
  maxTime = (PhyTimers->ClockLaneLP2HSTime > PhyTimers->ClockLaneHS2LPTime) ? PhyTimers->ClockLaneLP2HSTime :
 80041a8:	4294      	cmp	r4, r2
 80041aa:	bf38      	it	cc
 80041ac:	4614      	movcc	r4, r2
  hdsi->Instance->CLTCR &= ~(DSI_CLTCR_LP2HS_TIME | DSI_CLTCR_HS2LP_TIME);
 80041ae:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80041b2:	f002 22fc 	and.w	r2, r2, #4227922944	; 0xfc00fc00
 80041b6:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98
  hdsi->Instance->CLTCR |= (maxTime | ((maxTime) << 16U));
 80041ba:	f8d3 2098 	ldr.w	r2, [r3, #152]	; 0x98
 80041be:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 80041c2:	4322      	orrs	r2, r4
 80041c4:	f8c3 2098 	str.w	r2, [r3, #152]	; 0x98

  /* Data lane timer configuration */
  hdsi->Instance->DLTCR &= ~(DSI_DLTCR_MRD_TIME | DSI_DLTCR_LP2HS_TIME | DSI_DLTCR_HS2LP_TIME);
 80041c8:	f8d3 209c 	ldr.w	r2, [r3, #156]	; 0x9c
 80041cc:	f402 4200 	and.w	r2, r2, #32768	; 0x8000
 80041d0:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
                              PhyTimers->DataLaneHS2LPTime) << 24U));
 80041d4:	e9d1 2502 	ldrd	r2, r5, [r1, #8]
 80041d8:	0612      	lsls	r2, r2, #24
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80041da:	ea42 4205 	orr.w	r2, r2, r5, lsl #16
 80041de:	690d      	ldr	r5, [r1, #16]
 80041e0:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c

  /* Configure the wait period to request HS transmission after a stop state */
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80041e4:	6949      	ldr	r1, [r1, #20]
  hdsi->Instance->DLTCR |= (PhyTimers->DataLaneMaxReadTime | ((PhyTimers->DataLaneLP2HSTime) << 16U) | ((
 80041e6:	432a      	orrs	r2, r5
 80041e8:	4322      	orrs	r2, r4
 80041ea:	f8c3 209c 	str.w	r2, [r3, #156]	; 0x9c
  hdsi->Instance->PCONFR &= ~DSI_PCONFR_SW_TIME;
 80041ee:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80041f2:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 80041f6:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4
  hdsi->Instance->PCONFR |= ((PhyTimers->StopWaitTime) << 8U);
 80041fa:	f8d3 20a4 	ldr.w	r2, [r3, #164]	; 0xa4
 80041fe:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 8004202:	f8c3 20a4 	str.w	r2, [r3, #164]	; 0xa4

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004206:	2300      	movs	r3, #0
 8004208:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800420a:	4618      	mov	r0, r3
}
 800420c:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 800420e:	2002      	movs	r0, #2
 8004210:	e7fc      	b.n	800420c <HAL_DSI_ConfigPhyTimer+0x72>
	...

08004214 <HAL_DSI_ConfigHostTimeouts>:
  * @param  HostTimeouts  DSI_HOST_TimeoutTypeDef structure that contains
  *                       the DSI host timeout parameters
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_ConfigHostTimeouts(DSI_HandleTypeDef *hdsi, DSI_HOST_TimeoutTypeDef *HostTimeouts)
{
 8004214:	b530      	push	{r4, r5, lr}
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004216:	7c03      	ldrb	r3, [r0, #16]
 8004218:	2b01      	cmp	r3, #1
 800421a:	d05c      	beq.n	80042d6 <HAL_DSI_ConfigHostTimeouts+0xc2>

  /* Set the timeout clock division factor */
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 800421c:	6803      	ldr	r3, [r0, #0]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800421e:	680c      	ldr	r4, [r1, #0]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004220:	689a      	ldr	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);

  /* Low-power reception timeout */
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 8004222:	688d      	ldr	r5, [r1, #8]
  hdsi->Instance->CCR &= ~DSI_CCR_TOCKDIV;
 8004224:	f422 427f 	bic.w	r2, r2, #65280	; 0xff00
 8004228:	609a      	str	r2, [r3, #8]
  hdsi->Instance->CCR |= ((HostTimeouts->TimeoutCkdiv) << 8U);
 800422a:	689a      	ldr	r2, [r3, #8]
 800422c:	ea42 2204 	orr.w	r2, r2, r4, lsl #8
 8004230:	609a      	str	r2, [r3, #8]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8004232:	6f9a      	ldr	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 8004234:	684c      	ldr	r4, [r1, #4]
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_HSTX_TOCNT;
 8004236:	b292      	uxth	r2, r2
 8004238:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= ((HostTimeouts->HighSpeedTransmissionTimeout) << 16U);
 800423a:	6f9a      	ldr	r2, [r3, #120]	; 0x78
 800423c:	ea42 4204 	orr.w	r2, r2, r4, lsl #16
 8004240:	679a      	str	r2, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] &= ~DSI_TCCR0_LPRX_TOCNT;
 8004242:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 8004244:	4a25      	ldr	r2, [pc, #148]	; (80042dc <HAL_DSI_ConfigHostTimeouts+0xc8>)
 8004246:	4014      	ands	r4, r2
 8004248:	679c      	str	r4, [r3, #120]	; 0x78
  hdsi->Instance->TCCR[0U] |= HostTimeouts->LowPowerReceptionTimeout;
 800424a:	6f9c      	ldr	r4, [r3, #120]	; 0x78
 800424c:	432c      	orrs	r4, r5
 800424e:	679c      	str	r4, [r3, #120]	; 0x78

  /* High-speed read timeout */
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004250:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8004252:	68cd      	ldr	r5, [r1, #12]
  hdsi->Instance->TCCR[1U] &= ~DSI_TCCR1_HSRD_TOCNT;
 8004254:	4014      	ands	r4, r2
 8004256:	67dc      	str	r4, [r3, #124]	; 0x7c
  hdsi->Instance->TCCR[1U] |= HostTimeouts->HighSpeedReadTimeout;
 8004258:	6fdc      	ldr	r4, [r3, #124]	; 0x7c
 800425a:	432c      	orrs	r4, r5
 800425c:	67dc      	str	r4, [r3, #124]	; 0x7c

  /* Low-power read timeout */
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 800425e:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 8004262:	690d      	ldr	r5, [r1, #16]
  hdsi->Instance->TCCR[2U] &= ~DSI_TCCR2_LPRD_TOCNT;
 8004264:	4014      	ands	r4, r2
 8004266:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80
  hdsi->Instance->TCCR[2U] |= HostTimeouts->LowPowerReadTimeout;
 800426a:	f8d3 4080 	ldr.w	r4, [r3, #128]	; 0x80
 800426e:	432c      	orrs	r4, r5
 8004270:	f8c3 4080 	str.w	r4, [r3, #128]	; 0x80

  /* High-speed write timeout */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 8004274:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8004278:	694d      	ldr	r5, [r1, #20]
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_HSWR_TOCNT;
 800427a:	4014      	ands	r4, r2
 800427c:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWriteTimeout;
 8004280:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 8004284:	432c      	orrs	r4, r5
 8004286:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* High-speed write presp mode */
  hdsi->Instance->TCCR[3U] &= ~DSI_TCCR3_PM;
 800428a:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800428e:	f024 7480 	bic.w	r4, r4, #16777216	; 0x1000000
 8004292:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84
  hdsi->Instance->TCCR[3U] |= HostTimeouts->HighSpeedWritePrespMode;
 8004296:	f8d3 4084 	ldr.w	r4, [r3, #132]	; 0x84
 800429a:	698d      	ldr	r5, [r1, #24]
 800429c:	432c      	orrs	r4, r5
 800429e:	f8c3 4084 	str.w	r4, [r3, #132]	; 0x84

  /* Low-speed write timeout */
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80042a2:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80042a6:	69cd      	ldr	r5, [r1, #28]

  /* BTA timeout */
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80042a8:	6a09      	ldr	r1, [r1, #32]
  hdsi->Instance->TCCR[4U] &= ~DSI_TCCR4_LPWR_TOCNT;
 80042aa:	4014      	ands	r4, r2
 80042ac:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[4U] |= HostTimeouts->LowPowerWriteTimeout;
 80042b0:	f8d3 4088 	ldr.w	r4, [r3, #136]	; 0x88
 80042b4:	432c      	orrs	r4, r5
 80042b6:	f8c3 4088 	str.w	r4, [r3, #136]	; 0x88
  hdsi->Instance->TCCR[5U] &= ~DSI_TCCR5_BTA_TOCNT;
 80042ba:	f8d3 408c 	ldr.w	r4, [r3, #140]	; 0x8c
 80042be:	4022      	ands	r2, r4
 80042c0:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c
  hdsi->Instance->TCCR[5U] |= HostTimeouts->BTATimeout;
 80042c4:	f8d3 208c 	ldr.w	r2, [r3, #140]	; 0x8c
 80042c8:	430a      	orrs	r2, r1
 80042ca:	f8c3 208c 	str.w	r2, [r3, #140]	; 0x8c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 80042ce:	2300      	movs	r3, #0
 80042d0:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 80042d2:	4618      	mov	r0, r3
}
 80042d4:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 80042d6:	2002      	movs	r0, #2
 80042d8:	e7fc      	b.n	80042d4 <HAL_DSI_ConfigHostTimeouts+0xc0>
 80042da:	bf00      	nop
 80042dc:	ffff0000 	.word	0xffff0000

080042e0 <HAL_DSI_Start>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Start(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 80042e0:	7c03      	ldrb	r3, [r0, #16]
 80042e2:	2b01      	cmp	r3, #1
{
 80042e4:	b082      	sub	sp, #8
  __HAL_LOCK(hdsi);
 80042e6:	d01c      	beq.n	8004322 <HAL_DSI_Start+0x42>

  /* Enable the DSI host */
  __HAL_DSI_ENABLE(hdsi);
 80042e8:	6802      	ldr	r2, [r0, #0]
 80042ea:	2300      	movs	r3, #0
 80042ec:	9300      	str	r3, [sp, #0]
 80042ee:	6851      	ldr	r1, [r2, #4]
 80042f0:	f041 0101 	orr.w	r1, r1, #1
 80042f4:	6051      	str	r1, [r2, #4]
 80042f6:	6851      	ldr	r1, [r2, #4]
 80042f8:	f001 0101 	and.w	r1, r1, #1
 80042fc:	9100      	str	r1, [sp, #0]
 80042fe:	9900      	ldr	r1, [sp, #0]

  /* Enable the DSI wrapper */
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004300:	9301      	str	r3, [sp, #4]
 8004302:	f8d2 1404 	ldr.w	r1, [r2, #1028]	; 0x404
 8004306:	f041 0108 	orr.w	r1, r1, #8
 800430a:	f8c2 1404 	str.w	r1, [r2, #1028]	; 0x404
 800430e:	f8d2 2404 	ldr.w	r2, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 8004312:	7403      	strb	r3, [r0, #16]
  __HAL_DSI_WRAPPER_ENABLE(hdsi);
 8004314:	f002 0208 	and.w	r2, r2, #8
 8004318:	9201      	str	r2, [sp, #4]
 800431a:	9a01      	ldr	r2, [sp, #4]

  return HAL_OK;
 800431c:	4618      	mov	r0, r3
}
 800431e:	b002      	add	sp, #8
 8004320:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004322:	2002      	movs	r0, #2
 8004324:	e7fb      	b.n	800431e <HAL_DSI_Start+0x3e>

08004326 <HAL_DSI_Refresh>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_Refresh(DSI_HandleTypeDef *hdsi)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 8004326:	7c03      	ldrb	r3, [r0, #16]
 8004328:	2b01      	cmp	r3, #1

  /* Update the display */
  hdsi->Instance->WCR |= DSI_WCR_LTDCEN;
 800432a:	bf1f      	itttt	ne
 800432c:	6802      	ldrne	r2, [r0, #0]
 800432e:	f8d2 3404 	ldrne.w	r3, [r2, #1028]	; 0x404
 8004332:	f043 0304 	orrne.w	r3, r3, #4
 8004336:	f8c2 3404 	strne.w	r3, [r2, #1028]	; 0x404

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800433a:	bf1d      	ittte	ne
 800433c:	2300      	movne	r3, #0
 800433e:	7403      	strbne	r3, [r0, #16]

  return HAL_OK;
 8004340:	4618      	movne	r0, r3
  __HAL_LOCK(hdsi);
 8004342:	2002      	moveq	r0, #2
}
 8004344:	4770      	bx	lr

08004346 <HAL_DSI_ShortWrite>:
HAL_StatusTypeDef HAL_DSI_ShortWrite(DSI_HandleTypeDef *hdsi,
                                     uint32_t ChannelID,
                                     uint32_t Mode,
                                     uint32_t Param1,
                                     uint32_t Param2)
{
 8004346:	b537      	push	{r0, r1, r2, r4, r5, lr}
  HAL_StatusTypeDef status;
  /* Check the parameters */
  assert_param(IS_DSI_SHORT_WRITE_PACKET_TYPE(Mode));

  /* Process locked */
  __HAL_LOCK(hdsi);
 8004348:	7c05      	ldrb	r5, [r0, #16]
 800434a:	2d01      	cmp	r5, #1
{
 800434c:	4604      	mov	r4, r0
  __HAL_LOCK(hdsi);
 800434e:	d009      	beq.n	8004364 <HAL_DSI_ShortWrite+0x1e>
 8004350:	2501      	movs	r5, #1
 8004352:	7405      	strb	r5, [r0, #16]

   status = DSI_ShortWrite(hdsi, ChannelID, Mode, Param1, Param2);
 8004354:	9d06      	ldr	r5, [sp, #24]
 8004356:	9500      	str	r5, [sp, #0]
 8004358:	f7ff fcae 	bl	8003cb8 <DSI_ShortWrite>

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800435c:	2300      	movs	r3, #0
 800435e:	7423      	strb	r3, [r4, #16]

  return status;
}
 8004360:	b003      	add	sp, #12
 8004362:	bd30      	pop	{r4, r5, pc}
  __HAL_LOCK(hdsi);
 8004364:	2002      	movs	r0, #2
 8004366:	e7fb      	b.n	8004360 <HAL_DSI_ShortWrite+0x1a>

08004368 <HAL_DSI_LongWrite>:
                                    uint32_t ChannelID,
                                    uint32_t Mode,
                                    uint32_t NbParams,
                                    uint32_t Param1,
                                    uint8_t *ParametersTable)
{
 8004368:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800436c:	461c      	mov	r4, r3
  uint32_t tickstart;
  uint32_t fifoword;
  uint8_t *pparams = ParametersTable;

  /* Process locked */
  __HAL_LOCK(hdsi);
 800436e:	7c03      	ldrb	r3, [r0, #16]
 8004370:	2b01      	cmp	r3, #1
{
 8004372:	e9dd 980a 	ldrd	r9, r8, [sp, #40]	; 0x28
 8004376:	4606      	mov	r6, r0
 8004378:	460f      	mov	r7, r1
 800437a:	4615      	mov	r5, r2
  __HAL_LOCK(hdsi);
 800437c:	d053      	beq.n	8004426 <HAL_DSI_LongWrite+0xbe>
 800437e:	2301      	movs	r3, #1
 8004380:	7403      	strb	r3, [r0, #16]

  /* Check the parameters */
  assert_param(IS_DSI_LONG_WRITE_PACKET_TYPE(Mode));

  /* Get tick */
  tickstart = HAL_GetTick();
 8004382:	f7ff fa09 	bl	8003798 <HAL_GetTick>
 8004386:	4683      	mov	fp, r0

  /* Wait for Command FIFO Empty */
  while ((hdsi->Instance->GPSR & DSI_GPSR_CMDFE) == 0U)
 8004388:	6832      	ldr	r2, [r6, #0]
 800438a:	6f53      	ldr	r3, [r2, #116]	; 0x74
 800438c:	f013 0a01 	ands.w	sl, r3, #1
 8004390:	d01a      	beq.n	80043c8 <HAL_DSI_LongWrite+0x60>
    }
  }

  /* Set the DCS code on payload byte 1, and the other parameters on the write FIFO command*/
  fifoword = Param1;
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 8004392:	2c03      	cmp	r4, #3
 8004394:	4621      	mov	r1, r4

  for (count = 0U; count < nbBytes; count++)
 8004396:	f04f 0000 	mov.w	r0, #0
  nbBytes = (NbParams < 3U) ? NbParams : 3U;
 800439a:	bf28      	it	cs
 800439c:	2103      	movcs	r1, #3
  for (count = 0U; count < nbBytes; count++)
 800439e:	4288      	cmp	r0, r1
 80043a0:	d11e      	bne.n	80043e0 <HAL_DSI_LongWrite+0x78>
  {
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
  }
  hdsi->Instance->GPDR = fifoword;

  uicounter = NbParams - nbBytes;
 80043a2:	1a23      	subs	r3, r4, r0
  hdsi->Instance->GPDR = fifoword;
 80043a4:	f8c2 9070 	str.w	r9, [r2, #112]	; 0x70
  pparams += nbBytes;
 80043a8:	4440      	add	r0, r8
  /* Set the Next parameters on the write FIFO command*/
  while (uicounter != 0U)
 80043aa:	bb1b      	cbnz	r3, 80043f4 <HAL_DSI_LongWrite+0x8c>

  /* Configure the packet to send a long DCS command */
  DSI_ConfigPacketHeader(hdsi->Instance,
                         ChannelID,
                         Mode,
                         ((NbParams + 1U) & 0x00FFU),
 80043ac:	3401      	adds	r4, #1
  DSIx->GHCR = (DataType | (ChannelID << 6U) | (Data0 << 8U) | (Data1 << 16U));
 80043ae:	ea45 1187 	orr.w	r1, r5, r7, lsl #6
 80043b2:	0225      	lsls	r5, r4, #8
 80043b4:	b2ad      	uxth	r5, r5
 80043b6:	0224      	lsls	r4, r4, #8
 80043b8:	430d      	orrs	r5, r1
 80043ba:	f404 047f 	and.w	r4, r4, #16711680	; 0xff0000
 80043be:	432c      	orrs	r4, r5
 80043c0:	66d4      	str	r4, [r2, #108]	; 0x6c
                         (((NbParams + 1U) & 0xFF00U) >> 8U));

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);

  return HAL_OK;
 80043c2:	4618      	mov	r0, r3
  __HAL_UNLOCK(hdsi);
 80043c4:	7433      	strb	r3, [r6, #16]
  return HAL_OK;
 80043c6:	e009      	b.n	80043dc <HAL_DSI_LongWrite+0x74>
    if ((HAL_GetTick() - tickstart) > DSI_TIMEOUT_VALUE)
 80043c8:	f7ff f9e6 	bl	8003798 <HAL_GetTick>
 80043cc:	eba0 000b 	sub.w	r0, r0, fp
 80043d0:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80043d4:	d9d8      	bls.n	8004388 <HAL_DSI_LongWrite+0x20>
      __HAL_UNLOCK(hdsi);
 80043d6:	f886 a010 	strb.w	sl, [r6, #16]
      return HAL_TIMEOUT;
 80043da:	2003      	movs	r0, #3
}
 80043dc:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
    fifoword |= (((uint32_t)(*(pparams + count))) << (8U + (8U * count)));
 80043e0:	f818 3000 	ldrb.w	r3, [r8, r0]
 80043e4:	3001      	adds	r0, #1
 80043e6:	ea4f 0cc0 	mov.w	ip, r0, lsl #3
 80043ea:	fa03 f30c 	lsl.w	r3, r3, ip
 80043ee:	ea49 0903 	orr.w	r9, r9, r3
  for (count = 0U; count < nbBytes; count++)
 80043f2:	e7d4      	b.n	800439e <HAL_DSI_LongWrite+0x36>
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80043f4:	2b04      	cmp	r3, #4
    fifoword = 0U;
 80043f6:	f04f 0c00 	mov.w	ip, #0
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80043fa:	469e      	mov	lr, r3
    for (count = 0U; count < nbBytes; count++)
 80043fc:	4661      	mov	r1, ip
    nbBytes = (uicounter < 4U) ? uicounter : 4U;
 80043fe:	bf28      	it	cs
 8004400:	f04f 0e04 	movcs.w	lr, #4
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004404:	f810 8001 	ldrb.w	r8, [r0, r1]
 8004408:	ea4f 09c1 	mov.w	r9, r1, lsl #3
    for (count = 0U; count < nbBytes; count++)
 800440c:	3101      	adds	r1, #1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 800440e:	fa08 f809 	lsl.w	r8, r8, r9
    for (count = 0U; count < nbBytes; count++)
 8004412:	458e      	cmp	lr, r1
      fifoword |= (((uint32_t)(*(pparams + count))) << (8U * count));
 8004414:	ea4c 0c08 	orr.w	ip, ip, r8
    for (count = 0U; count < nbBytes; count++)
 8004418:	d1f4      	bne.n	8004404 <HAL_DSI_LongWrite+0x9c>
    hdsi->Instance->GPDR = fifoword;
 800441a:	f8c2 c070 	str.w	ip, [r2, #112]	; 0x70
    uicounter -= nbBytes;
 800441e:	eba3 030e 	sub.w	r3, r3, lr
    pparams += nbBytes;
 8004422:	4470      	add	r0, lr
 8004424:	e7c1      	b.n	80043aa <HAL_DSI_LongWrite+0x42>
  __HAL_LOCK(hdsi);
 8004426:	2002      	movs	r0, #2
 8004428:	e7d8      	b.n	80043dc <HAL_DSI_LongWrite+0x74>

0800442a <HAL_DSI_SetLowPowerRXFilter>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DSI_SetLowPowerRXFilter(DSI_HandleTypeDef *hdsi, uint32_t Frequency)
{
  /* Process locked */
  __HAL_LOCK(hdsi);
 800442a:	7c03      	ldrb	r3, [r0, #16]
 800442c:	2b01      	cmp	r3, #1
 800442e:	d010      	beq.n	8004452 <HAL_DSI_SetLowPowerRXFilter+0x28>

  /* Low-Power RX low-pass Filtering Tuning */
  hdsi->Instance->WPCR[1U] &= ~DSI_WPCR1_LPRXFT;
 8004430:	6803      	ldr	r3, [r0, #0]
 8004432:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004436:	f022 62c0 	bic.w	r2, r2, #100663296	; 0x6000000
 800443a:	f8c3 241c 	str.w	r2, [r3, #1052]	; 0x41c
  hdsi->Instance->WPCR[1U] |= Frequency << 25U;
 800443e:	f8d3 241c 	ldr.w	r2, [r3, #1052]	; 0x41c
 8004442:	ea42 6141 	orr.w	r1, r2, r1, lsl #25
 8004446:	f8c3 141c 	str.w	r1, [r3, #1052]	; 0x41c

  /* Process unlocked */
  __HAL_UNLOCK(hdsi);
 800444a:	2300      	movs	r3, #0
 800444c:	7403      	strb	r3, [r0, #16]

  return HAL_OK;
 800444e:	4618      	mov	r0, r3
 8004450:	4770      	bx	lr
  __HAL_LOCK(hdsi);
 8004452:	2002      	movs	r0, #2
}
 8004454:	4770      	bx	lr
	...

08004458 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8004458:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800445c:	f8df 91c0 	ldr.w	r9, [pc, #448]	; 8004620 <HAL_GPIO_Init+0x1c8>
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
        SYSCFG->EXTICR[position >> 2U] = temp;

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004460:	4a6d      	ldr	r2, [pc, #436]	; (8004618 <HAL_GPIO_Init+0x1c0>)
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004462:	2300      	movs	r3, #0
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8004464:	680d      	ldr	r5, [r1, #0]
    ioposition = 0x01U << position;
 8004466:	2401      	movs	r4, #1
 8004468:	409c      	lsls	r4, r3
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 800446a:	ea04 0c05 	and.w	ip, r4, r5
    if(iocurrent == ioposition)
 800446e:	43ac      	bics	r4, r5
 8004470:	f040 80b9 	bne.w	80045e6 <HAL_GPIO_Init+0x18e>
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8004474:	684d      	ldr	r5, [r1, #4]
 8004476:	f005 0403 	and.w	r4, r5, #3
 800447a:	ea4f 0843 	mov.w	r8, r3, lsl #1
 800447e:	2603      	movs	r6, #3
 8004480:	1e67      	subs	r7, r4, #1
 8004482:	fa06 f608 	lsl.w	r6, r6, r8
 8004486:	2f01      	cmp	r7, #1
 8004488:	ea6f 0606 	mvn.w	r6, r6
 800448c:	d834      	bhi.n	80044f8 <HAL_GPIO_Init+0xa0>
        temp = GPIOx->OSPEEDR; 
 800448e:	6887      	ldr	r7, [r0, #8]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8004490:	ea07 0e06 	and.w	lr, r7, r6
        temp |= (GPIO_Init->Speed << (position * 2U));
 8004494:	68cf      	ldr	r7, [r1, #12]
 8004496:	fa07 f708 	lsl.w	r7, r7, r8
 800449a:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OSPEEDR = temp;
 800449e:	6087      	str	r7, [r0, #8]
        temp = GPIOx->OTYPER;
 80044a0:	6847      	ldr	r7, [r0, #4]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 80044a2:	ea27 0e0c 	bic.w	lr, r7, ip
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 80044a6:	f3c5 1700 	ubfx	r7, r5, #4, #1
 80044aa:	409f      	lsls	r7, r3
 80044ac:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->OTYPER = temp;
 80044b0:	6047      	str	r7, [r0, #4]
        temp = GPIOx->PUPDR;
 80044b2:	68c7      	ldr	r7, [r0, #12]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 80044b4:	ea07 0e06 	and.w	lr, r7, r6
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 80044b8:	688f      	ldr	r7, [r1, #8]
 80044ba:	fa07 f708 	lsl.w	r7, r7, r8
 80044be:	ea47 070e 	orr.w	r7, r7, lr
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80044c2:	2c02      	cmp	r4, #2
        GPIOx->PUPDR = temp;
 80044c4:	60c7      	str	r7, [r0, #12]
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 80044c6:	d119      	bne.n	80044fc <HAL_GPIO_Init+0xa4>
        temp = GPIOx->AFR[position >> 3U];
 80044c8:	ea4f 0ad3 	mov.w	sl, r3, lsr #3
 80044cc:	eb00 0a8a 	add.w	sl, r0, sl, lsl #2
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80044d0:	f003 0b07 	and.w	fp, r3, #7
        temp = GPIOx->AFR[position >> 3U];
 80044d4:	f8da 7020 	ldr.w	r7, [sl, #32]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80044d8:	ea4f 0b8b 	mov.w	fp, fp, lsl #2
 80044dc:	f04f 0e0f 	mov.w	lr, #15
 80044e0:	fa0e fe0b 	lsl.w	lr, lr, fp
 80044e4:	ea27 0e0e 	bic.w	lr, r7, lr
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80044e8:	690f      	ldr	r7, [r1, #16]
 80044ea:	fa07 f70b 	lsl.w	r7, r7, fp
 80044ee:	ea47 070e 	orr.w	r7, r7, lr
        GPIOx->AFR[position >> 3U] = temp;
 80044f2:	f8ca 7020 	str.w	r7, [sl, #32]
 80044f6:	e001      	b.n	80044fc <HAL_GPIO_Init+0xa4>
      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 80044f8:	2c03      	cmp	r4, #3
 80044fa:	d1da      	bne.n	80044b2 <HAL_GPIO_Init+0x5a>
      temp = GPIOx->MODER;
 80044fc:	6807      	ldr	r7, [r0, #0]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80044fe:	fa04 f408 	lsl.w	r4, r4, r8
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 8004502:	403e      	ands	r6, r7
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8004504:	4326      	orrs	r6, r4
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004506:	f415 3f40 	tst.w	r5, #196608	; 0x30000
      GPIOx->MODER = temp;
 800450a:	6006      	str	r6, [r0, #0]
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 800450c:	d06b      	beq.n	80045e6 <HAL_GPIO_Init+0x18e>
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800450e:	f04f 0a00 	mov.w	sl, #0
 8004512:	f8cd a004 	str.w	sl, [sp, #4]
 8004516:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800451a:	4c40      	ldr	r4, [pc, #256]	; (800461c <HAL_GPIO_Init+0x1c4>)
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800451c:	f446 4680 	orr.w	r6, r6, #16384	; 0x4000
 8004520:	f8c9 6044 	str.w	r6, [r9, #68]	; 0x44
 8004524:	f8d9 6044 	ldr.w	r6, [r9, #68]	; 0x44
 8004528:	f406 4680 	and.w	r6, r6, #16384	; 0x4000
 800452c:	9601      	str	r6, [sp, #4]
 800452e:	9e01      	ldr	r6, [sp, #4]
        temp = SYSCFG->EXTICR[position >> 2U];
 8004530:	f023 0603 	bic.w	r6, r3, #3
 8004534:	f106 4680 	add.w	r6, r6, #1073741824	; 0x40000000
 8004538:	f506 369c 	add.w	r6, r6, #79872	; 0x13800
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 800453c:	f003 0e03 	and.w	lr, r3, #3
        temp = SYSCFG->EXTICR[position >> 2U];
 8004540:	f8d6 8008 	ldr.w	r8, [r6, #8]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004544:	ea4f 0e8e 	mov.w	lr, lr, lsl #2
 8004548:	270f      	movs	r7, #15
 800454a:	fa07 f70e 	lsl.w	r7, r7, lr
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800454e:	42a0      	cmp	r0, r4
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004550:	ea28 0707 	bic.w	r7, r8, r7
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 8004554:	d04e      	beq.n	80045f4 <HAL_GPIO_Init+0x19c>
 8004556:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800455a:	42a0      	cmp	r0, r4
 800455c:	d04c      	beq.n	80045f8 <HAL_GPIO_Init+0x1a0>
 800455e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004562:	42a0      	cmp	r0, r4
 8004564:	d04a      	beq.n	80045fc <HAL_GPIO_Init+0x1a4>
 8004566:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800456a:	42a0      	cmp	r0, r4
 800456c:	d048      	beq.n	8004600 <HAL_GPIO_Init+0x1a8>
 800456e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004572:	42a0      	cmp	r0, r4
 8004574:	d046      	beq.n	8004604 <HAL_GPIO_Init+0x1ac>
 8004576:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800457a:	42a0      	cmp	r0, r4
 800457c:	d044      	beq.n	8004608 <HAL_GPIO_Init+0x1b0>
 800457e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004582:	42a0      	cmp	r0, r4
 8004584:	d042      	beq.n	800460c <HAL_GPIO_Init+0x1b4>
 8004586:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800458a:	42a0      	cmp	r0, r4
 800458c:	d040      	beq.n	8004610 <HAL_GPIO_Init+0x1b8>
 800458e:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 8004592:	42a0      	cmp	r0, r4
 8004594:	d03e      	beq.n	8004614 <HAL_GPIO_Init+0x1bc>
 8004596:	f504 6480 	add.w	r4, r4, #1024	; 0x400
 800459a:	42a0      	cmp	r0, r4
 800459c:	bf0c      	ite	eq
 800459e:	2409      	moveq	r4, #9
 80045a0:	240a      	movne	r4, #10
 80045a2:	fa04 f40e 	lsl.w	r4, r4, lr
 80045a6:	433c      	orrs	r4, r7
        SYSCFG->EXTICR[position >> 2U] = temp;
 80045a8:	60b4      	str	r4, [r6, #8]
        temp = EXTI->IMR;
 80045aa:	6814      	ldr	r4, [r2, #0]
        temp &= ~((uint32_t)iocurrent);
 80045ac:	ea6f 060c 	mvn.w	r6, ip
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 80045b0:	03ef      	lsls	r7, r5, #15
        temp &= ~((uint32_t)iocurrent);
 80045b2:	bf54      	ite	pl
 80045b4:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80045b6:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->IMR = temp;
 80045ba:	6014      	str	r4, [r2, #0]

        temp = EXTI->EMR;
 80045bc:	6854      	ldr	r4, [r2, #4]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 80045be:	03af      	lsls	r7, r5, #14
        temp &= ~((uint32_t)iocurrent);
 80045c0:	bf54      	ite	pl
 80045c2:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80045c4:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->EMR = temp;
 80045c8:	6054      	str	r4, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80045ca:	6894      	ldr	r4, [r2, #8]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80045cc:	02ef      	lsls	r7, r5, #11
        temp &= ~((uint32_t)iocurrent);
 80045ce:	bf54      	ite	pl
 80045d0:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80045d2:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->RTSR = temp;
 80045d6:	6094      	str	r4, [r2, #8]

        temp = EXTI->FTSR;
 80045d8:	68d4      	ldr	r4, [r2, #12]
        temp &= ~((uint32_t)iocurrent);
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80045da:	02ad      	lsls	r5, r5, #10
        temp &= ~((uint32_t)iocurrent);
 80045dc:	bf54      	ite	pl
 80045de:	4034      	andpl	r4, r6
        {
          temp |= iocurrent;
 80045e0:	ea4c 0404 	orrmi.w	r4, ip, r4
        }
        EXTI->FTSR = temp;
 80045e4:	60d4      	str	r4, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 80045e6:	3301      	adds	r3, #1
 80045e8:	2b10      	cmp	r3, #16
 80045ea:	f47f af3b 	bne.w	8004464 <HAL_GPIO_Init+0xc>
      }
    }
  }
}
 80045ee:	b003      	add	sp, #12
 80045f0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 80045f4:	4654      	mov	r4, sl
 80045f6:	e7d4      	b.n	80045a2 <HAL_GPIO_Init+0x14a>
 80045f8:	2401      	movs	r4, #1
 80045fa:	e7d2      	b.n	80045a2 <HAL_GPIO_Init+0x14a>
 80045fc:	2402      	movs	r4, #2
 80045fe:	e7d0      	b.n	80045a2 <HAL_GPIO_Init+0x14a>
 8004600:	2403      	movs	r4, #3
 8004602:	e7ce      	b.n	80045a2 <HAL_GPIO_Init+0x14a>
 8004604:	2404      	movs	r4, #4
 8004606:	e7cc      	b.n	80045a2 <HAL_GPIO_Init+0x14a>
 8004608:	2405      	movs	r4, #5
 800460a:	e7ca      	b.n	80045a2 <HAL_GPIO_Init+0x14a>
 800460c:	2406      	movs	r4, #6
 800460e:	e7c8      	b.n	80045a2 <HAL_GPIO_Init+0x14a>
 8004610:	2407      	movs	r4, #7
 8004612:	e7c6      	b.n	80045a2 <HAL_GPIO_Init+0x14a>
 8004614:	2408      	movs	r4, #8
 8004616:	e7c4      	b.n	80045a2 <HAL_GPIO_Init+0x14a>
 8004618:	40013c00 	.word	0x40013c00
 800461c:	40020000 	.word	0x40020000
 8004620:	40023800 	.word	0x40023800

08004624 <HAL_GPIO_DeInit>:
  * @param  GPIO_Pin specifies the port bit to be written.
  *          This parameter can be one of GPIO_PIN_x where x can be (0..15).
  * @retval None
  */
void HAL_GPIO_DeInit(GPIO_TypeDef  *GPIOx, uint32_t GPIO_Pin)
{
 8004624:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
      tmp = SYSCFG->EXTICR[position >> 2U];
      tmp &= (0x0FU << (4U * (position & 0x03U)));
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
      {
        /* Clear EXTI line configuration */
        EXTI->IMR &= ~((uint32_t)iocurrent);
 8004628:	4c4a      	ldr	r4, [pc, #296]	; (8004754 <HAL_GPIO_DeInit+0x130>)
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800462a:	f8df 9130 	ldr.w	r9, [pc, #304]	; 800475c <HAL_GPIO_DeInit+0x138>
 800462e:	f8df a130 	ldr.w	sl, [pc, #304]	; 8004760 <HAL_GPIO_DeInit+0x13c>
 8004632:	f8df b130 	ldr.w	fp, [pc, #304]	; 8004764 <HAL_GPIO_DeInit+0x140>
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004636:	2200      	movs	r2, #0
    ioposition = 0x01U << position;
 8004638:	2301      	movs	r3, #1
 800463a:	fa03 fe02 	lsl.w	lr, r3, r2
    if(iocurrent == ioposition)
 800463e:	ea3e 0301 	bics.w	r3, lr, r1
    iocurrent = (GPIO_Pin) & ioposition;
 8004642:	ea0e 0701 	and.w	r7, lr, r1
    if(iocurrent == ioposition)
 8004646:	d16e      	bne.n	8004726 <HAL_GPIO_DeInit+0x102>
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004648:	f022 0503 	bic.w	r5, r2, #3
 800464c:	f105 4580 	add.w	r5, r5, #1073741824	; 0x40000000
 8004650:	f505 359c 	add.w	r5, r5, #79872	; 0x13800
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004654:	4b40      	ldr	r3, [pc, #256]	; (8004758 <HAL_GPIO_DeInit+0x134>)
      tmp = SYSCFG->EXTICR[position >> 2U];
 8004656:	f8d5 8008 	ldr.w	r8, [r5, #8]
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800465a:	f002 0c03 	and.w	ip, r2, #3
 800465e:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004662:	260f      	movs	r6, #15
 8004664:	fa06 f60c 	lsl.w	r6, r6, ip
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004668:	4298      	cmp	r0, r3
      tmp &= (0x0FU << (4U * (position & 0x03U)));
 800466a:	ea06 0808 	and.w	r8, r6, r8
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 800466e:	d05f      	beq.n	8004730 <HAL_GPIO_DeInit+0x10c>
 8004670:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004674:	4298      	cmp	r0, r3
 8004676:	d05d      	beq.n	8004734 <HAL_GPIO_DeInit+0x110>
 8004678:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800467c:	4298      	cmp	r0, r3
 800467e:	d05b      	beq.n	8004738 <HAL_GPIO_DeInit+0x114>
 8004680:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 8004684:	4298      	cmp	r0, r3
 8004686:	d059      	beq.n	800473c <HAL_GPIO_DeInit+0x118>
 8004688:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800468c:	4298      	cmp	r0, r3
 800468e:	d057      	beq.n	8004740 <HAL_GPIO_DeInit+0x11c>
 8004690:	4548      	cmp	r0, r9
 8004692:	d057      	beq.n	8004744 <HAL_GPIO_DeInit+0x120>
 8004694:	4550      	cmp	r0, sl
 8004696:	d057      	beq.n	8004748 <HAL_GPIO_DeInit+0x124>
 8004698:	4558      	cmp	r0, fp
 800469a:	d057      	beq.n	800474c <HAL_GPIO_DeInit+0x128>
 800469c:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 80046a0:	4298      	cmp	r0, r3
 80046a2:	d055      	beq.n	8004750 <HAL_GPIO_DeInit+0x12c>
 80046a4:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 80046a8:	4298      	cmp	r0, r3
 80046aa:	bf0c      	ite	eq
 80046ac:	2309      	moveq	r3, #9
 80046ae:	230a      	movne	r3, #10
 80046b0:	fa03 f30c 	lsl.w	r3, r3, ip
 80046b4:	4543      	cmp	r3, r8
 80046b6:	d113      	bne.n	80046e0 <HAL_GPIO_DeInit+0xbc>
        EXTI->IMR &= ~((uint32_t)iocurrent);
 80046b8:	6823      	ldr	r3, [r4, #0]
 80046ba:	ea23 0307 	bic.w	r3, r3, r7
 80046be:	6023      	str	r3, [r4, #0]
        EXTI->EMR &= ~((uint32_t)iocurrent);
 80046c0:	6863      	ldr	r3, [r4, #4]
 80046c2:	ea23 0307 	bic.w	r3, r3, r7
 80046c6:	6063      	str	r3, [r4, #4]
        
        /* Clear Rising Falling edge configuration */
        EXTI->RTSR &= ~((uint32_t)iocurrent);
 80046c8:	68a3      	ldr	r3, [r4, #8]
 80046ca:	ea23 0307 	bic.w	r3, r3, r7
 80046ce:	60a3      	str	r3, [r4, #8]
        EXTI->FTSR &= ~((uint32_t)iocurrent);
 80046d0:	68e3      	ldr	r3, [r4, #12]
 80046d2:	ea23 0707 	bic.w	r7, r3, r7
 80046d6:	60e7      	str	r7, [r4, #12]

        /* Configure the External Interrupt or event for the current IO */
        tmp = 0x0FU << (4U * (position & 0x03U));
        SYSCFG->EXTICR[position >> 2U] &= ~tmp;
 80046d8:	68ab      	ldr	r3, [r5, #8]
 80046da:	ea23 0606 	bic.w	r6, r3, r6
 80046de:	60ae      	str	r6, [r5, #8]
      }

      /*------------------------- GPIO Mode Configuration --------------------*/
      /* Configure IO Direction in Input Floating Mode */
      GPIOx->MODER &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80046e0:	6805      	ldr	r5, [r0, #0]
 80046e2:	2603      	movs	r6, #3
 80046e4:	0053      	lsls	r3, r2, #1
 80046e6:	fa06 f303 	lsl.w	r3, r6, r3
 80046ea:	ea25 0503 	bic.w	r5, r5, r3
 80046ee:	6005      	str	r5, [r0, #0]

      /* Configure the default Alternate Function in current IO */
      GPIOx->AFR[position >> 3U] &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 80046f0:	fa22 f506 	lsr.w	r5, r2, r6
 80046f4:	eb00 0585 	add.w	r5, r0, r5, lsl #2
 80046f8:	f002 0c07 	and.w	ip, r2, #7
 80046fc:	6a2e      	ldr	r6, [r5, #32]
 80046fe:	ea4f 0c8c 	mov.w	ip, ip, lsl #2
 8004702:	270f      	movs	r7, #15
 8004704:	fa07 f70c 	lsl.w	r7, r7, ip
 8004708:	ea26 0707 	bic.w	r7, r6, r7
 800470c:	622f      	str	r7, [r5, #32]

      /* Deactivate the Pull-up and Pull-down resistor for the current IO */
      GPIOx->PUPDR &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800470e:	68c5      	ldr	r5, [r0, #12]
 8004710:	ea25 0503 	bic.w	r5, r5, r3
 8004714:	60c5      	str	r5, [r0, #12]

      /* Configure the default value IO Output Type */
      GPIOx->OTYPER  &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004716:	6845      	ldr	r5, [r0, #4]
 8004718:	ea25 050e 	bic.w	r5, r5, lr
 800471c:	6045      	str	r5, [r0, #4]

      /* Configure the default value for IO Speed */
      GPIOx->OSPEEDR &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 800471e:	6885      	ldr	r5, [r0, #8]
 8004720:	ea25 0303 	bic.w	r3, r5, r3
 8004724:	6083      	str	r3, [r0, #8]
  for(position = 0U; position < GPIO_NUMBER; position++)
 8004726:	3201      	adds	r2, #1
 8004728:	2a10      	cmp	r2, #16
 800472a:	d185      	bne.n	8004638 <HAL_GPIO_DeInit+0x14>
    }
  }
}
 800472c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
      if(tmp == ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U))))
 8004730:	2300      	movs	r3, #0
 8004732:	e7bd      	b.n	80046b0 <HAL_GPIO_DeInit+0x8c>
 8004734:	2301      	movs	r3, #1
 8004736:	e7bb      	b.n	80046b0 <HAL_GPIO_DeInit+0x8c>
 8004738:	2302      	movs	r3, #2
 800473a:	e7b9      	b.n	80046b0 <HAL_GPIO_DeInit+0x8c>
 800473c:	2303      	movs	r3, #3
 800473e:	e7b7      	b.n	80046b0 <HAL_GPIO_DeInit+0x8c>
 8004740:	2304      	movs	r3, #4
 8004742:	e7b5      	b.n	80046b0 <HAL_GPIO_DeInit+0x8c>
 8004744:	2305      	movs	r3, #5
 8004746:	e7b3      	b.n	80046b0 <HAL_GPIO_DeInit+0x8c>
 8004748:	2306      	movs	r3, #6
 800474a:	e7b1      	b.n	80046b0 <HAL_GPIO_DeInit+0x8c>
 800474c:	2307      	movs	r3, #7
 800474e:	e7af      	b.n	80046b0 <HAL_GPIO_DeInit+0x8c>
 8004750:	2308      	movs	r3, #8
 8004752:	e7ad      	b.n	80046b0 <HAL_GPIO_DeInit+0x8c>
 8004754:	40013c00 	.word	0x40013c00
 8004758:	40020000 	.word	0x40020000
 800475c:	40021400 	.word	0x40021400
 8004760:	40021800 	.word	0x40021800
 8004764:	40021c00 	.word	0x40021c00

08004768 <HAL_GPIO_ReadPin>:
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 8004768:	6903      	ldr	r3, [r0, #16]
 800476a:	4219      	tst	r1, r3
  else
  {
    bitstatus = GPIO_PIN_RESET;
  }
  return bitstatus;
}
 800476c:	bf14      	ite	ne
 800476e:	2001      	movne	r0, #1
 8004770:	2000      	moveq	r0, #0
 8004772:	4770      	bx	lr

08004774 <HAL_GPIO_WritePin>:
{
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 8004774:	b10a      	cbz	r2, 800477a <HAL_GPIO_WritePin+0x6>
  {
    GPIOx->BSRR = GPIO_Pin;
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 8004776:	6181      	str	r1, [r0, #24]
  }
}
 8004778:	4770      	bx	lr
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 800477a:	0409      	lsls	r1, r1, #16
 800477c:	e7fb      	b.n	8004776 <HAL_GPIO_WritePin+0x2>

0800477e <HAL_GPIO_TogglePin>:

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 800477e:	6943      	ldr	r3, [r0, #20]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004780:	ea01 0203 	and.w	r2, r1, r3
 8004784:	ea21 0103 	bic.w	r1, r1, r3
 8004788:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 800478c:	6181      	str	r1, [r0, #24]
}
 800478e:	4770      	bx	lr

08004790 <I2C_IsAcknowledgeFailed>:
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004790:	6801      	ldr	r1, [r0, #0]
 8004792:	694b      	ldr	r3, [r1, #20]
 8004794:	f413 6380 	ands.w	r3, r3, #1024	; 0x400
 8004798:	f04f 0200 	mov.w	r2, #0
 800479c:	d010      	beq.n	80047c0 <I2C_IsAcknowledgeFailed+0x30>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800479e:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80047a2:	614b      	str	r3, [r1, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
    hi2c->State               = HAL_I2C_STATE_READY;
 80047a4:	2320      	movs	r3, #32
    hi2c->PreviousState       = I2C_STATE_NONE;
 80047a6:	6302      	str	r2, [r0, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 80047a8:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 80047ac:	f880 203e 	strb.w	r2, [r0, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80047b0:	6c03      	ldr	r3, [r0, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80047b2:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80047b6:	f043 0304 	orr.w	r3, r3, #4
 80047ba:	6403      	str	r3, [r0, #64]	; 0x40

    return HAL_ERROR;
 80047bc:	2001      	movs	r0, #1
 80047be:	4770      	bx	lr
  }
  return HAL_OK;
 80047c0:	4618      	mov	r0, r3
}
 80047c2:	4770      	bx	lr

080047c4 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
{
 80047c4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80047c8:	4604      	mov	r4, r0
 80047ca:	460f      	mov	r7, r1
 80047cc:	4616      	mov	r6, r2
 80047ce:	4698      	mov	r8, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80047d0:	6825      	ldr	r5, [r4, #0]
 80047d2:	6968      	ldr	r0, [r5, #20]
 80047d4:	ea27 0000 	bic.w	r0, r7, r0
 80047d8:	b280      	uxth	r0, r0
 80047da:	b1b8      	cbz	r0, 800480c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x48>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 80047dc:	696b      	ldr	r3, [r5, #20]
 80047de:	055a      	lsls	r2, r3, #21
 80047e0:	d516      	bpl.n	8004810 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x4c>
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80047e2:	682b      	ldr	r3, [r5, #0]
 80047e4:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 80047e8:	602b      	str	r3, [r5, #0]
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 80047ea:	f46f 6380 	mvn.w	r3, #1024	; 0x400
 80047ee:	616b      	str	r3, [r5, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80047f0:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80047f2:	2300      	movs	r3, #0
 80047f4:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80047f6:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80047fa:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 80047fe:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004800:	f042 0204 	orr.w	r2, r2, #4
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004804:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004806:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        return HAL_ERROR;
 800480a:	2001      	movs	r0, #1
}
 800480c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    if (Timeout != HAL_MAX_DELAY)
 8004810:	1c73      	adds	r3, r6, #1
 8004812:	d0de      	beq.n	80047d2 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xe>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004814:	f7fe ffc0 	bl	8003798 <HAL_GetTick>
 8004818:	eba0 0008 	sub.w	r0, r0, r8
 800481c:	42b0      	cmp	r0, r6
 800481e:	d801      	bhi.n	8004824 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x60>
 8004820:	2e00      	cmp	r6, #0
 8004822:	d1d5      	bne.n	80047d0 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc>
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004824:	2300      	movs	r3, #0
        hi2c->State               = HAL_I2C_STATE_READY;
 8004826:	2220      	movs	r2, #32
        hi2c->PreviousState       = I2C_STATE_NONE;
 8004828:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 800482a:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 800482e:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8004832:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8004834:	f042 0220 	orr.w	r2, r2, #32
 8004838:	e7e4      	b.n	8004804 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x40>

0800483a <I2C_WaitOnBTFFlagUntilTimeout>:
{
 800483a:	b570      	push	{r4, r5, r6, lr}
 800483c:	4604      	mov	r4, r0
 800483e:	460d      	mov	r5, r1
 8004840:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 8004842:	6823      	ldr	r3, [r4, #0]
 8004844:	695b      	ldr	r3, [r3, #20]
 8004846:	075b      	lsls	r3, r3, #29
 8004848:	d501      	bpl.n	800484e <I2C_WaitOnBTFFlagUntilTimeout+0x14>
  return HAL_OK;
 800484a:	2000      	movs	r0, #0
}
 800484c:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800484e:	4620      	mov	r0, r4
 8004850:	f7ff ff9e 	bl	8004790 <I2C_IsAcknowledgeFailed>
 8004854:	b9a8      	cbnz	r0, 8004882 <I2C_WaitOnBTFFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004856:	1c6a      	adds	r2, r5, #1
 8004858:	d0f3      	beq.n	8004842 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800485a:	f7fe ff9d 	bl	8003798 <HAL_GetTick>
 800485e:	1b80      	subs	r0, r0, r6
 8004860:	42a8      	cmp	r0, r5
 8004862:	d801      	bhi.n	8004868 <I2C_WaitOnBTFFlagUntilTimeout+0x2e>
 8004864:	2d00      	cmp	r5, #0
 8004866:	d1ec      	bne.n	8004842 <I2C_WaitOnBTFFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004868:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800486a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800486c:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800486e:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004872:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004876:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004878:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800487c:	f042 0220 	orr.w	r2, r2, #32
 8004880:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004882:	2001      	movs	r0, #1
 8004884:	e7e2      	b.n	800484c <I2C_WaitOnBTFFlagUntilTimeout+0x12>

08004886 <I2C_WaitOnRXNEFlagUntilTimeout>:
{
 8004886:	b570      	push	{r4, r5, r6, lr}
 8004888:	4604      	mov	r4, r0
 800488a:	460d      	mov	r5, r1
 800488c:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 800488e:	6821      	ldr	r1, [r4, #0]
 8004890:	694b      	ldr	r3, [r1, #20]
 8004892:	f013 0340 	ands.w	r3, r3, #64	; 0x40
 8004896:	d001      	beq.n	800489c <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
  return HAL_OK;
 8004898:	2000      	movs	r0, #0
 800489a:	e010      	b.n	80048be <I2C_WaitOnRXNEFlagUntilTimeout+0x38>
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 800489c:	694a      	ldr	r2, [r1, #20]
 800489e:	06d2      	lsls	r2, r2, #27
 80048a0:	d50e      	bpl.n	80048c0 <I2C_WaitOnRXNEFlagUntilTimeout+0x3a>
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 80048a2:	f06f 0210 	mvn.w	r2, #16
 80048a6:	614a      	str	r2, [r1, #20]
      hi2c->State               = HAL_I2C_STATE_READY;
 80048a8:	2220      	movs	r2, #32
      hi2c->PreviousState       = I2C_STATE_NONE;
 80048aa:	6323      	str	r3, [r4, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 80048ac:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 80048b0:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 80048b4:	6c22      	ldr	r2, [r4, #64]	; 0x40
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80048b6:	6422      	str	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 80048b8:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
 80048bc:	2001      	movs	r0, #1
}
 80048be:	bd70      	pop	{r4, r5, r6, pc}
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80048c0:	f7fe ff6a 	bl	8003798 <HAL_GetTick>
 80048c4:	1b80      	subs	r0, r0, r6
 80048c6:	42a8      	cmp	r0, r5
 80048c8:	d801      	bhi.n	80048ce <I2C_WaitOnRXNEFlagUntilTimeout+0x48>
 80048ca:	2d00      	cmp	r5, #0
 80048cc:	d1df      	bne.n	800488e <I2C_WaitOnRXNEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 80048ce:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 80048d0:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 80048d2:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 80048d4:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 80048d8:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 80048dc:	6c22      	ldr	r2, [r4, #64]	; 0x40
 80048de:	f042 0220 	orr.w	r2, r2, #32
 80048e2:	e7e8      	b.n	80048b6 <I2C_WaitOnRXNEFlagUntilTimeout+0x30>

080048e4 <I2C_WaitOnFlagUntilTimeout>:
{
 80048e4:	e92d 46f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r9, sl, lr}
 80048e8:	4606      	mov	r6, r0
 80048ea:	460f      	mov	r7, r1
 80048ec:	4691      	mov	r9, r2
 80048ee:	461d      	mov	r5, r3
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 80048f0:	ea4f 4a11 	mov.w	sl, r1, lsr #16
 80048f4:	6833      	ldr	r3, [r6, #0]
 80048f6:	f1ba 0f01 	cmp.w	sl, #1
 80048fa:	bf0c      	ite	eq
 80048fc:	695c      	ldreq	r4, [r3, #20]
 80048fe:	699c      	ldrne	r4, [r3, #24]
 8004900:	ea27 0404 	bic.w	r4, r7, r4
 8004904:	b2a4      	uxth	r4, r4
 8004906:	fab4 f484 	clz	r4, r4
 800490a:	0964      	lsrs	r4, r4, #5
 800490c:	45a1      	cmp	r9, r4
 800490e:	d001      	beq.n	8004914 <I2C_WaitOnFlagUntilTimeout+0x30>
  return HAL_OK;
 8004910:	2000      	movs	r0, #0
 8004912:	e017      	b.n	8004944 <I2C_WaitOnFlagUntilTimeout+0x60>
    if (Timeout != HAL_MAX_DELAY)
 8004914:	1c6a      	adds	r2, r5, #1
 8004916:	d0ee      	beq.n	80048f6 <I2C_WaitOnFlagUntilTimeout+0x12>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004918:	f7fe ff3e 	bl	8003798 <HAL_GetTick>
 800491c:	9b08      	ldr	r3, [sp, #32]
 800491e:	1ac0      	subs	r0, r0, r3
 8004920:	42a8      	cmp	r0, r5
 8004922:	d801      	bhi.n	8004928 <I2C_WaitOnFlagUntilTimeout+0x44>
 8004924:	2d00      	cmp	r5, #0
 8004926:	d1e5      	bne.n	80048f4 <I2C_WaitOnFlagUntilTimeout+0x10>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004928:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 800492a:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800492c:	6333      	str	r3, [r6, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800492e:	f886 203d 	strb.w	r2, [r6, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004932:	f886 303e 	strb.w	r3, [r6, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004936:	6c32      	ldr	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004938:	f886 303c 	strb.w	r3, [r6, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800493c:	f042 0220 	orr.w	r2, r2, #32
 8004940:	6432      	str	r2, [r6, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004942:	2001      	movs	r0, #1
}
 8004944:	e8bd 86f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r9, sl, pc}

08004948 <I2C_WaitOnTXEFlagUntilTimeout>:
{
 8004948:	b570      	push	{r4, r5, r6, lr}
 800494a:	4604      	mov	r4, r0
 800494c:	460d      	mov	r5, r1
 800494e:	4616      	mov	r6, r2
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8004950:	6823      	ldr	r3, [r4, #0]
 8004952:	695b      	ldr	r3, [r3, #20]
 8004954:	061b      	lsls	r3, r3, #24
 8004956:	d501      	bpl.n	800495c <I2C_WaitOnTXEFlagUntilTimeout+0x14>
  return HAL_OK;
 8004958:	2000      	movs	r0, #0
}
 800495a:	bd70      	pop	{r4, r5, r6, pc}
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 800495c:	4620      	mov	r0, r4
 800495e:	f7ff ff17 	bl	8004790 <I2C_IsAcknowledgeFailed>
 8004962:	b9a8      	cbnz	r0, 8004990 <I2C_WaitOnTXEFlagUntilTimeout+0x48>
    if (Timeout != HAL_MAX_DELAY)
 8004964:	1c6a      	adds	r2, r5, #1
 8004966:	d0f3      	beq.n	8004950 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004968:	f7fe ff16 	bl	8003798 <HAL_GetTick>
 800496c:	1b80      	subs	r0, r0, r6
 800496e:	42a8      	cmp	r0, r5
 8004970:	d801      	bhi.n	8004976 <I2C_WaitOnTXEFlagUntilTimeout+0x2e>
 8004972:	2d00      	cmp	r5, #0
 8004974:	d1ec      	bne.n	8004950 <I2C_WaitOnTXEFlagUntilTimeout+0x8>
        hi2c->PreviousState     = I2C_STATE_NONE;
 8004976:	2300      	movs	r3, #0
        hi2c->State             = HAL_I2C_STATE_READY;
 8004978:	2220      	movs	r2, #32
        hi2c->PreviousState     = I2C_STATE_NONE;
 800497a:	6323      	str	r3, [r4, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 800497c:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004980:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004984:	6c22      	ldr	r2, [r4, #64]	; 0x40
        __HAL_UNLOCK(hi2c);
 8004986:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 800498a:	f042 0220 	orr.w	r2, r2, #32
 800498e:	6422      	str	r2, [r4, #64]	; 0x40
      return HAL_ERROR;
 8004990:	2001      	movs	r0, #1
 8004992:	e7e2      	b.n	800495a <I2C_WaitOnTXEFlagUntilTimeout+0x12>

08004994 <I2C_RequestMemoryWrite>:
{
 8004994:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004998:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 800499a:	6802      	ldr	r2, [r0, #0]
{
 800499c:	b085      	sub	sp, #20
 800499e:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
 80049a2:	4699      	mov	r9, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 80049a4:	6813      	ldr	r3, [r2, #0]
 80049a6:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80049aa:	6013      	str	r3, [r2, #0]
{
 80049ac:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80049ae:	463b      	mov	r3, r7
 80049b0:	f8cd 8000 	str.w	r8, [sp]
 80049b4:	2200      	movs	r2, #0
 80049b6:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 80049ba:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 80049bc:	f7ff ff92 	bl	80048e4 <I2C_WaitOnFlagUntilTimeout>
 80049c0:	6823      	ldr	r3, [r4, #0]
 80049c2:	b138      	cbz	r0, 80049d4 <I2C_RequestMemoryWrite+0x40>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 80049c4:	681b      	ldr	r3, [r3, #0]
 80049c6:	05db      	lsls	r3, r3, #23
 80049c8:	d502      	bpl.n	80049d0 <I2C_RequestMemoryWrite+0x3c>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 80049ca:	f44f 7300 	mov.w	r3, #512	; 0x200
 80049ce:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 80049d0:	2003      	movs	r0, #3
 80049d2:	e00a      	b.n	80049ea <I2C_RequestMemoryWrite+0x56>
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 80049d4:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 80049d8:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 80049da:	4919      	ldr	r1, [pc, #100]	; (8004a40 <I2C_RequestMemoryWrite+0xac>)
 80049dc:	4643      	mov	r3, r8
 80049de:	463a      	mov	r2, r7
 80049e0:	4620      	mov	r0, r4
 80049e2:	f7ff feef 	bl	80047c4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 80049e6:	b118      	cbz	r0, 80049f0 <I2C_RequestMemoryWrite+0x5c>
      return HAL_ERROR;
 80049e8:	2001      	movs	r0, #1
}
 80049ea:	b005      	add	sp, #20
 80049ec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80049f0:	6823      	ldr	r3, [r4, #0]
 80049f2:	9003      	str	r0, [sp, #12]
 80049f4:	695a      	ldr	r2, [r3, #20]
 80049f6:	9203      	str	r2, [sp, #12]
 80049f8:	699b      	ldr	r3, [r3, #24]
 80049fa:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 80049fc:	4642      	mov	r2, r8
 80049fe:	4639      	mov	r1, r7
 8004a00:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004a02:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004a04:	f7ff ffa0 	bl	8004948 <I2C_WaitOnTXEFlagUntilTimeout>
 8004a08:	b140      	cbz	r0, 8004a1c <I2C_RequestMemoryWrite+0x88>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004a0a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004a0c:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004a0e:	bf01      	itttt	eq
 8004a10:	6822      	ldreq	r2, [r4, #0]
 8004a12:	6813      	ldreq	r3, [r2, #0]
 8004a14:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004a18:	6013      	streq	r3, [r2, #0]
 8004a1a:	e7e5      	b.n	80049e8 <I2C_RequestMemoryWrite+0x54>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004a1c:	f1b9 0f01 	cmp.w	r9, #1
 8004a20:	6823      	ldr	r3, [r4, #0]
 8004a22:	d102      	bne.n	8004a2a <I2C_RequestMemoryWrite+0x96>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004a24:	b2ed      	uxtb	r5, r5
 8004a26:	611d      	str	r5, [r3, #16]
 8004a28:	e7df      	b.n	80049ea <I2C_RequestMemoryWrite+0x56>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004a2a:	0a2a      	lsrs	r2, r5, #8
 8004a2c:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004a2e:	4639      	mov	r1, r7
 8004a30:	4642      	mov	r2, r8
 8004a32:	4620      	mov	r0, r4
 8004a34:	f7ff ff88 	bl	8004948 <I2C_WaitOnTXEFlagUntilTimeout>
 8004a38:	2800      	cmp	r0, #0
 8004a3a:	d1e6      	bne.n	8004a0a <I2C_RequestMemoryWrite+0x76>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004a3c:	6823      	ldr	r3, [r4, #0]
 8004a3e:	e7f1      	b.n	8004a24 <I2C_RequestMemoryWrite+0x90>
 8004a40:	00010002 	.word	0x00010002

08004a44 <I2C_RequestMemoryRead>:
{
 8004a44:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8004a48:	469a      	mov	sl, r3
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004a4a:	6803      	ldr	r3, [r0, #0]
{
 8004a4c:	4615      	mov	r5, r2
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004a4e:	681a      	ldr	r2, [r3, #0]
 8004a50:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 8004a54:	601a      	str	r2, [r3, #0]
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004a56:	681a      	ldr	r2, [r3, #0]
{
 8004a58:	e9dd 780c 	ldrd	r7, r8, [sp, #48]	; 0x30
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004a5c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 8004a60:	601a      	str	r2, [r3, #0]
{
 8004a62:	460e      	mov	r6, r1
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004a64:	463b      	mov	r3, r7
 8004a66:	f8cd 8000 	str.w	r8, [sp]
 8004a6a:	2200      	movs	r2, #0
 8004a6c:	f04f 1101 	mov.w	r1, #65537	; 0x10001
{
 8004a70:	4604      	mov	r4, r0
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004a72:	f7ff ff37 	bl	80048e4 <I2C_WaitOnFlagUntilTimeout>
 8004a76:	6823      	ldr	r3, [r4, #0]
 8004a78:	b148      	cbz	r0, 8004a8e <I2C_RequestMemoryRead+0x4a>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004a7a:	681b      	ldr	r3, [r3, #0]
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004a7c:	05db      	lsls	r3, r3, #23
 8004a7e:	d502      	bpl.n	8004a86 <I2C_RequestMemoryRead+0x42>
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004a80:	f44f 7300 	mov.w	r3, #512	; 0x200
 8004a84:	6423      	str	r3, [r4, #64]	; 0x40
    return HAL_TIMEOUT;
 8004a86:	2003      	movs	r0, #3
}
 8004a88:	b004      	add	sp, #16
 8004a8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
  hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004a8e:	fa5f f986 	uxtb.w	r9, r6
 8004a92:	f006 06fe 	and.w	r6, r6, #254	; 0xfe
 8004a96:	611e      	str	r6, [r3, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004a98:	492a      	ldr	r1, [pc, #168]	; (8004b44 <I2C_RequestMemoryRead+0x100>)
 8004a9a:	4643      	mov	r3, r8
 8004a9c:	463a      	mov	r2, r7
 8004a9e:	4620      	mov	r0, r4
 8004aa0:	f7ff fe90 	bl	80047c4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004aa4:	b108      	cbz	r0, 8004aaa <I2C_RequestMemoryRead+0x66>
    return HAL_ERROR;
 8004aa6:	2001      	movs	r0, #1
 8004aa8:	e7ee      	b.n	8004a88 <I2C_RequestMemoryRead+0x44>
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004aaa:	6823      	ldr	r3, [r4, #0]
 8004aac:	9003      	str	r0, [sp, #12]
 8004aae:	695a      	ldr	r2, [r3, #20]
 8004ab0:	9203      	str	r2, [sp, #12]
 8004ab2:	699b      	ldr	r3, [r3, #24]
 8004ab4:	9303      	str	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ab6:	4642      	mov	r2, r8
 8004ab8:	4639      	mov	r1, r7
 8004aba:	4620      	mov	r0, r4
  __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004abc:	9b03      	ldr	r3, [sp, #12]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004abe:	f7ff ff43 	bl	8004948 <I2C_WaitOnTXEFlagUntilTimeout>
 8004ac2:	b140      	cbz	r0, 8004ad6 <I2C_RequestMemoryRead+0x92>
    if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004ac4:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004ac6:	2b04      	cmp	r3, #4
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004ac8:	bf01      	itttt	eq
 8004aca:	6822      	ldreq	r2, [r4, #0]
 8004acc:	6813      	ldreq	r3, [r2, #0]
 8004ace:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004ad2:	6013      	streq	r3, [r2, #0]
 8004ad4:	e7e7      	b.n	8004aa6 <I2C_RequestMemoryRead+0x62>
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8004ad6:	f1ba 0f01 	cmp.w	sl, #1
 8004ada:	6823      	ldr	r3, [r4, #0]
 8004adc:	d11a      	bne.n	8004b14 <I2C_RequestMemoryRead+0xd0>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004ade:	b2ed      	uxtb	r5, r5
 8004ae0:	611d      	str	r5, [r3, #16]
  if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004ae2:	4642      	mov	r2, r8
 8004ae4:	4639      	mov	r1, r7
 8004ae6:	4620      	mov	r0, r4
 8004ae8:	f7ff ff2e 	bl	8004948 <I2C_WaitOnTXEFlagUntilTimeout>
 8004aec:	2800      	cmp	r0, #0
 8004aee:	d1e9      	bne.n	8004ac4 <I2C_RequestMemoryRead+0x80>
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004af0:	6822      	ldr	r2, [r4, #0]
 8004af2:	6813      	ldr	r3, [r2, #0]
 8004af4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8004af8:	6013      	str	r3, [r2, #0]
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004afa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 8004afe:	4602      	mov	r2, r0
 8004b00:	f8cd 8000 	str.w	r8, [sp]
 8004b04:	463b      	mov	r3, r7
 8004b06:	4620      	mov	r0, r4
 8004b08:	f7ff feec 	bl	80048e4 <I2C_WaitOnFlagUntilTimeout>
 8004b0c:	6822      	ldr	r2, [r4, #0]
 8004b0e:	b160      	cbz	r0, 8004b2a <I2C_RequestMemoryRead+0xe6>
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004b10:	6813      	ldr	r3, [r2, #0]
 8004b12:	e7b3      	b.n	8004a7c <I2C_RequestMemoryRead+0x38>
    hi2c->Instance->DR = I2C_MEM_ADD_MSB(MemAddress);
 8004b14:	0a2a      	lsrs	r2, r5, #8
 8004b16:	611a      	str	r2, [r3, #16]
    if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8004b18:	4639      	mov	r1, r7
 8004b1a:	4642      	mov	r2, r8
 8004b1c:	4620      	mov	r0, r4
 8004b1e:	f7ff ff13 	bl	8004948 <I2C_WaitOnTXEFlagUntilTimeout>
 8004b22:	2800      	cmp	r0, #0
 8004b24:	d1ce      	bne.n	8004ac4 <I2C_RequestMemoryRead+0x80>
    hi2c->Instance->DR = I2C_MEM_ADD_LSB(MemAddress);
 8004b26:	6823      	ldr	r3, [r4, #0]
 8004b28:	e7d9      	b.n	8004ade <I2C_RequestMemoryRead+0x9a>
  hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004b2a:	f049 0301 	orr.w	r3, r9, #1
 8004b2e:	6113      	str	r3, [r2, #16]
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004b30:	4904      	ldr	r1, [pc, #16]	; (8004b44 <I2C_RequestMemoryRead+0x100>)
 8004b32:	4643      	mov	r3, r8
 8004b34:	463a      	mov	r2, r7
 8004b36:	4620      	mov	r0, r4
 8004b38:	f7ff fe44 	bl	80047c4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
    return HAL_TIMEOUT;
 8004b3c:	3800      	subs	r0, #0
 8004b3e:	bf18      	it	ne
 8004b40:	2001      	movne	r0, #1
 8004b42:	e7a1      	b.n	8004a88 <I2C_RequestMemoryRead+0x44>
 8004b44:	00010002 	.word	0x00010002

08004b48 <HAL_I2C_Init>:
{
 8004b48:	b570      	push	{r4, r5, r6, lr}
  if (hi2c == NULL)
 8004b4a:	4604      	mov	r4, r0
 8004b4c:	b908      	cbnz	r0, 8004b52 <HAL_I2C_Init+0xa>
    return HAL_ERROR;
 8004b4e:	2001      	movs	r0, #1
}
 8004b50:	bd70      	pop	{r4, r5, r6, pc}
  if (hi2c->State == HAL_I2C_STATE_RESET)
 8004b52:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 8004b56:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8004b5a:	b91b      	cbnz	r3, 8004b64 <HAL_I2C_Init+0x1c>
    hi2c->Lock = HAL_UNLOCKED;
 8004b5c:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_I2C_MspInit(hi2c);
 8004b60:	f7fc ff9e 	bl	8001aa0 <HAL_I2C_MspInit>
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004b64:	2324      	movs	r3, #36	; 0x24
 8004b66:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004b6a:	6823      	ldr	r3, [r4, #0]
 8004b6c:	681a      	ldr	r2, [r3, #0]
 8004b6e:	f022 0201 	bic.w	r2, r2, #1
 8004b72:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 8004b74:	681a      	ldr	r2, [r3, #0]
 8004b76:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8004b7a:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 8004b7c:	681a      	ldr	r2, [r3, #0]
 8004b7e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8004b82:	601a      	str	r2, [r3, #0]
  pclk1 = HAL_RCC_GetPCLK1Freq();
 8004b84:	f001 f818 	bl	8005bb8 <HAL_RCC_GetPCLK1Freq>
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 8004b88:	4a3f      	ldr	r2, [pc, #252]	; (8004c88 <HAL_I2C_Init+0x140>)
 8004b8a:	6863      	ldr	r3, [r4, #4]
 8004b8c:	4293      	cmp	r3, r2
 8004b8e:	bf94      	ite	ls
 8004b90:	4a3e      	ldrls	r2, [pc, #248]	; (8004c8c <HAL_I2C_Init+0x144>)
 8004b92:	4a3f      	ldrhi	r2, [pc, #252]	; (8004c90 <HAL_I2C_Init+0x148>)
 8004b94:	4290      	cmp	r0, r2
 8004b96:	bf8c      	ite	hi
 8004b98:	2200      	movhi	r2, #0
 8004b9a:	2201      	movls	r2, #1
 8004b9c:	2a00      	cmp	r2, #0
 8004b9e:	d1d6      	bne.n	8004b4e <HAL_I2C_Init+0x6>
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004ba0:	6821      	ldr	r1, [r4, #0]
  freqrange = I2C_FREQRANGE(pclk1);
 8004ba2:	4e3c      	ldr	r6, [pc, #240]	; (8004c94 <HAL_I2C_Init+0x14c>)
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004ba4:	684a      	ldr	r2, [r1, #4]
  freqrange = I2C_FREQRANGE(pclk1);
 8004ba6:	fbb0 f6f6 	udiv	r6, r0, r6
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 8004baa:	f022 023f 	bic.w	r2, r2, #63	; 0x3f
 8004bae:	4332      	orrs	r2, r6
 8004bb0:	604a      	str	r2, [r1, #4]
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004bb2:	4a35      	ldr	r2, [pc, #212]	; (8004c88 <HAL_I2C_Init+0x140>)
 8004bb4:	6a0d      	ldr	r5, [r1, #32]
 8004bb6:	4293      	cmp	r3, r2
 8004bb8:	bf84      	itt	hi
 8004bba:	f44f 7296 	movhi.w	r2, #300	; 0x12c
 8004bbe:	4372      	mulhi	r2, r6
 8004bc0:	f025 053f 	bic.w	r5, r5, #63	; 0x3f
 8004bc4:	bf91      	iteee	ls
 8004bc6:	1c72      	addls	r2, r6, #1
 8004bc8:	f44f 767a 	movhi.w	r6, #1000	; 0x3e8
 8004bcc:	fbb2 f2f6 	udivhi	r2, r2, r6
 8004bd0:	3201      	addhi	r2, #1
 8004bd2:	432a      	orrs	r2, r5
 8004bd4:	620a      	str	r2, [r1, #32]
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004bd6:	69cd      	ldr	r5, [r1, #28]
 8004bd8:	1e42      	subs	r2, r0, #1
 8004bda:	482b      	ldr	r0, [pc, #172]	; (8004c88 <HAL_I2C_Init+0x140>)
 8004bdc:	f425 454f 	bic.w	r5, r5, #52992	; 0xcf00
 8004be0:	4283      	cmp	r3, r0
 8004be2:	f025 05ff 	bic.w	r5, r5, #255	; 0xff
 8004be6:	d832      	bhi.n	8004c4e <HAL_I2C_Init+0x106>
 8004be8:	005b      	lsls	r3, r3, #1
 8004bea:	fbb2 f3f3 	udiv	r3, r2, r3
 8004bee:	f640 72fc 	movw	r2, #4092	; 0xffc
 8004bf2:	3301      	adds	r3, #1
 8004bf4:	4213      	tst	r3, r2
 8004bf6:	d042      	beq.n	8004c7e <HAL_I2C_Init+0x136>
 8004bf8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004bfc:	432b      	orrs	r3, r5
 8004bfe:	61cb      	str	r3, [r1, #28]
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 8004c00:	e9d4 3007 	ldrd	r3, r0, [r4, #28]
 8004c04:	680a      	ldr	r2, [r1, #0]
 8004c06:	4303      	orrs	r3, r0
 8004c08:	f022 02c0 	bic.w	r2, r2, #192	; 0xc0
 8004c0c:	4313      	orrs	r3, r2
 8004c0e:	600b      	str	r3, [r1, #0]
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004c10:	688a      	ldr	r2, [r1, #8]
 8004c12:	e9d4 0303 	ldrd	r0, r3, [r4, #12]
 8004c16:	f422 4203 	bic.w	r2, r2, #33536	; 0x8300
 8004c1a:	4303      	orrs	r3, r0
 8004c1c:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004c20:	4313      	orrs	r3, r2
 8004c22:	608b      	str	r3, [r1, #8]
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004c24:	e9d4 3005 	ldrd	r3, r0, [r4, #20]
 8004c28:	68ca      	ldr	r2, [r1, #12]
 8004c2a:	4303      	orrs	r3, r0
 8004c2c:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 8004c30:	4313      	orrs	r3, r2
 8004c32:	60cb      	str	r3, [r1, #12]
  __HAL_I2C_ENABLE(hi2c);
 8004c34:	680b      	ldr	r3, [r1, #0]
 8004c36:	f043 0301 	orr.w	r3, r3, #1
 8004c3a:	600b      	str	r3, [r1, #0]
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004c3c:	2000      	movs	r0, #0
  hi2c->State = HAL_I2C_STATE_READY;
 8004c3e:	2320      	movs	r3, #32
  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004c40:	6420      	str	r0, [r4, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 8004c42:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004c46:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 8004c48:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
  return HAL_OK;
 8004c4c:	e780      	b.n	8004b50 <HAL_I2C_Init+0x8>
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004c4e:	68a0      	ldr	r0, [r4, #8]
 8004c50:	b950      	cbnz	r0, 8004c68 <HAL_I2C_Init+0x120>
 8004c52:	eb03 0343 	add.w	r3, r3, r3, lsl #1
 8004c56:	fbb2 f3f3 	udiv	r3, r2, r3
 8004c5a:	3301      	adds	r3, #1
 8004c5c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004c60:	b17b      	cbz	r3, 8004c82 <HAL_I2C_Init+0x13a>
 8004c62:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8004c66:	e7c9      	b.n	8004bfc <HAL_I2C_Init+0xb4>
 8004c68:	2019      	movs	r0, #25
 8004c6a:	4343      	muls	r3, r0
 8004c6c:	fbb2 f3f3 	udiv	r3, r2, r3
 8004c70:	3301      	adds	r3, #1
 8004c72:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004c76:	b123      	cbz	r3, 8004c82 <HAL_I2C_Init+0x13a>
 8004c78:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 8004c7c:	e7be      	b.n	8004bfc <HAL_I2C_Init+0xb4>
 8004c7e:	2304      	movs	r3, #4
 8004c80:	e7bc      	b.n	8004bfc <HAL_I2C_Init+0xb4>
 8004c82:	2301      	movs	r3, #1
 8004c84:	e7ba      	b.n	8004bfc <HAL_I2C_Init+0xb4>
 8004c86:	bf00      	nop
 8004c88:	000186a0 	.word	0x000186a0
 8004c8c:	001e847f 	.word	0x001e847f
 8004c90:	003d08ff 	.word	0x003d08ff
 8004c94:	000f4240 	.word	0x000f4240

08004c98 <HAL_I2C_DeInit>:
{
 8004c98:	b510      	push	{r4, lr}
  if (hi2c == NULL)
 8004c9a:	4604      	mov	r4, r0
 8004c9c:	b198      	cbz	r0, 8004cc6 <HAL_I2C_DeInit+0x2e>
  __HAL_I2C_DISABLE(hi2c);
 8004c9e:	6802      	ldr	r2, [r0, #0]
  hi2c->State = HAL_I2C_STATE_BUSY;
 8004ca0:	2324      	movs	r3, #36	; 0x24
 8004ca2:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d
  __HAL_I2C_DISABLE(hi2c);
 8004ca6:	6813      	ldr	r3, [r2, #0]
 8004ca8:	f023 0301 	bic.w	r3, r3, #1
 8004cac:	6013      	str	r3, [r2, #0]
  HAL_I2C_MspDeInit(hi2c);
 8004cae:	f7fc ff3b 	bl	8001b28 <HAL_I2C_MspDeInit>
  hi2c->ErrorCode     = HAL_I2C_ERROR_NONE;
 8004cb2:	2000      	movs	r0, #0
 8004cb4:	6420      	str	r0, [r4, #64]	; 0x40
  __HAL_UNLOCK(hi2c);
 8004cb6:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
  hi2c->State         = HAL_I2C_STATE_RESET;
 8004cba:	f884 003d 	strb.w	r0, [r4, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 8004cbe:	6320      	str	r0, [r4, #48]	; 0x30
  hi2c->Mode          = HAL_I2C_MODE_NONE;
 8004cc0:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
}
 8004cc4:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8004cc6:	2001      	movs	r0, #1
 8004cc8:	e7fc      	b.n	8004cc4 <HAL_I2C_DeInit+0x2c>
	...

08004ccc <HAL_I2C_Mem_Write>:
{
 8004ccc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8004cd0:	4604      	mov	r4, r0
 8004cd2:	4699      	mov	r9, r3
 8004cd4:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8004cd6:	460f      	mov	r7, r1
 8004cd8:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004cda:	f7fe fd5d 	bl	8003798 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004cde:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004ce2:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004ce4:	4605      	mov	r5, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004ce6:	d003      	beq.n	8004cf0 <HAL_I2C_Mem_Write+0x24>
    return HAL_BUSY;
 8004ce8:	2002      	movs	r0, #2
}
 8004cea:	b003      	add	sp, #12
 8004cec:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004cf0:	9000      	str	r0, [sp, #0]
 8004cf2:	493c      	ldr	r1, [pc, #240]	; (8004de4 <HAL_I2C_Mem_Write+0x118>)
 8004cf4:	2319      	movs	r3, #25
 8004cf6:	2201      	movs	r2, #1
 8004cf8:	4620      	mov	r0, r4
 8004cfa:	f7ff fdf3 	bl	80048e4 <I2C_WaitOnFlagUntilTimeout>
 8004cfe:	2800      	cmp	r0, #0
 8004d00:	d1f2      	bne.n	8004ce8 <HAL_I2C_Mem_Write+0x1c>
    __HAL_LOCK(hi2c);
 8004d02:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004d06:	2b01      	cmp	r3, #1
 8004d08:	d0ee      	beq.n	8004ce8 <HAL_I2C_Mem_Write+0x1c>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004d0a:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004d0c:	2301      	movs	r3, #1
 8004d0e:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004d12:	6803      	ldr	r3, [r0, #0]
 8004d14:	07d9      	lsls	r1, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004d16:	bf5e      	ittt	pl
 8004d18:	6803      	ldrpl	r3, [r0, #0]
 8004d1a:	f043 0301 	orrpl.w	r3, r3, #1
 8004d1e:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004d20:	6803      	ldr	r3, [r0, #0]
 8004d22:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004d26:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8004d28:	2321      	movs	r3, #33	; 0x21
 8004d2a:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004d2e:	2340      	movs	r3, #64	; 0x40
 8004d30:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004d34:	2300      	movs	r3, #0
 8004d36:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004d38:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8004d3a:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004d3c:	f8bd 302c 	ldrh.w	r3, [sp, #44]	; 0x2c
 8004d40:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004d42:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004d44:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004d46:	4b28      	ldr	r3, [pc, #160]	; (8004de8 <HAL_I2C_Mem_Write+0x11c>)
 8004d48:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004d4a:	e9cd 6500 	strd	r6, r5, [sp]
 8004d4e:	464b      	mov	r3, r9
 8004d50:	4642      	mov	r2, r8
 8004d52:	4639      	mov	r1, r7
 8004d54:	4620      	mov	r0, r4
 8004d56:	f7ff fe1d 	bl	8004994 <I2C_RequestMemoryWrite>
 8004d5a:	2800      	cmp	r0, #0
 8004d5c:	d02a      	beq.n	8004db4 <HAL_I2C_Mem_Write+0xe8>
      return HAL_ERROR;
 8004d5e:	2001      	movs	r0, #1
 8004d60:	e7c3      	b.n	8004cea <HAL_I2C_Mem_Write+0x1e>
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004d62:	f7ff fdf1 	bl	8004948 <I2C_WaitOnTXEFlagUntilTimeout>
 8004d66:	b140      	cbz	r0, 8004d7a <HAL_I2C_Mem_Write+0xae>
      if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004d68:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8004d6a:	2b04      	cmp	r3, #4
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004d6c:	bf01      	itttt	eq
 8004d6e:	6822      	ldreq	r2, [r4, #0]
 8004d70:	6813      	ldreq	r3, [r2, #0]
 8004d72:	f443 7300 	orreq.w	r3, r3, #512	; 0x200
 8004d76:	6013      	streq	r3, [r2, #0]
 8004d78:	e7f1      	b.n	8004d5e <HAL_I2C_Mem_Write+0x92>
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004d7a:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004d7c:	6827      	ldr	r7, [r4, #0]
 8004d7e:	461a      	mov	r2, r3
 8004d80:	f812 1b01 	ldrb.w	r1, [r2], #1
 8004d84:	6139      	str	r1, [r7, #16]
      hi2c->pBuffPtr++;
 8004d86:	6262      	str	r2, [r4, #36]	; 0x24
      hi2c->XferCount--;
 8004d88:	8d62      	ldrh	r2, [r4, #42]	; 0x2a
      hi2c->XferSize--;
 8004d8a:	8d21      	ldrh	r1, [r4, #40]	; 0x28
      hi2c->XferCount--;
 8004d8c:	3a01      	subs	r2, #1
 8004d8e:	b292      	uxth	r2, r2
 8004d90:	8562      	strh	r2, [r4, #42]	; 0x2a
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004d92:	697a      	ldr	r2, [r7, #20]
      hi2c->XferSize--;
 8004d94:	1e48      	subs	r0, r1, #1
 8004d96:	b280      	uxth	r0, r0
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004d98:	0752      	lsls	r2, r2, #29
      hi2c->XferSize--;
 8004d9a:	8520      	strh	r0, [r4, #40]	; 0x28
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004d9c:	d50a      	bpl.n	8004db4 <HAL_I2C_Mem_Write+0xe8>
 8004d9e:	b148      	cbz	r0, 8004db4 <HAL_I2C_Mem_Write+0xe8>
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004da0:	785a      	ldrb	r2, [r3, #1]
 8004da2:	613a      	str	r2, [r7, #16]
        hi2c->pBuffPtr++;
 8004da4:	3302      	adds	r3, #2
 8004da6:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferCount--;
 8004da8:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004daa:	3b01      	subs	r3, #1
        hi2c->XferSize--;
 8004dac:	3902      	subs	r1, #2
        hi2c->XferCount--;
 8004dae:	b29b      	uxth	r3, r3
        hi2c->XferSize--;
 8004db0:	8521      	strh	r1, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004db2:	8563      	strh	r3, [r4, #42]	; 0x2a
    while (hi2c->XferSize > 0U)
 8004db4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004db6:	462a      	mov	r2, r5
 8004db8:	4631      	mov	r1, r6
 8004dba:	4620      	mov	r0, r4
    while (hi2c->XferSize > 0U)
 8004dbc:	2b00      	cmp	r3, #0
 8004dbe:	d1d0      	bne.n	8004d62 <HAL_I2C_Mem_Write+0x96>
    if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004dc0:	f7ff fd3b 	bl	800483a <I2C_WaitOnBTFFlagUntilTimeout>
 8004dc4:	2800      	cmp	r0, #0
 8004dc6:	d1cf      	bne.n	8004d68 <HAL_I2C_Mem_Write+0x9c>
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004dc8:	6822      	ldr	r2, [r4, #0]
 8004dca:	6813      	ldr	r3, [r2, #0]
 8004dcc:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8004dd0:	6013      	str	r3, [r2, #0]
    hi2c->State = HAL_I2C_STATE_READY;
 8004dd2:	2320      	movs	r3, #32
 8004dd4:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8004dd8:	f884 003c 	strb.w	r0, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004ddc:	f884 003e 	strb.w	r0, [r4, #62]	; 0x3e
    return HAL_OK;
 8004de0:	e783      	b.n	8004cea <HAL_I2C_Mem_Write+0x1e>
 8004de2:	bf00      	nop
 8004de4:	00100002 	.word	0x00100002
 8004de8:	ffff0000 	.word	0xffff0000

08004dec <HAL_I2C_Mem_Read>:
{
 8004dec:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8004df0:	4604      	mov	r4, r0
 8004df2:	b087      	sub	sp, #28
 8004df4:	4699      	mov	r9, r3
 8004df6:	9f10      	ldr	r7, [sp, #64]	; 0x40
 8004df8:	460d      	mov	r5, r1
 8004dfa:	4690      	mov	r8, r2
  uint32_t tickstart = HAL_GetTick();
 8004dfc:	f7fe fccc 	bl	8003798 <HAL_GetTick>
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e00:	f894 303d 	ldrb.w	r3, [r4, #61]	; 0x3d
 8004e04:	2b20      	cmp	r3, #32
  uint32_t tickstart = HAL_GetTick();
 8004e06:	4606      	mov	r6, r0
  if (hi2c->State == HAL_I2C_STATE_READY)
 8004e08:	d004      	beq.n	8004e14 <HAL_I2C_Mem_Read+0x28>
    return HAL_BUSY;
 8004e0a:	2502      	movs	r5, #2
}
 8004e0c:	4628      	mov	r0, r5
 8004e0e:	b007      	add	sp, #28
 8004e10:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004e14:	9000      	str	r0, [sp, #0]
 8004e16:	4976      	ldr	r1, [pc, #472]	; (8004ff0 <HAL_I2C_Mem_Read+0x204>)
 8004e18:	2319      	movs	r3, #25
 8004e1a:	2201      	movs	r2, #1
 8004e1c:	4620      	mov	r0, r4
 8004e1e:	f7ff fd61 	bl	80048e4 <I2C_WaitOnFlagUntilTimeout>
 8004e22:	2800      	cmp	r0, #0
 8004e24:	d1f1      	bne.n	8004e0a <HAL_I2C_Mem_Read+0x1e>
    __HAL_LOCK(hi2c);
 8004e26:	f894 303c 	ldrb.w	r3, [r4, #60]	; 0x3c
 8004e2a:	2b01      	cmp	r3, #1
 8004e2c:	d0ed      	beq.n	8004e0a <HAL_I2C_Mem_Read+0x1e>
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004e2e:	6820      	ldr	r0, [r4, #0]
    __HAL_LOCK(hi2c);
 8004e30:	2301      	movs	r3, #1
 8004e32:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004e36:	6803      	ldr	r3, [r0, #0]
 8004e38:	07db      	lsls	r3, r3, #31
      __HAL_I2C_ENABLE(hi2c);
 8004e3a:	bf5e      	ittt	pl
 8004e3c:	6803      	ldrpl	r3, [r0, #0]
 8004e3e:	f043 0301 	orrpl.w	r3, r3, #1
 8004e42:	6003      	strpl	r3, [r0, #0]
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004e44:	6803      	ldr	r3, [r0, #0]
 8004e46:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 8004e4a:	6003      	str	r3, [r0, #0]
    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8004e4c:	2322      	movs	r3, #34	; 0x22
 8004e4e:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8004e52:	2340      	movs	r3, #64	; 0x40
 8004e54:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004e58:	2300      	movs	r3, #0
 8004e5a:	6423      	str	r3, [r4, #64]	; 0x40
    hi2c->pBuffPtr    = pData;
 8004e5c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8004e5e:	6263      	str	r3, [r4, #36]	; 0x24
    hi2c->XferCount   = Size;
 8004e60:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 8004e64:	8563      	strh	r3, [r4, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 8004e66:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004e68:	8523      	strh	r3, [r4, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 8004e6a:	4b62      	ldr	r3, [pc, #392]	; (8004ff4 <HAL_I2C_Mem_Read+0x208>)
 8004e6c:	62e3      	str	r3, [r4, #44]	; 0x2c
    if (I2C_RequestMemoryRead(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8004e6e:	4629      	mov	r1, r5
 8004e70:	e9cd 7600 	strd	r7, r6, [sp]
 8004e74:	464b      	mov	r3, r9
 8004e76:	4642      	mov	r2, r8
 8004e78:	4620      	mov	r0, r4
 8004e7a:	f7ff fde3 	bl	8004a44 <I2C_RequestMemoryRead>
 8004e7e:	4605      	mov	r5, r0
 8004e80:	b108      	cbz	r0, 8004e86 <HAL_I2C_Mem_Read+0x9a>
      return HAL_ERROR;
 8004e82:	2501      	movs	r5, #1
 8004e84:	e7c2      	b.n	8004e0c <HAL_I2C_Mem_Read+0x20>
    if (hi2c->XferSize == 0U)
 8004e86:	8d22      	ldrh	r2, [r4, #40]	; 0x28
 8004e88:	6823      	ldr	r3, [r4, #0]
 8004e8a:	b9b2      	cbnz	r2, 8004eba <HAL_I2C_Mem_Read+0xce>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004e8c:	9002      	str	r0, [sp, #8]
 8004e8e:	695a      	ldr	r2, [r3, #20]
 8004e90:	9202      	str	r2, [sp, #8]
 8004e92:	699a      	ldr	r2, [r3, #24]
 8004e94:	9202      	str	r2, [sp, #8]
 8004e96:	9a02      	ldr	r2, [sp, #8]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004e98:	681a      	ldr	r2, [r3, #0]
 8004e9a:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004e9e:	601a      	str	r2, [r3, #0]
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004ea0:	f8df 8154 	ldr.w	r8, [pc, #340]	; 8004ff8 <HAL_I2C_Mem_Read+0x20c>
    while (hi2c->XferSize > 0U)
 8004ea4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004ea6:	2b00      	cmp	r3, #0
 8004ea8:	d12c      	bne.n	8004f04 <HAL_I2C_Mem_Read+0x118>
    hi2c->State = HAL_I2C_STATE_READY;
 8004eaa:	2220      	movs	r2, #32
 8004eac:	f884 203d 	strb.w	r2, [r4, #61]	; 0x3d
    __HAL_UNLOCK(hi2c);
 8004eb0:	f884 303c 	strb.w	r3, [r4, #60]	; 0x3c
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004eb4:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
    return HAL_OK;
 8004eb8:	e7a8      	b.n	8004e0c <HAL_I2C_Mem_Read+0x20>
    else if (hi2c->XferSize == 1U)
 8004eba:	2a01      	cmp	r2, #1
 8004ebc:	d10a      	bne.n	8004ed4 <HAL_I2C_Mem_Read+0xe8>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004ebe:	681a      	ldr	r2, [r3, #0]
 8004ec0:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004ec4:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ec6:	9003      	str	r0, [sp, #12]
 8004ec8:	695a      	ldr	r2, [r3, #20]
 8004eca:	9203      	str	r2, [sp, #12]
 8004ecc:	699a      	ldr	r2, [r3, #24]
 8004ece:	9203      	str	r2, [sp, #12]
 8004ed0:	9a03      	ldr	r2, [sp, #12]
 8004ed2:	e7e1      	b.n	8004e98 <HAL_I2C_Mem_Read+0xac>
    else if (hi2c->XferSize == 2U)
 8004ed4:	2a02      	cmp	r2, #2
 8004ed6:	d10e      	bne.n	8004ef6 <HAL_I2C_Mem_Read+0x10a>
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004ed8:	681a      	ldr	r2, [r3, #0]
 8004eda:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004ede:	601a      	str	r2, [r3, #0]
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004ee0:	681a      	ldr	r2, [r3, #0]
 8004ee2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 8004ee6:	601a      	str	r2, [r3, #0]
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ee8:	9004      	str	r0, [sp, #16]
 8004eea:	695a      	ldr	r2, [r3, #20]
 8004eec:	9204      	str	r2, [sp, #16]
 8004eee:	699b      	ldr	r3, [r3, #24]
 8004ef0:	9304      	str	r3, [sp, #16]
 8004ef2:	9b04      	ldr	r3, [sp, #16]
 8004ef4:	e7d4      	b.n	8004ea0 <HAL_I2C_Mem_Read+0xb4>
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004ef6:	9005      	str	r0, [sp, #20]
 8004ef8:	695a      	ldr	r2, [r3, #20]
 8004efa:	9205      	str	r2, [sp, #20]
 8004efc:	699b      	ldr	r3, [r3, #24]
 8004efe:	9305      	str	r3, [sp, #20]
 8004f00:	9b05      	ldr	r3, [sp, #20]
 8004f02:	e7cd      	b.n	8004ea0 <HAL_I2C_Mem_Read+0xb4>
      if (hi2c->XferSize <= 3U)
 8004f04:	2b03      	cmp	r3, #3
 8004f06:	d856      	bhi.n	8004fb6 <HAL_I2C_Mem_Read+0x1ca>
        if (hi2c->XferSize == 1U)
 8004f08:	2b01      	cmp	r3, #1
 8004f0a:	d115      	bne.n	8004f38 <HAL_I2C_Mem_Read+0x14c>
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004f0c:	4632      	mov	r2, r6
 8004f0e:	4639      	mov	r1, r7
 8004f10:	4620      	mov	r0, r4
 8004f12:	f7ff fcb8 	bl	8004886 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004f16:	2800      	cmp	r0, #0
 8004f18:	d1b3      	bne.n	8004e82 <HAL_I2C_Mem_Read+0x96>
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004f1a:	6823      	ldr	r3, [r4, #0]
 8004f1c:	691a      	ldr	r2, [r3, #16]
 8004f1e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f20:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004f22:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f24:	3301      	adds	r3, #1
 8004f26:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004f28:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004f2a:	3b01      	subs	r3, #1
 8004f2c:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004f2e:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004f30:	3b01      	subs	r3, #1
 8004f32:	b29b      	uxth	r3, r3
 8004f34:	8563      	strh	r3, [r4, #42]	; 0x2a
 8004f36:	e7b5      	b.n	8004ea4 <HAL_I2C_Mem_Read+0xb8>
        else if (hi2c->XferSize == 2U)
 8004f38:	2b02      	cmp	r3, #2
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004f3a:	9600      	str	r6, [sp, #0]
 8004f3c:	463b      	mov	r3, r7
 8004f3e:	f04f 0200 	mov.w	r2, #0
 8004f42:	4641      	mov	r1, r8
 8004f44:	4620      	mov	r0, r4
        else if (hi2c->XferSize == 2U)
 8004f46:	d119      	bne.n	8004f7c <HAL_I2C_Mem_Read+0x190>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004f48:	f7ff fccc 	bl	80048e4 <I2C_WaitOnFlagUntilTimeout>
 8004f4c:	2800      	cmp	r0, #0
 8004f4e:	d198      	bne.n	8004e82 <HAL_I2C_Mem_Read+0x96>
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004f50:	6823      	ldr	r3, [r4, #0]
 8004f52:	681a      	ldr	r2, [r3, #0]
 8004f54:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 8004f58:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004f5a:	691a      	ldr	r2, [r3, #16]
 8004f5c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f5e:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004f60:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004f62:	1c53      	adds	r3, r2, #1
 8004f64:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004f66:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004f68:	3b01      	subs	r3, #1
 8004f6a:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004f6c:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004f6e:	3b01      	subs	r3, #1
 8004f70:	b29b      	uxth	r3, r3
 8004f72:	8563      	strh	r3, [r4, #42]	; 0x2a
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004f74:	6823      	ldr	r3, [r4, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004f76:	691b      	ldr	r3, [r3, #16]
 8004f78:	7053      	strb	r3, [r2, #1]
 8004f7a:	e7d2      	b.n	8004f22 <HAL_I2C_Mem_Read+0x136>
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004f7c:	f7ff fcb2 	bl	80048e4 <I2C_WaitOnFlagUntilTimeout>
 8004f80:	2800      	cmp	r0, #0
 8004f82:	f47f af7e 	bne.w	8004e82 <HAL_I2C_Mem_Read+0x96>
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004f86:	6823      	ldr	r3, [r4, #0]
 8004f88:	681a      	ldr	r2, [r3, #0]
 8004f8a:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 8004f8e:	601a      	str	r2, [r3, #0]
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004f90:	691a      	ldr	r2, [r3, #16]
 8004f92:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004f94:	701a      	strb	r2, [r3, #0]
          hi2c->pBuffPtr++;
 8004f96:	6a63      	ldr	r3, [r4, #36]	; 0x24
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004f98:	9600      	str	r6, [sp, #0]
          hi2c->pBuffPtr++;
 8004f9a:	3301      	adds	r3, #1
 8004f9c:	6263      	str	r3, [r4, #36]	; 0x24
          hi2c->XferSize--;
 8004f9e:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004fa0:	3b01      	subs	r3, #1
 8004fa2:	8523      	strh	r3, [r4, #40]	; 0x28
          hi2c->XferCount--;
 8004fa4:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004fa6:	3b01      	subs	r3, #1
 8004fa8:	b29b      	uxth	r3, r3
 8004faa:	8563      	strh	r3, [r4, #42]	; 0x2a
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004fac:	4602      	mov	r2, r0
 8004fae:	463b      	mov	r3, r7
 8004fb0:	4641      	mov	r1, r8
 8004fb2:	4620      	mov	r0, r4
 8004fb4:	e7c8      	b.n	8004f48 <HAL_I2C_Mem_Read+0x15c>
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004fb6:	4632      	mov	r2, r6
 8004fb8:	4639      	mov	r1, r7
 8004fba:	4620      	mov	r0, r4
 8004fbc:	f7ff fc63 	bl	8004886 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004fc0:	2800      	cmp	r0, #0
 8004fc2:	f47f af5e 	bne.w	8004e82 <HAL_I2C_Mem_Read+0x96>
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004fc6:	6823      	ldr	r3, [r4, #0]
 8004fc8:	691a      	ldr	r2, [r3, #16]
 8004fca:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8004fcc:	701a      	strb	r2, [r3, #0]
        hi2c->pBuffPtr++;
 8004fce:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8004fd0:	1c53      	adds	r3, r2, #1
 8004fd2:	6263      	str	r3, [r4, #36]	; 0x24
        hi2c->XferSize--;
 8004fd4:	8d23      	ldrh	r3, [r4, #40]	; 0x28
 8004fd6:	3b01      	subs	r3, #1
 8004fd8:	8523      	strh	r3, [r4, #40]	; 0x28
        hi2c->XferCount--;
 8004fda:	8d63      	ldrh	r3, [r4, #42]	; 0x2a
 8004fdc:	3b01      	subs	r3, #1
 8004fde:	b29b      	uxth	r3, r3
 8004fe0:	8563      	strh	r3, [r4, #42]	; 0x2a
        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004fe2:	6823      	ldr	r3, [r4, #0]
 8004fe4:	6959      	ldr	r1, [r3, #20]
 8004fe6:	0749      	lsls	r1, r1, #29
 8004fe8:	f57f af5c 	bpl.w	8004ea4 <HAL_I2C_Mem_Read+0xb8>
 8004fec:	e7c3      	b.n	8004f76 <HAL_I2C_Mem_Read+0x18a>
 8004fee:	bf00      	nop
 8004ff0:	00100002 	.word	0x00100002
 8004ff4:	ffff0000 	.word	0xffff0000
 8004ff8:	00010004 	.word	0x00010004

08004ffc <HAL_I2C_GetState>:
  return hi2c->State;
 8004ffc:	f890 003d 	ldrb.w	r0, [r0, #61]	; 0x3d
}
 8005000:	4770      	bx	lr

08005002 <LTDC_SetConfig>:
  * @param  LayerIdx  LTDC Layer index.
  *                   This parameter can be one of the following values: LTDC_LAYER_1 (0) or LTDC_LAYER_2 (1)
  * @retval None
  */
static void LTDC_SetConfig(LTDC_HandleTypeDef *hltdc, LTDC_LayerCfgTypeDef *pLayerCfg, uint32_t LayerIdx)
{
 8005002:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
  uint32_t tmp1;
  uint32_t tmp2;

  /* Configure the horizontal start and stop position */
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005006:	01d2      	lsls	r2, r2, #7
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005008:	6804      	ldr	r4, [r0, #0]
 800500a:	684f      	ldr	r7, [r1, #4]
 800500c:	68e5      	ldr	r5, [r4, #12]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800500e:	f8d1 c000 	ldr.w	ip, [r1]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);

  /* Configure the default color values */
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
  tmp2 = (pLayerCfg->Alpha0 << 24U);
 8005012:	f8d1 9018 	ldr.w	r9, [r1, #24]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 8005016:	3284      	adds	r2, #132	; 0x84
 8005018:	18a3      	adds	r3, r4, r2
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800501a:	f10c 0601 	add.w	r6, ip, #1
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR &= ~(LTDC_LxWHPCR_WHSTPOS | LTDC_LxWHPCR_WHSPPOS);
 800501e:	6858      	ldr	r0, [r3, #4]
 8005020:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 8005024:	6058      	str	r0, [r3, #4]
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005026:	68e0      	ldr	r0, [r4, #12]
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005028:	f3c5 450b 	ubfx	r5, r5, #16, #12
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 800502c:	f3c0 400b 	ubfx	r0, r0, #16, #12
 8005030:	4430      	add	r0, r6
  tmp = ((pLayerCfg->WindowX1 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U)) << 16U);
 8005032:	443d      	add	r5, r7
  LTDC_LAYER(hltdc, LayerIdx)->WHPCR = ((pLayerCfg->WindowX0 + ((hltdc->Instance->BPCR & LTDC_BPCR_AHBP) >> 16U) + 1U) | tmp);
 8005034:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 8005038:	6058      	str	r0, [r3, #4]
  tmp = ((pLayerCfg->WindowY1 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP)) << 16U);
 800503a:	68e0      	ldr	r0, [r4, #12]
 800503c:	68cd      	ldr	r5, [r1, #12]
 800503e:	f3c0 000a 	ubfx	r0, r0, #0, #11
 8005042:	4405      	add	r5, r0
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR &= ~(LTDC_LxWVPCR_WVSTPOS | LTDC_LxWVPCR_WVSPPOS);
 8005044:	6898      	ldr	r0, [r3, #8]
 8005046:	f400 4070 	and.w	r0, r0, #61440	; 0xf000
 800504a:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->WVPCR  = ((pLayerCfg->WindowY0 + (hltdc->Instance->BPCR & LTDC_BPCR_AVBP) + 1U) | tmp);
 800504c:	68e6      	ldr	r6, [r4, #12]
 800504e:	6888      	ldr	r0, [r1, #8]
 8005050:	f3c6 060a 	ubfx	r6, r6, #0, #11
 8005054:	3001      	adds	r0, #1
 8005056:	4430      	add	r0, r6
 8005058:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 800505c:	6098      	str	r0, [r3, #8]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 800505e:	6918      	ldr	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 8005060:	690e      	ldr	r6, [r1, #16]
  LTDC_LAYER(hltdc, LayerIdx)->PFCR &= ~(LTDC_LxPFCR_PF);
 8005062:	f020 0007 	bic.w	r0, r0, #7
 8005066:	6118      	str	r0, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005068:	f04f 0e00 	mov.w	lr, #0
  LTDC_LAYER(hltdc, LayerIdx)->PFCR = (pLayerCfg->PixelFormat);
 800506c:	611e      	str	r6, [r3, #16]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 800506e:	699d      	ldr	r5, [r3, #24]
  tmp1 = ((uint32_t)(pLayerCfg->Backcolor.Red) << 16U);
 8005070:	f891 0032 	ldrb.w	r0, [r1, #50]	; 0x32
  tmp = ((uint32_t)(pLayerCfg->Backcolor.Green) << 8U);
 8005074:	f891 8031 	ldrb.w	r8, [r1, #49]	; 0x31
  LTDC_LAYER(hltdc, LayerIdx)->DCCR &= ~(LTDC_LxDCCR_DCBLUE | LTDC_LxDCCR_DCGREEN | LTDC_LxDCCR_DCRED | LTDC_LxDCCR_DCALPHA);
 8005078:	f8c3 e018 	str.w	lr, [r3, #24]
  LTDC_LAYER(hltdc, LayerIdx)->DCCR = (pLayerCfg->Backcolor.Blue | tmp | tmp1 | tmp2);
 800507c:	f891 5030 	ldrb.w	r5, [r1, #48]	; 0x30
 8005080:	ea45 6509 	orr.w	r5, r5, r9, lsl #24
 8005084:	ea45 2508 	orr.w	r5, r5, r8, lsl #8
 8005088:	ea45 4500 	orr.w	r5, r5, r0, lsl #16
 800508c:	619d      	str	r5, [r3, #24]

  /* Specifies the constant alpha value */
  LTDC_LAYER(hltdc, LayerIdx)->CACR &= ~(LTDC_LxCACR_CONSTA);
 800508e:	6958      	ldr	r0, [r3, #20]
 8005090:	f020 00ff 	bic.w	r0, r0, #255	; 0xff
 8005094:	6158      	str	r0, [r3, #20]
  LTDC_LAYER(hltdc, LayerIdx)->CACR = (pLayerCfg->Alpha);
 8005096:	6948      	ldr	r0, [r1, #20]
 8005098:	6158      	str	r0, [r3, #20]

  /* Specifies the blending factors */
  LTDC_LAYER(hltdc, LayerIdx)->BFCR &= ~(LTDC_LxBFCR_BF2 | LTDC_LxBFCR_BF1);
 800509a:	69d8      	ldr	r0, [r3, #28]
 800509c:	f420 60e0 	bic.w	r0, r0, #1792	; 0x700
 80050a0:	f020 0007 	bic.w	r0, r0, #7
 80050a4:	61d8      	str	r0, [r3, #28]
  LTDC_LAYER(hltdc, LayerIdx)->BFCR = (pLayerCfg->BlendingFactor1 | pLayerCfg->BlendingFactor2);
 80050a6:	e9d1 5007 	ldrd	r5, r0, [r1, #28]
 80050aa:	4305      	orrs	r5, r0
 80050ac:	61dd      	str	r5, [r3, #28]

  /* Configure the color frame buffer start address */
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80050ae:	6a98      	ldr	r0, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80050b0:	6a48      	ldr	r0, [r1, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR &= ~(LTDC_LxCFBAR_CFBADD);
 80050b2:	f8c3 e028 	str.w	lr, [r3, #40]	; 0x28
  LTDC_LAYER(hltdc, LayerIdx)->CFBAR = (pLayerCfg->FBStartAdress);
 80050b6:	6298      	str	r0, [r3, #40]	; 0x28

  if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 80050b8:	b31e      	cbz	r6, 8005102 <LTDC_SetConfig+0x100>
  {
    tmp = 4U;
  }
  else if (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 80050ba:	2e01      	cmp	r6, #1
 80050bc:	d023      	beq.n	8005106 <LTDC_SetConfig+0x104>
  {
    tmp = 3U;
  }
  else if ((pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 80050be:	1eb0      	subs	r0, r6, #2
 80050c0:	2802      	cmp	r0, #2
 80050c2:	d922      	bls.n	800510a <LTDC_SetConfig+0x108>
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_RGB565)   || \
           (pLayerCfg->PixelFormat == LTDC_PIXEL_FORMAT_ARGB1555) || \
 80050c4:	2e07      	cmp	r6, #7
  {
    tmp = 2U;
  }
  else
  {
    tmp = 1U;
 80050c6:	bf0c      	ite	eq
 80050c8:	2002      	moveq	r0, #2
 80050ca:	2001      	movne	r0, #1
  }

  /* Configure the color frame buffer pitch in byte */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  &= ~(LTDC_LxCFBLR_CFBLL | LTDC_LxCFBLR_CFBP);
 80050cc:	6add      	ldr	r5, [r3, #44]	; 0x2c
 80050ce:	f005 25e0 	and.w	r5, r5, #3758153728	; 0xe000e000
 80050d2:	62dd      	str	r5, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80050d4:	6a8d      	ldr	r5, [r1, #40]	; 0x28
  /* Configure the frame buffer line number */
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80050d6:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR  = (((pLayerCfg->ImageWidth * tmp) << 16U) | (((pLayerCfg->WindowX1 - pLayerCfg->WindowX0) * tmp)  + 3U));
 80050d8:	eba7 070c 	sub.w	r7, r7, ip
 80050dc:	4345      	muls	r5, r0
 80050de:	4378      	muls	r0, r7
 80050e0:	3003      	adds	r0, #3
 80050e2:	ea40 4005 	orr.w	r0, r0, r5, lsl #16
 80050e6:	62d8      	str	r0, [r3, #44]	; 0x2c
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  &= ~(LTDC_LxCFBLNR_CFBLNBR);
 80050e8:	6b18      	ldr	r0, [r3, #48]	; 0x30
 80050ea:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 80050ee:	f020 0007 	bic.w	r0, r0, #7
 80050f2:	6318      	str	r0, [r3, #48]	; 0x30
  LTDC_LAYER(hltdc, LayerIdx)->CFBLNR  = (pLayerCfg->ImageHeight);
 80050f4:	6319      	str	r1, [r3, #48]	; 0x30

  /* Enable LTDC_Layer by setting LEN bit */
  LTDC_LAYER(hltdc, LayerIdx)->CR |= (uint32_t)LTDC_LxCR_LEN;
 80050f6:	58a3      	ldr	r3, [r4, r2]
 80050f8:	f043 0301 	orr.w	r3, r3, #1
 80050fc:	50a3      	str	r3, [r4, r2]
}
 80050fe:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    tmp = 4U;
 8005102:	2004      	movs	r0, #4
 8005104:	e7e2      	b.n	80050cc <LTDC_SetConfig+0xca>
    tmp = 3U;
 8005106:	2003      	movs	r0, #3
 8005108:	e7e0      	b.n	80050cc <LTDC_SetConfig+0xca>
    tmp = 2U;
 800510a:	2002      	movs	r0, #2
 800510c:	e7de      	b.n	80050cc <LTDC_SetConfig+0xca>
	...

08005110 <HAL_LTDC_Init>:
{
 8005110:	b538      	push	{r3, r4, r5, lr}
  if (hltdc == NULL)
 8005112:	4604      	mov	r4, r0
 8005114:	2800      	cmp	r0, #0
 8005116:	d063      	beq.n	80051e0 <HAL_LTDC_Init+0xd0>
  if (hltdc->State == HAL_LTDC_STATE_RESET)
 8005118:	f890 30a1 	ldrb.w	r3, [r0, #161]	; 0xa1
 800511c:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8005120:	b91b      	cbnz	r3, 800512a <HAL_LTDC_Init+0x1a>
    hltdc->Lock = HAL_UNLOCKED;
 8005122:	f880 20a0 	strb.w	r2, [r0, #160]	; 0xa0
    HAL_LTDC_MspInit(hltdc);
 8005126:	f7fc fd1d 	bl	8001b64 <HAL_LTDC_MspInit>
  hltdc->State = HAL_LTDC_STATE_BUSY;
 800512a:	2302      	movs	r3, #2
 800512c:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
  hltdc->Instance->GCR &= ~(LTDC_GCR_HSPOL | LTDC_GCR_VSPOL | LTDC_GCR_DEPOL | LTDC_GCR_PCPOL);
 8005130:	6823      	ldr	r3, [r4, #0]
 8005132:	699a      	ldr	r2, [r3, #24]
 8005134:	f022 4270 	bic.w	r2, r2, #4026531840	; 0xf0000000
 8005138:	619a      	str	r2, [r3, #24]
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800513a:	e9d4 2001 	ldrd	r2, r0, [r4, #4]
 800513e:	4302      	orrs	r2, r0
 8005140:	68e0      	ldr	r0, [r4, #12]
 8005142:	6999      	ldr	r1, [r3, #24]
 8005144:	4302      	orrs	r2, r0
                                     hltdc->Init.DEPolarity | hltdc->Init.PCPolarity);
 8005146:	6920      	ldr	r0, [r4, #16]
 8005148:	4302      	orrs	r2, r0
  hltdc->Instance->GCR |= (uint32_t)(hltdc->Init.HSPolarity | hltdc->Init.VSPolarity | \
 800514a:	430a      	orrs	r2, r1
 800514c:	619a      	str	r2, [r3, #24]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 800514e:	689a      	ldr	r2, [r3, #8]
 8005150:	4924      	ldr	r1, [pc, #144]	; (80051e4 <HAL_LTDC_Init+0xd4>)
  tmp = (hltdc->Init.HorizontalSync << 16U);
 8005152:	6960      	ldr	r0, [r4, #20]
  hltdc->Instance->SSCR &= ~(LTDC_SSCR_VSH | LTDC_SSCR_HSW);
 8005154:	400a      	ands	r2, r1
 8005156:	609a      	str	r2, [r3, #8]
  hltdc->Instance->SSCR |= (tmp | hltdc->Init.VerticalSync);
 8005158:	689a      	ldr	r2, [r3, #8]
 800515a:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 800515e:	69a0      	ldr	r0, [r4, #24]
 8005160:	4302      	orrs	r2, r0
 8005162:	609a      	str	r2, [r3, #8]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005164:	68da      	ldr	r2, [r3, #12]
  tmp = (hltdc->Init.AccumulatedHBP << 16U);
 8005166:	69e0      	ldr	r0, [r4, #28]
  hltdc->Instance->BPCR &= ~(LTDC_BPCR_AVBP | LTDC_BPCR_AHBP);
 8005168:	400a      	ands	r2, r1
 800516a:	60da      	str	r2, [r3, #12]
  hltdc->Instance->BPCR |= (tmp | hltdc->Init.AccumulatedVBP);
 800516c:	68da      	ldr	r2, [r3, #12]
 800516e:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005172:	6a20      	ldr	r0, [r4, #32]
 8005174:	4302      	orrs	r2, r0
 8005176:	60da      	str	r2, [r3, #12]
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 8005178:	691a      	ldr	r2, [r3, #16]
  tmp = (hltdc->Init.AccumulatedActiveW << 16U);
 800517a:	6a60      	ldr	r0, [r4, #36]	; 0x24
  hltdc->Instance->AWCR &= ~(LTDC_AWCR_AAH | LTDC_AWCR_AAW);
 800517c:	400a      	ands	r2, r1
 800517e:	611a      	str	r2, [r3, #16]
  hltdc->Instance->AWCR |= (tmp | hltdc->Init.AccumulatedActiveH);
 8005180:	691a      	ldr	r2, [r3, #16]
 8005182:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 8005186:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005188:	4302      	orrs	r2, r0
 800518a:	611a      	str	r2, [r3, #16]
  hltdc->Instance->TWCR &= ~(LTDC_TWCR_TOTALH | LTDC_TWCR_TOTALW);
 800518c:	695a      	ldr	r2, [r3, #20]
 800518e:	4011      	ands	r1, r2
 8005190:	6159      	str	r1, [r3, #20]
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005192:	695a      	ldr	r2, [r3, #20]
  tmp = (hltdc->Init.TotalWidth << 16U);
 8005194:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
  hltdc->Instance->TWCR |= (tmp | hltdc->Init.TotalHeigh);
 8005196:	ea42 4201 	orr.w	r2, r2, r1, lsl #16
 800519a:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800519c:	430a      	orrs	r2, r1
 800519e:	615a      	str	r2, [r3, #20]
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80051a0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
  tmp1 = ((uint32_t)(hltdc->Init.Backcolor.Red) << 16U);
 80051a2:	f894 0036 	ldrb.w	r0, [r4, #54]	; 0x36
  tmp = ((uint32_t)(hltdc->Init.Backcolor.Green) << 8U);
 80051a6:	f894 5035 	ldrb.w	r5, [r4, #53]	; 0x35
  hltdc->Instance->BCCR &= ~(LTDC_BCCR_BCBLUE | LTDC_BCCR_BCGREEN | LTDC_BCCR_BCRED);
 80051aa:	f001 417f 	and.w	r1, r1, #4278190080	; 0xff000000
 80051ae:	62d9      	str	r1, [r3, #44]	; 0x2c
  hltdc->Instance->BCCR |= (tmp1 | tmp | hltdc->Init.Backcolor.Blue);
 80051b0:	6ad9      	ldr	r1, [r3, #44]	; 0x2c
 80051b2:	f894 2034 	ldrb.w	r2, [r4, #52]	; 0x34
 80051b6:	430a      	orrs	r2, r1
 80051b8:	ea42 2205 	orr.w	r2, r2, r5, lsl #8
 80051bc:	ea42 4200 	orr.w	r2, r2, r0, lsl #16
 80051c0:	62da      	str	r2, [r3, #44]	; 0x2c
  __HAL_LTDC_ENABLE_IT(hltdc, LTDC_IT_TE | LTDC_IT_FU);
 80051c2:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80051c4:	f042 0206 	orr.w	r2, r2, #6
 80051c8:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_LTDC_ENABLE(hltdc);
 80051ca:	699a      	ldr	r2, [r3, #24]
 80051cc:	f042 0201 	orr.w	r2, r2, #1
 80051d0:	619a      	str	r2, [r3, #24]
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80051d2:	2000      	movs	r0, #0
  hltdc->State = HAL_LTDC_STATE_READY;
 80051d4:	2301      	movs	r3, #1
  hltdc->ErrorCode = HAL_LTDC_ERROR_NONE;
 80051d6:	f8c4 00a4 	str.w	r0, [r4, #164]	; 0xa4
  hltdc->State = HAL_LTDC_STATE_READY;
 80051da:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
}
 80051de:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 80051e0:	2001      	movs	r0, #1
 80051e2:	e7fc      	b.n	80051de <HAL_LTDC_Init+0xce>
 80051e4:	f000f800 	.word	0xf000f800

080051e8 <HAL_LTDC_ErrorCallback>:
 80051e8:	4770      	bx	lr

080051ea <HAL_LTDC_LineEventCallback>:
 80051ea:	4770      	bx	lr

080051ec <HAL_LTDC_ReloadEventCallback>:
 80051ec:	4770      	bx	lr

080051ee <HAL_LTDC_IRQHandler>:
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80051ee:	6803      	ldr	r3, [r0, #0]
{
 80051f0:	b570      	push	{r4, r5, r6, lr}
  uint32_t isrflags  = READ_REG(hltdc->Instance->ISR);
 80051f2:	6b9e      	ldr	r6, [r3, #56]	; 0x38
  uint32_t itsources = READ_REG(hltdc->Instance->IER);
 80051f4:	6b5d      	ldr	r5, [r3, #52]	; 0x34
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80051f6:	0772      	lsls	r2, r6, #29
{
 80051f8:	4604      	mov	r4, r0
  if (((isrflags & LTDC_ISR_TERRIF) != 0U) && ((itsources & LTDC_IER_TERRIE) != 0U))
 80051fa:	d514      	bpl.n	8005226 <HAL_LTDC_IRQHandler+0x38>
 80051fc:	0769      	lsls	r1, r5, #29
 80051fe:	d512      	bpl.n	8005226 <HAL_LTDC_IRQHandler+0x38>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_TE);
 8005200:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005202:	f022 0204 	bic.w	r2, r2, #4
 8005206:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_TE);
 8005208:	2204      	movs	r2, #4
 800520a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_TE;
 800520c:	f8d0 30a4 	ldr.w	r3, [r0, #164]	; 0xa4
 8005210:	f043 0301 	orr.w	r3, r3, #1
 8005214:	f8c0 30a4 	str.w	r3, [r0, #164]	; 0xa4
    __HAL_UNLOCK(hltdc);
 8005218:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_ERROR;
 800521a:	f880 20a1 	strb.w	r2, [r0, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800521e:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005222:	f7ff ffe1 	bl	80051e8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_FUIF) != 0U) && ((itsources & LTDC_IER_FUIE) != 0U))
 8005226:	07b2      	lsls	r2, r6, #30
 8005228:	d516      	bpl.n	8005258 <HAL_LTDC_IRQHandler+0x6a>
 800522a:	07ab      	lsls	r3, r5, #30
 800522c:	d514      	bpl.n	8005258 <HAL_LTDC_IRQHandler+0x6a>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_FU);
 800522e:	6823      	ldr	r3, [r4, #0]
 8005230:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005232:	f022 0202 	bic.w	r2, r2, #2
 8005236:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_FU);
 8005238:	2202      	movs	r2, #2
 800523a:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->ErrorCode |= HAL_LTDC_ERROR_FU;
 800523c:	f8d4 30a4 	ldr.w	r3, [r4, #164]	; 0xa4
 8005240:	4313      	orrs	r3, r2
 8005242:	f8c4 30a4 	str.w	r3, [r4, #164]	; 0xa4
    hltdc->State = HAL_LTDC_STATE_ERROR;
 8005246:	2304      	movs	r3, #4
 8005248:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800524c:	2300      	movs	r3, #0
 800524e:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ErrorCallback(hltdc);
 8005252:	4620      	mov	r0, r4
 8005254:	f7ff ffc8 	bl	80051e8 <HAL_LTDC_ErrorCallback>
  if (((isrflags & LTDC_ISR_LIF) != 0U) && ((itsources & LTDC_IER_LIE) != 0U))
 8005258:	07f0      	lsls	r0, r6, #31
 800525a:	d510      	bpl.n	800527e <HAL_LTDC_IRQHandler+0x90>
 800525c:	07e9      	lsls	r1, r5, #31
 800525e:	d50e      	bpl.n	800527e <HAL_LTDC_IRQHandler+0x90>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_LI);
 8005260:	6823      	ldr	r3, [r4, #0]
 8005262:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8005264:	f022 0201 	bic.w	r2, r2, #1
 8005268:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_LI);
 800526a:	2201      	movs	r2, #1
 800526c:	63da      	str	r2, [r3, #60]	; 0x3c
    __HAL_UNLOCK(hltdc);
 800526e:	2300      	movs	r3, #0
    hltdc->State = HAL_LTDC_STATE_READY;
 8005270:	f884 20a1 	strb.w	r2, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 8005274:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_LineEventCallback(hltdc);
 8005278:	4620      	mov	r0, r4
 800527a:	f7ff ffb6 	bl	80051ea <HAL_LTDC_LineEventCallback>
  if (((isrflags & LTDC_ISR_RRIF) != 0U) && ((itsources & LTDC_IER_RRIE) != 0U))
 800527e:	0732      	lsls	r2, r6, #28
 8005280:	d511      	bpl.n	80052a6 <HAL_LTDC_IRQHandler+0xb8>
 8005282:	072b      	lsls	r3, r5, #28
 8005284:	d50f      	bpl.n	80052a6 <HAL_LTDC_IRQHandler+0xb8>
    __HAL_LTDC_DISABLE_IT(hltdc, LTDC_IT_RR);
 8005286:	6823      	ldr	r3, [r4, #0]
 8005288:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800528a:	f022 0208 	bic.w	r2, r2, #8
 800528e:	635a      	str	r2, [r3, #52]	; 0x34
    __HAL_LTDC_CLEAR_FLAG(hltdc, LTDC_FLAG_RR);
 8005290:	2208      	movs	r2, #8
 8005292:	63da      	str	r2, [r3, #60]	; 0x3c
    hltdc->State = HAL_LTDC_STATE_READY;
 8005294:	2301      	movs	r3, #1
 8005296:	f884 30a1 	strb.w	r3, [r4, #161]	; 0xa1
    __HAL_UNLOCK(hltdc);
 800529a:	2300      	movs	r3, #0
 800529c:	f884 30a0 	strb.w	r3, [r4, #160]	; 0xa0
    HAL_LTDC_ReloadEventCallback(hltdc);
 80052a0:	4620      	mov	r0, r4
 80052a2:	f7ff ffa3 	bl	80051ec <HAL_LTDC_ReloadEventCallback>
}
 80052a6:	bd70      	pop	{r4, r5, r6, pc}

080052a8 <HAL_LTDC_ConfigLayer>:
{
 80052a8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
  __HAL_LOCK(hltdc);
 80052ac:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 80052b0:	2b01      	cmp	r3, #1
{
 80052b2:	4606      	mov	r6, r0
 80052b4:	460f      	mov	r7, r1
 80052b6:	4694      	mov	ip, r2
 80052b8:	f04f 0002 	mov.w	r0, #2
  __HAL_LOCK(hltdc);
 80052bc:	d01f      	beq.n	80052fe <HAL_LTDC_ConfigLayer+0x56>
 80052be:	f04f 0801 	mov.w	r8, #1
 80052c2:	f886 80a0 	strb.w	r8, [r6, #160]	; 0xa0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 80052c6:	f886 00a1 	strb.w	r0, [r6, #161]	; 0xa1
  hltdc->LayerCfg[LayerIdx] = *pLayerCfg;
 80052ca:	2434      	movs	r4, #52	; 0x34
 80052cc:	460d      	mov	r5, r1
 80052ce:	fb04 6402 	mla	r4, r4, r2, r6
 80052d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80052d4:	3438      	adds	r4, #56	; 0x38
 80052d6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80052d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80052da:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80052dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80052de:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80052e0:	682b      	ldr	r3, [r5, #0]
 80052e2:	6023      	str	r3, [r4, #0]
  LTDC_SetConfig(hltdc, pLayerCfg, LayerIdx);
 80052e4:	4630      	mov	r0, r6
 80052e6:	4662      	mov	r2, ip
 80052e8:	4639      	mov	r1, r7
 80052ea:	f7ff fe8a 	bl	8005002 <LTDC_SetConfig>
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80052ee:	6833      	ldr	r3, [r6, #0]
  __HAL_UNLOCK(hltdc);
 80052f0:	2000      	movs	r0, #0
  hltdc->Instance->SRCR = LTDC_SRCR_IMR;
 80052f2:	f8c3 8024 	str.w	r8, [r3, #36]	; 0x24
  hltdc->State  = HAL_LTDC_STATE_READY;
 80052f6:	f886 80a1 	strb.w	r8, [r6, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 80052fa:	f886 00a0 	strb.w	r0, [r6, #160]	; 0xa0
}
 80052fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08005304 <HAL_LTDC_SetPitch>:
{
 8005304:	b530      	push	{r4, r5, lr}
  __HAL_LOCK(hltdc);
 8005306:	f890 30a0 	ldrb.w	r3, [r0, #160]	; 0xa0
 800530a:	2b01      	cmp	r3, #1
 800530c:	f04f 0302 	mov.w	r3, #2
 8005310:	d02c      	beq.n	800536c <HAL_LTDC_SetPitch+0x68>
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 8005312:	2434      	movs	r4, #52	; 0x34
 8005314:	fb04 0402 	mla	r4, r4, r2, r0
  hltdc->State = HAL_LTDC_STATE_BUSY;
 8005318:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  pixelFormat = hltdc->LayerCfg[LayerIdx].PixelFormat;
 800531c:	6ca4      	ldr	r4, [r4, #72]	; 0x48
  if (pixelFormat == LTDC_PIXEL_FORMAT_ARGB8888)
 800531e:	b33c      	cbz	r4, 8005370 <HAL_LTDC_SetPitch+0x6c>
  else if (pixelFormat == LTDC_PIXEL_FORMAT_RGB888)
 8005320:	2c01      	cmp	r4, #1
 8005322:	d027      	beq.n	8005374 <HAL_LTDC_SetPitch+0x70>
  else if ((pixelFormat == LTDC_PIXEL_FORMAT_ARGB4444) || \
 8005324:	1ea5      	subs	r5, r4, #2
 8005326:	429d      	cmp	r5, r3
 8005328:	d902      	bls.n	8005330 <HAL_LTDC_SetPitch+0x2c>
    tmp = 1U;
 800532a:	2c07      	cmp	r4, #7
 800532c:	bf18      	it	ne
 800532e:	2301      	movne	r3, #1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 8005330:	6804      	ldr	r4, [r0, #0]
 8005332:	01d2      	lsls	r2, r2, #7
 8005334:	3284      	adds	r2, #132	; 0x84
 8005336:	4422      	add	r2, r4
  pitchUpdate = ((LinePitchInPixels * tmp) << 16U);
 8005338:	434b      	muls	r3, r1
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR &= ~LTDC_LxCFBLR_CFBP;
 800533a:	6ad4      	ldr	r4, [r2, #44]	; 0x2c
 800533c:	f024 54ff 	bic.w	r4, r4, #534773760	; 0x1fe00000
 8005340:	f424 14f8 	bic.w	r4, r4, #2031616	; 0x1f0000
 8005344:	62d4      	str	r4, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8005346:	4c0c      	ldr	r4, [pc, #48]	; (8005378 <HAL_LTDC_SetPitch+0x74>)
 8005348:	6a65      	ldr	r5, [r4, #36]	; 0x24
 800534a:	f045 0501 	orr.w	r5, r5, #1
 800534e:	6265      	str	r5, [r4, #36]	; 0x24
  LTDC_LAYER(hltdc, LayerIdx)->CFBLR |= pitchUpdate;
 8005350:	6ad5      	ldr	r5, [r2, #44]	; 0x2c
 8005352:	ea45 4303 	orr.w	r3, r5, r3, lsl #16
 8005356:	62d3      	str	r3, [r2, #44]	; 0x2c
  LTDC->SRCR |= LTDC_SRCR_IMR;
 8005358:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800535a:	f043 0301 	orr.w	r3, r3, #1
 800535e:	6263      	str	r3, [r4, #36]	; 0x24
  hltdc->State = HAL_LTDC_STATE_READY;
 8005360:	2301      	movs	r3, #1
 8005362:	f880 30a1 	strb.w	r3, [r0, #161]	; 0xa1
  __HAL_UNLOCK(hltdc);
 8005366:	2300      	movs	r3, #0
 8005368:	f880 30a0 	strb.w	r3, [r0, #160]	; 0xa0
}
 800536c:	4618      	mov	r0, r3
 800536e:	bd30      	pop	{r4, r5, pc}
    tmp = 4U;
 8005370:	2304      	movs	r3, #4
 8005372:	e7dd      	b.n	8005330 <HAL_LTDC_SetPitch+0x2c>
    tmp = 3U;
 8005374:	2303      	movs	r3, #3
 8005376:	e7db      	b.n	8005330 <HAL_LTDC_SetPitch+0x2c>
 8005378:	40016800 	.word	0x40016800

0800537c <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800537c:	b537      	push	{r0, r1, r2, r4, r5, lr}
  uint32_t tickstart = 0U;

  __HAL_RCC_PWR_CLK_ENABLE();
 800537e:	2300      	movs	r3, #0
 8005380:	9301      	str	r3, [sp, #4]
 8005382:	4b18      	ldr	r3, [pc, #96]	; (80053e4 <HAL_PWREx_EnableOverDrive+0x68>)
  __HAL_PWR_OVERDRIVE_ENABLE();

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 8005384:	4d18      	ldr	r5, [pc, #96]	; (80053e8 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_RCC_PWR_CLK_ENABLE();
 8005386:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005388:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800538c:	641a      	str	r2, [r3, #64]	; 0x40
 800538e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005390:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005394:	9301      	str	r3, [sp, #4]
 8005396:	9b01      	ldr	r3, [sp, #4]
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005398:	4b14      	ldr	r3, [pc, #80]	; (80053ec <HAL_PWREx_EnableOverDrive+0x70>)
 800539a:	2201      	movs	r2, #1
 800539c:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 800539e:	f7fe f9fb 	bl	8003798 <HAL_GetTick>
 80053a2:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80053a4:	686b      	ldr	r3, [r5, #4]
 80053a6:	03da      	lsls	r2, r3, #15
 80053a8:	d50b      	bpl.n	80053c2 <HAL_PWREx_EnableOverDrive+0x46>
      return HAL_TIMEOUT;
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80053aa:	4b11      	ldr	r3, [pc, #68]	; (80053f0 <HAL_PWREx_EnableOverDrive+0x74>)

  /* Get tick */
  tickstart = HAL_GetTick();

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80053ac:	4d0e      	ldr	r5, [pc, #56]	; (80053e8 <HAL_PWREx_EnableOverDrive+0x6c>)
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80053ae:	2201      	movs	r2, #1
 80053b0:	601a      	str	r2, [r3, #0]
  tickstart = HAL_GetTick();
 80053b2:	f7fe f9f1 	bl	8003798 <HAL_GetTick>
 80053b6:	4604      	mov	r4, r0
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80053b8:	686b      	ldr	r3, [r5, #4]
 80053ba:	039b      	lsls	r3, r3, #14
 80053bc:	d50a      	bpl.n	80053d4 <HAL_PWREx_EnableOverDrive+0x58>
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
    {
      return HAL_TIMEOUT;
    }
  } 
  return HAL_OK;
 80053be:	2000      	movs	r0, #0
 80053c0:	e006      	b.n	80053d0 <HAL_PWREx_EnableOverDrive+0x54>
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80053c2:	f7fe f9e9 	bl	8003798 <HAL_GetTick>
 80053c6:	1b00      	subs	r0, r0, r4
 80053c8:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80053cc:	d9ea      	bls.n	80053a4 <HAL_PWREx_EnableOverDrive+0x28>
      return HAL_TIMEOUT;
 80053ce:	2003      	movs	r0, #3
}
 80053d0:	b003      	add	sp, #12
 80053d2:	bd30      	pop	{r4, r5, pc}
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80053d4:	f7fe f9e0 	bl	8003798 <HAL_GetTick>
 80053d8:	1b00      	subs	r0, r0, r4
 80053da:	f5b0 7f7a 	cmp.w	r0, #1000	; 0x3e8
 80053de:	d9eb      	bls.n	80053b8 <HAL_PWREx_EnableOverDrive+0x3c>
 80053e0:	e7f5      	b.n	80053ce <HAL_PWREx_EnableOverDrive+0x52>
 80053e2:	bf00      	nop
 80053e4:	40023800 	.word	0x40023800
 80053e8:	40007000 	.word	0x40007000
 80053ec:	420e0040 	.word	0x420e0040
 80053f0:	420e0044 	.word	0x420e0044

080053f4 <QSPI_Config>:
  *            @arg QSPI_FUNCTIONAL_MODE_AUTO_POLLING: Automatic polling mode
  *            @arg QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED: Memory-mapped mode
  * @retval None
  */
static void QSPI_Config(QSPI_HandleTypeDef *hqspi, QSPI_CommandTypeDef *cmd, uint32_t FunctionalMode)
{
 80053f4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
  assert_param(IS_QSPI_FUNCTIONAL_MODE(FunctionalMode));

  if ((cmd->DataMode != QSPI_DATA_NONE) && (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED))
 80053f8:	6a4e      	ldr	r6, [r1, #36]	; 0x24
 80053fa:	b13e      	cbz	r6, 800540c <QSPI_Config+0x18>
 80053fc:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
  {
    /* Configure QSPI: DLR register with the number of data to read or write */
    WRITE_REG(hqspi->Instance->DLR, (cmd->NbData - 1U));
 8005400:	bf1f      	itttt	ne
 8005402:	6a8b      	ldrne	r3, [r1, #40]	; 0x28
 8005404:	6804      	ldrne	r4, [r0, #0]
 8005406:	f103 33ff 	addne.w	r3, r3, #4294967295
 800540a:	6123      	strne	r3, [r4, #16]
  }

  if (cmd->InstructionMode != QSPI_INSTRUCTION_NONE)
 800540c:	f8d1 a018 	ldr.w	sl, [r1, #24]
 8005410:	e9d1 7c07 	ldrd	r7, ip, [r1, #28]
 8005414:	f1ba 0f00 	cmp.w	sl, #0
 8005418:	d04e      	beq.n	80054b8 <QSPI_Config+0xc4>
  {
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 800541a:	694b      	ldr	r3, [r1, #20]
 800541c:	6805      	ldr	r5, [r0, #0]
 800541e:	f8d1 8000 	ldr.w	r8, [r1]
 8005422:	6b48      	ldr	r0, [r1, #52]	; 0x34
 8005424:	ea46 0a0a 	orr.w	sl, r6, sl
 8005428:	e9d1 490b 	ldrd	r4, r9, [r1, #44]	; 0x2c
 800542c:	ea4f 4e83 	mov.w	lr, r3, lsl #18
 8005430:	ea4a 0a02 	orr.w	sl, sl, r2
 8005434:	f1bc 0f00 	cmp.w	ip, #0
 8005438:	d026      	beq.n	8005488 <QSPI_Config+0x94>
    {
      /* Configure QSPI: ABR register with alternate bytes value */
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 800543a:	688b      	ldr	r3, [r1, #8]
 800543c:	690e      	ldr	r6, [r1, #16]
 800543e:	61eb      	str	r3, [r5, #28]

      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005440:	ea4c 0c0a 	orr.w	ip, ip, sl
 8005444:	b1a7      	cbz	r7, 8005470 <QSPI_Config+0x7c>
      {
        /*---- Command with instruction, address and alternate bytes ----*/
        /* Configure QSPI: CCR register with all communications parameters */
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005446:	ea48 0307 	orr.w	r3, r8, r7
 800544a:	4323      	orrs	r3, r4
 800544c:	ea43 0309 	orr.w	r3, r3, r9
 8005450:	4303      	orrs	r3, r0
 8005452:	68c8      	ldr	r0, [r1, #12]
 8005454:	4333      	orrs	r3, r6
 8005456:	4303      	orrs	r3, r0
 8005458:	ea43 030e 	orr.w	r3, r3, lr
 800545c:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
                                         cmd->DataMode | (cmd->DummyCycles << QUADSPI_CCR_DCYC_Pos) |
                                         cmd->AlternateByteMode | cmd->AddressSize | cmd->AddressMode |
                                         cmd->InstructionMode | cmd->Instruction | FunctionalMode));

        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005460:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005464:	616b      	str	r3, [r5, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005466:	d001      	beq.n	800546c <QSPI_Config+0x78>
        {
          /* Configure QSPI: AR register with address value */
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005468:	684b      	ldr	r3, [r1, #4]
 800546a:	61ab      	str	r3, [r5, #24]
                                           cmd->InstructionMode | FunctionalMode));
        }
      }
    }
  }
}
 800546c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005470:	ea48 0304 	orr.w	r3, r8, r4
 8005474:	ea43 0309 	orr.w	r3, r3, r9
 8005478:	4303      	orrs	r3, r0
 800547a:	4333      	orrs	r3, r6
 800547c:	ea43 030e 	orr.w	r3, r3, lr
 8005480:	ea43 030c 	orr.w	r3, r3, ip
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005484:	616b      	str	r3, [r5, #20]
 8005486:	e7f1      	b.n	800546c <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005488:	b167      	cbz	r7, 80054a4 <QSPI_Config+0xb0>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 800548a:	ea48 0307 	orr.w	r3, r8, r7
 800548e:	4323      	orrs	r3, r4
 8005490:	ea43 0309 	orr.w	r3, r3, r9
 8005494:	4303      	orrs	r3, r0
 8005496:	68c8      	ldr	r0, [r1, #12]
 8005498:	4303      	orrs	r3, r0
 800549a:	ea43 030e 	orr.w	r3, r3, lr
 800549e:	ea43 030a 	orr.w	r3, r3, sl
 80054a2:	e7dd      	b.n	8005460 <QSPI_Config+0x6c>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054a4:	ea48 0304 	orr.w	r3, r8, r4
 80054a8:	ea43 0309 	orr.w	r3, r3, r9
 80054ac:	4303      	orrs	r3, r0
 80054ae:	ea43 030e 	orr.w	r3, r3, lr
 80054b2:	ea43 030a 	orr.w	r3, r3, sl
 80054b6:	e7e5      	b.n	8005484 <QSPI_Config+0x90>
    if (cmd->AlternateByteMode != QSPI_ALTERNATE_BYTES_NONE)
 80054b8:	f1bc 0f00 	cmp.w	ip, #0
 80054bc:	d028      	beq.n	8005510 <QSPI_Config+0x11c>
      WRITE_REG(hqspi->Instance->ABR, cmd->AlternateBytes);
 80054be:	6804      	ldr	r4, [r0, #0]
 80054c0:	688b      	ldr	r3, [r1, #8]
 80054c2:	61e3      	str	r3, [r4, #28]
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 80054c4:	ea46 030c 	orr.w	r3, r6, ip
 80054c8:	694e      	ldr	r6, [r1, #20]
 80054ca:	6908      	ldr	r0, [r1, #16]
 80054cc:	f8d1 c034 	ldr.w	ip, [r1, #52]	; 0x34
 80054d0:	ea43 0502 	orr.w	r5, r3, r2
 80054d4:	04b6      	lsls	r6, r6, #18
 80054d6:	e9d1 830b 	ldrd	r8, r3, [r1, #44]	; 0x2c
 80054da:	b187      	cbz	r7, 80054fe <QSPI_Config+0x10a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054dc:	4338      	orrs	r0, r7
 80054de:	ea40 0008 	orr.w	r0, r0, r8
 80054e2:	4303      	orrs	r3, r0
 80054e4:	68c8      	ldr	r0, [r1, #12]
 80054e6:	ea43 030c 	orr.w	r3, r3, ip
 80054ea:	4303      	orrs	r3, r0
 80054ec:	4333      	orrs	r3, r6
 80054ee:	432b      	orrs	r3, r5
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80054f0:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054f4:	6163      	str	r3, [r4, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 80054f6:	d0b9      	beq.n	800546c <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 80054f8:	684b      	ldr	r3, [r1, #4]
 80054fa:	61a3      	str	r3, [r4, #24]
 80054fc:	e7b6      	b.n	800546c <QSPI_Config+0x78>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 80054fe:	ea40 0008 	orr.w	r0, r0, r8
 8005502:	4303      	orrs	r3, r0
 8005504:	ea43 030c 	orr.w	r3, r3, ip
 8005508:	4333      	orrs	r3, r6
 800550a:	432b      	orrs	r3, r5
 800550c:	6163      	str	r3, [r4, #20]
 800550e:	e7ad      	b.n	800546c <QSPI_Config+0x78>
      if (cmd->AddressMode != QSPI_ADDRESS_NONE)
 8005510:	b1af      	cbz	r7, 800553e <QSPI_Config+0x14a>
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005512:	6acc      	ldr	r4, [r1, #44]	; 0x2c
 8005514:	6800      	ldr	r0, [r0, #0]
 8005516:	ea46 0307 	orr.w	r3, r6, r7
 800551a:	4313      	orrs	r3, r2
 800551c:	4323      	orrs	r3, r4
 800551e:	6b0c      	ldr	r4, [r1, #48]	; 0x30
 8005520:	4323      	orrs	r3, r4
 8005522:	6b4c      	ldr	r4, [r1, #52]	; 0x34
 8005524:	4323      	orrs	r3, r4
 8005526:	68cc      	ldr	r4, [r1, #12]
 8005528:	4323      	orrs	r3, r4
 800552a:	694c      	ldr	r4, [r1, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 800552c:	f1b2 6f40 	cmp.w	r2, #201326592	; 0xc000000
        WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005530:	ea43 4384 	orr.w	r3, r3, r4, lsl #18
 8005534:	6143      	str	r3, [r0, #20]
        if (FunctionalMode != QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED)
 8005536:	d099      	beq.n	800546c <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->AR, cmd->Address);
 8005538:	684b      	ldr	r3, [r1, #4]
 800553a:	6183      	str	r3, [r0, #24]
 800553c:	e796      	b.n	800546c <QSPI_Config+0x78>
        if (cmd->DataMode != QSPI_DATA_NONE)
 800553e:	2e00      	cmp	r6, #0
 8005540:	d094      	beq.n	800546c <QSPI_Config+0x78>
          WRITE_REG(hqspi->Instance->CCR, (cmd->DdrMode | cmd->DdrHoldHalfCycle | cmd->SIOOMode |
 8005542:	6acb      	ldr	r3, [r1, #44]	; 0x2c
 8005544:	6800      	ldr	r0, [r0, #0]
 8005546:	4333      	orrs	r3, r6
 8005548:	6b0e      	ldr	r6, [r1, #48]	; 0x30
 800554a:	431a      	orrs	r2, r3
 800554c:	4332      	orrs	r2, r6
 800554e:	6b4e      	ldr	r6, [r1, #52]	; 0x34
 8005550:	694b      	ldr	r3, [r1, #20]
 8005552:	4332      	orrs	r2, r6
 8005554:	ea42 4283 	orr.w	r2, r2, r3, lsl #18
 8005558:	6142      	str	r2, [r0, #20]
}
 800555a:	e787      	b.n	800546c <QSPI_Config+0x78>

0800555c <QSPI_WaitFlagStateUntilTimeout>:
{
 800555c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005560:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8005564:	4604      	mov	r4, r0
 8005566:	460e      	mov	r6, r1
 8005568:	4615      	mov	r5, r2
 800556a:	461f      	mov	r7, r3
  while((__HAL_QSPI_GET_FLAG(hqspi, Flag)) != State)
 800556c:	6822      	ldr	r2, [r4, #0]
 800556e:	6893      	ldr	r3, [r2, #8]
 8005570:	4233      	tst	r3, r6
 8005572:	bf14      	ite	ne
 8005574:	2301      	movne	r3, #1
 8005576:	2300      	moveq	r3, #0
 8005578:	42ab      	cmp	r3, r5
 800557a:	d101      	bne.n	8005580 <QSPI_WaitFlagStateUntilTimeout+0x24>
  return HAL_OK;
 800557c:	2000      	movs	r0, #0
 800557e:	e012      	b.n	80055a6 <QSPI_WaitFlagStateUntilTimeout+0x4a>
    if (Timeout != HAL_MAX_DELAY)
 8005580:	f1b8 3fff 	cmp.w	r8, #4294967295
 8005584:	d0f3      	beq.n	800556e <QSPI_WaitFlagStateUntilTimeout+0x12>
      if(((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005586:	f7fe f907 	bl	8003798 <HAL_GetTick>
 800558a:	1bc0      	subs	r0, r0, r7
 800558c:	4540      	cmp	r0, r8
 800558e:	d802      	bhi.n	8005596 <QSPI_WaitFlagStateUntilTimeout+0x3a>
 8005590:	f1b8 0f00 	cmp.w	r8, #0
 8005594:	d1ea      	bne.n	800556c <QSPI_WaitFlagStateUntilTimeout+0x10>
        hqspi->State     = HAL_QSPI_STATE_ERROR;
 8005596:	2304      	movs	r3, #4
 8005598:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
        hqspi->ErrorCode |= HAL_QSPI_ERROR_TIMEOUT;
 800559c:	6c63      	ldr	r3, [r4, #68]	; 0x44
 800559e:	f043 0301 	orr.w	r3, r3, #1
 80055a2:	6463      	str	r3, [r4, #68]	; 0x44
 80055a4:	2001      	movs	r0, #1
}
 80055a6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

080055ac <HAL_QSPI_Init>:
{
 80055ac:	b530      	push	{r4, r5, lr}
 80055ae:	b085      	sub	sp, #20
 80055b0:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 80055b2:	f7fe f8f1 	bl	8003798 <HAL_GetTick>
 80055b6:	4603      	mov	r3, r0
  if(hqspi == NULL)
 80055b8:	2c00      	cmp	r4, #0
 80055ba:	d047      	beq.n	800564c <HAL_QSPI_Init+0xa0>
  if(hqspi->State == HAL_QSPI_STATE_RESET)
 80055bc:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80055c0:	f002 01ff 	and.w	r1, r2, #255	; 0xff
 80055c4:	b94a      	cbnz	r2, 80055da <HAL_QSPI_Init+0x2e>
 80055c6:	9003      	str	r0, [sp, #12]
    hqspi->Lock = HAL_UNLOCKED;
 80055c8:	f884 1040 	strb.w	r1, [r4, #64]	; 0x40
    HAL_QSPI_MspInit(hqspi);
 80055cc:	4620      	mov	r0, r4
 80055ce:	f7fc fafd 	bl	8001bcc <HAL_QSPI_MspInit>
  hqspi->Timeout = Timeout;
 80055d2:	f241 3288 	movw	r2, #5000	; 0x1388
 80055d6:	9b03      	ldr	r3, [sp, #12]
 80055d8:	64a2      	str	r2, [r4, #72]	; 0x48
  MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_FTHRES,
 80055da:	6820      	ldr	r0, [r4, #0]
 80055dc:	68a1      	ldr	r1, [r4, #8]
 80055de:	6802      	ldr	r2, [r0, #0]
 80055e0:	3901      	subs	r1, #1
 80055e2:	f422 52f8 	bic.w	r2, r2, #7936	; 0x1f00
 80055e6:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 80055ea:	6002      	str	r2, [r0, #0]
  status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80055ec:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 80055ee:	9200      	str	r2, [sp, #0]
 80055f0:	2120      	movs	r1, #32
 80055f2:	2200      	movs	r2, #0
 80055f4:	4620      	mov	r0, r4
 80055f6:	f7ff ffb1 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
  if(status == HAL_OK)
 80055fa:	bb10      	cbnz	r0, 8005642 <HAL_QSPI_Init+0x96>
    MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PRESCALER | QUADSPI_CR_SSHIFT | QUADSPI_CR_FSEL | QUADSPI_CR_DFM),
 80055fc:	69e5      	ldr	r5, [r4, #28]
 80055fe:	68e3      	ldr	r3, [r4, #12]
 8005600:	6822      	ldr	r2, [r4, #0]
 8005602:	432b      	orrs	r3, r5
 8005604:	6a25      	ldr	r5, [r4, #32]
 8005606:	6811      	ldr	r1, [r2, #0]
 8005608:	432b      	orrs	r3, r5
 800560a:	6865      	ldr	r5, [r4, #4]
 800560c:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8005610:	ea43 6305 	orr.w	r3, r3, r5, lsl #24
 8005614:	f021 01d0 	bic.w	r1, r1, #208	; 0xd0
 8005618:	430b      	orrs	r3, r1
 800561a:	6013      	str	r3, [r2, #0]
    MODIFY_REG(hqspi->Instance->DCR, (QUADSPI_DCR_FSIZE | QUADSPI_DCR_CSHT | QUADSPI_DCR_CKMODE),
 800561c:	e9d4 3105 	ldrd	r3, r1, [r4, #20]
 8005620:	430b      	orrs	r3, r1
 8005622:	6921      	ldr	r1, [r4, #16]
 8005624:	6855      	ldr	r5, [r2, #4]
 8005626:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 800562a:	4909      	ldr	r1, [pc, #36]	; (8005650 <HAL_QSPI_Init+0xa4>)
 800562c:	4029      	ands	r1, r5
 800562e:	430b      	orrs	r3, r1
 8005630:	6053      	str	r3, [r2, #4]
    __HAL_QSPI_ENABLE(hqspi);
 8005632:	6813      	ldr	r3, [r2, #0]
 8005634:	f043 0301 	orr.w	r3, r3, #1
 8005638:	6013      	str	r3, [r2, #0]
    hqspi->State = HAL_QSPI_STATE_READY;
 800563a:	2301      	movs	r3, #1
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800563c:	6460      	str	r0, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_READY;
 800563e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005642:	2300      	movs	r3, #0
 8005644:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005648:	b005      	add	sp, #20
 800564a:	bd30      	pop	{r4, r5, pc}
    return HAL_ERROR;
 800564c:	2001      	movs	r0, #1
 800564e:	e7fb      	b.n	8005648 <HAL_QSPI_Init+0x9c>
 8005650:	ffe0f8fe 	.word	0xffe0f8fe

08005654 <HAL_QSPI_DeInit>:
{
 8005654:	b510      	push	{r4, lr}
  if(hqspi == NULL)
 8005656:	4604      	mov	r4, r0
 8005658:	b168      	cbz	r0, 8005676 <HAL_QSPI_DeInit+0x22>
  __HAL_QSPI_DISABLE(hqspi);
 800565a:	6802      	ldr	r2, [r0, #0]
 800565c:	6813      	ldr	r3, [r2, #0]
 800565e:	f023 0301 	bic.w	r3, r3, #1
 8005662:	6013      	str	r3, [r2, #0]
  HAL_QSPI_MspDeInit(hqspi);
 8005664:	f7fc fb0c 	bl	8001c80 <HAL_QSPI_MspDeInit>
  hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 8005668:	2000      	movs	r0, #0
 800566a:	6460      	str	r0, [r4, #68]	; 0x44
  hqspi->State = HAL_QSPI_STATE_RESET;
 800566c:	f884 0041 	strb.w	r0, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 8005670:	f884 0040 	strb.w	r0, [r4, #64]	; 0x40
}
 8005674:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8005676:	2001      	movs	r0, #1
 8005678:	e7fc      	b.n	8005674 <HAL_QSPI_DeInit+0x20>

0800567a <HAL_QSPI_Command>:
{
 800567a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800567e:	4604      	mov	r4, r0
 8005680:	b085      	sub	sp, #20
 8005682:	4617      	mov	r7, r2
 8005684:	4689      	mov	r9, r1
  uint32_t tickstart = HAL_GetTick();
 8005686:	f7fe f887 	bl	8003798 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 800568a:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 800568e:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005690:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 8005692:	d034      	beq.n	80056fe <HAL_QSPI_Command+0x84>
 8005694:	2201      	movs	r2, #1
 8005696:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 800569a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 800569e:	2a01      	cmp	r2, #1
 80056a0:	fa5f f882 	uxtb.w	r8, r2
 80056a4:	f04f 0602 	mov.w	r6, #2
 80056a8:	d127      	bne.n	80056fa <HAL_QSPI_Command+0x80>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80056aa:	2200      	movs	r2, #0
 80056ac:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80056ae:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY;
 80056b0:	f884 6041 	strb.w	r6, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 80056b4:	9700      	str	r7, [sp, #0]
 80056b6:	2120      	movs	r1, #32
 80056b8:	4620      	mov	r0, r4
 80056ba:	f7ff ff4f 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80056be:	4605      	mov	r5, r0
 80056c0:	b9a0      	cbnz	r0, 80056ec <HAL_QSPI_Command+0x72>
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80056c2:	4602      	mov	r2, r0
 80056c4:	4649      	mov	r1, r9
 80056c6:	4620      	mov	r0, r4
 80056c8:	f7ff fe94 	bl	80053f4 <QSPI_Config>
      if (cmd->DataMode == QSPI_DATA_NONE)
 80056cc:	f8d9 2024 	ldr.w	r2, [r9, #36]	; 0x24
 80056d0:	9b03      	ldr	r3, [sp, #12]
 80056d2:	b94a      	cbnz	r2, 80056e8 <HAL_QSPI_Command+0x6e>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80056d4:	9700      	str	r7, [sp, #0]
 80056d6:	4642      	mov	r2, r8
 80056d8:	4631      	mov	r1, r6
 80056da:	4620      	mov	r0, r4
 80056dc:	f7ff ff3e 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 80056e0:	4605      	mov	r5, r0
 80056e2:	b918      	cbnz	r0, 80056ec <HAL_QSPI_Command+0x72>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80056e4:	6823      	ldr	r3, [r4, #0]
 80056e6:	60de      	str	r6, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 80056e8:	f884 8041 	strb.w	r8, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80056ec:	2300      	movs	r3, #0
 80056ee:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80056f2:	4628      	mov	r0, r5
 80056f4:	b005      	add	sp, #20
 80056f6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
    status = HAL_BUSY;
 80056fa:	4635      	mov	r5, r6
 80056fc:	e7f6      	b.n	80056ec <HAL_QSPI_Command+0x72>
  __HAL_LOCK(hqspi);
 80056fe:	2502      	movs	r5, #2
 8005700:	e7f7      	b.n	80056f2 <HAL_QSPI_Command+0x78>

08005702 <HAL_QSPI_AutoPolling>:
{
 8005702:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8005706:	4604      	mov	r4, r0
 8005708:	4615      	mov	r5, r2
 800570a:	461e      	mov	r6, r3
 800570c:	4688      	mov	r8, r1
  uint32_t tickstart = HAL_GetTick();
 800570e:	f7fe f843 	bl	8003798 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 8005712:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005716:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 8005718:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800571a:	d040      	beq.n	800579e <HAL_QSPI_AutoPolling+0x9c>
 800571c:	2201      	movs	r2, #1
 800571e:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005722:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005726:	2a01      	cmp	r2, #1
 8005728:	b2d7      	uxtb	r7, r2
 800572a:	d136      	bne.n	800579a <HAL_QSPI_AutoPolling+0x98>
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 800572c:	2142      	movs	r1, #66	; 0x42
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800572e:	2200      	movs	r2, #0
 8005730:	6462      	str	r2, [r4, #68]	; 0x44
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005732:	9003      	str	r0, [sp, #12]
    hqspi->State = HAL_QSPI_STATE_BUSY_AUTO_POLLING;
 8005734:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, Timeout);
 8005738:	9600      	str	r6, [sp, #0]
 800573a:	2120      	movs	r1, #32
 800573c:	4620      	mov	r0, r4
 800573e:	f7ff ff0d 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005742:	bb20      	cbnz	r0, 800578e <HAL_QSPI_AutoPolling+0x8c>
      WRITE_REG(hqspi->Instance->PSMAR, cfg->Match);
 8005744:	6821      	ldr	r1, [r4, #0]
 8005746:	682a      	ldr	r2, [r5, #0]
 8005748:	628a      	str	r2, [r1, #40]	; 0x28
      WRITE_REG(hqspi->Instance->PSMKR, cfg->Mask);
 800574a:	686a      	ldr	r2, [r5, #4]
 800574c:	624a      	str	r2, [r1, #36]	; 0x24
      WRITE_REG(hqspi->Instance->PIR, cfg->Interval);
 800574e:	68aa      	ldr	r2, [r5, #8]
 8005750:	62ca      	str	r2, [r1, #44]	; 0x2c
      MODIFY_REG(hqspi->Instance->CR, (QUADSPI_CR_PMM | QUADSPI_CR_APMS),
 8005752:	680a      	ldr	r2, [r1, #0]
 8005754:	6928      	ldr	r0, [r5, #16]
 8005756:	f422 0240 	bic.w	r2, r2, #12582912	; 0xc00000
 800575a:	4302      	orrs	r2, r0
 800575c:	f442 0280 	orr.w	r2, r2, #4194304	; 0x400000
 8005760:	600a      	str	r2, [r1, #0]
      cmd->NbData = cfg->StatusBytesSize;
 8005762:	68ea      	ldr	r2, [r5, #12]
 8005764:	f8c8 2028 	str.w	r2, [r8, #40]	; 0x28
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_AUTO_POLLING);
 8005768:	4641      	mov	r1, r8
 800576a:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 800576e:	4620      	mov	r0, r4
 8005770:	f7ff fe40 	bl	80053f4 <QSPI_Config>
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_SM, SET, tickstart, Timeout);
 8005774:	9b03      	ldr	r3, [sp, #12]
 8005776:	9600      	str	r6, [sp, #0]
 8005778:	463a      	mov	r2, r7
 800577a:	2108      	movs	r1, #8
 800577c:	4620      	mov	r0, r4
 800577e:	f7ff feed 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
      if (status == HAL_OK)
 8005782:	b920      	cbnz	r0, 800578e <HAL_QSPI_AutoPolling+0x8c>
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_SM);
 8005784:	6823      	ldr	r3, [r4, #0]
 8005786:	2208      	movs	r2, #8
 8005788:	60da      	str	r2, [r3, #12]
        hqspi->State = HAL_QSPI_STATE_READY;
 800578a:	f884 7041 	strb.w	r7, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800578e:	2300      	movs	r3, #0
 8005790:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005794:	b004      	add	sp, #16
 8005796:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    status = HAL_BUSY;
 800579a:	2002      	movs	r0, #2
 800579c:	e7f7      	b.n	800578e <HAL_QSPI_AutoPolling+0x8c>
  __HAL_LOCK(hqspi);
 800579e:	2002      	movs	r0, #2
 80057a0:	e7f8      	b.n	8005794 <HAL_QSPI_AutoPolling+0x92>

080057a2 <HAL_QSPI_MemoryMapped>:
{
 80057a2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80057a4:	4604      	mov	r4, r0
 80057a6:	4616      	mov	r6, r2
 80057a8:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80057aa:	f7fd fff5 	bl	8003798 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80057ae:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 80057b2:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80057b4:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80057b6:	d032      	beq.n	800581e <HAL_QSPI_MemoryMapped+0x7c>
 80057b8:	2201      	movs	r2, #1
 80057ba:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80057be:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80057c2:	2a01      	cmp	r2, #1
 80057c4:	d129      	bne.n	800581a <HAL_QSPI_MemoryMapped+0x78>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80057c6:	2200      	movs	r2, #0
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80057c8:	2182      	movs	r1, #130	; 0x82
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80057ca:	6462      	str	r2, [r4, #68]	; 0x44
    hqspi->State = HAL_QSPI_STATE_BUSY_MEM_MAPPED;
 80057cc:	f884 1041 	strb.w	r1, [r4, #65]	; 0x41
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 80057d0:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 80057d2:	9100      	str	r1, [sp, #0]
 80057d4:	4620      	mov	r0, r4
 80057d6:	2120      	movs	r1, #32
 80057d8:	f7ff fec0 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 80057dc:	4605      	mov	r5, r0
 80057de:	b9b0      	cbnz	r0, 800580e <HAL_QSPI_MemoryMapped+0x6c>
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80057e0:	6823      	ldr	r3, [r4, #0]
 80057e2:	6872      	ldr	r2, [r6, #4]
 80057e4:	6818      	ldr	r0, [r3, #0]
 80057e6:	f020 0008 	bic.w	r0, r0, #8
 80057ea:	4310      	orrs	r0, r2
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80057ec:	2a08      	cmp	r2, #8
    MODIFY_REG(hqspi->Instance->CR, QUADSPI_CR_TCEN, cfg->TimeOutActivation);
 80057ee:	6018      	str	r0, [r3, #0]
    if (cfg->TimeOutActivation == QSPI_TIMEOUT_COUNTER_ENABLE)
 80057f0:	d107      	bne.n	8005802 <HAL_QSPI_MemoryMapped+0x60>
        WRITE_REG(hqspi->Instance->LPTR, cfg->TimeOutPeriod);
 80057f2:	6832      	ldr	r2, [r6, #0]
 80057f4:	631a      	str	r2, [r3, #48]	; 0x30
        __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TO);
 80057f6:	2210      	movs	r2, #16
 80057f8:	60da      	str	r2, [r3, #12]
        __HAL_QSPI_ENABLE_IT(hqspi, QSPI_IT_TO);
 80057fa:	681a      	ldr	r2, [r3, #0]
 80057fc:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8005800:	601a      	str	r2, [r3, #0]
      QSPI_Config(hqspi, cmd, QSPI_FUNCTIONAL_MODE_MEMORY_MAPPED);
 8005802:	f04f 6240 	mov.w	r2, #201326592	; 0xc000000
 8005806:	4639      	mov	r1, r7
 8005808:	4620      	mov	r0, r4
 800580a:	f7ff fdf3 	bl	80053f4 <QSPI_Config>
  __HAL_UNLOCK(hqspi);
 800580e:	2300      	movs	r3, #0
 8005810:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005814:	4628      	mov	r0, r5
 8005816:	b003      	add	sp, #12
 8005818:	bdf0      	pop	{r4, r5, r6, r7, pc}
    status = HAL_BUSY;
 800581a:	2502      	movs	r5, #2
 800581c:	e7f7      	b.n	800580e <HAL_QSPI_MemoryMapped+0x6c>
  __HAL_LOCK(hqspi);
 800581e:	2502      	movs	r5, #2
 8005820:	e7f8      	b.n	8005814 <HAL_QSPI_MemoryMapped+0x72>

08005822 <HAL_QSPI_Abort>:
{
 8005822:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8005824:	4604      	mov	r4, r0
  uint32_t tickstart = HAL_GetTick();
 8005826:	f7fd ffb7 	bl	8003798 <HAL_GetTick>
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 800582a:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
  uint32_t tickstart = HAL_GetTick();
 800582e:	4603      	mov	r3, r0
  if (((uint32_t)hqspi->State & 0x2U) != 0U)
 8005830:	f012 0002 	ands.w	r0, r2, #2
 8005834:	d036      	beq.n	80058a4 <HAL_QSPI_Abort+0x82>
    __HAL_UNLOCK(hqspi);
 8005836:	2200      	movs	r2, #0
 8005838:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
    if ((hqspi->Instance->CR & QUADSPI_CR_DMAEN) != 0U)
 800583c:	6822      	ldr	r2, [r4, #0]
 800583e:	6811      	ldr	r1, [r2, #0]
 8005840:	0749      	lsls	r1, r1, #29
 8005842:	d50d      	bpl.n	8005860 <HAL_QSPI_Abort+0x3e>
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 8005844:	6811      	ldr	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005846:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 8005848:	9303      	str	r3, [sp, #12]
      CLEAR_BIT(hqspi->Instance->CR, QUADSPI_CR_DMAEN);
 800584a:	f021 0104 	bic.w	r1, r1, #4
 800584e:	6011      	str	r1, [r2, #0]
      status = HAL_DMA_Abort(hqspi->hdma);
 8005850:	f7fe f8f2 	bl	8003a38 <HAL_DMA_Abort>
      if(status != HAL_OK)
 8005854:	9b03      	ldr	r3, [sp, #12]
 8005856:	b118      	cbz	r0, 8005860 <HAL_QSPI_Abort+0x3e>
        hqspi->ErrorCode |= HAL_QSPI_ERROR_DMA;
 8005858:	6c62      	ldr	r2, [r4, #68]	; 0x44
 800585a:	f042 0204 	orr.w	r2, r2, #4
 800585e:	6462      	str	r2, [r4, #68]	; 0x44
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005860:	6821      	ldr	r1, [r4, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 8005862:	9303      	str	r3, [sp, #12]
    SET_BIT(hqspi->Instance->CR, QUADSPI_CR_ABORT);
 8005864:	680a      	ldr	r2, [r1, #0]
 8005866:	f042 0202 	orr.w	r2, r2, #2
 800586a:	600a      	str	r2, [r1, #0]
    status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, hqspi->Timeout);
 800586c:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 800586e:	9200      	str	r2, [sp, #0]
 8005870:	2102      	movs	r1, #2
 8005872:	2201      	movs	r2, #1
 8005874:	4620      	mov	r0, r4
 8005876:	f7ff fe71 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 800587a:	9b03      	ldr	r3, [sp, #12]
 800587c:	b990      	cbnz	r0, 80058a4 <HAL_QSPI_Abort+0x82>
      __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 800587e:	6822      	ldr	r2, [r4, #0]
 8005880:	2102      	movs	r1, #2
 8005882:	60d1      	str	r1, [r2, #12]
      status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_BUSY, RESET, tickstart, hqspi->Timeout);
 8005884:	6ca2      	ldr	r2, [r4, #72]	; 0x48
 8005886:	9200      	str	r2, [sp, #0]
 8005888:	2120      	movs	r1, #32
 800588a:	4602      	mov	r2, r0
 800588c:	4620      	mov	r0, r4
 800588e:	f7ff fe65 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
    if (status == HAL_OK)
 8005892:	b938      	cbnz	r0, 80058a4 <HAL_QSPI_Abort+0x82>
      CLEAR_BIT(hqspi->Instance->CCR, QUADSPI_CCR_FMODE);
 8005894:	6822      	ldr	r2, [r4, #0]
 8005896:	6953      	ldr	r3, [r2, #20]
 8005898:	f023 6340 	bic.w	r3, r3, #201326592	; 0xc000000
 800589c:	6153      	str	r3, [r2, #20]
      hqspi->State = HAL_QSPI_STATE_READY;
 800589e:	2301      	movs	r3, #1
 80058a0:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
}
 80058a4:	b004      	add	sp, #16
 80058a6:	bd10      	pop	{r4, pc}

080058a8 <HAL_QSPI_Transmit>:
{
 80058a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80058aa:	4604      	mov	r4, r0
 80058ac:	b085      	sub	sp, #20
 80058ae:	4616      	mov	r6, r2
 80058b0:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 80058b2:	f7fd ff71 	bl	8003798 <HAL_GetTick>
  __HAL_LOCK(hqspi);
 80058b6:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
  __IO uint32_t *data_reg = &hqspi->Instance->DR;
 80058ba:	6825      	ldr	r5, [r4, #0]
  __HAL_LOCK(hqspi);
 80058bc:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 80058be:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 80058c0:	d04c      	beq.n	800595c <HAL_QSPI_Transmit+0xb4>
 80058c2:	2201      	movs	r2, #1
 80058c4:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 80058c8:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 80058cc:	2a01      	cmp	r2, #1
 80058ce:	b2d0      	uxtb	r0, r2
 80058d0:	d142      	bne.n	8005958 <HAL_QSPI_Transmit+0xb0>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 80058d2:	2200      	movs	r2, #0
 80058d4:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 80058d6:	2f00      	cmp	r7, #0
 80058d8:	d039      	beq.n	800594e <HAL_QSPI_Transmit+0xa6>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_TX;
 80058da:	2212      	movs	r2, #18
 80058dc:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->TxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 80058e0:	692a      	ldr	r2, [r5, #16]
 80058e2:	3201      	adds	r2, #1
 80058e4:	62e2      	str	r2, [r4, #44]	; 0x2c
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80058e6:	692a      	ldr	r2, [r5, #16]
      hqspi->pTxBuffPtr = pData;
 80058e8:	6267      	str	r7, [r4, #36]	; 0x24
      hqspi->TxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80058ea:	3201      	adds	r2, #1
 80058ec:	62a2      	str	r2, [r4, #40]	; 0x28
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_WRITE);
 80058ee:	696a      	ldr	r2, [r5, #20]
 80058f0:	f022 6240 	bic.w	r2, r2, #201326592	; 0xc000000
 80058f4:	616a      	str	r2, [r5, #20]
      while(hqspi->TxXferCount > 0U)
 80058f6:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 80058f8:	b9a2      	cbnz	r2, 8005924 <HAL_QSPI_Transmit+0x7c>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80058fa:	9600      	str	r6, [sp, #0]
 80058fc:	2201      	movs	r2, #1
 80058fe:	2102      	movs	r1, #2
 8005900:	4620      	mov	r0, r4
 8005902:	f7ff fe2b 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
        if (status == HAL_OK)
 8005906:	b928      	cbnz	r0, 8005914 <HAL_QSPI_Transmit+0x6c>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 8005908:	6823      	ldr	r3, [r4, #0]
 800590a:	2202      	movs	r2, #2
 800590c:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 800590e:	4620      	mov	r0, r4
 8005910:	f7ff ff87 	bl	8005822 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 8005914:	2301      	movs	r3, #1
 8005916:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 800591a:	2300      	movs	r3, #0
 800591c:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 8005920:	b005      	add	sp, #20
 8005922:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_FT, SET, tickstart, Timeout);
 8005924:	9600      	str	r6, [sp, #0]
 8005926:	2201      	movs	r2, #1
 8005928:	2104      	movs	r1, #4
 800592a:	4620      	mov	r0, r4
 800592c:	9303      	str	r3, [sp, #12]
 800592e:	f7ff fe15 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
        if (status != HAL_OK)
 8005932:	2800      	cmp	r0, #0
 8005934:	d1ee      	bne.n	8005914 <HAL_QSPI_Transmit+0x6c>
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 8005936:	6a62      	ldr	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005938:	9b03      	ldr	r3, [sp, #12]
        *((__IO uint8_t *)data_reg) = *hqspi->pTxBuffPtr;
 800593a:	7812      	ldrb	r2, [r2, #0]
 800593c:	f885 2020 	strb.w	r2, [r5, #32]
        hqspi->pTxBuffPtr++;
 8005940:	6a62      	ldr	r2, [r4, #36]	; 0x24
 8005942:	3201      	adds	r2, #1
 8005944:	6262      	str	r2, [r4, #36]	; 0x24
        hqspi->TxXferCount--;
 8005946:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005948:	3a01      	subs	r2, #1
 800594a:	62e2      	str	r2, [r4, #44]	; 0x2c
 800594c:	e7d3      	b.n	80058f6 <HAL_QSPI_Transmit+0x4e>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 800594e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005950:	f043 0308 	orr.w	r3, r3, #8
 8005954:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005956:	e7e0      	b.n	800591a <HAL_QSPI_Transmit+0x72>
    status = HAL_BUSY;
 8005958:	2002      	movs	r0, #2
 800595a:	e7de      	b.n	800591a <HAL_QSPI_Transmit+0x72>
  __HAL_LOCK(hqspi);
 800595c:	2002      	movs	r0, #2
 800595e:	e7df      	b.n	8005920 <HAL_QSPI_Transmit+0x78>

08005960 <HAL_QSPI_Receive>:
{
 8005960:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005962:	4604      	mov	r4, r0
 8005964:	b085      	sub	sp, #20
 8005966:	4616      	mov	r6, r2
 8005968:	460f      	mov	r7, r1
  uint32_t tickstart = HAL_GetTick();
 800596a:	f7fd ff15 	bl	8003798 <HAL_GetTick>
  uint32_t addr_reg = READ_REG(hqspi->Instance->AR);
 800596e:	6825      	ldr	r5, [r4, #0]
 8005970:	f8d5 c018 	ldr.w	ip, [r5, #24]
  __HAL_LOCK(hqspi);
 8005974:	f894 2040 	ldrb.w	r2, [r4, #64]	; 0x40
 8005978:	2a01      	cmp	r2, #1
  uint32_t tickstart = HAL_GetTick();
 800597a:	4603      	mov	r3, r0
  __HAL_LOCK(hqspi);
 800597c:	d050      	beq.n	8005a20 <HAL_QSPI_Receive+0xc0>
 800597e:	2201      	movs	r2, #1
 8005980:	f884 2040 	strb.w	r2, [r4, #64]	; 0x40
  if(hqspi->State == HAL_QSPI_STATE_READY)
 8005984:	f894 2041 	ldrb.w	r2, [r4, #65]	; 0x41
 8005988:	2a01      	cmp	r2, #1
 800598a:	b2d0      	uxtb	r0, r2
 800598c:	d146      	bne.n	8005a1c <HAL_QSPI_Receive+0xbc>
    hqspi->ErrorCode = HAL_QSPI_ERROR_NONE;
 800598e:	2200      	movs	r2, #0
 8005990:	6462      	str	r2, [r4, #68]	; 0x44
    if(pData != NULL )
 8005992:	2f00      	cmp	r7, #0
 8005994:	d03d      	beq.n	8005a12 <HAL_QSPI_Receive+0xb2>
      hqspi->State = HAL_QSPI_STATE_BUSY_INDIRECT_RX;
 8005996:	2222      	movs	r2, #34	; 0x22
 8005998:	f884 2041 	strb.w	r2, [r4, #65]	; 0x41
      hqspi->RxXferCount = READ_REG(hqspi->Instance->DLR) + 1U;
 800599c:	692a      	ldr	r2, [r5, #16]
 800599e:	3201      	adds	r2, #1
 80059a0:	63a2      	str	r2, [r4, #56]	; 0x38
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80059a2:	692a      	ldr	r2, [r5, #16]
      hqspi->pRxBuffPtr = pData;
 80059a4:	6327      	str	r7, [r4, #48]	; 0x30
      hqspi->RxXferSize = READ_REG(hqspi->Instance->DLR) + 1U;
 80059a6:	3201      	adds	r2, #1
 80059a8:	6362      	str	r2, [r4, #52]	; 0x34
      MODIFY_REG(hqspi->Instance->CCR, QUADSPI_CCR_FMODE, QSPI_FUNCTIONAL_MODE_INDIRECT_READ);
 80059aa:	6969      	ldr	r1, [r5, #20]
 80059ac:	f021 6140 	bic.w	r1, r1, #201326592	; 0xc000000
 80059b0:	f041 6180 	orr.w	r1, r1, #67108864	; 0x4000000
 80059b4:	6169      	str	r1, [r5, #20]
      WRITE_REG(hqspi->Instance->AR, addr_reg);
 80059b6:	f8c5 c018 	str.w	ip, [r5, #24]
      while(hqspi->RxXferCount > 0U)
 80059ba:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80059bc:	b9a2      	cbnz	r2, 80059e8 <HAL_QSPI_Receive+0x88>
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, QSPI_FLAG_TC, SET, tickstart, Timeout);
 80059be:	9600      	str	r6, [sp, #0]
 80059c0:	2201      	movs	r2, #1
 80059c2:	2102      	movs	r1, #2
 80059c4:	4620      	mov	r0, r4
 80059c6:	f7ff fdc9 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
        if  (status == HAL_OK)
 80059ca:	b928      	cbnz	r0, 80059d8 <HAL_QSPI_Receive+0x78>
          __HAL_QSPI_CLEAR_FLAG(hqspi, QSPI_FLAG_TC);
 80059cc:	6823      	ldr	r3, [r4, #0]
 80059ce:	2202      	movs	r2, #2
 80059d0:	60da      	str	r2, [r3, #12]
          status = HAL_QSPI_Abort(hqspi);
 80059d2:	4620      	mov	r0, r4
 80059d4:	f7ff ff25 	bl	8005822 <HAL_QSPI_Abort>
      hqspi->State = HAL_QSPI_STATE_READY;
 80059d8:	2301      	movs	r3, #1
 80059da:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  __HAL_UNLOCK(hqspi);
 80059de:	2300      	movs	r3, #0
 80059e0:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
}
 80059e4:	b005      	add	sp, #20
 80059e6:	bdf0      	pop	{r4, r5, r6, r7, pc}
        status = QSPI_WaitFlagStateUntilTimeout(hqspi, (QSPI_FLAG_FT | QSPI_FLAG_TC), SET, tickstart, Timeout);
 80059e8:	9600      	str	r6, [sp, #0]
 80059ea:	2201      	movs	r2, #1
 80059ec:	2106      	movs	r1, #6
 80059ee:	4620      	mov	r0, r4
 80059f0:	9303      	str	r3, [sp, #12]
 80059f2:	f7ff fdb3 	bl	800555c <QSPI_WaitFlagStateUntilTimeout>
        if  (status != HAL_OK)
 80059f6:	2800      	cmp	r0, #0
 80059f8:	d1ee      	bne.n	80059d8 <HAL_QSPI_Receive+0x78>
        *hqspi->pRxBuffPtr = *((__IO uint8_t *)data_reg);
 80059fa:	6b22      	ldr	r2, [r4, #48]	; 0x30
 80059fc:	f895 1020 	ldrb.w	r1, [r5, #32]
 8005a00:	7011      	strb	r1, [r2, #0]
        hqspi->pRxBuffPtr++;
 8005a02:	6b22      	ldr	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005a04:	9b03      	ldr	r3, [sp, #12]
        hqspi->pRxBuffPtr++;
 8005a06:	3201      	adds	r2, #1
 8005a08:	6322      	str	r2, [r4, #48]	; 0x30
        hqspi->RxXferCount--;
 8005a0a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8005a0c:	3a01      	subs	r2, #1
 8005a0e:	63a2      	str	r2, [r4, #56]	; 0x38
 8005a10:	e7d3      	b.n	80059ba <HAL_QSPI_Receive+0x5a>
      hqspi->ErrorCode |= HAL_QSPI_ERROR_INVALID_PARAM;
 8005a12:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8005a14:	f043 0308 	orr.w	r3, r3, #8
 8005a18:	6463      	str	r3, [r4, #68]	; 0x44
      status = HAL_ERROR;
 8005a1a:	e7e0      	b.n	80059de <HAL_QSPI_Receive+0x7e>
    status = HAL_BUSY;
 8005a1c:	2002      	movs	r0, #2
 8005a1e:	e7de      	b.n	80059de <HAL_QSPI_Receive+0x7e>
  __HAL_LOCK(hqspi);
 8005a20:	2002      	movs	r0, #2
 8005a22:	e7df      	b.n	80059e4 <HAL_QSPI_Receive+0x84>

08005a24 <HAL_RCC_GetSysClockFreq>:
{
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
  uint32_t sysclockfreq = 0U;

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005a24:	4913      	ldr	r1, [pc, #76]	; (8005a74 <HAL_RCC_GetSysClockFreq+0x50>)
{
 8005a26:	b508      	push	{r3, lr}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005a28:	688b      	ldr	r3, [r1, #8]
 8005a2a:	f003 030c 	and.w	r3, r3, #12
 8005a2e:	2b04      	cmp	r3, #4
 8005a30:	d01c      	beq.n	8005a6c <HAL_RCC_GetSysClockFreq+0x48>
 8005a32:	2b08      	cmp	r3, #8
 8005a34:	d11c      	bne.n	8005a70 <HAL_RCC_GetSysClockFreq+0x4c>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005a36:	684a      	ldr	r2, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005a38:	684b      	ldr	r3, [r1, #4]
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005a3a:	6849      	ldr	r1, [r1, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005a3c:	f413 0380 	ands.w	r3, r3, #4194304	; 0x400000
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005a40:	bf14      	ite	ne
 8005a42:	480d      	ldrne	r0, [pc, #52]	; (8005a78 <HAL_RCC_GetSysClockFreq+0x54>)
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005a44:	480d      	ldreq	r0, [pc, #52]	; (8005a7c <HAL_RCC_GetSysClockFreq+0x58>)
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005a46:	f3c1 1188 	ubfx	r1, r1, #6, #9
 8005a4a:	bf18      	it	ne
 8005a4c:	2300      	movne	r3, #0
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005a4e:	f002 023f 	and.w	r2, r2, #63	; 0x3f
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005a52:	fba1 0100 	umull	r0, r1, r1, r0
 8005a56:	f7fa fc23 	bl	80002a0 <__aeabi_uldivmod>
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 8005a5a:	4b06      	ldr	r3, [pc, #24]	; (8005a74 <HAL_RCC_GetSysClockFreq+0x50>)
 8005a5c:	685b      	ldr	r3, [r3, #4]
 8005a5e:	f3c3 4301 	ubfx	r3, r3, #16, #2
 8005a62:	3301      	adds	r3, #1
 8005a64:	005b      	lsls	r3, r3, #1

      sysclockfreq = pllvco/pllp;
 8005a66:	fbb0 f0f3 	udiv	r0, r0, r3
      sysclockfreq = HSI_VALUE;
      break;
    }
  }
  return sysclockfreq;
}
 8005a6a:	bd08      	pop	{r3, pc}
  switch (RCC->CFGR & RCC_CFGR_SWS)
 8005a6c:	4802      	ldr	r0, [pc, #8]	; (8005a78 <HAL_RCC_GetSysClockFreq+0x54>)
 8005a6e:	e7fc      	b.n	8005a6a <HAL_RCC_GetSysClockFreq+0x46>
      sysclockfreq = HSI_VALUE;
 8005a70:	4802      	ldr	r0, [pc, #8]	; (8005a7c <HAL_RCC_GetSysClockFreq+0x58>)
  return sysclockfreq;
 8005a72:	e7fa      	b.n	8005a6a <HAL_RCC_GetSysClockFreq+0x46>
 8005a74:	40023800 	.word	0x40023800
 8005a78:	007a1200 	.word	0x007a1200
 8005a7c:	00f42400 	.word	0x00f42400

08005a80 <HAL_RCC_ClockConfig>:
{
 8005a80:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8005a84:	460d      	mov	r5, r1
  if(RCC_ClkInitStruct == NULL)
 8005a86:	4604      	mov	r4, r0
 8005a88:	b910      	cbnz	r0, 8005a90 <HAL_RCC_ClockConfig+0x10>
    return HAL_ERROR;
 8005a8a:	2001      	movs	r0, #1
}
 8005a8c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8005a90:	4b44      	ldr	r3, [pc, #272]	; (8005ba4 <HAL_RCC_ClockConfig+0x124>)
 8005a92:	681a      	ldr	r2, [r3, #0]
 8005a94:	f002 020f 	and.w	r2, r2, #15
 8005a98:	428a      	cmp	r2, r1
 8005a9a:	d328      	bcc.n	8005aee <HAL_RCC_ClockConfig+0x6e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005a9c:	6822      	ldr	r2, [r4, #0]
 8005a9e:	0797      	lsls	r7, r2, #30
 8005aa0:	d42d      	bmi.n	8005afe <HAL_RCC_ClockConfig+0x7e>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005aa2:	07d0      	lsls	r0, r2, #31
 8005aa4:	d441      	bmi.n	8005b2a <HAL_RCC_ClockConfig+0xaa>
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8005aa6:	4b3f      	ldr	r3, [pc, #252]	; (8005ba4 <HAL_RCC_ClockConfig+0x124>)
 8005aa8:	681a      	ldr	r2, [r3, #0]
 8005aaa:	f002 020f 	and.w	r2, r2, #15
 8005aae:	42aa      	cmp	r2, r5
 8005ab0:	d866      	bhi.n	8005b80 <HAL_RCC_ClockConfig+0x100>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005ab2:	6822      	ldr	r2, [r4, #0]
 8005ab4:	0751      	lsls	r1, r2, #29
 8005ab6:	d46c      	bmi.n	8005b92 <HAL_RCC_ClockConfig+0x112>
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005ab8:	0713      	lsls	r3, r2, #28
 8005aba:	d507      	bpl.n	8005acc <HAL_RCC_ClockConfig+0x4c>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 8005abc:	4a3a      	ldr	r2, [pc, #232]	; (8005ba8 <HAL_RCC_ClockConfig+0x128>)
 8005abe:	6921      	ldr	r1, [r4, #16]
 8005ac0:	6893      	ldr	r3, [r2, #8]
 8005ac2:	f423 4360 	bic.w	r3, r3, #57344	; 0xe000
 8005ac6:	ea43 03c1 	orr.w	r3, r3, r1, lsl #3
 8005aca:	6093      	str	r3, [r2, #8]
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005acc:	f7ff ffaa 	bl	8005a24 <HAL_RCC_GetSysClockFreq>
 8005ad0:	4b35      	ldr	r3, [pc, #212]	; (8005ba8 <HAL_RCC_ClockConfig+0x128>)
 8005ad2:	4a36      	ldr	r2, [pc, #216]	; (8005bac <HAL_RCC_ClockConfig+0x12c>)
 8005ad4:	689b      	ldr	r3, [r3, #8]
 8005ad6:	f3c3 1303 	ubfx	r3, r3, #4, #4
 8005ada:	5cd3      	ldrb	r3, [r2, r3]
 8005adc:	40d8      	lsrs	r0, r3
 8005ade:	4b34      	ldr	r3, [pc, #208]	; (8005bb0 <HAL_RCC_ClockConfig+0x130>)
 8005ae0:	6018      	str	r0, [r3, #0]
  HAL_InitTick (uwTickPrio);
 8005ae2:	4b34      	ldr	r3, [pc, #208]	; (8005bb4 <HAL_RCC_ClockConfig+0x134>)
 8005ae4:	6818      	ldr	r0, [r3, #0]
 8005ae6:	f7fc f9a1 	bl	8001e2c <HAL_InitTick>
  return HAL_OK;
 8005aea:	2000      	movs	r0, #0
 8005aec:	e7ce      	b.n	8005a8c <HAL_RCC_ClockConfig+0xc>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005aee:	b2ca      	uxtb	r2, r1
 8005af0:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005af2:	681b      	ldr	r3, [r3, #0]
 8005af4:	f003 030f 	and.w	r3, r3, #15
 8005af8:	428b      	cmp	r3, r1
 8005afa:	d1c6      	bne.n	8005a8a <HAL_RCC_ClockConfig+0xa>
 8005afc:	e7ce      	b.n	8005a9c <HAL_RCC_ClockConfig+0x1c>
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005afe:	4b2a      	ldr	r3, [pc, #168]	; (8005ba8 <HAL_RCC_ClockConfig+0x128>)
 8005b00:	f012 0f04 	tst.w	r2, #4
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005b04:	bf1e      	ittt	ne
 8005b06:	6899      	ldrne	r1, [r3, #8]
 8005b08:	f441 51e0 	orrne.w	r1, r1, #7168	; 0x1c00
 8005b0c:	6099      	strne	r1, [r3, #8]
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005b0e:	0716      	lsls	r6, r2, #28
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005b10:	bf42      	ittt	mi
 8005b12:	6899      	ldrmi	r1, [r3, #8]
 8005b14:	f441 4160 	orrmi.w	r1, r1, #57344	; 0xe000
 8005b18:	6099      	strmi	r1, [r3, #8]
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005b1a:	4923      	ldr	r1, [pc, #140]	; (8005ba8 <HAL_RCC_ClockConfig+0x128>)
 8005b1c:	68a0      	ldr	r0, [r4, #8]
 8005b1e:	688b      	ldr	r3, [r1, #8]
 8005b20:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8005b24:	4303      	orrs	r3, r0
 8005b26:	608b      	str	r3, [r1, #8]
 8005b28:	e7bb      	b.n	8005aa2 <HAL_RCC_ClockConfig+0x22>
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8005b2a:	6862      	ldr	r2, [r4, #4]
 8005b2c:	4b1e      	ldr	r3, [pc, #120]	; (8005ba8 <HAL_RCC_ClockConfig+0x128>)
 8005b2e:	2a01      	cmp	r2, #1
 8005b30:	d11c      	bne.n	8005b6c <HAL_RCC_ClockConfig+0xec>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005b32:	681b      	ldr	r3, [r3, #0]
 8005b34:	f413 3f00 	tst.w	r3, #131072	; 0x20000
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005b38:	d0a7      	beq.n	8005a8a <HAL_RCC_ClockConfig+0xa>
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8005b3a:	4e1b      	ldr	r6, [pc, #108]	; (8005ba8 <HAL_RCC_ClockConfig+0x128>)
 8005b3c:	68b3      	ldr	r3, [r6, #8]
 8005b3e:	f023 0303 	bic.w	r3, r3, #3
 8005b42:	4313      	orrs	r3, r2
 8005b44:	60b3      	str	r3, [r6, #8]
    tickstart = HAL_GetTick();
 8005b46:	f7fd fe27 	bl	8003798 <HAL_GetTick>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005b4a:	f241 3888 	movw	r8, #5000	; 0x1388
    tickstart = HAL_GetTick();
 8005b4e:	4607      	mov	r7, r0
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005b50:	68b3      	ldr	r3, [r6, #8]
 8005b52:	6862      	ldr	r2, [r4, #4]
 8005b54:	f003 030c 	and.w	r3, r3, #12
 8005b58:	ebb3 0f82 	cmp.w	r3, r2, lsl #2
 8005b5c:	d0a3      	beq.n	8005aa6 <HAL_RCC_ClockConfig+0x26>
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005b5e:	f7fd fe1b 	bl	8003798 <HAL_GetTick>
 8005b62:	1bc0      	subs	r0, r0, r7
 8005b64:	4540      	cmp	r0, r8
 8005b66:	d9f3      	bls.n	8005b50 <HAL_RCC_ClockConfig+0xd0>
        return HAL_TIMEOUT;
 8005b68:	2003      	movs	r0, #3
 8005b6a:	e78f      	b.n	8005a8c <HAL_RCC_ClockConfig+0xc>
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005b6c:	1e91      	subs	r1, r2, #2
 8005b6e:	2901      	cmp	r1, #1
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005b70:	681b      	ldr	r3, [r3, #0]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 8005b72:	d802      	bhi.n	8005b7a <HAL_RCC_ClockConfig+0xfa>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005b74:	f013 7f00 	tst.w	r3, #33554432	; 0x2000000
 8005b78:	e7de      	b.n	8005b38 <HAL_RCC_ClockConfig+0xb8>
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005b7a:	f013 0f02 	tst.w	r3, #2
 8005b7e:	e7db      	b.n	8005b38 <HAL_RCC_ClockConfig+0xb8>
    __HAL_FLASH_SET_LATENCY(FLatency);
 8005b80:	b2ea      	uxtb	r2, r5
 8005b82:	701a      	strb	r2, [r3, #0]
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8005b84:	681b      	ldr	r3, [r3, #0]
 8005b86:	f003 030f 	and.w	r3, r3, #15
 8005b8a:	42ab      	cmp	r3, r5
 8005b8c:	f47f af7d 	bne.w	8005a8a <HAL_RCC_ClockConfig+0xa>
 8005b90:	e78f      	b.n	8005ab2 <HAL_RCC_ClockConfig+0x32>
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005b92:	4905      	ldr	r1, [pc, #20]	; (8005ba8 <HAL_RCC_ClockConfig+0x128>)
 8005b94:	68e0      	ldr	r0, [r4, #12]
 8005b96:	688b      	ldr	r3, [r1, #8]
 8005b98:	f423 53e0 	bic.w	r3, r3, #7168	; 0x1c00
 8005b9c:	4303      	orrs	r3, r0
 8005b9e:	608b      	str	r3, [r1, #8]
 8005ba0:	e78a      	b.n	8005ab8 <HAL_RCC_ClockConfig+0x38>
 8005ba2:	bf00      	nop
 8005ba4:	40023c00 	.word	0x40023c00
 8005ba8:	40023800 	.word	0x40023800
 8005bac:	0801b52d 	.word	0x0801b52d
 8005bb0:	20000050 	.word	0x20000050
 8005bb4:	20000058 	.word	0x20000058

08005bb8 <HAL_RCC_GetPCLK1Freq>:
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 8005bb8:	4b04      	ldr	r3, [pc, #16]	; (8005bcc <HAL_RCC_GetPCLK1Freq+0x14>)
 8005bba:	4a05      	ldr	r2, [pc, #20]	; (8005bd0 <HAL_RCC_GetPCLK1Freq+0x18>)
 8005bbc:	689b      	ldr	r3, [r3, #8]
 8005bbe:	f3c3 2382 	ubfx	r3, r3, #10, #3
 8005bc2:	5cd3      	ldrb	r3, [r2, r3]
 8005bc4:	4a03      	ldr	r2, [pc, #12]	; (8005bd4 <HAL_RCC_GetPCLK1Freq+0x1c>)
 8005bc6:	6810      	ldr	r0, [r2, #0]
}
 8005bc8:	40d8      	lsrs	r0, r3
 8005bca:	4770      	bx	lr
 8005bcc:	40023800 	.word	0x40023800
 8005bd0:	0801b53d 	.word	0x0801b53d
 8005bd4:	20000050 	.word	0x20000050

08005bd8 <HAL_RCC_GetClockConfig>:
  * @retval None
  */
void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
{
  /* Set all possible values for the Clock type parameter --------------------*/
  RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | RCC_CLOCKTYPE_PCLK2;
 8005bd8:	230f      	movs	r3, #15
 8005bda:	6003      	str	r3, [r0, #0]

  /* Get the SYSCLK configuration --------------------------------------------*/
  RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 8005bdc:	4b0b      	ldr	r3, [pc, #44]	; (8005c0c <HAL_RCC_GetClockConfig+0x34>)
 8005bde:	689a      	ldr	r2, [r3, #8]
 8005be0:	f002 0203 	and.w	r2, r2, #3
 8005be4:	6042      	str	r2, [r0, #4]

  /* Get the HCLK configuration ----------------------------------------------*/
  RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE);
 8005be6:	689a      	ldr	r2, [r3, #8]
 8005be8:	f002 02f0 	and.w	r2, r2, #240	; 0xf0
 8005bec:	6082      	str	r2, [r0, #8]

  /* Get the APB1 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);
 8005bee:	689a      	ldr	r2, [r3, #8]
 8005bf0:	f402 52e0 	and.w	r2, r2, #7168	; 0x1c00
 8005bf4:	60c2      	str	r2, [r0, #12]

  /* Get the APB2 configuration ----------------------------------------------*/
  RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3U);
 8005bf6:	689b      	ldr	r3, [r3, #8]
 8005bf8:	08db      	lsrs	r3, r3, #3
 8005bfa:	f403 53e0 	and.w	r3, r3, #7168	; 0x1c00
 8005bfe:	6103      	str	r3, [r0, #16]

  /* Get the Flash Wait State (Latency) configuration ------------------------*/
  *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY);
 8005c00:	4b03      	ldr	r3, [pc, #12]	; (8005c10 <HAL_RCC_GetClockConfig+0x38>)
 8005c02:	681b      	ldr	r3, [r3, #0]
 8005c04:	f003 030f 	and.w	r3, r3, #15
 8005c08:	600b      	str	r3, [r1, #0]
}
 8005c0a:	4770      	bx	lr
 8005c0c:	40023800 	.word	0x40023800
 8005c10:	40023c00 	.word	0x40023c00

08005c14 <HAL_RCCEx_PeriphCLKConfig>:
  *         the backup registers) and RCC_BDCR register are set to their reset values.
  *
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 8005c14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*--------------------------- CLK48 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005c16:	6802      	ldr	r2, [r0, #0]
{
 8005c18:	4604      	mov	r4, r0
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)
 8005c1a:	0610      	lsls	r0, r2, #24
 8005c1c:	d508      	bpl.n	8005c30 <HAL_RCCEx_PeriphCLKConfig+0x1c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_CLK48CLKSOURCE(PeriphClkInit->Clk48ClockSelection));

    /* Configure the CLK48 clock source */
    __HAL_RCC_CLK48_CONFIG(PeriphClkInit->Clk48ClockSelection);
 8005c1e:	49a8      	ldr	r1, [pc, #672]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005c20:	6b60      	ldr	r0, [r4, #52]	; 0x34
 8005c22:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005c26:	f023 6300 	bic.w	r3, r3, #134217728	; 0x8000000
 8005c2a:	4303      	orrs	r3, r0
 8005c2c:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
  }
  /*--------------------------------------------------------------------------*/

  /*------------------------------ SDIO Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SDIO) == RCC_PERIPHCLK_SDIO)
 8005c30:	05d1      	lsls	r1, r2, #23
 8005c32:	d508      	bpl.n	8005c46 <HAL_RCCEx_PeriphCLKConfig+0x32>
  {
    /* Check the parameters */
    assert_param(IS_RCC_SDIOCLKSOURCE(PeriphClkInit->SdioClockSelection));

    /* Configure the SDIO clock source */
    __HAL_RCC_SDIO_CONFIG(PeriphClkInit->SdioClockSelection);
 8005c34:	49a2      	ldr	r1, [pc, #648]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005c36:	6ba0      	ldr	r0, [r4, #56]	; 0x38
 8005c38:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005c3c:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8005c40:	4303      	orrs	r3, r0
 8005c42:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c

  /*----------------------- SAI/I2S Configuration (PLLI2S) -------------------*/
  /*------------------- Common configuration SAI/I2S -------------------------*/
  /* In Case of SAI or I2S Clock Configuration through PLLI2S, PLLI2SN division
     factor is common parameters for both peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == RCC_PERIPHCLK_I2S) ||
 8005c46:	f012 0f43 	tst.w	r2, #67	; 0x43
 8005c4a:	d172      	bne.n	8005d32 <HAL_RCCEx_PeriphCLKConfig+0x11e>

  /*----------------------- SAI/LTDC Configuration (PLLSAI) ------------------*/
  /*----------------------- Common configuration SAI/LTDC --------------------*/
  /* In Case of SAI, LTDC or CLK48 Clock Configuration through PLLSAI, PLLSAIN division
     factor is common parameters for these peripherals */
  if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == RCC_PERIPHCLK_SAI_PLLSAI) ||
 8005c4c:	6823      	ldr	r3, [r4, #0]
 8005c4e:	f013 0f0c 	tst.w	r3, #12
 8005c52:	f000 80bf 	beq.w	8005dd4 <HAL_RCCEx_PeriphCLKConfig+0x1c0>
  {
    /* Check the PLLSAI division factors */
    assert_param(IS_RCC_PLLSAIN_VALUE(PeriphClkInit->PLLSAI.PLLSAIN));

    /* Disable PLLSAI Clock */
    __HAL_RCC_PLLSAI_DISABLE();
 8005c56:	4d9b      	ldr	r5, [pc, #620]	; (8005ec4 <HAL_RCCEx_PeriphCLKConfig+0x2b0>)
    /* Get tick */
    tickstart = HAL_GetTick();
    /* Wait till PLLSAI is disabled */
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005c58:	4e99      	ldr	r6, [pc, #612]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLSAI_DISABLE();
 8005c5a:	2300      	movs	r3, #0
 8005c5c:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005c5e:	f7fd fd9b 	bl	8003798 <HAL_GetTick>
 8005c62:	4607      	mov	r7, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() != RESET)
 8005c64:	6833      	ldr	r3, [r6, #0]
 8005c66:	009a      	lsls	r2, r3, #2
 8005c68:	f100 80f9 	bmi.w	8005e5e <HAL_RCCEx_PeriphCLKConfig+0x24a>
    }

    /*---------------------------- SAI configuration -------------------------*/
    /* In Case of SAI Clock Configuration through PLLSAI, PLLSAIQ and PLLSAI_DIVQ must
       be added only for SAI configuration */
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLSAI) == (RCC_PERIPHCLK_SAI_PLLSAI))
 8005c6c:	6822      	ldr	r2, [r4, #0]
 8005c6e:	0753      	lsls	r3, r2, #29
 8005c70:	d51a      	bpl.n	8005ca8 <HAL_RCCEx_PeriphCLKConfig+0x94>
    {
      assert_param(IS_RCC_PLLSAIQ_VALUE(PeriphClkInit->PLLSAI.PLLSAIQ));
      assert_param(IS_RCC_PLLSAI_DIVQ_VALUE(PeriphClkInit->PLLSAIDivQ));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8005c72:	f8d6 3088 	ldr.w	r3, [r6, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005c76:	f8d6 1088 	ldr.w	r1, [r6, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* SAI_CLK(first level) = PLLSAI_VCO Output/PLLSAIQ */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, PeriphClkInit->PLLSAI.PLLSAIQ, pllsair);
 8005c7a:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005c7e:	f001 41e0 	and.w	r1, r1, #1879048192	; 0x70000000
 8005c82:	430b      	orrs	r3, r1
 8005c84:	6921      	ldr	r1, [r4, #16]
 8005c86:	ea43 1381 	orr.w	r3, r3, r1, lsl #6
 8005c8a:	69a1      	ldr	r1, [r4, #24]
 8005c8c:	ea43 6301 	orr.w	r3, r3, r1, lsl #24
 8005c90:	f8c6 3088 	str.w	r3, [r6, #136]	; 0x88
      /* SAI_CLK_x = SAI_CLK(first level)/PLLSAIDIVQ */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLSAIDivQ);
 8005c94:	f8d6 308c 	ldr.w	r3, [r6, #140]	; 0x8c
 8005c98:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8005c9a:	f423 53f8 	bic.w	r3, r3, #7936	; 0x1f00
 8005c9e:	3901      	subs	r1, #1
 8005ca0:	ea43 2301 	orr.w	r3, r3, r1, lsl #8
 8005ca4:	f8c6 308c 	str.w	r3, [r6, #140]	; 0x8c
    }

    /*---------------------------- LTDC configuration ------------------------*/
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == (RCC_PERIPHCLK_LTDC))
 8005ca8:	0717      	lsls	r7, r2, #28
 8005caa:	d519      	bpl.n	8005ce0 <HAL_RCCEx_PeriphCLKConfig+0xcc>
    {
      assert_param(IS_RCC_PLLSAIR_VALUE(PeriphClkInit->PLLSAI.PLLSAIR));
      assert_param(IS_RCC_PLLSAI_DIVR_VALUE(PeriphClkInit->PLLSAIDivR));

      /* Read PLLSAIP value from PLLSAICFGR register (this value is not needed for SAI configuration) */
      pllsaip = ((((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIP) >> RCC_PLLSAICFGR_PLLSAIP_Pos) + 1U) << 1U);
 8005cac:	4984      	ldr	r1, [pc, #528]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005cae:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005cb2:	f8d1 0088 	ldr.w	r0, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* LTDC_CLK(first level) = PLLSAI_VCO Output/PLLSAIR */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, pllsaip, pllsaiq, PeriphClkInit->PLLSAI.PLLSAIR);
 8005cb6:	f403 3340 	and.w	r3, r3, #196608	; 0x30000
 8005cba:	f000 6070 	and.w	r0, r0, #251658240	; 0xf000000
 8005cbe:	4303      	orrs	r3, r0
 8005cc0:	6920      	ldr	r0, [r4, #16]
 8005cc2:	ea43 1380 	orr.w	r3, r3, r0, lsl #6
 8005cc6:	69e0      	ldr	r0, [r4, #28]
 8005cc8:	ea43 7300 	orr.w	r3, r3, r0, lsl #28
 8005ccc:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
      /* LTDC_CLK = LTDC_CLK(first level)/PLLSAIDIVR */
      __HAL_RCC_PLLSAI_PLLSAICLKDIVR_CONFIG(PeriphClkInit->PLLSAIDivR);
 8005cd0:	f8d1 308c 	ldr.w	r3, [r1, #140]	; 0x8c
 8005cd4:	6aa0      	ldr	r0, [r4, #40]	; 0x28
 8005cd6:	f423 3340 	bic.w	r3, r3, #196608	; 0x30000
 8005cda:	4303      	orrs	r3, r0
 8005cdc:	f8c1 308c 	str.w	r3, [r1, #140]	; 0x8c
    }

    /*---------------------------- CLK48 configuration ------------------------*/
    /* Configure the PLLSAI when it is used as clock source for CLK48 */
    if((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == (RCC_PERIPHCLK_CLK48)) &&
 8005ce0:	0616      	lsls	r6, r2, #24
 8005ce2:	d517      	bpl.n	8005d14 <HAL_RCCEx_PeriphCLKConfig+0x100>
 8005ce4:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005ce6:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005cea:	d113      	bne.n	8005d14 <HAL_RCCEx_PeriphCLKConfig+0x100>
       (PeriphClkInit->Clk48ClockSelection == RCC_CLK48CLKSOURCE_PLLSAIP))
    {
      assert_param(IS_RCC_PLLSAIP_VALUE(PeriphClkInit->PLLSAI.PLLSAIP));

      /* Read PLLSAIQ value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsaiq = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIQ) >> RCC_PLLSAICFGR_PLLSAIQ_Pos);
 8005cec:	4974      	ldr	r1, [pc, #464]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005cee:	f8d1 3088 	ldr.w	r3, [r1, #136]	; 0x88
      /* Read PLLSAIR value from PLLSAICFGR register (this value is not need for SAI configuration) */
      pllsair = ((RCC->PLLSAICFGR & RCC_PLLSAICFGR_PLLSAIR) >> RCC_PLLSAICFGR_PLLSAIR_Pos);
 8005cf2:	f8d1 2088 	ldr.w	r2, [r1, #136]	; 0x88
      /* PLLSAI_VCO Input  = PLL_SOURCE/PLLM */
      /* PLLSAI_VCO Output = PLLSAI_VCO Input * PLLSAIN */
      /* CLK48_CLK(first level) = PLLSAI_VCO Output/PLLSAIP */
      __HAL_RCC_PLLSAI_CONFIG(PeriphClkInit->PLLSAI.PLLSAIN, PeriphClkInit->PLLSAI.PLLSAIP, pllsaiq, pllsair);
 8005cf6:	f003 6370 	and.w	r3, r3, #251658240	; 0xf000000
 8005cfa:	f002 42e0 	and.w	r2, r2, #1879048192	; 0x70000000
 8005cfe:	4313      	orrs	r3, r2
 8005d00:	6922      	ldr	r2, [r4, #16]
 8005d02:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005d06:	6962      	ldr	r2, [r4, #20]
 8005d08:	0852      	lsrs	r2, r2, #1
 8005d0a:	3a01      	subs	r2, #1
 8005d0c:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8005d10:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
    }

    /* Enable PLLSAI Clock */
    __HAL_RCC_PLLSAI_ENABLE();
 8005d14:	2301      	movs	r3, #1
 8005d16:	602b      	str	r3, [r5, #0]
    /* Get tick */
    tickstart = HAL_GetTick();
 8005d18:	f7fd fd3e 	bl	8003798 <HAL_GetTick>
    /* Wait till PLLSAI is ready */
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005d1c:	4e68      	ldr	r6, [pc, #416]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 8005d1e:	4605      	mov	r5, r0
    while(__HAL_RCC_PLLSAI_GET_FLAG() == RESET)
 8005d20:	6833      	ldr	r3, [r6, #0]
 8005d22:	0098      	lsls	r0, r3, #2
 8005d24:	d458      	bmi.n	8005dd8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
    {
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005d26:	f7fd fd37 	bl	8003798 <HAL_GetTick>
 8005d2a:	1b40      	subs	r0, r0, r5
 8005d2c:	2802      	cmp	r0, #2
 8005d2e:	d9f7      	bls.n	8005d20 <HAL_RCCEx_PeriphCLKConfig+0x10c>
 8005d30:	e04d      	b.n	8005dce <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_PLLI2S_DISABLE();
 8005d32:	4d65      	ldr	r5, [pc, #404]	; (8005ec8 <HAL_RCCEx_PeriphCLKConfig+0x2b4>)
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005d34:	4f62      	ldr	r7, [pc, #392]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    __HAL_RCC_PLLI2S_DISABLE();
 8005d36:	2300      	movs	r3, #0
 8005d38:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005d3a:	f7fd fd2d 	bl	8003798 <HAL_GetTick>
 8005d3e:	4606      	mov	r6, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  != RESET)
 8005d40:	683b      	ldr	r3, [r7, #0]
 8005d42:	011b      	lsls	r3, r3, #4
 8005d44:	d43e      	bmi.n	8005dc4 <HAL_RCCEx_PeriphCLKConfig+0x1b0>
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2S) == (RCC_PERIPHCLK_I2S))
 8005d46:	6821      	ldr	r1, [r4, #0]
 8005d48:	07c8      	lsls	r0, r1, #31
      __HAL_RCC_PLLI2S_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SR);
 8005d4a:	bf41      	itttt	mi
 8005d4c:	e9d4 2301 	ldrdmi	r2, r3, [r4, #4]
 8005d50:	071b      	lslmi	r3, r3, #28
 8005d52:	ea43 1382 	orrmi.w	r3, r3, r2, lsl #6
 8005d56:	f8c7 3084 	strmi.w	r3, [r7, #132]	; 0x84
    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_SAI_PLLI2S) == (RCC_PERIPHCLK_SAI_PLLI2S))
 8005d5a:	078a      	lsls	r2, r1, #30
 8005d5c:	d515      	bpl.n	8005d8a <HAL_RCCEx_PeriphCLKConfig+0x176>
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005d5e:	4a58      	ldr	r2, [pc, #352]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005d60:	68e3      	ldr	r3, [r4, #12]
      tmpreg1 = ((RCC->PLLI2SCFGR & RCC_PLLI2SCFGR_PLLI2SR) >> RCC_PLLI2SCFGR_PLLI2SR_Pos);
 8005d62:	f8d2 0084 	ldr.w	r0, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN , PeriphClkInit->PLLI2S.PLLI2SQ , tmpreg1);
 8005d66:	6866      	ldr	r6, [r4, #4]
 8005d68:	061b      	lsls	r3, r3, #24
 8005d6a:	f000 40e0 	and.w	r0, r0, #1879048192	; 0x70000000
 8005d6e:	ea43 1386 	orr.w	r3, r3, r6, lsl #6
 8005d72:	4303      	orrs	r3, r0
 8005d74:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
      __HAL_RCC_PLLI2S_PLLSAICLKDIVQ_CONFIG(PeriphClkInit->PLLI2SDivQ);
 8005d78:	f8d2 008c 	ldr.w	r0, [r2, #140]	; 0x8c
 8005d7c:	6a23      	ldr	r3, [r4, #32]
 8005d7e:	f020 001f 	bic.w	r0, r0, #31
 8005d82:	3b01      	subs	r3, #1
 8005d84:	4303      	orrs	r3, r0
 8005d86:	f8c2 308c 	str.w	r3, [r2, #140]	; 0x8c
    if((PeriphClkInit->PeriphClockSelection & RCC_PERIPHCLK_PLLI2S) == RCC_PERIPHCLK_PLLI2S)
 8005d8a:	064b      	lsls	r3, r1, #25
 8005d8c:	d50a      	bpl.n	8005da4 <HAL_RCCEx_PeriphCLKConfig+0x190>
      __HAL_RCC_PLLI2S_SAICLK_CONFIG(PeriphClkInit->PLLI2S.PLLI2SN, PeriphClkInit->PLLI2S.PLLI2SQ, PeriphClkInit->PLLI2S.PLLI2SR);
 8005d8e:	68e3      	ldr	r3, [r4, #12]
 8005d90:	6862      	ldr	r2, [r4, #4]
 8005d92:	061b      	lsls	r3, r3, #24
 8005d94:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8005d98:	68a2      	ldr	r2, [r4, #8]
 8005d9a:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 8005d9e:	4a48      	ldr	r2, [pc, #288]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005da0:	f8c2 3084 	str.w	r3, [r2, #132]	; 0x84
    __HAL_RCC_PLLI2S_ENABLE();
 8005da4:	2301      	movs	r3, #1
 8005da6:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005da8:	f7fd fcf6 	bl	8003798 <HAL_GetTick>
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005dac:	4e44      	ldr	r6, [pc, #272]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    tickstart = HAL_GetTick();
 8005dae:	4605      	mov	r5, r0
    while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLI2SRDY)  == RESET)
 8005db0:	6833      	ldr	r3, [r6, #0]
 8005db2:	011f      	lsls	r7, r3, #4
 8005db4:	f53f af4a 	bmi.w	8005c4c <HAL_RCCEx_PeriphCLKConfig+0x38>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005db8:	f7fd fcee 	bl	8003798 <HAL_GetTick>
 8005dbc:	1b40      	subs	r0, r0, r5
 8005dbe:	2802      	cmp	r0, #2
 8005dc0:	d9f6      	bls.n	8005db0 <HAL_RCCEx_PeriphCLKConfig+0x19c>
 8005dc2:	e004      	b.n	8005dce <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > PLLI2S_TIMEOUT_VALUE)
 8005dc4:	f7fd fce8 	bl	8003798 <HAL_GetTick>
 8005dc8:	1b80      	subs	r0, r0, r6
 8005dca:	2802      	cmp	r0, #2
 8005dcc:	d9b8      	bls.n	8005d40 <HAL_RCCEx_PeriphCLKConfig+0x12c>
        return HAL_TIMEOUT;
 8005dce:	2003      	movs	r0, #3
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
  {
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
  }
  return HAL_OK;
}
 8005dd0:	b003      	add	sp, #12
 8005dd2:	bdf0      	pop	{r4, r5, r6, r7, pc}
     (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LTDC) == RCC_PERIPHCLK_LTDC)             ||
 8005dd4:	0618      	lsls	r0, r3, #24
 8005dd6:	d43d      	bmi.n	8005e54 <HAL_RCCEx_PeriphCLKConfig+0x240>
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == (RCC_PERIPHCLK_RTC))
 8005dd8:	6823      	ldr	r3, [r4, #0]
 8005dda:	0699      	lsls	r1, r3, #26
 8005ddc:	d530      	bpl.n	8005e40 <HAL_RCCEx_PeriphCLKConfig+0x22c>
    __HAL_RCC_PWR_CLK_ENABLE();
 8005dde:	2300      	movs	r3, #0
 8005de0:	9301      	str	r3, [sp, #4]
 8005de2:	4b37      	ldr	r3, [pc, #220]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
    PWR->CR |= PWR_CR_DBP;
 8005de4:	4d39      	ldr	r5, [pc, #228]	; (8005ecc <HAL_RCCEx_PeriphCLKConfig+0x2b8>)
    __HAL_RCC_PWR_CLK_ENABLE();
 8005de6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8005de8:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 8005dec:	641a      	str	r2, [r3, #64]	; 0x40
 8005dee:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8005df0:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8005df4:	9301      	str	r3, [sp, #4]
 8005df6:	9b01      	ldr	r3, [sp, #4]
    PWR->CR |= PWR_CR_DBP;
 8005df8:	682b      	ldr	r3, [r5, #0]
 8005dfa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8005dfe:	602b      	str	r3, [r5, #0]
    tickstart = HAL_GetTick();
 8005e00:	f7fd fcca 	bl	8003798 <HAL_GetTick>
 8005e04:	4606      	mov	r6, r0
    while((PWR->CR & PWR_CR_DBP) == RESET)
 8005e06:	682b      	ldr	r3, [r5, #0]
 8005e08:	05d9      	lsls	r1, r3, #23
 8005e0a:	d52f      	bpl.n	8005e6c <HAL_RCCEx_PeriphCLKConfig+0x258>
    tmpreg1 = (RCC->BDCR & RCC_BDCR_RTCSEL);
 8005e0c:	4d2c      	ldr	r5, [pc, #176]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005e0e:	6f2b      	ldr	r3, [r5, #112]	; 0x70
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005e10:	f413 7340 	ands.w	r3, r3, #768	; 0x300
 8005e14:	d130      	bne.n	8005e78 <HAL_RCCEx_PeriphCLKConfig+0x264>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005e16:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8005e18:	f403 7240 	and.w	r2, r3, #768	; 0x300
 8005e1c:	f5b2 7f40 	cmp.w	r2, #768	; 0x300
 8005e20:	4a27      	ldr	r2, [pc, #156]	; (8005ec0 <HAL_RCCEx_PeriphCLKConfig+0x2ac>)
 8005e22:	d148      	bne.n	8005eb6 <HAL_RCCEx_PeriphCLKConfig+0x2a2>
 8005e24:	6891      	ldr	r1, [r2, #8]
 8005e26:	f023 4070 	bic.w	r0, r3, #4026531840	; 0xf0000000
 8005e2a:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8005e2e:	f420 7040 	bic.w	r0, r0, #768	; 0x300
 8005e32:	4301      	orrs	r1, r0
 8005e34:	6091      	str	r1, [r2, #8]
 8005e36:	6f11      	ldr	r1, [r2, #112]	; 0x70
 8005e38:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8005e3c:	430b      	orrs	r3, r1
 8005e3e:	6713      	str	r3, [r2, #112]	; 0x70
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_TIM) == (RCC_PERIPHCLK_TIM))
 8005e40:	6820      	ldr	r0, [r4, #0]
 8005e42:	f010 0010 	ands.w	r0, r0, #16
    __HAL_RCC_TIMCLKPRESCALER(PeriphClkInit->TIMPresSelection);
 8005e46:	bf1f      	itttt	ne
 8005e48:	4b21      	ldrne	r3, [pc, #132]	; (8005ed0 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8005e4a:	f894 2030 	ldrbne.w	r2, [r4, #48]	; 0x30
 8005e4e:	601a      	strne	r2, [r3, #0]
  return HAL_OK;
 8005e50:	2000      	movne	r0, #0
 8005e52:	e7bd      	b.n	8005dd0 <HAL_RCCEx_PeriphCLKConfig+0x1bc>
     ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_CLK48) == RCC_PERIPHCLK_CLK48)          &&
 8005e54:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8005e56:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 8005e5a:	d1bd      	bne.n	8005dd8 <HAL_RCCEx_PeriphCLKConfig+0x1c4>
 8005e5c:	e6fb      	b.n	8005c56 <HAL_RCCEx_PeriphCLKConfig+0x42>
      if((HAL_GetTick() - tickstart ) > PLLSAI_TIMEOUT_VALUE)
 8005e5e:	f7fd fc9b 	bl	8003798 <HAL_GetTick>
 8005e62:	1bc0      	subs	r0, r0, r7
 8005e64:	2802      	cmp	r0, #2
 8005e66:	f67f aefd 	bls.w	8005c64 <HAL_RCCEx_PeriphCLKConfig+0x50>
 8005e6a:	e7b0      	b.n	8005dce <HAL_RCCEx_PeriphCLKConfig+0x1ba>
      if((HAL_GetTick() - tickstart ) > RCC_DBP_TIMEOUT_VALUE)
 8005e6c:	f7fd fc94 	bl	8003798 <HAL_GetTick>
 8005e70:	1b80      	subs	r0, r0, r6
 8005e72:	2802      	cmp	r0, #2
 8005e74:	d9c7      	bls.n	8005e06 <HAL_RCCEx_PeriphCLKConfig+0x1f2>
 8005e76:	e7aa      	b.n	8005dce <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    if((tmpreg1 != 0x00000000U) && ((tmpreg1) != (PeriphClkInit->RTCClockSelection & RCC_BDCR_RTCSEL)))
 8005e78:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8005e7a:	f402 7240 	and.w	r2, r2, #768	; 0x300
 8005e7e:	4293      	cmp	r3, r2
 8005e80:	d0c9      	beq.n	8005e16 <HAL_RCCEx_PeriphCLKConfig+0x202>
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005e82:	6f2b      	ldr	r3, [r5, #112]	; 0x70
      __HAL_RCC_BACKUPRESET_FORCE();
 8005e84:	4a13      	ldr	r2, [pc, #76]	; (8005ed4 <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8005e86:	2101      	movs	r1, #1
 8005e88:	6011      	str	r1, [r2, #0]
      tmpreg1 = (RCC->BDCR & ~(RCC_BDCR_RTCSEL));
 8005e8a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
      __HAL_RCC_BACKUPRESET_RELEASE();
 8005e8e:	2100      	movs	r1, #0
 8005e90:	6011      	str	r1, [r2, #0]
      RCC->BDCR = tmpreg1;
 8005e92:	672b      	str	r3, [r5, #112]	; 0x70
      if(HAL_IS_BIT_SET(RCC->BDCR, RCC_BDCR_LSEON))
 8005e94:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005e96:	07da      	lsls	r2, r3, #31
 8005e98:	d5bd      	bpl.n	8005e16 <HAL_RCCEx_PeriphCLKConfig+0x202>
        tickstart = HAL_GetTick();
 8005e9a:	f7fd fc7d 	bl	8003798 <HAL_GetTick>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005e9e:	f241 3788 	movw	r7, #5000	; 0x1388
        tickstart = HAL_GetTick();
 8005ea2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005ea4:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8005ea6:	079b      	lsls	r3, r3, #30
 8005ea8:	d4b5      	bmi.n	8005e16 <HAL_RCCEx_PeriphCLKConfig+0x202>
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8005eaa:	f7fd fc75 	bl	8003798 <HAL_GetTick>
 8005eae:	1b80      	subs	r0, r0, r6
 8005eb0:	42b8      	cmp	r0, r7
 8005eb2:	d9f7      	bls.n	8005ea4 <HAL_RCCEx_PeriphCLKConfig+0x290>
 8005eb4:	e78b      	b.n	8005dce <HAL_RCCEx_PeriphCLKConfig+0x1ba>
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 8005eb6:	6891      	ldr	r1, [r2, #8]
 8005eb8:	f421 11f8 	bic.w	r1, r1, #2031616	; 0x1f0000
 8005ebc:	e7ba      	b.n	8005e34 <HAL_RCCEx_PeriphCLKConfig+0x220>
 8005ebe:	bf00      	nop
 8005ec0:	40023800 	.word	0x40023800
 8005ec4:	42470070 	.word	0x42470070
 8005ec8:	42470068 	.word	0x42470068
 8005ecc:	40007000 	.word	0x40007000
 8005ed0:	424711e0 	.word	0x424711e0
 8005ed4:	42470e40 	.word	0x42470e40

08005ed8 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005ed8:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 8005edc:	4604      	mov	r4, r0
 8005ede:	b340      	cbz	r0, 8005f32 <HAL_RCC_OscConfig+0x5a>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005ee0:	6803      	ldr	r3, [r0, #0]
 8005ee2:	07dd      	lsls	r5, r3, #31
 8005ee4:	d410      	bmi.n	8005f08 <HAL_RCC_OscConfig+0x30>
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005ee6:	6823      	ldr	r3, [r4, #0]
 8005ee8:	0798      	lsls	r0, r3, #30
 8005eea:	d45e      	bmi.n	8005faa <HAL_RCC_OscConfig+0xd2>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005eec:	6823      	ldr	r3, [r4, #0]
 8005eee:	071a      	lsls	r2, r3, #28
 8005ef0:	f100 80a0 	bmi.w	8006034 <HAL_RCC_OscConfig+0x15c>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005ef4:	6823      	ldr	r3, [r4, #0]
 8005ef6:	075b      	lsls	r3, r3, #29
 8005ef8:	f100 80be 	bmi.w	8006078 <HAL_RCC_OscConfig+0x1a0>
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005efc:	69a0      	ldr	r0, [r4, #24]
 8005efe:	2800      	cmp	r0, #0
 8005f00:	f040 811f 	bne.w	8006142 <HAL_RCC_OscConfig+0x26a>
          return HAL_ERROR;
        }
      }
    }
  }
  return HAL_OK;
 8005f04:	2000      	movs	r0, #0
 8005f06:	e02b      	b.n	8005f60 <HAL_RCC_OscConfig+0x88>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8005f08:	4ba7      	ldr	r3, [pc, #668]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
 8005f0a:	689a      	ldr	r2, [r3, #8]
 8005f0c:	f002 020c 	and.w	r2, r2, #12
 8005f10:	2a04      	cmp	r2, #4
 8005f12:	d007      	beq.n	8005f24 <HAL_RCC_OscConfig+0x4c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005f14:	689a      	ldr	r2, [r3, #8]
 8005f16:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)                                                                     ||\
 8005f1a:	2a08      	cmp	r2, #8
 8005f1c:	d10b      	bne.n	8005f36 <HAL_RCC_OscConfig+0x5e>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005f1e:	685a      	ldr	r2, [r3, #4]
 8005f20:	0251      	lsls	r1, r2, #9
 8005f22:	d508      	bpl.n	8005f36 <HAL_RCC_OscConfig+0x5e>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005f24:	4ba0      	ldr	r3, [pc, #640]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
 8005f26:	681b      	ldr	r3, [r3, #0]
 8005f28:	039a      	lsls	r2, r3, #14
 8005f2a:	d5dc      	bpl.n	8005ee6 <HAL_RCC_OscConfig+0xe>
 8005f2c:	6863      	ldr	r3, [r4, #4]
 8005f2e:	2b00      	cmp	r3, #0
 8005f30:	d1d9      	bne.n	8005ee6 <HAL_RCC_OscConfig+0xe>
          return HAL_ERROR;
 8005f32:	2001      	movs	r0, #1
 8005f34:	e014      	b.n	8005f60 <HAL_RCC_OscConfig+0x88>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005f36:	6862      	ldr	r2, [r4, #4]
 8005f38:	f5b2 3f80 	cmp.w	r2, #65536	; 0x10000
 8005f3c:	d113      	bne.n	8005f66 <HAL_RCC_OscConfig+0x8e>
 8005f3e:	681a      	ldr	r2, [r3, #0]
 8005f40:	f442 3280 	orr.w	r2, r2, #65536	; 0x10000
 8005f44:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005f46:	f7fd fc27 	bl	8003798 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005f4a:	4e97      	ldr	r6, [pc, #604]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8005f4c:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005f4e:	6833      	ldr	r3, [r6, #0]
 8005f50:	039b      	lsls	r3, r3, #14
 8005f52:	d4c8      	bmi.n	8005ee6 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005f54:	f7fd fc20 	bl	8003798 <HAL_GetTick>
 8005f58:	1b40      	subs	r0, r0, r5
 8005f5a:	2864      	cmp	r0, #100	; 0x64
 8005f5c:	d9f7      	bls.n	8005f4e <HAL_RCC_OscConfig+0x76>
            return HAL_TIMEOUT;
 8005f5e:	2003      	movs	r0, #3
}
 8005f60:	b002      	add	sp, #8
 8005f62:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005f66:	4d90      	ldr	r5, [pc, #576]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
 8005f68:	f5b2 2fa0 	cmp.w	r2, #327680	; 0x50000
 8005f6c:	682b      	ldr	r3, [r5, #0]
 8005f6e:	d107      	bne.n	8005f80 <HAL_RCC_OscConfig+0xa8>
 8005f70:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8005f74:	602b      	str	r3, [r5, #0]
 8005f76:	682b      	ldr	r3, [r5, #0]
 8005f78:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8005f7c:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005f7e:	e7e2      	b.n	8005f46 <HAL_RCC_OscConfig+0x6e>
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005f80:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8005f84:	602b      	str	r3, [r5, #0]
 8005f86:	682b      	ldr	r3, [r5, #0]
 8005f88:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8005f8c:	602b      	str	r3, [r5, #0]
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005f8e:	2a00      	cmp	r2, #0
 8005f90:	d1d9      	bne.n	8005f46 <HAL_RCC_OscConfig+0x6e>
        tickstart = HAL_GetTick();
 8005f92:	f7fd fc01 	bl	8003798 <HAL_GetTick>
 8005f96:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005f98:	682b      	ldr	r3, [r5, #0]
 8005f9a:	039f      	lsls	r7, r3, #14
 8005f9c:	d5a3      	bpl.n	8005ee6 <HAL_RCC_OscConfig+0xe>
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8005f9e:	f7fd fbfb 	bl	8003798 <HAL_GetTick>
 8005fa2:	1b80      	subs	r0, r0, r6
 8005fa4:	2864      	cmp	r0, #100	; 0x64
 8005fa6:	d9f7      	bls.n	8005f98 <HAL_RCC_OscConfig+0xc0>
 8005fa8:	e7d9      	b.n	8005f5e <HAL_RCC_OscConfig+0x86>
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8005faa:	4b7f      	ldr	r3, [pc, #508]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
 8005fac:	689a      	ldr	r2, [r3, #8]
 8005fae:	f012 0f0c 	tst.w	r2, #12
 8005fb2:	d007      	beq.n	8005fc4 <HAL_RCC_OscConfig+0xec>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005fb4:	689a      	ldr	r2, [r3, #8]
 8005fb6:	f002 020c 	and.w	r2, r2, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)                                                                     ||\
 8005fba:	2a08      	cmp	r2, #8
 8005fbc:	d111      	bne.n	8005fe2 <HAL_RCC_OscConfig+0x10a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005fbe:	685b      	ldr	r3, [r3, #4]
 8005fc0:	025e      	lsls	r6, r3, #9
 8005fc2:	d40e      	bmi.n	8005fe2 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005fc4:	4b78      	ldr	r3, [pc, #480]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
 8005fc6:	681a      	ldr	r2, [r3, #0]
 8005fc8:	0795      	lsls	r5, r2, #30
 8005fca:	d502      	bpl.n	8005fd2 <HAL_RCC_OscConfig+0xfa>
 8005fcc:	68e2      	ldr	r2, [r4, #12]
 8005fce:	2a01      	cmp	r2, #1
 8005fd0:	d1af      	bne.n	8005f32 <HAL_RCC_OscConfig+0x5a>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005fd2:	681a      	ldr	r2, [r3, #0]
 8005fd4:	6921      	ldr	r1, [r4, #16]
 8005fd6:	f022 02f8 	bic.w	r2, r2, #248	; 0xf8
 8005fda:	ea42 02c1 	orr.w	r2, r2, r1, lsl #3
 8005fde:	601a      	str	r2, [r3, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005fe0:	e784      	b.n	8005eec <HAL_RCC_OscConfig+0x14>
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 8005fe2:	68e2      	ldr	r2, [r4, #12]
 8005fe4:	4b71      	ldr	r3, [pc, #452]	; (80061ac <HAL_RCC_OscConfig+0x2d4>)
 8005fe6:	b1b2      	cbz	r2, 8006016 <HAL_RCC_OscConfig+0x13e>
        __HAL_RCC_HSI_ENABLE();
 8005fe8:	2201      	movs	r2, #1
 8005fea:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8005fec:	f7fd fbd4 	bl	8003798 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005ff0:	4d6d      	ldr	r5, [pc, #436]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8005ff2:	4606      	mov	r6, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005ff4:	682b      	ldr	r3, [r5, #0]
 8005ff6:	0798      	lsls	r0, r3, #30
 8005ff8:	d507      	bpl.n	800600a <HAL_RCC_OscConfig+0x132>
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005ffa:	682b      	ldr	r3, [r5, #0]
 8005ffc:	6922      	ldr	r2, [r4, #16]
 8005ffe:	f023 03f8 	bic.w	r3, r3, #248	; 0xf8
 8006002:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 8006006:	602b      	str	r3, [r5, #0]
 8006008:	e770      	b.n	8005eec <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 800600a:	f7fd fbc5 	bl	8003798 <HAL_GetTick>
 800600e:	1b80      	subs	r0, r0, r6
 8006010:	2802      	cmp	r0, #2
 8006012:	d9ef      	bls.n	8005ff4 <HAL_RCC_OscConfig+0x11c>
 8006014:	e7a3      	b.n	8005f5e <HAL_RCC_OscConfig+0x86>
        __HAL_RCC_HSI_DISABLE();
 8006016:	601a      	str	r2, [r3, #0]
        tickstart = HAL_GetTick();
 8006018:	f7fd fbbe 	bl	8003798 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 800601c:	4e62      	ldr	r6, [pc, #392]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 800601e:	4605      	mov	r5, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8006020:	6833      	ldr	r3, [r6, #0]
 8006022:	0799      	lsls	r1, r3, #30
 8006024:	f57f af62 	bpl.w	8005eec <HAL_RCC_OscConfig+0x14>
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8006028:	f7fd fbb6 	bl	8003798 <HAL_GetTick>
 800602c:	1b40      	subs	r0, r0, r5
 800602e:	2802      	cmp	r0, #2
 8006030:	d9f6      	bls.n	8006020 <HAL_RCC_OscConfig+0x148>
 8006032:	e794      	b.n	8005f5e <HAL_RCC_OscConfig+0x86>
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 8006034:	6962      	ldr	r2, [r4, #20]
 8006036:	4b5e      	ldr	r3, [pc, #376]	; (80061b0 <HAL_RCC_OscConfig+0x2d8>)
 8006038:	b17a      	cbz	r2, 800605a <HAL_RCC_OscConfig+0x182>
      __HAL_RCC_LSI_ENABLE();
 800603a:	2201      	movs	r2, #1
 800603c:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800603e:	f7fd fbab 	bl	8003798 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006042:	4e59      	ldr	r6, [pc, #356]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 8006044:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8006046:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006048:	079f      	lsls	r7, r3, #30
 800604a:	f53f af53 	bmi.w	8005ef4 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800604e:	f7fd fba3 	bl	8003798 <HAL_GetTick>
 8006052:	1b40      	subs	r0, r0, r5
 8006054:	2802      	cmp	r0, #2
 8006056:	d9f6      	bls.n	8006046 <HAL_RCC_OscConfig+0x16e>
 8006058:	e781      	b.n	8005f5e <HAL_RCC_OscConfig+0x86>
      __HAL_RCC_LSI_DISABLE();
 800605a:	601a      	str	r2, [r3, #0]
      tickstart = HAL_GetTick();
 800605c:	f7fd fb9c 	bl	8003798 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006060:	4e51      	ldr	r6, [pc, #324]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 8006062:	4605      	mov	r5, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8006064:	6f73      	ldr	r3, [r6, #116]	; 0x74
 8006066:	0798      	lsls	r0, r3, #30
 8006068:	f57f af44 	bpl.w	8005ef4 <HAL_RCC_OscConfig+0x1c>
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 800606c:	f7fd fb94 	bl	8003798 <HAL_GetTick>
 8006070:	1b40      	subs	r0, r0, r5
 8006072:	2802      	cmp	r0, #2
 8006074:	d9f6      	bls.n	8006064 <HAL_RCC_OscConfig+0x18c>
 8006076:	e772      	b.n	8005f5e <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8006078:	4b4b      	ldr	r3, [pc, #300]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
 800607a:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800607c:	f012 5280 	ands.w	r2, r2, #268435456	; 0x10000000
 8006080:	d128      	bne.n	80060d4 <HAL_RCC_OscConfig+0x1fc>
      __HAL_RCC_PWR_CLK_ENABLE();
 8006082:	9201      	str	r2, [sp, #4]
 8006084:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 8006086:	f042 5280 	orr.w	r2, r2, #268435456	; 0x10000000
 800608a:	641a      	str	r2, [r3, #64]	; 0x40
 800608c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800608e:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8006092:	9301      	str	r3, [sp, #4]
 8006094:	9b01      	ldr	r3, [sp, #4]
      pwrclkchanged = SET;
 8006096:	2701      	movs	r7, #1
    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8006098:	4d46      	ldr	r5, [pc, #280]	; (80061b4 <HAL_RCC_OscConfig+0x2dc>)
 800609a:	682b      	ldr	r3, [r5, #0]
 800609c:	05d9      	lsls	r1, r3, #23
 800609e:	d51b      	bpl.n	80060d8 <HAL_RCC_OscConfig+0x200>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80060a0:	68a3      	ldr	r3, [r4, #8]
 80060a2:	4d41      	ldr	r5, [pc, #260]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
 80060a4:	2b01      	cmp	r3, #1
 80060a6:	d127      	bne.n	80060f8 <HAL_RCC_OscConfig+0x220>
 80060a8:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80060aa:	f043 0301 	orr.w	r3, r3, #1
 80060ae:	672b      	str	r3, [r5, #112]	; 0x70
      tickstart = HAL_GetTick();
 80060b0:	f7fd fb72 	bl	8003798 <HAL_GetTick>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80060b4:	4e3c      	ldr	r6, [pc, #240]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
      tickstart = HAL_GetTick();
 80060b6:	4605      	mov	r5, r0
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80060b8:	f241 3888 	movw	r8, #5000	; 0x1388
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 80060bc:	6f33      	ldr	r3, [r6, #112]	; 0x70
 80060be:	079b      	lsls	r3, r3, #30
 80060c0:	d539      	bpl.n	8006136 <HAL_RCC_OscConfig+0x25e>
    if(pwrclkchanged == SET)
 80060c2:	2f00      	cmp	r7, #0
 80060c4:	f43f af1a 	beq.w	8005efc <HAL_RCC_OscConfig+0x24>
      __HAL_RCC_PWR_CLK_DISABLE();
 80060c8:	4a37      	ldr	r2, [pc, #220]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
 80060ca:	6c13      	ldr	r3, [r2, #64]	; 0x40
 80060cc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 80060d0:	6413      	str	r3, [r2, #64]	; 0x40
 80060d2:	e713      	b.n	8005efc <HAL_RCC_OscConfig+0x24>
    FlagStatus       pwrclkchanged = RESET;
 80060d4:	2700      	movs	r7, #0
 80060d6:	e7df      	b.n	8006098 <HAL_RCC_OscConfig+0x1c0>
      SET_BIT(PWR->CR, PWR_CR_DBP);
 80060d8:	682b      	ldr	r3, [r5, #0]
 80060da:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80060de:	602b      	str	r3, [r5, #0]
      tickstart = HAL_GetTick();
 80060e0:	f7fd fb5a 	bl	8003798 <HAL_GetTick>
 80060e4:	4606      	mov	r6, r0
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80060e6:	682b      	ldr	r3, [r5, #0]
 80060e8:	05da      	lsls	r2, r3, #23
 80060ea:	d4d9      	bmi.n	80060a0 <HAL_RCC_OscConfig+0x1c8>
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80060ec:	f7fd fb54 	bl	8003798 <HAL_GetTick>
 80060f0:	1b80      	subs	r0, r0, r6
 80060f2:	2802      	cmp	r0, #2
 80060f4:	d9f7      	bls.n	80060e6 <HAL_RCC_OscConfig+0x20e>
 80060f6:	e732      	b.n	8005f5e <HAL_RCC_OscConfig+0x86>
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 80060f8:	2b05      	cmp	r3, #5
 80060fa:	d104      	bne.n	8006106 <HAL_RCC_OscConfig+0x22e>
 80060fc:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 80060fe:	f043 0304 	orr.w	r3, r3, #4
 8006102:	672b      	str	r3, [r5, #112]	; 0x70
 8006104:	e7d0      	b.n	80060a8 <HAL_RCC_OscConfig+0x1d0>
 8006106:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006108:	f022 0201 	bic.w	r2, r2, #1
 800610c:	672a      	str	r2, [r5, #112]	; 0x70
 800610e:	6f2a      	ldr	r2, [r5, #112]	; 0x70
 8006110:	f022 0204 	bic.w	r2, r2, #4
 8006114:	672a      	str	r2, [r5, #112]	; 0x70
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8006116:	2b00      	cmp	r3, #0
 8006118:	d1ca      	bne.n	80060b0 <HAL_RCC_OscConfig+0x1d8>
      tickstart = HAL_GetTick();
 800611a:	f7fd fb3d 	bl	8003798 <HAL_GetTick>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800611e:	f241 3888 	movw	r8, #5000	; 0x1388
      tickstart = HAL_GetTick();
 8006122:	4606      	mov	r6, r0
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8006124:	6f2b      	ldr	r3, [r5, #112]	; 0x70
 8006126:	0798      	lsls	r0, r3, #30
 8006128:	d5cb      	bpl.n	80060c2 <HAL_RCC_OscConfig+0x1ea>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 800612a:	f7fd fb35 	bl	8003798 <HAL_GetTick>
 800612e:	1b80      	subs	r0, r0, r6
 8006130:	4540      	cmp	r0, r8
 8006132:	d9f7      	bls.n	8006124 <HAL_RCC_OscConfig+0x24c>
 8006134:	e713      	b.n	8005f5e <HAL_RCC_OscConfig+0x86>
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8006136:	f7fd fb2f 	bl	8003798 <HAL_GetTick>
 800613a:	1b40      	subs	r0, r0, r5
 800613c:	4540      	cmp	r0, r8
 800613e:	d9bd      	bls.n	80060bc <HAL_RCC_OscConfig+0x1e4>
 8006140:	e70d      	b.n	8005f5e <HAL_RCC_OscConfig+0x86>
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8006142:	4d19      	ldr	r5, [pc, #100]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
 8006144:	68ab      	ldr	r3, [r5, #8]
 8006146:	f003 030c 	and.w	r3, r3, #12
 800614a:	2b08      	cmp	r3, #8
 800614c:	d049      	beq.n	80061e2 <HAL_RCC_OscConfig+0x30a>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 800614e:	4e1a      	ldr	r6, [pc, #104]	; (80061b8 <HAL_RCC_OscConfig+0x2e0>)
 8006150:	2300      	movs	r3, #0
 8006152:	2802      	cmp	r0, #2
        __HAL_RCC_PLL_DISABLE();
 8006154:	6033      	str	r3, [r6, #0]
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8006156:	d137      	bne.n	80061c8 <HAL_RCC_OscConfig+0x2f0>
        tickstart = HAL_GetTick();
 8006158:	f7fd fb1e 	bl	8003798 <HAL_GetTick>
 800615c:	4607      	mov	r7, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 800615e:	682b      	ldr	r3, [r5, #0]
 8006160:	0199      	lsls	r1, r3, #6
 8006162:	d42b      	bmi.n	80061bc <HAL_RCC_OscConfig+0x2e4>
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8006164:	e9d4 3207 	ldrd	r3, r2, [r4, #28]
 8006168:	4313      	orrs	r3, r2
 800616a:	6a62      	ldr	r2, [r4, #36]	; 0x24
 800616c:	ea43 1382 	orr.w	r3, r3, r2, lsl #6
 8006170:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8006172:	ea43 6302 	orr.w	r3, r3, r2, lsl #24
 8006176:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006178:	ea43 7302 	orr.w	r3, r3, r2, lsl #28
 800617c:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 800617e:	0852      	lsrs	r2, r2, #1
 8006180:	3a01      	subs	r2, #1
 8006182:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8006186:	606b      	str	r3, [r5, #4]
        __HAL_RCC_PLL_ENABLE();
 8006188:	2301      	movs	r3, #1
 800618a:	6033      	str	r3, [r6, #0]
        tickstart = HAL_GetTick();
 800618c:	f7fd fb04 	bl	8003798 <HAL_GetTick>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006190:	4d05      	ldr	r5, [pc, #20]	; (80061a8 <HAL_RCC_OscConfig+0x2d0>)
        tickstart = HAL_GetTick();
 8006192:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8006194:	682b      	ldr	r3, [r5, #0]
 8006196:	019a      	lsls	r2, r3, #6
 8006198:	f53f aeb4 	bmi.w	8005f04 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 800619c:	f7fd fafc 	bl	8003798 <HAL_GetTick>
 80061a0:	1b00      	subs	r0, r0, r4
 80061a2:	2802      	cmp	r0, #2
 80061a4:	d9f6      	bls.n	8006194 <HAL_RCC_OscConfig+0x2bc>
 80061a6:	e6da      	b.n	8005f5e <HAL_RCC_OscConfig+0x86>
 80061a8:	40023800 	.word	0x40023800
 80061ac:	42470000 	.word	0x42470000
 80061b0:	42470e80 	.word	0x42470e80
 80061b4:	40007000 	.word	0x40007000
 80061b8:	42470060 	.word	0x42470060
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80061bc:	f7fd faec 	bl	8003798 <HAL_GetTick>
 80061c0:	1bc0      	subs	r0, r0, r7
 80061c2:	2802      	cmp	r0, #2
 80061c4:	d9cb      	bls.n	800615e <HAL_RCC_OscConfig+0x286>
 80061c6:	e6ca      	b.n	8005f5e <HAL_RCC_OscConfig+0x86>
        tickstart = HAL_GetTick();
 80061c8:	f7fd fae6 	bl	8003798 <HAL_GetTick>
 80061cc:	4604      	mov	r4, r0
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 80061ce:	682b      	ldr	r3, [r5, #0]
 80061d0:	019b      	lsls	r3, r3, #6
 80061d2:	f57f ae97 	bpl.w	8005f04 <HAL_RCC_OscConfig+0x2c>
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 80061d6:	f7fd fadf 	bl	8003798 <HAL_GetTick>
 80061da:	1b00      	subs	r0, r0, r4
 80061dc:	2802      	cmp	r0, #2
 80061de:	d9f6      	bls.n	80061ce <HAL_RCC_OscConfig+0x2f6>
 80061e0:	e6bd      	b.n	8005f5e <HAL_RCC_OscConfig+0x86>
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 80061e2:	2801      	cmp	r0, #1
 80061e4:	f43f aebc 	beq.w	8005f60 <HAL_RCC_OscConfig+0x88>
        pll_config = RCC->PLLCFGR;
 80061e8:	686b      	ldr	r3, [r5, #4]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80061ea:	69e2      	ldr	r2, [r4, #28]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80061ec:	f403 0180 	and.w	r1, r3, #4194304	; 0x400000
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 80061f0:	4291      	cmp	r1, r2
 80061f2:	f47f ae9e 	bne.w	8005f32 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80061f6:	6a21      	ldr	r1, [r4, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 80061f8:	f003 023f 	and.w	r2, r3, #63	; 0x3f
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 80061fc:	428a      	cmp	r2, r1
 80061fe:	f47f ae98 	bne.w	8005f32 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8006202:	6a61      	ldr	r1, [r4, #36]	; 0x24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8006204:	f647 72c0 	movw	r2, #32704	; 0x7fc0
 8006208:	401a      	ands	r2, r3
 800620a:	ebb2 1f81 	cmp.w	r2, r1, lsl #6
 800620e:	f47f ae90 	bne.w	8005f32 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8006212:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8006214:	0852      	lsrs	r2, r2, #1
 8006216:	f403 3140 	and.w	r1, r3, #196608	; 0x30000
 800621a:	3a01      	subs	r2, #1
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 800621c:	ebb1 4f02 	cmp.w	r1, r2, lsl #16
 8006220:	f47f ae87 	bne.w	8005f32 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8006224:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 8006226:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 800622a:	ebb2 6f01 	cmp.w	r2, r1, lsl #24
 800622e:	f47f ae80 	bne.w	8005f32 <HAL_RCC_OscConfig+0x5a>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8006232:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8006234:	f003 43e0 	and.w	r3, r3, #1879048192	; 0x70000000
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8006238:	ebb3 7f02 	cmp.w	r3, r2, lsl #28
 800623c:	f43f ae62 	beq.w	8005f04 <HAL_RCC_OscConfig+0x2c>
 8006240:	e677      	b.n	8005f32 <HAL_RCC_OscConfig+0x5a>
 8006242:	bf00      	nop

08006244 <HAL_SDRAM_Init>:
  *                the configuration information for SDRAM module.
  * @param  Timing Pointer to SDRAM control timing structure 
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_Init(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_TimingTypeDef *Timing)
{   
 8006244:	b538      	push	{r3, r4, r5, lr}
 8006246:	460d      	mov	r5, r1
  /* Check the SDRAM handle parameter */
  if(hsdram == NULL)
 8006248:	4604      	mov	r4, r0
 800624a:	b1c8      	cbz	r0, 8006280 <HAL_SDRAM_Init+0x3c>
  {
    return HAL_ERROR;
  }
  
  if(hsdram->State == HAL_SDRAM_STATE_RESET)
 800624c:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 8006250:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006254:	b91b      	cbnz	r3, 800625e <HAL_SDRAM_Init+0x1a>
  {  
    /* Allocate lock resource and initialize it */
    hsdram->Lock = HAL_UNLOCKED;
 8006256:	f880 202d 	strb.w	r2, [r0, #45]	; 0x2d

    /* Init the low level hardware */
    hsdram->MspInitCallback(hsdram);
#else
    /* Initialize the low level hardware (MSP) */
    HAL_SDRAM_MspInit(hsdram);
 800625a:	f7fb fd2f 	bl	8001cbc <HAL_SDRAM_MspInit>
#endif
  }
  
  /* Initialize the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 800625e:	2302      	movs	r3, #2
 8006260:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Initialize SDRAM control Interface */
  FMC_SDRAM_Init(hsdram->Instance, &(hsdram->Init));
 8006264:	1d21      	adds	r1, r4, #4
 8006266:	6820      	ldr	r0, [r4, #0]
 8006268:	f000 f910 	bl	800648c <FMC_SDRAM_Init>
  
  /* Initialize SDRAM timing Interface */
  FMC_SDRAM_Timing_Init(hsdram->Instance, Timing, hsdram->Init.SDBank); 
 800626c:	6862      	ldr	r2, [r4, #4]
 800626e:	6820      	ldr	r0, [r4, #0]
 8006270:	4629      	mov	r1, r5
 8006272:	f000 f941 	bl	80064f8 <FMC_SDRAM_Timing_Init>
  
  /* Update the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 8006276:	2301      	movs	r3, #1
 8006278:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;
 800627c:	2000      	movs	r0, #0
}
 800627e:	bd38      	pop	{r3, r4, r5, pc}
    return HAL_ERROR;
 8006280:	2001      	movs	r0, #1
 8006282:	e7fc      	b.n	800627e <HAL_SDRAM_Init+0x3a>

08006284 <HAL_SDRAM_DeInit>:
  * @param  hsdram pointer to a SDRAM_HandleTypeDef structure that contains
  *                the configuration information for SDRAM module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_DeInit(SDRAM_HandleTypeDef *hsdram)
{
 8006284:	b510      	push	{r4, lr}
 8006286:	4604      	mov	r4, r0

  /* DeInit the low level hardware */
  hsdram->MspDeInitCallback(hsdram);
#else
  /* Initialize the low level hardware (MSP) */
  HAL_SDRAM_MspDeInit(hsdram);
 8006288:	f7fb fd8e 	bl	8001da8 <HAL_SDRAM_MspDeInit>
#endif

  /* Configure the SDRAM registers with their reset values */
  FMC_SDRAM_DeInit(hsdram->Instance, hsdram->Init.SDBank);
 800628c:	e9d4 0100 	ldrd	r0, r1, [r4]
 8006290:	f000 f96e 	bl	8006570 <FMC_SDRAM_DeInit>

  /* Reset the SDRAM controller state */
  hsdram->State = HAL_SDRAM_STATE_RESET;
 8006294:	2000      	movs	r0, #0
 8006296:	f884 002c 	strb.w	r0, [r4, #44]	; 0x2c

  /* Release Lock */
  __HAL_UNLOCK(hsdram);
 800629a:	f884 002d 	strb.w	r0, [r4, #45]	; 0x2d

  return HAL_OK;
}
 800629e:	bd10      	pop	{r4, pc}

080062a0 <HAL_SDRAM_SendCommand>:
  * @param  Command SDRAM command structure
  * @param  Timeout Timeout duration
  * @retval HAL status
  */  
HAL_StatusTypeDef HAL_SDRAM_SendCommand(SDRAM_HandleTypeDef *hsdram, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 80062a0:	b538      	push	{r3, r4, r5, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80062a2:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80062a6:	2b02      	cmp	r3, #2
{
 80062a8:	4604      	mov	r4, r0
 80062aa:	460d      	mov	r5, r1
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80062ac:	b2d8      	uxtb	r0, r3
 80062ae:	d00d      	beq.n	80062cc <HAL_SDRAM_SendCommand+0x2c>
  {
    return HAL_BUSY;
  }
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80062b0:	2302      	movs	r3, #2
 80062b2:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Send SDRAM command */
  FMC_SDRAM_SendCommand(hsdram->Instance, Command, Timeout);
 80062b6:	6820      	ldr	r0, [r4, #0]
 80062b8:	f000 f969 	bl	800658e <FMC_SDRAM_SendCommand>
  
  /* Update the SDRAM controller state */
  if(Command->CommandMode == FMC_SDRAM_CMD_PALL)
 80062bc:	682b      	ldr	r3, [r5, #0]
 80062be:	2b02      	cmp	r3, #2
  {
    hsdram->State = HAL_SDRAM_STATE_PRECHARGED;
 80062c0:	bf0c      	ite	eq
 80062c2:	2305      	moveq	r3, #5
  }
  else
  {
    hsdram->State = HAL_SDRAM_STATE_READY;
 80062c4:	2301      	movne	r3, #1
 80062c6:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  }
  
  return HAL_OK;  
 80062ca:	2000      	movs	r0, #0
}
 80062cc:	bd38      	pop	{r3, r4, r5, pc}

080062ce <HAL_SDRAM_ProgramRefreshRate>:
  *                the configuration information for SDRAM module.  
  * @param  RefreshRate The SDRAM refresh rate value       
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SDRAM_ProgramRefreshRate(SDRAM_HandleTypeDef *hsdram, uint32_t RefreshRate)
{
 80062ce:	b510      	push	{r4, lr}
  /* Check the SDRAM controller state */
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80062d0:	f890 302c 	ldrb.w	r3, [r0, #44]	; 0x2c
 80062d4:	2b02      	cmp	r3, #2
{
 80062d6:	4604      	mov	r4, r0
  if(hsdram->State == HAL_SDRAM_STATE_BUSY)
 80062d8:	b2d8      	uxtb	r0, r3
 80062da:	d009      	beq.n	80062f0 <HAL_SDRAM_ProgramRefreshRate+0x22>
  {
    return HAL_BUSY;
  } 
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_BUSY;
 80062dc:	2302      	movs	r3, #2
 80062de:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  /* Program the refresh rate */
  FMC_SDRAM_ProgramRefreshRate(hsdram->Instance ,RefreshRate);
 80062e2:	6820      	ldr	r0, [r4, #0]
 80062e4:	f000 f97a 	bl	80065dc <FMC_SDRAM_ProgramRefreshRate>
  
  /* Update the SDRAM state */
  hsdram->State = HAL_SDRAM_STATE_READY;
 80062e8:	2301      	movs	r3, #1
 80062ea:	f884 302c 	strb.w	r3, [r4, #44]	; 0x2c
  
  return HAL_OK;   
 80062ee:	2000      	movs	r0, #0
}
 80062f0:	bd10      	pop	{r4, pc}

080062f2 <HAL_TIM_Base_MspInit>:
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_Base_MspInit could be implemented in the user file
   */
}
 80062f2:	4770      	bx	lr

080062f4 <HAL_TIM_Base_Start_IT>:

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 80062f4:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 80062f8:	2b01      	cmp	r3, #1
 80062fa:	d130      	bne.n	800635e <HAL_TIM_Base_Start_IT+0x6a>
  {
    return HAL_ERROR;
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 80062fc:	2302      	movs	r3, #2
 80062fe:	f880 303d 	strb.w	r3, [r0, #61]	; 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 8006302:	6803      	ldr	r3, [r0, #0]
 8006304:	68da      	ldr	r2, [r3, #12]
 8006306:	f042 0201 	orr.w	r2, r2, #1
 800630a:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 800630c:	4a15      	ldr	r2, [pc, #84]	; (8006364 <HAL_TIM_Base_Start_IT+0x70>)
 800630e:	4293      	cmp	r3, r2
 8006310:	d01a      	beq.n	8006348 <HAL_TIM_Base_Start_IT+0x54>
 8006312:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8006316:	d017      	beq.n	8006348 <HAL_TIM_Base_Start_IT+0x54>
 8006318:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800631c:	4293      	cmp	r3, r2
 800631e:	d013      	beq.n	8006348 <HAL_TIM_Base_Start_IT+0x54>
 8006320:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006324:	4293      	cmp	r3, r2
 8006326:	d00f      	beq.n	8006348 <HAL_TIM_Base_Start_IT+0x54>
 8006328:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800632c:	4293      	cmp	r3, r2
 800632e:	d00b      	beq.n	8006348 <HAL_TIM_Base_Start_IT+0x54>
 8006330:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006334:	4293      	cmp	r3, r2
 8006336:	d007      	beq.n	8006348 <HAL_TIM_Base_Start_IT+0x54>
 8006338:	f502 5270 	add.w	r2, r2, #15360	; 0x3c00
 800633c:	4293      	cmp	r3, r2
 800633e:	d003      	beq.n	8006348 <HAL_TIM_Base_Start_IT+0x54>
 8006340:	f5a2 3294 	sub.w	r2, r2, #75776	; 0x12800
 8006344:	4293      	cmp	r3, r2
 8006346:	d104      	bne.n	8006352 <HAL_TIM_Base_Start_IT+0x5e>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8006348:	689a      	ldr	r2, [r3, #8]
 800634a:	f002 0207 	and.w	r2, r2, #7
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800634e:	2a06      	cmp	r2, #6
 8006350:	d003      	beq.n	800635a <HAL_TIM_Base_Start_IT+0x66>
      __HAL_TIM_ENABLE(htim);
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8006352:	681a      	ldr	r2, [r3, #0]
 8006354:	f042 0201 	orr.w	r2, r2, #1
 8006358:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 800635a:	2000      	movs	r0, #0
}
 800635c:	4770      	bx	lr
    return HAL_ERROR;
 800635e:	2001      	movs	r0, #1
 8006360:	4770      	bx	lr
 8006362:	bf00      	nop
 8006364:	40010000 	.word	0x40010000

08006368 <TIM_Base_SetConfig>:
{
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 8006368:	4a30      	ldr	r2, [pc, #192]	; (800642c <TIM_Base_SetConfig+0xc4>)
  tmpcr1 = TIMx->CR1;
 800636a:	6803      	ldr	r3, [r0, #0]
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 800636c:	4290      	cmp	r0, r2
 800636e:	d012      	beq.n	8006396 <TIM_Base_SetConfig+0x2e>
 8006370:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 8006374:	d00f      	beq.n	8006396 <TIM_Base_SetConfig+0x2e>
 8006376:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 800637a:	4290      	cmp	r0, r2
 800637c:	d00b      	beq.n	8006396 <TIM_Base_SetConfig+0x2e>
 800637e:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 8006382:	4290      	cmp	r0, r2
 8006384:	d007      	beq.n	8006396 <TIM_Base_SetConfig+0x2e>
 8006386:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 800638a:	4290      	cmp	r0, r2
 800638c:	d003      	beq.n	8006396 <TIM_Base_SetConfig+0x2e>
 800638e:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 8006392:	4290      	cmp	r0, r2
 8006394:	d119      	bne.n	80063ca <TIM_Base_SetConfig+0x62>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
    tmpcr1 |= Structure->CounterMode;
 8006396:	684a      	ldr	r2, [r1, #4]
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 8006398:	f023 0370 	bic.w	r3, r3, #112	; 0x70
    tmpcr1 |= Structure->CounterMode;
 800639c:	4313      	orrs	r3, r2
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800639e:	4a23      	ldr	r2, [pc, #140]	; (800642c <TIM_Base_SetConfig+0xc4>)
 80063a0:	4290      	cmp	r0, r2
 80063a2:	d029      	beq.n	80063f8 <TIM_Base_SetConfig+0x90>
 80063a4:	f1b0 4f80 	cmp.w	r0, #1073741824	; 0x40000000
 80063a8:	d026      	beq.n	80063f8 <TIM_Base_SetConfig+0x90>
 80063aa:	f5a2 427c 	sub.w	r2, r2, #64512	; 0xfc00
 80063ae:	4290      	cmp	r0, r2
 80063b0:	d022      	beq.n	80063f8 <TIM_Base_SetConfig+0x90>
 80063b2:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80063b6:	4290      	cmp	r0, r2
 80063b8:	d01e      	beq.n	80063f8 <TIM_Base_SetConfig+0x90>
 80063ba:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80063be:	4290      	cmp	r0, r2
 80063c0:	d01a      	beq.n	80063f8 <TIM_Base_SetConfig+0x90>
 80063c2:	f502 4278 	add.w	r2, r2, #63488	; 0xf800
 80063c6:	4290      	cmp	r0, r2
 80063c8:	d016      	beq.n	80063f8 <TIM_Base_SetConfig+0x90>
 80063ca:	4a19      	ldr	r2, [pc, #100]	; (8006430 <TIM_Base_SetConfig+0xc8>)
 80063cc:	4290      	cmp	r0, r2
 80063ce:	d013      	beq.n	80063f8 <TIM_Base_SetConfig+0x90>
 80063d0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80063d4:	4290      	cmp	r0, r2
 80063d6:	d00f      	beq.n	80063f8 <TIM_Base_SetConfig+0x90>
 80063d8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80063dc:	4290      	cmp	r0, r2
 80063de:	d00b      	beq.n	80063f8 <TIM_Base_SetConfig+0x90>
 80063e0:	f5a2 3298 	sub.w	r2, r2, #77824	; 0x13000
 80063e4:	4290      	cmp	r0, r2
 80063e6:	d007      	beq.n	80063f8 <TIM_Base_SetConfig+0x90>
 80063e8:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80063ec:	4290      	cmp	r0, r2
 80063ee:	d003      	beq.n	80063f8 <TIM_Base_SetConfig+0x90>
 80063f0:	f502 6280 	add.w	r2, r2, #1024	; 0x400
 80063f4:	4290      	cmp	r0, r2
 80063f6:	d103      	bne.n	8006400 <TIM_Base_SetConfig+0x98>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80063f8:	68ca      	ldr	r2, [r1, #12]
    tmpcr1 &= ~TIM_CR1_CKD;
 80063fa:	f423 7340 	bic.w	r3, r3, #768	; 0x300
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80063fe:	4313      	orrs	r3, r2
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8006400:	694a      	ldr	r2, [r1, #20]
 8006402:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 8006406:	4313      	orrs	r3, r2

  TIMx->CR1 = tmpcr1;
 8006408:	6003      	str	r3, [r0, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 800640a:	688b      	ldr	r3, [r1, #8]
 800640c:	62c3      	str	r3, [r0, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 800640e:	680b      	ldr	r3, [r1, #0]
 8006410:	6283      	str	r3, [r0, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 8006412:	4b06      	ldr	r3, [pc, #24]	; (800642c <TIM_Base_SetConfig+0xc4>)
 8006414:	4298      	cmp	r0, r3
 8006416:	d003      	beq.n	8006420 <TIM_Base_SetConfig+0xb8>
 8006418:	f503 6380 	add.w	r3, r3, #1024	; 0x400
 800641c:	4298      	cmp	r0, r3
 800641e:	d101      	bne.n	8006424 <TIM_Base_SetConfig+0xbc>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 8006420:	690b      	ldr	r3, [r1, #16]
 8006422:	6303      	str	r3, [r0, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8006424:	2301      	movs	r3, #1
 8006426:	6143      	str	r3, [r0, #20]
}
 8006428:	4770      	bx	lr
 800642a:	bf00      	nop
 800642c:	40010000 	.word	0x40010000
 8006430:	40014000 	.word	0x40014000

08006434 <HAL_TIM_Base_Init>:
{
 8006434:	b510      	push	{r4, lr}
  if (htim == NULL)
 8006436:	4604      	mov	r4, r0
 8006438:	b330      	cbz	r0, 8006488 <HAL_TIM_Base_Init+0x54>
  if (htim->State == HAL_TIM_STATE_RESET)
 800643a:	f890 303d 	ldrb.w	r3, [r0, #61]	; 0x3d
 800643e:	f003 02ff 	and.w	r2, r3, #255	; 0xff
 8006442:	b91b      	cbnz	r3, 800644c <HAL_TIM_Base_Init+0x18>
    htim->Lock = HAL_UNLOCKED;
 8006444:	f880 203c 	strb.w	r2, [r0, #60]	; 0x3c
    HAL_TIM_Base_MspInit(htim);
 8006448:	f7ff ff53 	bl	80062f2 <HAL_TIM_Base_MspInit>
  htim->State = HAL_TIM_STATE_BUSY;
 800644c:	2302      	movs	r3, #2
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800644e:	6820      	ldr	r0, [r4, #0]
  htim->State = HAL_TIM_STATE_BUSY;
 8006450:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8006454:	1d21      	adds	r1, r4, #4
 8006456:	f7ff ff87 	bl	8006368 <TIM_Base_SetConfig>
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 800645a:	2301      	movs	r3, #1
 800645c:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
  return HAL_OK;
 8006460:	2000      	movs	r0, #0
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006462:	f884 303e 	strb.w	r3, [r4, #62]	; 0x3e
 8006466:	f884 303f 	strb.w	r3, [r4, #63]	; 0x3f
 800646a:	f884 3040 	strb.w	r3, [r4, #64]	; 0x40
 800646e:	f884 3041 	strb.w	r3, [r4, #65]	; 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8006472:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8006476:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800647a:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
 800647e:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
  htim->State = HAL_TIM_STATE_READY;
 8006482:	f884 303d 	strb.w	r3, [r4, #61]	; 0x3d
}
 8006486:	bd10      	pop	{r4, pc}
    return HAL_ERROR;
 8006488:	2001      	movs	r0, #1
 800648a:	e7fc      	b.n	8006486 <HAL_TIM_Base_Init+0x52>

0800648c <FMC_SDRAM_Init>:
  * @param  Device Pointer to SDRAM device instance
  * @param  Init Pointer to SDRAM Initialization structure   
  * @retval HAL status
  */
HAL_StatusTypeDef FMC_SDRAM_Init(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_InitTypeDef *Init)
{
 800648c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006490:	6a4a      	ldr	r2, [r1, #36]	; 0x24
 8006492:	e9d1 4307 	ldrd	r4, r3, [r1, #28]
 8006496:	e9d1 5801 	ldrd	r5, r8, [r1, #4]
 800649a:	e9d1 ec03 	ldrd	lr, ip, [r1, #12]
 800649e:	e9d1 7605 	ldrd	r7, r6, [r1, #20]
  assert_param(IS_FMC_SDCLOCK_PERIOD(Init->SDClockPeriod));
  assert_param(IS_FMC_READ_BURST(Init->ReadBurst));
  assert_param(IS_FMC_READPIPE_DELAY(Init->ReadPipeDelay));   

  /* Set SDRAM bank configuration parameters */
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80064a2:	6809      	ldr	r1, [r1, #0]
 80064a4:	2901      	cmp	r1, #1
 80064a6:	ea43 0304 	orr.w	r3, r3, r4
 80064aa:	4912      	ldr	r1, [pc, #72]	; (80064f4 <FMC_SDRAM_Init+0x68>)
  {    
    tmpr1 = Device->SDCR[FMC_SDRAM_BANK1];
 80064ac:	6804      	ldr	r4, [r0, #0]
  if (Init->SDBank != FMC_SDRAM_BANK2) 
 80064ae:	d00f      	beq.n	80064d0 <FMC_SDRAM_Init+0x44>
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
                         FMC_SDCR1_NB  | FMC_SDCR1_CAS | FMC_SDCR1_WP | \
                         FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
  
  
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80064b0:	431a      	orrs	r2, r3
 80064b2:	432a      	orrs	r2, r5
 80064b4:	ea42 0308 	orr.w	r3, r2, r8
 80064b8:	ea43 030e 	orr.w	r3, r3, lr
 80064bc:	ea43 030c 	orr.w	r3, r3, ip
 80064c0:	433b      	orrs	r3, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80064c2:	4021      	ands	r1, r4
    tmpr1 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80064c4:	4333      	orrs	r3, r6
 80064c6:	430b      	orrs	r3, r1
                                               Init->WriteProtection    |\
                                               Init->SDClockPeriod      |\
                                               Init->ReadBurst          |\
                                               Init->ReadPipeDelay
                                               );
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80064c8:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
  }  
  
  return HAL_OK;
}
 80064ca:	2000      	movs	r0, #0
 80064cc:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80064d0:	4313      	orrs	r3, r2
    tmpr2 = Device->SDCR[FMC_SDRAM_BANK2];
 80064d2:	6842      	ldr	r2, [r0, #4]
    tmpr2 &= ((uint32_t)~(FMC_SDCR1_NC  | FMC_SDCR1_NR | FMC_SDCR1_MWID | \
 80064d4:	4011      	ands	r1, r2
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80064d6:	ea45 0208 	orr.w	r2, r5, r8
 80064da:	ea42 020e 	orr.w	r2, r2, lr
 80064de:	ea42 020c 	orr.w	r2, r2, ip
 80064e2:	433a      	orrs	r2, r7
    tmpr1 &= ((uint32_t)~(FMC_SDCR1_SDCLK | FMC_SDCR1_RBURST | FMC_SDCR1_RPIPE));
 80064e4:	f424 44f8 	bic.w	r4, r4, #31744	; 0x7c00
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80064e8:	4332      	orrs	r2, r6
    tmpr1 |= (uint32_t)(Init->SDClockPeriod      |\
 80064ea:	4323      	orrs	r3, r4
    tmpr2 |= (uint32_t)(Init->ColumnBitsNumber   |\
 80064ec:	430a      	orrs	r2, r1
    Device->SDCR[FMC_SDRAM_BANK1] = tmpr1;
 80064ee:	6003      	str	r3, [r0, #0]
    Device->SDCR[FMC_SDRAM_BANK2] = tmpr2;
 80064f0:	6042      	str	r2, [r0, #4]
 80064f2:	e7ea      	b.n	80064ca <FMC_SDRAM_Init+0x3e>
 80064f4:	ffff8000 	.word	0xffff8000

080064f8 <FMC_SDRAM_Timing_Init>:
  assert_param(IS_FMC_RP_DELAY(Timing->RPDelay));
  assert_param(IS_FMC_RCD_DELAY(Timing->RCDDelay));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* Set SDRAM device timing parameters */ 
  if (Bank != FMC_SDRAM_BANK2) 
 80064f8:	68cb      	ldr	r3, [r1, #12]
{
 80064fa:	b5f0      	push	{r4, r5, r6, r7, lr}
 80064fc:	680c      	ldr	r4, [r1, #0]
 80064fe:	688e      	ldr	r6, [r1, #8]
 8006500:	690d      	ldr	r5, [r1, #16]
 8006502:	1e5f      	subs	r7, r3, #1
 8006504:	694b      	ldr	r3, [r1, #20]
 8006506:	f104 3cff 	add.w	ip, r4, #4294967295
 800650a:	684c      	ldr	r4, [r1, #4]
 800650c:	6989      	ldr	r1, [r1, #24]
 800650e:	3b01      	subs	r3, #1
 8006510:	051b      	lsls	r3, r3, #20
 8006512:	3c01      	subs	r4, #1
 8006514:	3e01      	subs	r6, #1
 8006516:	3d01      	subs	r5, #1
 8006518:	3901      	subs	r1, #1
  if (Bank != FMC_SDRAM_BANK2) 
 800651a:	2a01      	cmp	r2, #1
 800651c:	ea4f 1404 	mov.w	r4, r4, lsl #4
 8006520:	ea4f 2606 	mov.w	r6, r6, lsl #8
 8006524:	ea4f 4505 	mov.w	r5, r5, lsl #16
 8006528:	ea4f 6101 	mov.w	r1, r1, lsl #24
 800652c:	ea43 3307 	orr.w	r3, r3, r7, lsl #12
 8006530:	d00c      	beq.n	800654c <FMC_SDRAM_Timing_Init+0x54>
    /* Clear TMRD, TXSR, TRAS, TRC, TWR, TRP and TRCD bits */
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
                          FMC_SDTR1_TRC  | FMC_SDTR1_TWR | FMC_SDTR1_TRP | \
                          FMC_SDTR1_TRCD));
    
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006532:	ea43 030c 	orr.w	r3, r3, ip
 8006536:	4323      	orrs	r3, r4
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 8006538:	6882      	ldr	r2, [r0, #8]
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 800653a:	4333      	orrs	r3, r6
 800653c:	432b      	orrs	r3, r5
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 800653e:	f002 4270 	and.w	r2, r2, #4026531840	; 0xf0000000
    tmpr1 |= (uint32_t)(((Timing->LoadToActiveDelay)-1U)           |\
 8006542:	430b      	orrs	r3, r1
 8006544:	4313      	orrs	r3, r2
                       (((Timing->SelfRefreshTime)-1U) << 8U)      |\
                       (((Timing->RowCycleDelay)-1U) << 12U)       |\
                       (((Timing->WriteRecoveryTime)-1U) <<16U)    |\
                       (((Timing->RPDelay)-1U) << 20U)             |\
                       (((Timing->RCDDelay)-1U) << 24U));
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006546:	6083      	str	r3, [r0, #8]

    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
  }
  return HAL_OK;
}
 8006548:	2000      	movs	r0, #0
 800654a:	bdf0      	pop	{r4, r5, r6, r7, pc}
    tmpr1 = Device->SDTR[FMC_SDRAM_BANK1];
 800654c:	6887      	ldr	r7, [r0, #8]
    tmpr1 &= ((uint32_t)~(FMC_SDTR1_TRC | FMC_SDTR1_TRP));
 800654e:	f427 0770 	bic.w	r7, r7, #15728640	; 0xf00000
 8006552:	f427 4770 	bic.w	r7, r7, #61440	; 0xf000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006556:	4334      	orrs	r4, r6
    tmpr1 |= (uint32_t)((((Timing->RowCycleDelay)-1U) << 12U)       |\
 8006558:	433b      	orrs	r3, r7
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 800655a:	ea44 020c 	orr.w	r2, r4, ip
    tmpr2 = Device->SDTR[FMC_SDRAM_BANK2];
 800655e:	68c7      	ldr	r7, [r0, #12]
    Device->SDTR[FMC_SDRAM_BANK1] = tmpr1;
 8006560:	6083      	str	r3, [r0, #8]
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006562:	432a      	orrs	r2, r5
    tmpr2 &= ((uint32_t)~(FMC_SDTR1_TMRD  | FMC_SDTR1_TXSR | FMC_SDTR1_TRAS | \
 8006564:	f007 4770 	and.w	r7, r7, #4026531840	; 0xf0000000
    tmpr2 |= (uint32_t)((((Timing->LoadToActiveDelay)-1U)           |\
 8006568:	430a      	orrs	r2, r1
 800656a:	433a      	orrs	r2, r7
    Device->SDTR[FMC_SDRAM_BANK2] = tmpr2;
 800656c:	60c2      	str	r2, [r0, #12]
 800656e:	e7eb      	b.n	8006548 <FMC_SDRAM_Timing_Init+0x50>

08006570 <FMC_SDRAM_DeInit>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_SDRAM_BANK(Bank));
  
  /* De-initialize the SDRAM device */
  Device->SDCR[Bank] = 0x000002D0U;
 8006570:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 8006574:	f44f 7234 	mov.w	r2, #720	; 0x2d0
 8006578:	f840 2021 	str.w	r2, [r0, r1, lsl #2]
  Device->SDTR[Bank] = 0x0FFFFFFFU;    
 800657c:	f06f 4270 	mvn.w	r2, #4026531840	; 0xf0000000
 8006580:	609a      	str	r2, [r3, #8]
  Device->SDCMR      = 0x00000000U;
 8006582:	2300      	movs	r3, #0
 8006584:	6103      	str	r3, [r0, #16]
  Device->SDRTR      = 0x00000000U;
 8006586:	6143      	str	r3, [r0, #20]
  Device->SDSR       = 0x00000000U;
 8006588:	6183      	str	r3, [r0, #24]

  return HAL_OK;
}
 800658a:	4618      	mov	r0, r3
 800658c:	4770      	bx	lr

0800658e <FMC_SDRAM_SendCommand>:
  * @param  Timing Pointer to SDRAM Timing structure
  * @param  Timeout Timeout wait value
  * @retval HAL state
  */  
HAL_StatusTypeDef FMC_SDRAM_SendCommand(FMC_SDRAM_TypeDef *Device, FMC_SDRAM_CommandTypeDef *Command, uint32_t Timeout)
{
 800658e:	b573      	push	{r0, r1, r4, r5, r6, lr}
  __IO uint32_t tmpr = 0U;
 8006590:	2300      	movs	r3, #0
 8006592:	9301      	str	r3, [sp, #4]
{
 8006594:	4615      	mov	r5, r2
  assert_param(IS_FMC_COMMAND_TARGET(Command->CommandTarget));
  assert_param(IS_FMC_AUTOREFRESH_NUMBER(Command->AutoRefreshNumber));
  assert_param(IS_FMC_MODE_REGISTER(Command->ModeRegisterDefinition));  

  /* Set command register */
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 8006596:	e9d1 3200 	ldrd	r3, r2, [r1]
 800659a:	4313      	orrs	r3, r2
                    (Command->CommandTarget)                |\
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
                    ((Command->ModeRegisterDefinition) << 9U)
 800659c:	68ca      	ldr	r2, [r1, #12]
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 800659e:	ea43 2342 	orr.w	r3, r3, r2, lsl #9
                    (((Command->AutoRefreshNumber)-1U) << 5U) |\
 80065a2:	688a      	ldr	r2, [r1, #8]
 80065a4:	3a01      	subs	r2, #1
  tmpr = (uint32_t)((Command->CommandMode)                  |\
 80065a6:	ea43 1342 	orr.w	r3, r3, r2, lsl #5
 80065aa:	9301      	str	r3, [sp, #4]
                    );
    
  Device->SDCMR = tmpr;
 80065ac:	9b01      	ldr	r3, [sp, #4]
 80065ae:	6103      	str	r3, [r0, #16]
{
 80065b0:	4604      	mov	r4, r0

  /* Get tick */ 
  tickstart = HAL_GetTick();
 80065b2:	f7fd f8f1 	bl	8003798 <HAL_GetTick>
 80065b6:	4606      	mov	r6, r0

  /* Wait until command is send */
  while(HAL_IS_BIT_SET(Device->SDSR, FMC_SDSR_BUSY))
 80065b8:	69a3      	ldr	r3, [r4, #24]
 80065ba:	f013 0320 	ands.w	r3, r3, #32
 80065be:	d101      	bne.n	80065c4 <FMC_SDRAM_SendCommand+0x36>
        return HAL_TIMEOUT;
      }
    }
  }

  return HAL_OK;
 80065c0:	4618      	mov	r0, r3
 80065c2:	e003      	b.n	80065cc <FMC_SDRAM_SendCommand+0x3e>
    if(Timeout != HAL_MAX_DELAY)
 80065c4:	1c6b      	adds	r3, r5, #1
 80065c6:	d0f7      	beq.n	80065b8 <FMC_SDRAM_SendCommand+0x2a>
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80065c8:	b915      	cbnz	r5, 80065d0 <FMC_SDRAM_SendCommand+0x42>
        return HAL_TIMEOUT;
 80065ca:	2003      	movs	r0, #3
}
 80065cc:	b002      	add	sp, #8
 80065ce:	bd70      	pop	{r4, r5, r6, pc}
      if((Timeout == 0U)||((HAL_GetTick() - tickstart ) > Timeout))
 80065d0:	f7fd f8e2 	bl	8003798 <HAL_GetTick>
 80065d4:	1b80      	subs	r0, r0, r6
 80065d6:	42a8      	cmp	r0, r5
 80065d8:	d9ee      	bls.n	80065b8 <FMC_SDRAM_SendCommand+0x2a>
 80065da:	e7f6      	b.n	80065ca <FMC_SDRAM_SendCommand+0x3c>

080065dc <FMC_SDRAM_ProgramRefreshRate>:
  /* Check the parameters */
  assert_param(IS_FMC_SDRAM_DEVICE(Device));
  assert_param(IS_FMC_REFRESH_RATE(RefreshRate));
  
  /* Set the refresh rate in command register */
  Device->SDRTR |= (RefreshRate<<1U);
 80065dc:	6943      	ldr	r3, [r0, #20]
 80065de:	ea43 0141 	orr.w	r1, r3, r1, lsl #1
 80065e2:	6141      	str	r1, [r0, #20]
  
  return HAL_OK;   
}
 80065e4:	2000      	movs	r0, #0
 80065e6:	4770      	bx	lr

080065e8 <SysTick_Handler>:

/*
  SysTick handler implementation that also clears overflow flag.
*/
#if (USE_CUSTOM_SYSTICK_HANDLER_IMPLEMENTATION == 0)
void SysTick_Handler (void) {
 80065e8:	b508      	push	{r3, lr}
  /* Clear overflow flag */
  SysTick->CTRL;
 80065ea:	4b05      	ldr	r3, [pc, #20]	; (8006600 <SysTick_Handler+0x18>)
 80065ec:	681b      	ldr	r3, [r3, #0]

  if (xTaskGetSchedulerState() != taskSCHEDULER_NOT_STARTED) {
 80065ee:	f001 fe81 	bl	80082f4 <xTaskGetSchedulerState>
 80065f2:	2801      	cmp	r0, #1
 80065f4:	d003      	beq.n	80065fe <SysTick_Handler+0x16>
    /* Call tick handler */
    xPortSysTickHandler();
  }
}
 80065f6:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
    xPortSysTickHandler();
 80065fa:	f000 bbf3 	b.w	8006de4 <xPortSysTickHandler>
}
 80065fe:	bd08      	pop	{r3, pc}
 8006600:	e000e010 	.word	0xe000e010

08006604 <osKernelInitialize>:
  __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 8006604:	f3ef 8305 	mrs	r3, IPSR
/*---------------------------------------------------------------------------*/

osStatus_t osKernelInitialize (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 8006608:	b92b      	cbnz	r3, 8006616 <osKernelInitialize+0x12>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelInactive) {
 800660a:	4b06      	ldr	r3, [pc, #24]	; (8006624 <osKernelInitialize+0x20>)
 800660c:	6818      	ldr	r0, [r3, #0]
 800660e:	b928      	cbnz	r0, 800661c <osKernelInitialize+0x18>
        EvrFreeRTOSSetup(0U);
      #endif
      #if defined(USE_FreeRTOS_HEAP_5) && (HEAP_5_REGION_SETUP == 1)
        vPortDefineHeapRegions (configHEAP_5_REGIONS);
      #endif
      KernelState = osKernelReady;
 8006610:	2201      	movs	r2, #1
 8006612:	601a      	str	r2, [r3, #0]
      stat = osOK;
 8006614:	4770      	bx	lr
    stat = osErrorISR;
 8006616:	f06f 0005 	mvn.w	r0, #5
 800661a:	4770      	bx	lr
    } else {
      stat = osError;
 800661c:	f04f 30ff 	mov.w	r0, #4294967295
    }
  }

  return (stat);
}
 8006620:	4770      	bx	lr
 8006622:	bf00      	nop
 8006624:	200015cc 	.word	0x200015cc

08006628 <osKernelStart>:
  }

  return (state);
}

osStatus_t osKernelStart (void) {
 8006628:	b510      	push	{r4, lr}
 800662a:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800662e:	b95c      	cbnz	r4, 8006648 <osKernelStart+0x20>
    stat = osErrorISR;
  }
  else {
    if (KernelState == osKernelReady) {
 8006630:	4b08      	ldr	r3, [pc, #32]	; (8006654 <osKernelStart+0x2c>)
 8006632:	681a      	ldr	r2, [r3, #0]
 8006634:	2a01      	cmp	r2, #1
 8006636:	d10a      	bne.n	800664e <osKernelStart+0x26>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8006638:	4a07      	ldr	r2, [pc, #28]	; (8006658 <osKernelStart+0x30>)
 800663a:	77d4      	strb	r4, [r2, #31]
      /* Ensure SVC priority is at the reset value */
      SVC_Setup();
      /* Change state to enable IRQ masking check */
      KernelState = osKernelRunning;
 800663c:	2202      	movs	r2, #2
 800663e:	601a      	str	r2, [r3, #0]
      /* Start the kernel scheduler */
      vTaskStartScheduler();
 8006640:	f001 fcf4 	bl	800802c <vTaskStartScheduler>
      stat = osOK;
 8006644:	4620      	mov	r0, r4
      stat = osError;
    }
  }

  return (stat);
}
 8006646:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006648:	f06f 0005 	mvn.w	r0, #5
 800664c:	e7fb      	b.n	8006646 <osKernelStart+0x1e>
      stat = osError;
 800664e:	f04f 30ff 	mov.w	r0, #4294967295
  return (stat);
 8006652:	e7f8      	b.n	8006646 <osKernelStart+0x1e>
 8006654:	200015cc 	.word	0x200015cc
 8006658:	e000ed00 	.word	0xe000ed00

0800665c <osThreadNew>:
  return (configCPU_CLOCK_HZ);
}

/*---------------------------------------------------------------------------*/

osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 800665c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800665e:	b087      	sub	sp, #28
 8006660:	4614      	mov	r4, r2
  uint32_t stack;
  TaskHandle_t hTask;
  UBaseType_t prio;
  int32_t mem;

  hTask = NULL;
 8006662:	2200      	movs	r2, #0
osThreadId_t osThreadNew (osThreadFunc_t func, void *argument, const osThreadAttr_t *attr) {
 8006664:	460b      	mov	r3, r1
  hTask = NULL;
 8006666:	9205      	str	r2, [sp, #20]
 8006668:	f3ef 8205 	mrs	r2, IPSR

  if (!IS_IRQ() && (func != NULL)) {
 800666c:	b9d2      	cbnz	r2, 80066a4 <osThreadNew+0x48>
 800666e:	b1c8      	cbz	r0, 80066a4 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;

    name = NULL;
    mem  = -1;

    if (attr != NULL) {
 8006670:	2c00      	cmp	r4, #0
 8006672:	d02f      	beq.n	80066d4 <osThreadNew+0x78>
      if (attr->name != NULL) {
        name = attr->name;
      }
      if (attr->priority != osPriorityNone) {
 8006674:	69a5      	ldr	r5, [r4, #24]
 8006676:	2d00      	cmp	r5, #0
 8006678:	bf08      	it	eq
 800667a:	2518      	moveq	r5, #24
        prio = (UBaseType_t)attr->priority;
      }

      if ((prio < osPriorityIdle) || (prio > osPriorityISR) || ((attr->attr_bits & osThreadJoinable) == osThreadJoinable)) {
 800667c:	1e69      	subs	r1, r5, #1
 800667e:	2937      	cmp	r1, #55	; 0x37
 8006680:	46ac      	mov	ip, r5
 8006682:	d82b      	bhi.n	80066dc <osThreadNew+0x80>
 8006684:	6861      	ldr	r1, [r4, #4]
 8006686:	07c9      	lsls	r1, r1, #31
 8006688:	d428      	bmi.n	80066dc <osThreadNew+0x80>
        return (NULL);
      }

      if (attr->stack_size > 0U) {
 800668a:	6966      	ldr	r6, [r4, #20]
 800668c:	b16e      	cbz	r6, 80066aa <osThreadNew+0x4e>
        /* In FreeRTOS stack is not in bytes, but in sizeof(StackType_t) which is 4 on ARM ports.       */
        /* Stack size should be therefore 4 byte aligned in order to avoid division caused side effects */
        stack = attr->stack_size / sizeof(StackType_t);
 800668e:	08b2      	lsrs	r2, r6, #2
 8006690:	e9d4 7e02 	ldrd	r7, lr, [r4, #8]
      if (attr->name != NULL) {
 8006694:	6821      	ldr	r1, [r4, #0]
      }

      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 8006696:	b157      	cbz	r7, 80066ae <osThreadNew+0x52>
 8006698:	f1be 0fbf 	cmp.w	lr, #191	; 0xbf
 800669c:	d902      	bls.n	80066a4 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 800669e:	6924      	ldr	r4, [r4, #16]
      if ((attr->cb_mem    != NULL) && (attr->cb_size    >= sizeof(StaticTask_t)) &&
 80066a0:	b104      	cbz	r4, 80066a4 <osThreadNew+0x48>
          (attr->stack_mem != NULL) && (attr->stack_size >  0U)) {
 80066a2:	b9ee      	cbnz	r6, 80066e0 <osThreadNew+0x84>
        #endif
      }
    }
  }

  return ((osThreadId_t)hTask);
 80066a4:	9805      	ldr	r0, [sp, #20]
}
 80066a6:	b007      	add	sp, #28
 80066a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
    stack = configMINIMAL_STACK_SIZE;
 80066aa:	2280      	movs	r2, #128	; 0x80
 80066ac:	e7f0      	b.n	8006690 <osThreadNew+0x34>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) && (attr->stack_mem == NULL)) {
 80066ae:	f1be 0f00 	cmp.w	lr, #0
 80066b2:	d1f7      	bne.n	80066a4 <osThreadNew+0x48>
      if (mem == 0) {
 80066b4:	6924      	ldr	r4, [r4, #16]
 80066b6:	2c00      	cmp	r4, #0
 80066b8:	d1f4      	bne.n	80066a4 <osThreadNew+0x48>
 80066ba:	460c      	mov	r4, r1
          if (xTaskCreate ((TaskFunction_t)func, name, (uint16_t)stack, argument, prio, &hTask) != pdPASS) {
 80066bc:	a905      	add	r1, sp, #20
 80066be:	e9cd c100 	strd	ip, r1, [sp]
 80066c2:	b292      	uxth	r2, r2
 80066c4:	4621      	mov	r1, r4
 80066c6:	f001 fb2b 	bl	8007d20 <xTaskCreate>
 80066ca:	2801      	cmp	r0, #1
            hTask = NULL;
 80066cc:	bf1c      	itt	ne
 80066ce:	2300      	movne	r3, #0
 80066d0:	9305      	strne	r3, [sp, #20]
 80066d2:	e7e7      	b.n	80066a4 <osThreadNew+0x48>
    prio  = (UBaseType_t)osPriorityNormal;
 80066d4:	f04f 0c18 	mov.w	ip, #24
    stack = configMINIMAL_STACK_SIZE;
 80066d8:	2280      	movs	r2, #128	; 0x80
 80066da:	e7ef      	b.n	80066bc <osThreadNew+0x60>
        return (NULL);
 80066dc:	4610      	mov	r0, r2
 80066de:	e7e2      	b.n	80066a6 <osThreadNew+0x4a>
        hTask = xTaskCreateStatic ((TaskFunction_t)func, name, stack, argument, prio, (StackType_t  *)attr->stack_mem,
 80066e0:	e9cd 4701 	strd	r4, r7, [sp, #4]
 80066e4:	9500      	str	r5, [sp, #0]
 80066e6:	f001 fae3 	bl	8007cb0 <xTaskCreateStatic>
 80066ea:	9005      	str	r0, [sp, #20]
 80066ec:	e7da      	b.n	80066a4 <osThreadNew+0x48>
	...

080066f0 <osThreadYield>:
 80066f0:	f3ef 8005 	mrs	r0, IPSR
}

osStatus_t osThreadYield (void) {
  osStatus_t stat;

  if (IS_IRQ()) {
 80066f4:	b940      	cbnz	r0, 8006708 <osThreadYield+0x18>
    stat = osErrorISR;
  } else {
    stat = osOK;
    taskYIELD();
 80066f6:	4b06      	ldr	r3, [pc, #24]	; (8006710 <osThreadYield+0x20>)
 80066f8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80066fc:	601a      	str	r2, [r3, #0]
 80066fe:	f3bf 8f4f 	dsb	sy
 8006702:	f3bf 8f6f 	isb	sy
 8006706:	4770      	bx	lr
    stat = osErrorISR;
 8006708:	f06f 0005 	mvn.w	r0, #5
  }

  return (stat);
}
 800670c:	4770      	bx	lr
 800670e:	bf00      	nop
 8006710:	e000ed04 	.word	0xe000ed04

08006714 <osDelay>:
  /* Return flags before clearing */
  return (rflags);
}
#endif /* (configUSE_OS2_THREAD_FLAGS == 1) */

osStatus_t osDelay (uint32_t ticks) {
 8006714:	b510      	push	{r4, lr}
 8006716:	f3ef 8405 	mrs	r4, IPSR
  osStatus_t stat;

  if (IS_IRQ()) {
 800671a:	b924      	cbnz	r4, 8006726 <osDelay+0x12>
    stat = osErrorISR;
  }
  else {
    stat = osOK;

    if (ticks != 0U) {
 800671c:	b110      	cbz	r0, 8006724 <osDelay+0x10>
      vTaskDelay(ticks);
 800671e:	f001 fc45 	bl	8007fac <vTaskDelay>
    stat = osOK;
 8006722:	4620      	mov	r0, r4
    }
  }

  return (stat);
}
 8006724:	bd10      	pop	{r4, pc}
    stat = osErrorISR;
 8006726:	f06f 0005 	mvn.w	r0, #5
 800672a:	e7fb      	b.n	8006724 <osDelay+0x10>

0800672c <osSemaphoreNew>:
}
#endif /* (configUSE_OS2_MUTEX == 1) */

/*---------------------------------------------------------------------------*/

osSemaphoreId_t osSemaphoreNew (uint32_t max_count, uint32_t initial_count, const osSemaphoreAttr_t *attr) {
 800672c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800672e:	4604      	mov	r4, r0
 8006730:	460e      	mov	r6, r1
 8006732:	4615      	mov	r5, r2
 8006734:	f3ef 8205 	mrs	r2, IPSR
  const char *name;
  #endif

  hSemaphore = NULL;

  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006738:	b11a      	cbz	r2, 8006742 <osSemaphoreNew+0x16>
        }

        if ((hSemaphore != NULL) && (initial_count != 0U)) {
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
            vSemaphoreDelete (hSemaphore);
            hSemaphore = NULL;
 800673a:	2400      	movs	r4, #0
      #endif
    }
  }

  return ((osSemaphoreId_t)hSemaphore);
}
 800673c:	4620      	mov	r0, r4
 800673e:	b003      	add	sp, #12
 8006740:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (max_count > 0U) && (initial_count <= max_count)) {
 8006742:	2800      	cmp	r0, #0
 8006744:	d0f9      	beq.n	800673a <osSemaphoreNew+0xe>
 8006746:	4288      	cmp	r0, r1
 8006748:	d3f7      	bcc.n	800673a <osSemaphoreNew+0xe>
    if (attr != NULL) {
 800674a:	b1e5      	cbz	r5, 8006786 <osSemaphoreNew+0x5a>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticSemaphore_t))) {
 800674c:	e9d5 3702 	ldrd	r3, r7, [r5, #8]
 8006750:	b1bb      	cbz	r3, 8006782 <osSemaphoreNew+0x56>
 8006752:	2f4f      	cmp	r7, #79	; 0x4f
 8006754:	d9f1      	bls.n	800673a <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006756:	2801      	cmp	r0, #1
 8006758:	d12a      	bne.n	80067b0 <osSemaphoreNew+0x84>
            hSemaphore = xSemaphoreCreateBinaryStatic ((StaticSemaphore_t *)attr->cb_mem);
 800675a:	2103      	movs	r1, #3
 800675c:	9100      	str	r1, [sp, #0]
 800675e:	4611      	mov	r1, r2
 8006760:	f000 fcf0 	bl	8007144 <xQueueGenericCreateStatic>
            hSemaphore = xSemaphoreCreateBinary();
 8006764:	4604      	mov	r4, r0
        if ((hSemaphore != NULL) && (initial_count != 0U)) {
 8006766:	2800      	cmp	r0, #0
 8006768:	d0e7      	beq.n	800673a <osSemaphoreNew+0xe>
 800676a:	b1de      	cbz	r6, 80067a4 <osSemaphoreNew+0x78>
          if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800676c:	2300      	movs	r3, #0
 800676e:	461a      	mov	r2, r3
 8006770:	4619      	mov	r1, r3
 8006772:	f000 fd9d 	bl	80072b0 <xQueueGenericSend>
 8006776:	2801      	cmp	r0, #1
 8006778:	d014      	beq.n	80067a4 <osSemaphoreNew+0x78>
            vSemaphoreDelete (hSemaphore);
 800677a:	4620      	mov	r0, r4
 800677c:	f001 f8de 	bl	800793c <vQueueDelete>
 8006780:	e7db      	b.n	800673a <osSemaphoreNew+0xe>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U)) {
 8006782:	2f00      	cmp	r7, #0
 8006784:	d1d9      	bne.n	800673a <osSemaphoreNew+0xe>
      if (max_count == 1U) {
 8006786:	2c01      	cmp	r4, #1
 8006788:	d105      	bne.n	8006796 <osSemaphoreNew+0x6a>
            hSemaphore = xSemaphoreCreateBinary();
 800678a:	2203      	movs	r2, #3
 800678c:	2100      	movs	r1, #0
 800678e:	4620      	mov	r0, r4
 8006790:	f000 fd26 	bl	80071e0 <xQueueGenericCreate>
 8006794:	e7e6      	b.n	8006764 <osSemaphoreNew+0x38>
            hSemaphore = xSemaphoreCreateCounting (max_count, initial_count);
 8006796:	4620      	mov	r0, r4
 8006798:	4631      	mov	r1, r6
 800679a:	f000 fd6a 	bl	8007272 <xQueueCreateCountingSemaphore>
      if (hSemaphore != NULL) {
 800679e:	4604      	mov	r4, r0
 80067a0:	2800      	cmp	r0, #0
 80067a2:	d0ca      	beq.n	800673a <osSemaphoreNew+0xe>
        if (attr != NULL) {
 80067a4:	b955      	cbnz	r5, 80067bc <osSemaphoreNew+0x90>
        vQueueAddToRegistry (hSemaphore, name);
 80067a6:	4629      	mov	r1, r5
 80067a8:	4620      	mov	r0, r4
 80067aa:	f001 f89d 	bl	80078e8 <vQueueAddToRegistry>
  return ((osSemaphoreId_t)hSemaphore);
 80067ae:	e7c5      	b.n	800673c <osSemaphoreNew+0x10>
            hSemaphore = xSemaphoreCreateCountingStatic (max_count, initial_count, (StaticSemaphore_t *)attr->cb_mem);
 80067b0:	461a      	mov	r2, r3
 80067b2:	f000 fd3c 	bl	800722e <xQueueCreateCountingSemaphoreStatic>
      if (hSemaphore != NULL) {
 80067b6:	4604      	mov	r4, r0
 80067b8:	2800      	cmp	r0, #0
 80067ba:	d0be      	beq.n	800673a <osSemaphoreNew+0xe>
          name = attr->name;
 80067bc:	682d      	ldr	r5, [r5, #0]
 80067be:	e7f2      	b.n	80067a6 <osSemaphoreNew+0x7a>

080067c0 <osSemaphoreAcquire>:

osStatus_t osSemaphoreAcquire (osSemaphoreId_t semaphore_id, uint32_t timeout) {
 80067c0:	b513      	push	{r0, r1, r4, lr}
 80067c2:	460c      	mov	r4, r1
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 80067c4:	b1f8      	cbz	r0, 8006806 <osSemaphoreAcquire+0x46>
 80067c6:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 80067ca:	b1a3      	cbz	r3, 80067f6 <osSemaphoreAcquire+0x36>
    if (timeout != 0U) {
 80067cc:	b9d9      	cbnz	r1, 8006806 <osSemaphoreAcquire+0x46>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80067ce:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80067d0:	9101      	str	r1, [sp, #4]
      if (xSemaphoreTakeFromISR (hSemaphore, &yield) != pdPASS) {
 80067d2:	f001 f839 	bl	8007848 <xQueueReceiveFromISR>
 80067d6:	2801      	cmp	r0, #1
 80067d8:	d112      	bne.n	8006800 <osSemaphoreAcquire+0x40>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80067da:	9b01      	ldr	r3, [sp, #4]
 80067dc:	b913      	cbnz	r3, 80067e4 <osSemaphoreAcquire+0x24>
  stat = osOK;
 80067de:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 80067e0:	b002      	add	sp, #8
 80067e2:	bd10      	pop	{r4, pc}
        portYIELD_FROM_ISR (yield);
 80067e4:	4b0b      	ldr	r3, [pc, #44]	; (8006814 <osSemaphoreAcquire+0x54>)
 80067e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80067ea:	601a      	str	r2, [r3, #0]
 80067ec:	f3bf 8f4f 	dsb	sy
 80067f0:	f3bf 8f6f 	isb	sy
 80067f4:	e7f3      	b.n	80067de <osSemaphoreAcquire+0x1e>
    if (xSemaphoreTake (hSemaphore, (TickType_t)timeout) != pdPASS) {
 80067f6:	f000 ff63 	bl	80076c0 <xQueueSemaphoreTake>
 80067fa:	2801      	cmp	r0, #1
 80067fc:	d0ef      	beq.n	80067de <osSemaphoreAcquire+0x1e>
      if (timeout != 0U) {
 80067fe:	b92c      	cbnz	r4, 800680c <osSemaphoreAcquire+0x4c>
        stat = osErrorResource;
 8006800:	f06f 0002 	mvn.w	r0, #2
 8006804:	e7ec      	b.n	80067e0 <osSemaphoreAcquire+0x20>
    stat = osErrorParameter;
 8006806:	f06f 0003 	mvn.w	r0, #3
 800680a:	e7e9      	b.n	80067e0 <osSemaphoreAcquire+0x20>
        stat = osErrorTimeout;
 800680c:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006810:	e7e6      	b.n	80067e0 <osSemaphoreAcquire+0x20>
 8006812:	bf00      	nop
 8006814:	e000ed04 	.word	0xe000ed04

08006818 <osSemaphoreRelease>:

osStatus_t osSemaphoreRelease (osSemaphoreId_t semaphore_id) {
 8006818:	b513      	push	{r0, r1, r4, lr}
  osStatus_t stat;
  BaseType_t yield;

  stat = osOK;

  if (hSemaphore == NULL) {
 800681a:	b300      	cbz	r0, 800685e <osSemaphoreRelease+0x46>
 800681c:	f3ef 8305 	mrs	r3, IPSR
    stat = osErrorParameter;
  }
  else if (IS_IRQ()) {
 8006820:	b1a3      	cbz	r3, 800684c <osSemaphoreRelease+0x34>
    yield = pdFALSE;
 8006822:	2400      	movs	r4, #0

    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006824:	a901      	add	r1, sp, #4
    yield = pdFALSE;
 8006826:	9401      	str	r4, [sp, #4]
    if (xSemaphoreGiveFromISR (hSemaphore, &yield) != pdTRUE) {
 8006828:	f000 fe56 	bl	80074d8 <xQueueGiveFromISR>
 800682c:	2801      	cmp	r0, #1
 800682e:	d113      	bne.n	8006858 <osSemaphoreRelease+0x40>
      stat = osErrorResource;
    } else {
      portYIELD_FROM_ISR (yield);
 8006830:	9b01      	ldr	r3, [sp, #4]
 8006832:	b913      	cbnz	r3, 800683a <osSemaphoreRelease+0x22>
  stat = osOK;
 8006834:	2000      	movs	r0, #0
      stat = osErrorResource;
    }
  }

  return (stat);
}
 8006836:	b002      	add	sp, #8
 8006838:	bd10      	pop	{r4, pc}
      portYIELD_FROM_ISR (yield);
 800683a:	4b0a      	ldr	r3, [pc, #40]	; (8006864 <osSemaphoreRelease+0x4c>)
 800683c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006840:	601a      	str	r2, [r3, #0]
 8006842:	f3bf 8f4f 	dsb	sy
 8006846:	f3bf 8f6f 	isb	sy
 800684a:	e7f3      	b.n	8006834 <osSemaphoreRelease+0x1c>
    if (xSemaphoreGive (hSemaphore) != pdPASS) {
 800684c:	461a      	mov	r2, r3
 800684e:	4619      	mov	r1, r3
 8006850:	f000 fd2e 	bl	80072b0 <xQueueGenericSend>
 8006854:	2801      	cmp	r0, #1
 8006856:	d0ed      	beq.n	8006834 <osSemaphoreRelease+0x1c>
      stat = osErrorResource;
 8006858:	f06f 0002 	mvn.w	r0, #2
 800685c:	e7eb      	b.n	8006836 <osSemaphoreRelease+0x1e>
    stat = osErrorParameter;
 800685e:	f06f 0003 	mvn.w	r0, #3
  return (stat);
 8006862:	e7e8      	b.n	8006836 <osSemaphoreRelease+0x1e>
 8006864:	e000ed04 	.word	0xe000ed04

08006868 <osMessageQueueNew>:
  return (stat);
}

/*---------------------------------------------------------------------------*/

osMessageQueueId_t osMessageQueueNew (uint32_t msg_count, uint32_t msg_size, const osMessageQueueAttr_t *attr) {
 8006868:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800686a:	4606      	mov	r6, r0
 800686c:	460d      	mov	r5, r1
 800686e:	4614      	mov	r4, r2
 8006870:	f3ef 8705 	mrs	r7, IPSR
  const char *name;
  #endif

  hQueue = NULL;

  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 8006874:	b11f      	cbz	r7, 800687e <osMessageQueueNew+0x16>
  hQueue = NULL;
 8006876:	2500      	movs	r5, #0
    #endif

  }

  return ((osMessageQueueId_t)hQueue);
}
 8006878:	4628      	mov	r0, r5
 800687a:	b003      	add	sp, #12
 800687c:	bdf0      	pop	{r4, r5, r6, r7, pc}
  if (!IS_IRQ() && (msg_count > 0U) && (msg_size > 0U)) {
 800687e:	2800      	cmp	r0, #0
 8006880:	d0f9      	beq.n	8006876 <osMessageQueueNew+0xe>
 8006882:	2900      	cmp	r1, #0
 8006884:	d0f7      	beq.n	8006876 <osMessageQueueNew+0xe>
    if (attr != NULL) {
 8006886:	b1da      	cbz	r2, 80068c0 <osMessageQueueNew+0x58>
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006888:	e9d2 3202 	ldrd	r3, r2, [r2, #8]
 800688c:	b183      	cbz	r3, 80068b0 <osMessageQueueNew+0x48>
 800688e:	2a4f      	cmp	r2, #79	; 0x4f
 8006890:	d9f1      	bls.n	8006876 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006892:	6922      	ldr	r2, [r4, #16]
      if ((attr->cb_mem != NULL) && (attr->cb_size >= sizeof(StaticQueue_t)) &&
 8006894:	2a00      	cmp	r2, #0
 8006896:	d0ee      	beq.n	8006876 <osMessageQueueNew+0xe>
          (attr->mq_mem != NULL) && (attr->mq_size >= (msg_count * msg_size))) {
 8006898:	6966      	ldr	r6, [r4, #20]
 800689a:	4345      	muls	r5, r0
 800689c:	42ae      	cmp	r6, r5
 800689e:	d3ea      	bcc.n	8006876 <osMessageQueueNew+0xe>
        hQueue = xQueueCreateStatic (msg_count, msg_size, attr->mq_mem, attr->cb_mem);
 80068a0:	9700      	str	r7, [sp, #0]
 80068a2:	f000 fc4f 	bl	8007144 <xQueueGenericCreateStatic>
    if (hQueue != NULL) {
 80068a6:	4605      	mov	r5, r0
 80068a8:	2800      	cmp	r0, #0
 80068aa:	d0e4      	beq.n	8006876 <osMessageQueueNew+0xe>
        name = attr->name;
 80068ac:	6824      	ldr	r4, [r4, #0]
 80068ae:	e011      	b.n	80068d4 <osMessageQueueNew+0x6c>
        if ((attr->cb_mem == NULL) && (attr->cb_size == 0U) &&
 80068b0:	2a00      	cmp	r2, #0
 80068b2:	d1e0      	bne.n	8006876 <osMessageQueueNew+0xe>
 80068b4:	6923      	ldr	r3, [r4, #16]
 80068b6:	2b00      	cmp	r3, #0
 80068b8:	d1dd      	bne.n	8006876 <osMessageQueueNew+0xe>
            (attr->mq_mem == NULL) && (attr->mq_size == 0U)) {
 80068ba:	6963      	ldr	r3, [r4, #20]
 80068bc:	2b00      	cmp	r3, #0
 80068be:	d1da      	bne.n	8006876 <osMessageQueueNew+0xe>
          hQueue = xQueueCreate (msg_count, msg_size);
 80068c0:	4629      	mov	r1, r5
 80068c2:	2200      	movs	r2, #0
 80068c4:	4630      	mov	r0, r6
 80068c6:	f000 fc8b 	bl	80071e0 <xQueueGenericCreate>
    if (hQueue != NULL) {
 80068ca:	4605      	mov	r5, r0
 80068cc:	2800      	cmp	r0, #0
 80068ce:	d0d2      	beq.n	8006876 <osMessageQueueNew+0xe>
      if (attr != NULL) {
 80068d0:	2c00      	cmp	r4, #0
 80068d2:	d1eb      	bne.n	80068ac <osMessageQueueNew+0x44>
      vQueueAddToRegistry (hQueue, name);
 80068d4:	4621      	mov	r1, r4
 80068d6:	4628      	mov	r0, r5
 80068d8:	f001 f806 	bl	80078e8 <vQueueAddToRegistry>
  return ((osMessageQueueId_t)hQueue);
 80068dc:	e7cc      	b.n	8006878 <osMessageQueueNew+0x10>
	...

080068e0 <osMessageQueuePut>:

osStatus_t osMessageQueuePut (osMessageQueueId_t mq_id, const void *msg_ptr, uint8_t msg_prio, uint32_t timeout) {
 80068e0:	b573      	push	{r0, r1, r4, r5, r6, lr}
 80068e2:	461c      	mov	r4, r3
 80068e4:	f3ef 8605 	mrs	r6, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 80068e8:	b1b6      	cbz	r6, 8006918 <osMessageQueuePut+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 80068ea:	b308      	cbz	r0, 8006930 <osMessageQueuePut+0x50>
 80068ec:	b301      	cbz	r1, 8006930 <osMessageQueuePut+0x50>
 80068ee:	b9fb      	cbnz	r3, 8006930 <osMessageQueuePut+0x50>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80068f0:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 80068f2:	9301      	str	r3, [sp, #4]
      if (xQueueSendToBackFromISR (hQueue, msg_ptr, &yield) != pdTRUE) {
 80068f4:	f000 fd8e 	bl	8007414 <xQueueGenericSendFromISR>
 80068f8:	2801      	cmp	r0, #1
 80068fa:	d116      	bne.n	800692a <osMessageQueuePut+0x4a>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 80068fc:	9b01      	ldr	r3, [sp, #4]
 80068fe:	b913      	cbnz	r3, 8006906 <osMessageQueuePut+0x26>
  stat = osOK;
 8006900:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006902:	b002      	add	sp, #8
 8006904:	bd70      	pop	{r4, r5, r6, pc}
        portYIELD_FROM_ISR (yield);
 8006906:	4b0d      	ldr	r3, [pc, #52]	; (800693c <osMessageQueuePut+0x5c>)
 8006908:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800690c:	601a      	str	r2, [r3, #0]
 800690e:	f3bf 8f4f 	dsb	sy
 8006912:	f3bf 8f6f 	isb	sy
 8006916:	e7f3      	b.n	8006900 <osMessageQueuePut+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006918:	b150      	cbz	r0, 8006930 <osMessageQueuePut+0x50>
 800691a:	b149      	cbz	r1, 8006930 <osMessageQueuePut+0x50>
      if (xQueueSendToBack (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800691c:	4633      	mov	r3, r6
 800691e:	4622      	mov	r2, r4
 8006920:	f000 fcc6 	bl	80072b0 <xQueueGenericSend>
 8006924:	2801      	cmp	r0, #1
 8006926:	d0eb      	beq.n	8006900 <osMessageQueuePut+0x20>
        if (timeout != 0U) {
 8006928:	b92c      	cbnz	r4, 8006936 <osMessageQueuePut+0x56>
          stat = osErrorResource;
 800692a:	f06f 0002 	mvn.w	r0, #2
 800692e:	e7e8      	b.n	8006902 <osMessageQueuePut+0x22>
      stat = osErrorParameter;
 8006930:	f06f 0003 	mvn.w	r0, #3
 8006934:	e7e5      	b.n	8006902 <osMessageQueuePut+0x22>
          stat = osErrorTimeout;
 8006936:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 800693a:	e7e2      	b.n	8006902 <osMessageQueuePut+0x22>
 800693c:	e000ed04 	.word	0xe000ed04

08006940 <osMessageQueueGet>:

osStatus_t osMessageQueueGet (osMessageQueueId_t mq_id, void *msg_ptr, uint8_t *msg_prio, uint32_t timeout) {
 8006940:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8006942:	461c      	mov	r4, r3
 8006944:	f3ef 8305 	mrs	r3, IPSR

  (void)msg_prio; /* Message priority is ignored */

  stat = osOK;

  if (IS_IRQ()) {
 8006948:	b1b3      	cbz	r3, 8006978 <osMessageQueueGet+0x38>
    if ((hQueue == NULL) || (msg_ptr == NULL) || (timeout != 0U)) {
 800694a:	b300      	cbz	r0, 800698e <osMessageQueueGet+0x4e>
 800694c:	b1f9      	cbz	r1, 800698e <osMessageQueueGet+0x4e>
 800694e:	b9f4      	cbnz	r4, 800698e <osMessageQueueGet+0x4e>
      stat = osErrorParameter;
    }
    else {
      yield = pdFALSE;

      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006950:	aa01      	add	r2, sp, #4
      yield = pdFALSE;
 8006952:	9401      	str	r4, [sp, #4]
      if (xQueueReceiveFromISR (hQueue, msg_ptr, &yield) != pdPASS) {
 8006954:	f000 ff78 	bl	8007848 <xQueueReceiveFromISR>
 8006958:	2801      	cmp	r0, #1
 800695a:	d115      	bne.n	8006988 <osMessageQueueGet+0x48>
        stat = osErrorResource;
      } else {
        portYIELD_FROM_ISR (yield);
 800695c:	9b01      	ldr	r3, [sp, #4]
 800695e:	b913      	cbnz	r3, 8006966 <osMessageQueueGet+0x26>
  stat = osOK;
 8006960:	2000      	movs	r0, #0
      }
    }
  }

  return (stat);
}
 8006962:	b003      	add	sp, #12
 8006964:	bd30      	pop	{r4, r5, pc}
        portYIELD_FROM_ISR (yield);
 8006966:	4b0d      	ldr	r3, [pc, #52]	; (800699c <osMessageQueueGet+0x5c>)
 8006968:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800696c:	601a      	str	r2, [r3, #0]
 800696e:	f3bf 8f4f 	dsb	sy
 8006972:	f3bf 8f6f 	isb	sy
 8006976:	e7f3      	b.n	8006960 <osMessageQueueGet+0x20>
    if ((hQueue == NULL) || (msg_ptr == NULL)) {
 8006978:	b148      	cbz	r0, 800698e <osMessageQueueGet+0x4e>
 800697a:	b141      	cbz	r1, 800698e <osMessageQueueGet+0x4e>
      if (xQueueReceive (hQueue, msg_ptr, (TickType_t)timeout) != pdPASS) {
 800697c:	4622      	mov	r2, r4
 800697e:	f000 fdff 	bl	8007580 <xQueueReceive>
 8006982:	2801      	cmp	r0, #1
 8006984:	d0ec      	beq.n	8006960 <osMessageQueueGet+0x20>
        if (timeout != 0U) {
 8006986:	b92c      	cbnz	r4, 8006994 <osMessageQueueGet+0x54>
          stat = osErrorResource;
 8006988:	f06f 0002 	mvn.w	r0, #2
 800698c:	e7e9      	b.n	8006962 <osMessageQueueGet+0x22>
      stat = osErrorParameter;
 800698e:	f06f 0003 	mvn.w	r0, #3
 8006992:	e7e6      	b.n	8006962 <osMessageQueueGet+0x22>
          stat = osErrorTimeout;
 8006994:	f06f 0001 	mvn.w	r0, #1
  return (stat);
 8006998:	e7e3      	b.n	8006962 <osMessageQueueGet+0x22>
 800699a:	bf00      	nop
 800699c:	e000ed04 	.word	0xe000ed04

080069a0 <vApplicationGetIdleTaskMemory>:
__WEAK void vApplicationGetIdleTaskMemory (StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxIdleTaskStackBuffer, uint32_t *pulIdleTaskStackSize) {
  /* Idle task control block and stack */
  static StaticTask_t Idle_TCB;
  static StackType_t  Idle_Stack[configMINIMAL_STACK_SIZE];

  *ppxIdleTaskTCBBuffer   = &Idle_TCB;
 80069a0:	4b03      	ldr	r3, [pc, #12]	; (80069b0 <vApplicationGetIdleTaskMemory+0x10>)
 80069a2:	6003      	str	r3, [r0, #0]
  *ppxIdleTaskStackBuffer = &Idle_Stack[0];
 80069a4:	4b03      	ldr	r3, [pc, #12]	; (80069b4 <vApplicationGetIdleTaskMemory+0x14>)
 80069a6:	600b      	str	r3, [r1, #0]
  *pulIdleTaskStackSize   = (uint32_t)configMINIMAL_STACK_SIZE;
 80069a8:	2380      	movs	r3, #128	; 0x80
 80069aa:	6013      	str	r3, [r2, #0]
}
 80069ac:	4770      	bx	lr
 80069ae:	bf00      	nop
 80069b0:	2000150c 	.word	0x2000150c
 80069b4:	2000130c 	.word	0x2000130c

080069b8 <vApplicationGetTimerTaskMemory>:
__WEAK void vApplicationGetTimerTaskMemory (StaticTask_t **ppxTimerTaskTCBBuffer, StackType_t **ppxTimerTaskStackBuffer, uint32_t *pulTimerTaskStackSize) {
  /* Timer task control block and stack */
  static StaticTask_t Timer_TCB;
  static StackType_t  Timer_Stack[configTIMER_TASK_STACK_DEPTH];

  *ppxTimerTaskTCBBuffer   = &Timer_TCB;
 80069b8:	4b03      	ldr	r3, [pc, #12]	; (80069c8 <vApplicationGetTimerTaskMemory+0x10>)
 80069ba:	6003      	str	r3, [r0, #0]
  *ppxTimerTaskStackBuffer = &Timer_Stack[0];
 80069bc:	4b03      	ldr	r3, [pc, #12]	; (80069cc <vApplicationGetTimerTaskMemory+0x14>)
 80069be:	600b      	str	r3, [r1, #0]
  *pulTimerTaskStackSize   = (uint32_t)configTIMER_TASK_STACK_DEPTH;
 80069c0:	f44f 7380 	mov.w	r3, #256	; 0x100
 80069c4:	6013      	str	r3, [r2, #0]
}
 80069c6:	4770      	bx	lr
 80069c8:	200019d0 	.word	0x200019d0
 80069cc:	200015d0 	.word	0x200015d0

080069d0 <prvInsertBlockIntoFreeList>:
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
}
/*-----------------------------------------------------------*/

static void prvInsertBlockIntoFreeList( BlockLink_t *pxBlockToInsert )
{
 80069d0:	b510      	push	{r4, lr}
BlockLink_t *pxIterator;
uint8_t *puc;

	/* Iterate through the list until a block is found that has a higher address
	than the block being inserted. */
	for( pxIterator = &xStart; pxIterator->pxNextFreeBlock < pxBlockToInsert; pxIterator = pxIterator->pxNextFreeBlock )
 80069d2:	4b0f      	ldr	r3, [pc, #60]	; (8006a10 <prvInsertBlockIntoFreeList+0x40>)
 80069d4:	461a      	mov	r2, r3
 80069d6:	681b      	ldr	r3, [r3, #0]
 80069d8:	4283      	cmp	r3, r0
 80069da:	d3fb      	bcc.n	80069d4 <prvInsertBlockIntoFreeList+0x4>
	}

	/* Do the block being inserted, and the block it is being inserted after
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxIterator;
	if( ( puc + pxIterator->xBlockSize ) == ( uint8_t * ) pxBlockToInsert )
 80069dc:	6854      	ldr	r4, [r2, #4]
 80069de:	1911      	adds	r1, r2, r4
 80069e0:	4288      	cmp	r0, r1
	{
		pxIterator->xBlockSize += pxBlockToInsert->xBlockSize;
 80069e2:	bf01      	itttt	eq
 80069e4:	6841      	ldreq	r1, [r0, #4]
 80069e6:	4610      	moveq	r0, r2
 80069e8:	1909      	addeq	r1, r1, r4
 80069ea:	6051      	streq	r1, [r2, #4]
	}

	/* Do the block being inserted, and the block it is being inserted before
	make a contiguous block of memory? */
	puc = ( uint8_t * ) pxBlockToInsert;
	if( ( puc + pxBlockToInsert->xBlockSize ) == ( uint8_t * ) pxIterator->pxNextFreeBlock )
 80069ec:	6844      	ldr	r4, [r0, #4]
 80069ee:	1901      	adds	r1, r0, r4
 80069f0:	428b      	cmp	r3, r1
 80069f2:	d107      	bne.n	8006a04 <prvInsertBlockIntoFreeList+0x34>
	{
		if( pxIterator->pxNextFreeBlock != pxEnd )
 80069f4:	4907      	ldr	r1, [pc, #28]	; (8006a14 <prvInsertBlockIntoFreeList+0x44>)
 80069f6:	6809      	ldr	r1, [r1, #0]
 80069f8:	428b      	cmp	r3, r1
		{
			/* Form one big block from the two blocks. */
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 80069fa:	bf1f      	itttt	ne
 80069fc:	6859      	ldrne	r1, [r3, #4]
			pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock->pxNextFreeBlock;
 80069fe:	681b      	ldrne	r3, [r3, #0]
			pxBlockToInsert->xBlockSize += pxIterator->pxNextFreeBlock->xBlockSize;
 8006a00:	1909      	addne	r1, r1, r4
 8006a02:	6041      	strne	r1, [r0, #4]

	/* If the block being inserted plugged a gab, so was merged with the block
	before and the block after, then it's pxNextFreeBlock pointer will have
	already been set, and should not be set here as that would make it point
	to itself. */
	if( pxIterator != pxBlockToInsert )
 8006a04:	4290      	cmp	r0, r2
		pxBlockToInsert->pxNextFreeBlock = pxIterator->pxNextFreeBlock;
 8006a06:	6003      	str	r3, [r0, #0]
	{
		pxIterator->pxNextFreeBlock = pxBlockToInsert;
 8006a08:	bf18      	it	ne
 8006a0a:	6010      	strne	r0, [r2, #0]
	}
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}
}
 8006a0c:	bd10      	pop	{r4, pc}
 8006a0e:	bf00      	nop
 8006a10:	20009aa8 	.word	0x20009aa8
 8006a14:	20001a90 	.word	0x20001a90

08006a18 <pvPortMalloc>:
{
 8006a18:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8006a1c:	4604      	mov	r4, r0
	vTaskSuspendAll();
 8006a1e:	f001 f9ad 	bl	8007d7c <vTaskSuspendAll>
		if( pxEnd == NULL )
 8006a22:	4b3e      	ldr	r3, [pc, #248]	; (8006b1c <pvPortMalloc+0x104>)
 8006a24:	483e      	ldr	r0, [pc, #248]	; (8006b20 <pvPortMalloc+0x108>)
 8006a26:	681a      	ldr	r2, [r3, #0]
 8006a28:	469c      	mov	ip, r3
 8006a2a:	b9d2      	cbnz	r2, 8006a62 <pvPortMalloc+0x4a>
	uxAddress = ( size_t ) ucHeap;
 8006a2c:	4a3d      	ldr	r2, [pc, #244]	; (8006b24 <pvPortMalloc+0x10c>)
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006a2e:	4b3e      	ldr	r3, [pc, #248]	; (8006b28 <pvPortMalloc+0x110>)
	if( ( uxAddress & portBYTE_ALIGNMENT_MASK ) != 0 )
 8006a30:	0755      	lsls	r5, r2, #29
		uxAddress += ( portBYTE_ALIGNMENT - 1 );
 8006a32:	bf1c      	itt	ne
 8006a34:	3207      	addne	r2, #7
		uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006a36:	f022 0207 	bicne.w	r2, r2, #7
	xStart.xBlockSize = ( size_t ) 0;
 8006a3a:	2100      	movs	r1, #0
	xStart.pxNextFreeBlock = ( void * ) pucAlignedHeap;
 8006a3c:	601a      	str	r2, [r3, #0]
	xStart.xBlockSize = ( size_t ) 0;
 8006a3e:	6059      	str	r1, [r3, #4]
	uxAddress -= xHeapStructSize;
 8006a40:	4b3a      	ldr	r3, [pc, #232]	; (8006b2c <pvPortMalloc+0x114>)
	uxAddress &= ~( ( size_t ) portBYTE_ALIGNMENT_MASK );
 8006a42:	f023 0307 	bic.w	r3, r3, #7
	pxEnd->pxNextFreeBlock = NULL;
 8006a46:	e9c3 1100 	strd	r1, r1, [r3]
	pxFirstFreeBlock->xBlockSize = uxAddress - ( size_t ) pxFirstFreeBlock;
 8006a4a:	1a99      	subs	r1, r3, r2
	pxFirstFreeBlock->pxNextFreeBlock = pxEnd;
 8006a4c:	e9c2 3100 	strd	r3, r1, [r2]
	pxEnd = ( void * ) uxAddress;
 8006a50:	f8cc 3000 	str.w	r3, [ip]
	xMinimumEverFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006a54:	4b36      	ldr	r3, [pc, #216]	; (8006b30 <pvPortMalloc+0x118>)
 8006a56:	6019      	str	r1, [r3, #0]
	xFreeBytesRemaining = pxFirstFreeBlock->xBlockSize;
 8006a58:	4b36      	ldr	r3, [pc, #216]	; (8006b34 <pvPortMalloc+0x11c>)
 8006a5a:	6019      	str	r1, [r3, #0]
	xBlockAllocatedBit = ( ( size_t ) 1 ) << ( ( sizeof( size_t ) * heapBITS_PER_BYTE ) - 1 );
 8006a5c:	f04f 4300 	mov.w	r3, #2147483648	; 0x80000000
 8006a60:	6003      	str	r3, [r0, #0]
		if( ( xWantedSize & xBlockAllocatedBit ) == 0 )
 8006a62:	6807      	ldr	r7, [r0, #0]
 8006a64:	4227      	tst	r7, r4
 8006a66:	d153      	bne.n	8006b10 <pvPortMalloc+0xf8>
			if( xWantedSize > 0 )
 8006a68:	2c00      	cmp	r4, #0
 8006a6a:	d044      	beq.n	8006af6 <pvPortMalloc+0xde>
				xWantedSize += xHeapStructSize;
 8006a6c:	f104 0308 	add.w	r3, r4, #8
				if( ( xWantedSize & portBYTE_ALIGNMENT_MASK ) != 0x00 )
 8006a70:	0761      	lsls	r1, r4, #29
					xWantedSize += ( portBYTE_ALIGNMENT - ( xWantedSize & portBYTE_ALIGNMENT_MASK ) );
 8006a72:	bf1c      	itt	ne
 8006a74:	f023 0307 	bicne.w	r3, r3, #7
 8006a78:	3308      	addne	r3, #8
			if( ( xWantedSize > 0 ) && ( xWantedSize <= xFreeBytesRemaining ) )
 8006a7a:	2b00      	cmp	r3, #0
 8006a7c:	d048      	beq.n	8006b10 <pvPortMalloc+0xf8>
 8006a7e:	4a2d      	ldr	r2, [pc, #180]	; (8006b34 <pvPortMalloc+0x11c>)
 8006a80:	6816      	ldr	r6, [r2, #0]
 8006a82:	429e      	cmp	r6, r3
 8006a84:	4690      	mov	r8, r2
 8006a86:	d343      	bcc.n	8006b10 <pvPortMalloc+0xf8>
				pxBlock = xStart.pxNextFreeBlock;
 8006a88:	4a27      	ldr	r2, [pc, #156]	; (8006b28 <pvPortMalloc+0x110>)
 8006a8a:	6815      	ldr	r5, [r2, #0]
				while( ( pxBlock->xBlockSize < xWantedSize ) && ( pxBlock->pxNextFreeBlock != NULL ) )
 8006a8c:	6869      	ldr	r1, [r5, #4]
 8006a8e:	4299      	cmp	r1, r3
 8006a90:	d201      	bcs.n	8006a96 <pvPortMalloc+0x7e>
 8006a92:	6828      	ldr	r0, [r5, #0]
 8006a94:	b9a8      	cbnz	r0, 8006ac2 <pvPortMalloc+0xaa>
				if( pxBlock != pxEnd )
 8006a96:	f8dc 0000 	ldr.w	r0, [ip]
 8006a9a:	42a8      	cmp	r0, r5
 8006a9c:	d038      	beq.n	8006b10 <pvPortMalloc+0xf8>
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006a9e:	1ac9      	subs	r1, r1, r3
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006aa0:	6828      	ldr	r0, [r5, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006aa2:	6814      	ldr	r4, [r2, #0]
					pxPreviousBlock->pxNextFreeBlock = pxBlock->pxNextFreeBlock;
 8006aa4:	6010      	str	r0, [r2, #0]
					if( ( pxBlock->xBlockSize - xWantedSize ) > heapMINIMUM_BLOCK_SIZE )
 8006aa6:	2910      	cmp	r1, #16
 8006aa8:	d912      	bls.n	8006ad0 <pvPortMalloc+0xb8>
						pxNewBlockLink = ( void * ) ( ( ( uint8_t * ) pxBlock ) + xWantedSize );
 8006aaa:	18e8      	adds	r0, r5, r3
						configASSERT( ( ( ( size_t ) pxNewBlockLink ) & portBYTE_ALIGNMENT_MASK ) == 0 );
 8006aac:	0742      	lsls	r2, r0, #29
 8006aae:	d00b      	beq.n	8006ac8 <pvPortMalloc+0xb0>

portFORCE_INLINE static void vPortRaiseBASEPRI( void )
{
uint32_t ulNewBASEPRI;

	__asm volatile
 8006ab0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ab4:	f383 8811 	msr	BASEPRI, r3
 8006ab8:	f3bf 8f6f 	isb	sy
 8006abc:	f3bf 8f4f 	dsb	sy
 8006ac0:	e7fe      	b.n	8006ac0 <pvPortMalloc+0xa8>
 8006ac2:	462a      	mov	r2, r5
 8006ac4:	4605      	mov	r5, r0
 8006ac6:	e7e1      	b.n	8006a8c <pvPortMalloc+0x74>
						pxNewBlockLink->xBlockSize = pxBlock->xBlockSize - xWantedSize;
 8006ac8:	6041      	str	r1, [r0, #4]
						pxBlock->xBlockSize = xWantedSize;
 8006aca:	606b      	str	r3, [r5, #4]
						prvInsertBlockIntoFreeList( pxNewBlockLink );
 8006acc:	f7ff ff80 	bl	80069d0 <prvInsertBlockIntoFreeList>
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006ad0:	686b      	ldr	r3, [r5, #4]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006ad2:	4917      	ldr	r1, [pc, #92]	; (8006b30 <pvPortMalloc+0x118>)
					xNumberOfSuccessfulAllocations++;
 8006ad4:	4a18      	ldr	r2, [pc, #96]	; (8006b38 <pvPortMalloc+0x120>)
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006ad6:	6808      	ldr	r0, [r1, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006ad8:	1af6      	subs	r6, r6, r3
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006ada:	431f      	orrs	r7, r3
					pxBlock->pxNextFreeBlock = NULL;
 8006adc:	2300      	movs	r3, #0
 8006ade:	602b      	str	r3, [r5, #0]
					xNumberOfSuccessfulAllocations++;
 8006ae0:	6813      	ldr	r3, [r2, #0]
					xFreeBytesRemaining -= pxBlock->xBlockSize;
 8006ae2:	f8c8 6000 	str.w	r6, [r8]
					if( xFreeBytesRemaining < xMinimumEverFreeBytesRemaining )
 8006ae6:	4286      	cmp	r6, r0
					xNumberOfSuccessfulAllocations++;
 8006ae8:	f103 0301 	add.w	r3, r3, #1
						xMinimumEverFreeBytesRemaining = xFreeBytesRemaining;
 8006aec:	bf38      	it	cc
 8006aee:	600e      	strcc	r6, [r1, #0]
					pvReturn = ( void * ) ( ( ( uint8_t * ) pxPreviousBlock->pxNextFreeBlock ) + xHeapStructSize );
 8006af0:	3408      	adds	r4, #8
					pxBlock->xBlockSize |= xBlockAllocatedBit;
 8006af2:	606f      	str	r7, [r5, #4]
					xNumberOfSuccessfulAllocations++;
 8006af4:	6013      	str	r3, [r2, #0]
	( void ) xTaskResumeAll();
 8006af6:	f001 f9e5 	bl	8007ec4 <xTaskResumeAll>
	configASSERT( ( ( ( size_t ) pvReturn ) & ( size_t ) portBYTE_ALIGNMENT_MASK ) == 0 );
 8006afa:	0763      	lsls	r3, r4, #29
 8006afc:	d00a      	beq.n	8006b14 <pvPortMalloc+0xfc>
 8006afe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b02:	f383 8811 	msr	BASEPRI, r3
 8006b06:	f3bf 8f6f 	isb	sy
 8006b0a:	f3bf 8f4f 	dsb	sy
 8006b0e:	e7fe      	b.n	8006b0e <pvPortMalloc+0xf6>
void *pvReturn = NULL;
 8006b10:	2400      	movs	r4, #0
 8006b12:	e7f0      	b.n	8006af6 <pvPortMalloc+0xde>
}
 8006b14:	4620      	mov	r0, r4
 8006b16:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8006b1a:	bf00      	nop
 8006b1c:	20001a90 	.word	0x20001a90
 8006b20:	20009a94 	.word	0x20009a94
 8006b24:	20001a94 	.word	0x20001a94
 8006b28:	20009aa8 	.word	0x20009aa8
 8006b2c:	20009a8c 	.word	0x20009a8c
 8006b30:	20009a9c 	.word	0x20009a9c
 8006b34:	20009a98 	.word	0x20009a98
 8006b38:	20009aa0 	.word	0x20009aa0

08006b3c <vPortFree>:
{
 8006b3c:	b510      	push	{r4, lr}
	if( pv != NULL )
 8006b3e:	4604      	mov	r4, r0
 8006b40:	b390      	cbz	r0, 8006ba8 <vPortFree+0x6c>
		configASSERT( ( pxLink->xBlockSize & xBlockAllocatedBit ) != 0 );
 8006b42:	4a1a      	ldr	r2, [pc, #104]	; (8006bac <vPortFree+0x70>)
 8006b44:	f850 3c04 	ldr.w	r3, [r0, #-4]
 8006b48:	6812      	ldr	r2, [r2, #0]
 8006b4a:	4213      	tst	r3, r2
 8006b4c:	d108      	bne.n	8006b60 <vPortFree+0x24>
 8006b4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b52:	f383 8811 	msr	BASEPRI, r3
 8006b56:	f3bf 8f6f 	isb	sy
 8006b5a:	f3bf 8f4f 	dsb	sy
 8006b5e:	e7fe      	b.n	8006b5e <vPortFree+0x22>
		configASSERT( pxLink->pxNextFreeBlock == NULL );
 8006b60:	f850 1c08 	ldr.w	r1, [r0, #-8]
 8006b64:	b141      	cbz	r1, 8006b78 <vPortFree+0x3c>
 8006b66:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006b6a:	f383 8811 	msr	BASEPRI, r3
 8006b6e:	f3bf 8f6f 	isb	sy
 8006b72:	f3bf 8f4f 	dsb	sy
 8006b76:	e7fe      	b.n	8006b76 <vPortFree+0x3a>
				pxLink->xBlockSize &= ~xBlockAllocatedBit;
 8006b78:	ea23 0302 	bic.w	r3, r3, r2
 8006b7c:	f840 3c04 	str.w	r3, [r0, #-4]
				vTaskSuspendAll();
 8006b80:	f001 f8fc 	bl	8007d7c <vTaskSuspendAll>
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006b84:	4a0a      	ldr	r2, [pc, #40]	; (8006bb0 <vPortFree+0x74>)
 8006b86:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8006b8a:	6811      	ldr	r1, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006b8c:	f1a4 0008 	sub.w	r0, r4, #8
					xFreeBytesRemaining += pxLink->xBlockSize;
 8006b90:	440b      	add	r3, r1
 8006b92:	6013      	str	r3, [r2, #0]
					prvInsertBlockIntoFreeList( ( ( BlockLink_t * ) pxLink ) );
 8006b94:	f7ff ff1c 	bl	80069d0 <prvInsertBlockIntoFreeList>
					xNumberOfSuccessfulFrees++;
 8006b98:	4a06      	ldr	r2, [pc, #24]	; (8006bb4 <vPortFree+0x78>)
 8006b9a:	6813      	ldr	r3, [r2, #0]
}
 8006b9c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
					xNumberOfSuccessfulFrees++;
 8006ba0:	3301      	adds	r3, #1
 8006ba2:	6013      	str	r3, [r2, #0]
				( void ) xTaskResumeAll();
 8006ba4:	f001 b98e 	b.w	8007ec4 <xTaskResumeAll>
}
 8006ba8:	bd10      	pop	{r4, pc}
 8006baa:	bf00      	nop
 8006bac:	20009a94 	.word	0x20009a94
 8006bb0:	20009a98 	.word	0x20009a98
 8006bb4:	20009aa4 	.word	0x20009aa4

08006bb8 <vListInitialise>:
void vListInitialise( List_t * const pxList )
{
	/* The list structure contains a list item which is used to mark the
	end of the list.  To initialise the list the list end is inserted
	as the only list entry. */
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006bb8:	f100 0308 	add.w	r3, r0, #8

	/* The list end value is the highest possible value in the list to
	ensure it remains at the end of the list. */
	pxList->xListEnd.xItemValue = portMAX_DELAY;
 8006bbc:	f04f 32ff 	mov.w	r2, #4294967295

	/* The list end next and previous pointers point to itself so we know
	when the list is empty. */
	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006bc0:	e9c0 2302 	strd	r2, r3, [r0, #8]
	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006bc4:	6043      	str	r3, [r0, #4]
	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. */
 8006bc6:	6103      	str	r3, [r0, #16]

	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
 8006bc8:	2300      	movs	r3, #0
 8006bca:	6003      	str	r3, [r0, #0]

	/* Write known values into the list if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
}
 8006bcc:	4770      	bx	lr

08006bce <vListInitialiseItem>:
/*-----------------------------------------------------------*/

void vListInitialiseItem( ListItem_t * const pxItem )
{
	/* Make sure the list item is not recorded as being on a list. */
	pxItem->pxContainer = NULL;
 8006bce:	2300      	movs	r3, #0
 8006bd0:	6103      	str	r3, [r0, #16]

	/* Write known values into the list item if
	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
}
 8006bd2:	4770      	bx	lr

08006bd4 <vListInsertEnd>:
/*-----------------------------------------------------------*/

void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
{
ListItem_t * const pxIndex = pxList->pxIndex;
 8006bd4:	6843      	ldr	r3, [r0, #4]
	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );

	/* Insert a new list item into pxList, but rather than sort the list,
	makes the new list item the last item to be removed by a call to
	listGET_OWNER_OF_NEXT_ENTRY(). */
	pxNewListItem->pxNext = pxIndex;
 8006bd6:	604b      	str	r3, [r1, #4]
	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 8006bd8:	689a      	ldr	r2, [r3, #8]
 8006bda:	608a      	str	r2, [r1, #8]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	pxIndex->pxPrevious->pxNext = pxNewListItem;
 8006bdc:	689a      	ldr	r2, [r3, #8]
 8006bde:	6051      	str	r1, [r2, #4]
	pxIndex->pxPrevious = pxNewListItem;
 8006be0:	6099      	str	r1, [r3, #8]

	/* Remember which list the item is in. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006be2:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006be4:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006be6:	3301      	adds	r3, #1
 8006be8:	6003      	str	r3, [r0, #0]
}
 8006bea:	4770      	bx	lr

08006bec <vListInsert>:
/*-----------------------------------------------------------*/

void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
{
 8006bec:	b530      	push	{r4, r5, lr}
ListItem_t *pxIterator;
const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 8006bee:	680c      	ldr	r4, [r1, #0]
	new list item should be placed after it.  This ensures that TCBs which are
	stored in ready lists (all of which have the same xItemValue value) get a
	share of the CPU.  However, if the xItemValue is the same as the back marker
	the iteration loop below will not end.  Therefore the value is checked
	first, and the algorithm slightly modified if necessary. */
	if( xValueOfInsertion == portMAX_DELAY )
 8006bf0:	1c63      	adds	r3, r4, #1
 8006bf2:	d10a      	bne.n	8006c0a <vListInsert+0x1e>
	{
		pxIterator = pxList->xListEnd.pxPrevious;
 8006bf4:	6903      	ldr	r3, [r0, #16]
			/* There is nothing to do here, just iterating to the wanted
			insertion position. */
		}
	}

	pxNewListItem->pxNext = pxIterator->pxNext;
 8006bf6:	685a      	ldr	r2, [r3, #4]
 8006bf8:	604a      	str	r2, [r1, #4]
	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 8006bfa:	6091      	str	r1, [r2, #8]
	pxNewListItem->pxPrevious = pxIterator;
 8006bfc:	608b      	str	r3, [r1, #8]
	pxIterator->pxNext = pxNewListItem;
 8006bfe:	6059      	str	r1, [r3, #4]

	/* Remember which list the item is in.  This allows fast removal of the
	item later. */
	pxNewListItem->pxContainer = pxList;

	( pxList->uxNumberOfItems )++;
 8006c00:	6803      	ldr	r3, [r0, #0]
	pxNewListItem->pxContainer = pxList;
 8006c02:	6108      	str	r0, [r1, #16]
	( pxList->uxNumberOfItems )++;
 8006c04:	3301      	adds	r3, #1
 8006c06:	6003      	str	r3, [r0, #0]
}
 8006c08:	bd30      	pop	{r4, r5, pc}
		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValueOfInsertion; pxIterator = pxIterator->pxNext ) /*lint !e826 !e740 !e9087 The mini list structure is used as the list end to save RAM.  This is checked and valid. *//*lint !e440 The iterator moves to a different value, not xValueOfInsertion. */
 8006c0a:	f100 0208 	add.w	r2, r0, #8
 8006c0e:	4613      	mov	r3, r2
 8006c10:	6852      	ldr	r2, [r2, #4]
 8006c12:	6815      	ldr	r5, [r2, #0]
 8006c14:	42a5      	cmp	r5, r4
 8006c16:	d9fa      	bls.n	8006c0e <vListInsert+0x22>
 8006c18:	e7ed      	b.n	8006bf6 <vListInsert+0xa>

08006c1a <uxListRemove>:
{
/* The list item knows which list it is in.  Obtain the list from the list
item. */
List_t * const pxList = pxItemToRemove->pxContainer;

	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8006c1a:	e9d0 1201 	ldrd	r1, r2, [r0, #4]
List_t * const pxList = pxItemToRemove->pxContainer;
 8006c1e:	6903      	ldr	r3, [r0, #16]
	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 8006c20:	608a      	str	r2, [r1, #8]
	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 8006c22:	6051      	str	r1, [r2, #4]

	/* Only used during decision coverage testing. */
	mtCOVERAGE_TEST_DELAY();

	/* Make sure the index is left pointing to a valid item. */
	if( pxList->pxIndex == pxItemToRemove )
 8006c24:	6859      	ldr	r1, [r3, #4]
 8006c26:	4281      	cmp	r1, r0
	{
		pxList->pxIndex = pxItemToRemove->pxPrevious;
 8006c28:	bf08      	it	eq
 8006c2a:	605a      	streq	r2, [r3, #4]
	else
	{
		mtCOVERAGE_TEST_MARKER();
	}

	pxItemToRemove->pxContainer = NULL;
 8006c2c:	2200      	movs	r2, #0
 8006c2e:	6102      	str	r2, [r0, #16]
	( pxList->uxNumberOfItems )--;
 8006c30:	681a      	ldr	r2, [r3, #0]
 8006c32:	3a01      	subs	r2, #1
 8006c34:	601a      	str	r2, [r3, #0]

	return pxList->uxNumberOfItems;
 8006c36:	6818      	ldr	r0, [r3, #0]
}
 8006c38:	4770      	bx	lr
	...

08006c3c <prvPortStartFirstTask>:
{
	/* Start the first task.  This also clears the bit that indicates the FPU is
	in use in case the FPU was used before the scheduler was started - which
	would otherwise result in the unnecessary leaving of space in the SVC stack
	for lazy saving of FPU registers. */
	__asm volatile(
 8006c3c:	4808      	ldr	r0, [pc, #32]	; (8006c60 <prvPortStartFirstTask+0x24>)
 8006c3e:	6800      	ldr	r0, [r0, #0]
 8006c40:	6800      	ldr	r0, [r0, #0]
 8006c42:	f380 8808 	msr	MSP, r0
 8006c46:	f04f 0000 	mov.w	r0, #0
 8006c4a:	f380 8814 	msr	CONTROL, r0
 8006c4e:	b662      	cpsie	i
 8006c50:	b661      	cpsie	f
 8006c52:	f3bf 8f4f 	dsb	sy
 8006c56:	f3bf 8f6f 	isb	sy
 8006c5a:	df00      	svc	0
 8006c5c:	bf00      	nop
					" dsb					\n"
					" isb					\n"
					" svc 0					\n" /* System call to start first task. */
					" nop					\n"
				);
}
 8006c5e:	0000      	.short	0x0000
 8006c60:	e000ed08 	.word	0xe000ed08

08006c64 <vPortEnableVFP>:
/*-----------------------------------------------------------*/

/* This is a naked function. */
static void vPortEnableVFP( void )
{
	__asm volatile
 8006c64:	f8df 000c 	ldr.w	r0, [pc, #12]	; 8006c74 <vPortEnableVFP+0x10>
 8006c68:	6801      	ldr	r1, [r0, #0]
 8006c6a:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8006c6e:	6001      	str	r1, [r0, #0]
 8006c70:	4770      	bx	lr
		"								\n"
		"	orr r1, r1, #( 0xf << 20 )	\n" /* Enable CP10 and CP11 coprocessors, then save back. */
		"	str r1, [r0]				\n"
		"	bx r14						"
	);
}
 8006c72:	0000      	.short	0x0000
 8006c74:	e000ed88 	.word	0xe000ed88

08006c78 <prvTaskExitError>:
{
 8006c78:	b082      	sub	sp, #8
volatile uint32_t ulDummy = 0;
 8006c7a:	2300      	movs	r3, #0
 8006c7c:	9301      	str	r3, [sp, #4]
	configASSERT( uxCriticalNesting == ~0UL );
 8006c7e:	4b0d      	ldr	r3, [pc, #52]	; (8006cb4 <prvTaskExitError+0x3c>)
 8006c80:	681b      	ldr	r3, [r3, #0]
 8006c82:	3301      	adds	r3, #1
 8006c84:	d008      	beq.n	8006c98 <prvTaskExitError+0x20>
 8006c86:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c8a:	f383 8811 	msr	BASEPRI, r3
 8006c8e:	f3bf 8f6f 	isb	sy
 8006c92:	f3bf 8f4f 	dsb	sy
 8006c96:	e7fe      	b.n	8006c96 <prvTaskExitError+0x1e>
 8006c98:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006c9c:	f383 8811 	msr	BASEPRI, r3
 8006ca0:	f3bf 8f6f 	isb	sy
 8006ca4:	f3bf 8f4f 	dsb	sy
	while( ulDummy == 0 )
 8006ca8:	9b01      	ldr	r3, [sp, #4]
 8006caa:	2b00      	cmp	r3, #0
 8006cac:	d0fc      	beq.n	8006ca8 <prvTaskExitError+0x30>
}
 8006cae:	b002      	add	sp, #8
 8006cb0:	4770      	bx	lr
 8006cb2:	bf00      	nop
 8006cb4:	2000005c 	.word	0x2000005c

08006cb8 <pxPortInitialiseStack>:
	*pxTopOfStack = portINITIAL_XPSR;	/* xPSR */
 8006cb8:	f04f 7380 	mov.w	r3, #16777216	; 0x1000000
 8006cbc:	f840 3c04 	str.w	r3, [r0, #-4]
	*pxTopOfStack = ( StackType_t ) portTASK_RETURN_ADDRESS;	/* LR */
 8006cc0:	4b07      	ldr	r3, [pc, #28]	; (8006ce0 <pxPortInitialiseStack+0x28>)
 8006cc2:	f840 3c0c 	str.w	r3, [r0, #-12]
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8006cc6:	f021 0101 	bic.w	r1, r1, #1
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8006cca:	f06f 0302 	mvn.w	r3, #2
	*pxTopOfStack = ( ( StackType_t ) pxCode ) & portSTART_ADDRESS_MASK;	/* PC */
 8006cce:	f840 1c08 	str.w	r1, [r0, #-8]
	*pxTopOfStack = ( StackType_t ) pvParameters;	/* R0 */
 8006cd2:	f840 2c20 	str.w	r2, [r0, #-32]
	*pxTopOfStack = portINITIAL_EXC_RETURN;
 8006cd6:	f840 3c24 	str.w	r3, [r0, #-36]
}
 8006cda:	3844      	subs	r0, #68	; 0x44
 8006cdc:	4770      	bx	lr
 8006cde:	bf00      	nop
 8006ce0:	08006c79 	.word	0x08006c79
	...

08006cf0 <SVC_Handler>:
	__asm volatile (
 8006cf0:	4b07      	ldr	r3, [pc, #28]	; (8006d10 <pxCurrentTCBConst2>)
 8006cf2:	6819      	ldr	r1, [r3, #0]
 8006cf4:	6808      	ldr	r0, [r1, #0]
 8006cf6:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006cfa:	f380 8809 	msr	PSP, r0
 8006cfe:	f3bf 8f6f 	isb	sy
 8006d02:	f04f 0000 	mov.w	r0, #0
 8006d06:	f380 8811 	msr	BASEPRI, r0
 8006d0a:	4770      	bx	lr
 8006d0c:	f3af 8000 	nop.w

08006d10 <pxCurrentTCBConst2>:
 8006d10:	20009ab8 	.word	0x20009ab8

08006d14 <vPortEnterCritical>:
 8006d14:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d18:	f383 8811 	msr	BASEPRI, r3
 8006d1c:	f3bf 8f6f 	isb	sy
 8006d20:	f3bf 8f4f 	dsb	sy
	uxCriticalNesting++;
 8006d24:	4a0a      	ldr	r2, [pc, #40]	; (8006d50 <vPortEnterCritical+0x3c>)
 8006d26:	6813      	ldr	r3, [r2, #0]
 8006d28:	3301      	adds	r3, #1
	if( uxCriticalNesting == 1 )
 8006d2a:	2b01      	cmp	r3, #1
	uxCriticalNesting++;
 8006d2c:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 1 )
 8006d2e:	d10d      	bne.n	8006d4c <vPortEnterCritical+0x38>
		configASSERT( ( portNVIC_INT_CTRL_REG & portVECTACTIVE_MASK ) == 0 );
 8006d30:	4b08      	ldr	r3, [pc, #32]	; (8006d54 <vPortEnterCritical+0x40>)
 8006d32:	681b      	ldr	r3, [r3, #0]
 8006d34:	f013 0fff 	tst.w	r3, #255	; 0xff
 8006d38:	d008      	beq.n	8006d4c <vPortEnterCritical+0x38>
 8006d3a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d3e:	f383 8811 	msr	BASEPRI, r3
 8006d42:	f3bf 8f6f 	isb	sy
 8006d46:	f3bf 8f4f 	dsb	sy
 8006d4a:	e7fe      	b.n	8006d4a <vPortEnterCritical+0x36>
}
 8006d4c:	4770      	bx	lr
 8006d4e:	bf00      	nop
 8006d50:	2000005c 	.word	0x2000005c
 8006d54:	e000ed04 	.word	0xe000ed04

08006d58 <vPortExitCritical>:
	configASSERT( uxCriticalNesting );
 8006d58:	4a08      	ldr	r2, [pc, #32]	; (8006d7c <vPortExitCritical+0x24>)
 8006d5a:	6813      	ldr	r3, [r2, #0]
 8006d5c:	b943      	cbnz	r3, 8006d70 <vPortExitCritical+0x18>
 8006d5e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006d62:	f383 8811 	msr	BASEPRI, r3
 8006d66:	f3bf 8f6f 	isb	sy
 8006d6a:	f3bf 8f4f 	dsb	sy
 8006d6e:	e7fe      	b.n	8006d6e <vPortExitCritical+0x16>
	uxCriticalNesting--;
 8006d70:	3b01      	subs	r3, #1
 8006d72:	6013      	str	r3, [r2, #0]
	if( uxCriticalNesting == 0 )
 8006d74:	b90b      	cbnz	r3, 8006d7a <vPortExitCritical+0x22>
}
/*-----------------------------------------------------------*/

portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
{
	__asm volatile
 8006d76:	f383 8811 	msr	BASEPRI, r3
}
 8006d7a:	4770      	bx	lr
 8006d7c:	2000005c 	.word	0x2000005c

08006d80 <PendSV_Handler>:
	__asm volatile
 8006d80:	f3ef 8009 	mrs	r0, PSP
 8006d84:	f3bf 8f6f 	isb	sy
 8006d88:	4b15      	ldr	r3, [pc, #84]	; (8006de0 <pxCurrentTCBConst>)
 8006d8a:	681a      	ldr	r2, [r3, #0]
 8006d8c:	f01e 0f10 	tst.w	lr, #16
 8006d90:	bf08      	it	eq
 8006d92:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 8006d96:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006d9a:	6010      	str	r0, [r2, #0]
 8006d9c:	e92d 0009 	stmdb	sp!, {r0, r3}
 8006da0:	f04f 0050 	mov.w	r0, #80	; 0x50
 8006da4:	f380 8811 	msr	BASEPRI, r0
 8006da8:	f3bf 8f4f 	dsb	sy
 8006dac:	f3bf 8f6f 	isb	sy
 8006db0:	f001 f98c 	bl	80080cc <vTaskSwitchContext>
 8006db4:	f04f 0000 	mov.w	r0, #0
 8006db8:	f380 8811 	msr	BASEPRI, r0
 8006dbc:	bc09      	pop	{r0, r3}
 8006dbe:	6819      	ldr	r1, [r3, #0]
 8006dc0:	6808      	ldr	r0, [r1, #0]
 8006dc2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006dc6:	f01e 0f10 	tst.w	lr, #16
 8006dca:	bf08      	it	eq
 8006dcc:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 8006dd0:	f380 8809 	msr	PSP, r0
 8006dd4:	f3bf 8f6f 	isb	sy
 8006dd8:	4770      	bx	lr
 8006dda:	bf00      	nop
 8006ddc:	f3af 8000 	nop.w

08006de0 <pxCurrentTCBConst>:
 8006de0:	20009ab8 	.word	0x20009ab8

08006de4 <xPortSysTickHandler>:
{
 8006de4:	b508      	push	{r3, lr}
	__asm volatile
 8006de6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006dea:	f383 8811 	msr	BASEPRI, r3
 8006dee:	f3bf 8f6f 	isb	sy
 8006df2:	f3bf 8f4f 	dsb	sy
		if( xTaskIncrementTick() != pdFALSE )
 8006df6:	f000 ffcf 	bl	8007d98 <xTaskIncrementTick>
 8006dfa:	b118      	cbz	r0, 8006e04 <xPortSysTickHandler+0x20>
			portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;
 8006dfc:	4b03      	ldr	r3, [pc, #12]	; (8006e0c <xPortSysTickHandler+0x28>)
 8006dfe:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8006e02:	601a      	str	r2, [r3, #0]
	__asm volatile
 8006e04:	2300      	movs	r3, #0
 8006e06:	f383 8811 	msr	BASEPRI, r3
}
 8006e0a:	bd08      	pop	{r3, pc}
 8006e0c:	e000ed04 	.word	0xe000ed04

08006e10 <vPortSetupTimerInterrupt>:
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8006e10:	4a08      	ldr	r2, [pc, #32]	; (8006e34 <vPortSetupTimerInterrupt+0x24>)
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8006e12:	4909      	ldr	r1, [pc, #36]	; (8006e38 <vPortSetupTimerInterrupt+0x28>)
	portNVIC_SYSTICK_CTRL_REG = 0UL;
 8006e14:	2300      	movs	r3, #0
 8006e16:	6013      	str	r3, [r2, #0]
	portNVIC_SYSTICK_CURRENT_VALUE_REG = 0UL;
 8006e18:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_LOAD_REG = ( configSYSTICK_CLOCK_HZ / configTICK_RATE_HZ ) - 1UL;
 8006e1a:	4b08      	ldr	r3, [pc, #32]	; (8006e3c <vPortSetupTimerInterrupt+0x2c>)
 8006e1c:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 8006e20:	681b      	ldr	r3, [r3, #0]
 8006e22:	fbb3 f3f1 	udiv	r3, r3, r1
 8006e26:	4906      	ldr	r1, [pc, #24]	; (8006e40 <vPortSetupTimerInterrupt+0x30>)
 8006e28:	3b01      	subs	r3, #1
 8006e2a:	600b      	str	r3, [r1, #0]
	portNVIC_SYSTICK_CTRL_REG = ( portNVIC_SYSTICK_CLK_BIT | portNVIC_SYSTICK_INT_BIT | portNVIC_SYSTICK_ENABLE_BIT );
 8006e2c:	2307      	movs	r3, #7
 8006e2e:	6013      	str	r3, [r2, #0]
}
 8006e30:	4770      	bx	lr
 8006e32:	bf00      	nop
 8006e34:	e000e010 	.word	0xe000e010
 8006e38:	e000e018 	.word	0xe000e018
 8006e3c:	20000050 	.word	0x20000050
 8006e40:	e000e014 	.word	0xe000e014

08006e44 <xPortStartScheduler>:
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8006e44:	4b38      	ldr	r3, [pc, #224]	; (8006f28 <xPortStartScheduler+0xe4>)
 8006e46:	4a39      	ldr	r2, [pc, #228]	; (8006f2c <xPortStartScheduler+0xe8>)
{
 8006e48:	b513      	push	{r0, r1, r4, lr}
	configASSERT( portCPUID != portCORTEX_M7_r0p1_ID );
 8006e4a:	6819      	ldr	r1, [r3, #0]
 8006e4c:	4291      	cmp	r1, r2
 8006e4e:	d108      	bne.n	8006e62 <xPortStartScheduler+0x1e>
	__asm volatile
 8006e50:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e54:	f383 8811 	msr	BASEPRI, r3
 8006e58:	f3bf 8f6f 	isb	sy
 8006e5c:	f3bf 8f4f 	dsb	sy
 8006e60:	e7fe      	b.n	8006e60 <xPortStartScheduler+0x1c>
	configASSERT( portCPUID != portCORTEX_M7_r0p0_ID );
 8006e62:	681a      	ldr	r2, [r3, #0]
 8006e64:	4b32      	ldr	r3, [pc, #200]	; (8006f30 <xPortStartScheduler+0xec>)
 8006e66:	429a      	cmp	r2, r3
 8006e68:	d108      	bne.n	8006e7c <xPortStartScheduler+0x38>
 8006e6a:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006e6e:	f383 8811 	msr	BASEPRI, r3
 8006e72:	f3bf 8f6f 	isb	sy
 8006e76:	f3bf 8f4f 	dsb	sy
 8006e7a:	e7fe      	b.n	8006e7a <xPortStartScheduler+0x36>
		ulOriginalPriority = *pucFirstUserPriorityRegister;
 8006e7c:	4b2d      	ldr	r3, [pc, #180]	; (8006f34 <xPortStartScheduler+0xf0>)
 8006e7e:	781a      	ldrb	r2, [r3, #0]
 8006e80:	b2d2      	uxtb	r2, r2
 8006e82:	9201      	str	r2, [sp, #4]
		*pucFirstUserPriorityRegister = portMAX_8_BIT_VALUE;
 8006e84:	22ff      	movs	r2, #255	; 0xff
 8006e86:	701a      	strb	r2, [r3, #0]
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8006e88:	781b      	ldrb	r3, [r3, #0]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8006e8a:	4a2b      	ldr	r2, [pc, #172]	; (8006f38 <xPortStartScheduler+0xf4>)
		ucMaxPriorityValue = *pucFirstUserPriorityRegister;
 8006e8c:	b2db      	uxtb	r3, r3
 8006e8e:	f88d 3003 	strb.w	r3, [sp, #3]
		ucMaxSysCallPriority = configMAX_SYSCALL_INTERRUPT_PRIORITY & ucMaxPriorityValue;
 8006e92:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8006e96:	f003 0350 	and.w	r3, r3, #80	; 0x50
 8006e9a:	7013      	strb	r3, [r2, #0]
		ulMaxPRIGROUPValue = portMAX_PRIGROUP_BITS;
 8006e9c:	4a27      	ldr	r2, [pc, #156]	; (8006f3c <xPortStartScheduler+0xf8>)
 8006e9e:	2307      	movs	r3, #7
 8006ea0:	6013      	str	r3, [r2, #0]
		while( ( ucMaxPriorityValue & portTOP_BIT_OF_BYTE ) == portTOP_BIT_OF_BYTE )
 8006ea2:	2100      	movs	r1, #0
 8006ea4:	f89d 0003 	ldrb.w	r0, [sp, #3]
 8006ea8:	0600      	lsls	r0, r0, #24
 8006eaa:	f103 34ff 	add.w	r4, r3, #4294967295
 8006eae:	d40c      	bmi.n	8006eca <xPortStartScheduler+0x86>
 8006eb0:	b111      	cbz	r1, 8006eb8 <xPortStartScheduler+0x74>
			configASSERT( ( portMAX_PRIGROUP_BITS - ulMaxPRIGROUPValue ) == configPRIO_BITS );
 8006eb2:	2b03      	cmp	r3, #3
 8006eb4:	6013      	str	r3, [r2, #0]
 8006eb6:	d011      	beq.n	8006edc <xPortStartScheduler+0x98>
 8006eb8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006ebc:	f383 8811 	msr	BASEPRI, r3
 8006ec0:	f3bf 8f6f 	isb	sy
 8006ec4:	f3bf 8f4f 	dsb	sy
 8006ec8:	e7fe      	b.n	8006ec8 <xPortStartScheduler+0x84>
			ucMaxPriorityValue <<= ( uint8_t ) 0x01;
 8006eca:	f89d 3003 	ldrb.w	r3, [sp, #3]
 8006ece:	005b      	lsls	r3, r3, #1
 8006ed0:	b2db      	uxtb	r3, r3
 8006ed2:	f88d 3003 	strb.w	r3, [sp, #3]
 8006ed6:	2101      	movs	r1, #1
 8006ed8:	4623      	mov	r3, r4
 8006eda:	e7e3      	b.n	8006ea4 <xPortStartScheduler+0x60>
		ulMaxPRIGROUPValue &= portPRIORITY_GROUP_MASK;
 8006edc:	f44f 7340 	mov.w	r3, #768	; 0x300
 8006ee0:	6013      	str	r3, [r2, #0]
		*pucFirstUserPriorityRegister = ulOriginalPriority;
 8006ee2:	9b01      	ldr	r3, [sp, #4]
 8006ee4:	4a13      	ldr	r2, [pc, #76]	; (8006f34 <xPortStartScheduler+0xf0>)
 8006ee6:	b2db      	uxtb	r3, r3
 8006ee8:	7013      	strb	r3, [r2, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_PENDSV_PRI;
 8006eea:	4b15      	ldr	r3, [pc, #84]	; (8006f40 <xPortStartScheduler+0xfc>)
 8006eec:	681a      	ldr	r2, [r3, #0]
 8006eee:	f442 0270 	orr.w	r2, r2, #15728640	; 0xf00000
 8006ef2:	601a      	str	r2, [r3, #0]
	portNVIC_SYSPRI2_REG |= portNVIC_SYSTICK_PRI;
 8006ef4:	681a      	ldr	r2, [r3, #0]
 8006ef6:	f042 4270 	orr.w	r2, r2, #4026531840	; 0xf0000000
 8006efa:	601a      	str	r2, [r3, #0]
	vPortSetupTimerInterrupt();
 8006efc:	f7ff ff88 	bl	8006e10 <vPortSetupTimerInterrupt>
	uxCriticalNesting = 0;
 8006f00:	4b10      	ldr	r3, [pc, #64]	; (8006f44 <xPortStartScheduler+0x100>)
 8006f02:	2400      	movs	r4, #0
 8006f04:	601c      	str	r4, [r3, #0]
	vPortEnableVFP();
 8006f06:	f7ff fead 	bl	8006c64 <vPortEnableVFP>
	*( portFPCCR ) |= portASPEN_AND_LSPEN_BITS;
 8006f0a:	4a0f      	ldr	r2, [pc, #60]	; (8006f48 <xPortStartScheduler+0x104>)
 8006f0c:	6813      	ldr	r3, [r2, #0]
 8006f0e:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 8006f12:	6013      	str	r3, [r2, #0]
	prvPortStartFirstTask();
 8006f14:	f7ff fe92 	bl	8006c3c <prvPortStartFirstTask>
	vTaskSwitchContext();
 8006f18:	f001 f8d8 	bl	80080cc <vTaskSwitchContext>
	prvTaskExitError();
 8006f1c:	f7ff feac 	bl	8006c78 <prvTaskExitError>
}
 8006f20:	4620      	mov	r0, r4
 8006f22:	b002      	add	sp, #8
 8006f24:	bd10      	pop	{r4, pc}
 8006f26:	bf00      	nop
 8006f28:	e000ed00 	.word	0xe000ed00
 8006f2c:	410fc271 	.word	0x410fc271
 8006f30:	410fc270 	.word	0x410fc270
 8006f34:	e000e400 	.word	0xe000e400
 8006f38:	20009ab0 	.word	0x20009ab0
 8006f3c:	20009ab4 	.word	0x20009ab4
 8006f40:	e000ed20 	.word	0xe000ed20
 8006f44:	2000005c 	.word	0x2000005c
 8006f48:	e000ef34 	.word	0xe000ef34

08006f4c <vPortValidateInterruptPriority>:
	{
	uint32_t ulCurrentInterrupt;
	uint8_t ucCurrentPriority;

		/* Obtain the number of the currently executing interrupt. */
		__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 8006f4c:	f3ef 8305 	mrs	r3, IPSR

		/* Is the interrupt number a user defined interrupt? */
		if( ulCurrentInterrupt >= portFIRST_USER_INTERRUPT_NUMBER )
 8006f50:	2b0f      	cmp	r3, #15
 8006f52:	d90e      	bls.n	8006f72 <vPortValidateInterruptPriority+0x26>
		{
			/* Look up the interrupt's priority. */
			ucCurrentPriority = pcInterruptPriorityRegisters[ ulCurrentInterrupt ];
 8006f54:	4a10      	ldr	r2, [pc, #64]	; (8006f98 <vPortValidateInterruptPriority+0x4c>)
 8006f56:	5c9b      	ldrb	r3, [r3, r2]
			interrupt entry is as fast and simple as possible.

			The following links provide detailed information:
			http://www.freertos.org/RTOS-Cortex-M3-M4.html
			http://www.freertos.org/FAQHelp.html */
			configASSERT( ucCurrentPriority >= ucMaxSysCallPriority );
 8006f58:	4a10      	ldr	r2, [pc, #64]	; (8006f9c <vPortValidateInterruptPriority+0x50>)
 8006f5a:	7812      	ldrb	r2, [r2, #0]
 8006f5c:	429a      	cmp	r2, r3
 8006f5e:	d908      	bls.n	8006f72 <vPortValidateInterruptPriority+0x26>
 8006f60:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f64:	f383 8811 	msr	BASEPRI, r3
 8006f68:	f3bf 8f6f 	isb	sy
 8006f6c:	f3bf 8f4f 	dsb	sy
 8006f70:	e7fe      	b.n	8006f70 <vPortValidateInterruptPriority+0x24>
		configuration then the correct setting can be achieved on all Cortex-M
		devices by calling NVIC_SetPriorityGrouping( 0 ); before starting the
		scheduler.  Note however that some vendor specific peripheral libraries
		assume a non-zero priority group setting, in which cases using a value
		of zero will result in unpredictable behaviour. */
		configASSERT( ( portAIRCR_REG & portPRIORITY_GROUP_MASK ) <= ulMaxPRIGROUPValue );
 8006f72:	4b0b      	ldr	r3, [pc, #44]	; (8006fa0 <vPortValidateInterruptPriority+0x54>)
 8006f74:	4a0b      	ldr	r2, [pc, #44]	; (8006fa4 <vPortValidateInterruptPriority+0x58>)
 8006f76:	681b      	ldr	r3, [r3, #0]
 8006f78:	6812      	ldr	r2, [r2, #0]
 8006f7a:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 8006f7e:	4293      	cmp	r3, r2
 8006f80:	d908      	bls.n	8006f94 <vPortValidateInterruptPriority+0x48>
 8006f82:	f04f 0350 	mov.w	r3, #80	; 0x50
 8006f86:	f383 8811 	msr	BASEPRI, r3
 8006f8a:	f3bf 8f6f 	isb	sy
 8006f8e:	f3bf 8f4f 	dsb	sy
 8006f92:	e7fe      	b.n	8006f92 <vPortValidateInterruptPriority+0x46>
	}
 8006f94:	4770      	bx	lr
 8006f96:	bf00      	nop
 8006f98:	e000e3f0 	.word	0xe000e3f0
 8006f9c:	20009ab0 	.word	0x20009ab0
 8006fa0:	e000ed0c 	.word	0xe000ed0c
 8006fa4:	20009ab4 	.word	0x20009ab4

08006fa8 <prvIsQueueEmpty>:
	taskEXIT_CRITICAL();
}
/*-----------------------------------------------------------*/

static BaseType_t prvIsQueueEmpty( const Queue_t *pxQueue )
{
 8006fa8:	b510      	push	{r4, lr}
 8006faa:	4604      	mov	r4, r0
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8006fac:	f7ff feb2 	bl	8006d14 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t )  0 )
 8006fb0:	6ba4      	ldr	r4, [r4, #56]	; 0x38
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8006fb2:	f7ff fed1 	bl	8006d58 <vPortExitCritical>

	return xReturn;
}
 8006fb6:	fab4 f084 	clz	r0, r4
 8006fba:	0940      	lsrs	r0, r0, #5
 8006fbc:	bd10      	pop	{r4, pc}

08006fbe <prvCopyDataToQueue>:
{
 8006fbe:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8006fc0:	4615      	mov	r5, r2
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8006fc2:	6c02      	ldr	r2, [r0, #64]	; 0x40
	uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8006fc4:	6b86      	ldr	r6, [r0, #56]	; 0x38
{
 8006fc6:	4604      	mov	r4, r0
	if( pxQueue->uxItemSize == ( UBaseType_t ) 0 )
 8006fc8:	b952      	cbnz	r2, 8006fe0 <prvCopyDataToQueue+0x22>
			if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8006fca:	6807      	ldr	r7, [r0, #0]
 8006fcc:	bb47      	cbnz	r7, 8007020 <prvCopyDataToQueue+0x62>
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8006fce:	6880      	ldr	r0, [r0, #8]
 8006fd0:	f001 f9e2 	bl	8008398 <xTaskPriorityDisinherit>
				pxQueue->u.xSemaphore.xMutexHolder = NULL;
 8006fd4:	60a7      	str	r7, [r4, #8]
				xReturn = xTaskPriorityDisinherit( pxQueue->u.xSemaphore.xMutexHolder );
 8006fd6:	4605      	mov	r5, r0
	pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8006fd8:	3601      	adds	r6, #1
 8006fda:	63a6      	str	r6, [r4, #56]	; 0x38
}
 8006fdc:	4628      	mov	r0, r5
 8006fde:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	else if( xPosition == queueSEND_TO_BACK )
 8006fe0:	b965      	cbnz	r5, 8006ffc <prvCopyDataToQueue+0x3e>
		( void ) memcpy( ( void * ) pxQueue->pcWriteTo, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports, plus previous logic ensures a null pointer can only be passed to memcpy() if the copy size is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8006fe2:	6840      	ldr	r0, [r0, #4]
 8006fe4:	f012 fba4 	bl	8019730 <memcpy>
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006fe8:	6863      	ldr	r3, [r4, #4]
 8006fea:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8006fec:	4413      	add	r3, r2
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8006fee:	68a2      	ldr	r2, [r4, #8]
		pxQueue->pcWriteTo += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8006ff0:	6063      	str	r3, [r4, #4]
		if( pxQueue->pcWriteTo >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 8006ff2:	4293      	cmp	r3, r2
 8006ff4:	d3f0      	bcc.n	8006fd8 <prvCopyDataToQueue+0x1a>
			pxQueue->pcWriteTo = pxQueue->pcHead;
 8006ff6:	6823      	ldr	r3, [r4, #0]
 8006ff8:	6063      	str	r3, [r4, #4]
 8006ffa:	e7ed      	b.n	8006fd8 <prvCopyDataToQueue+0x1a>
		( void ) memcpy( ( void * ) pxQueue->u.xQueue.pcReadFrom, pvItemToQueue, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e9087 !e418 MISRA exception as the casts are only redundant for some ports.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes.  Assert checks null pointer only used when length is 0. */
 8006ffc:	68c0      	ldr	r0, [r0, #12]
 8006ffe:	f012 fb97 	bl	8019730 <memcpy>
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 8007002:	6c22      	ldr	r2, [r4, #64]	; 0x40
 8007004:	68e3      	ldr	r3, [r4, #12]
 8007006:	4251      	negs	r1, r2
 8007008:	1a9b      	subs	r3, r3, r2
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800700a:	6822      	ldr	r2, [r4, #0]
		pxQueue->u.xQueue.pcReadFrom -= pxQueue->uxItemSize;
 800700c:	60e3      	str	r3, [r4, #12]
		if( pxQueue->u.xQueue.pcReadFrom < pxQueue->pcHead ) /*lint !e946 MISRA exception justified as comparison of pointers is the cleanest solution. */
 800700e:	4293      	cmp	r3, r2
			pxQueue->u.xQueue.pcReadFrom = ( pxQueue->u.xQueue.pcTail - pxQueue->uxItemSize );
 8007010:	bf3e      	ittt	cc
 8007012:	68a3      	ldrcc	r3, [r4, #8]
 8007014:	185b      	addcc	r3, r3, r1
 8007016:	60e3      	strcc	r3, [r4, #12]
		if( xPosition == queueOVERWRITE )
 8007018:	2d02      	cmp	r5, #2
 800701a:	d101      	bne.n	8007020 <prvCopyDataToQueue+0x62>
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 800701c:	b116      	cbz	r6, 8007024 <prvCopyDataToQueue+0x66>
				--uxMessagesWaiting;
 800701e:	3e01      	subs	r6, #1
BaseType_t xReturn = pdFALSE;
 8007020:	2500      	movs	r5, #0
 8007022:	e7d9      	b.n	8006fd8 <prvCopyDataToQueue+0x1a>
 8007024:	4635      	mov	r5, r6
 8007026:	e7d7      	b.n	8006fd8 <prvCopyDataToQueue+0x1a>

08007028 <prvCopyDataFromQueue>:
{
 8007028:	4603      	mov	r3, r0
 800702a:	b410      	push	{r4}
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 800702c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
{
 800702e:	4608      	mov	r0, r1
	if( pxQueue->uxItemSize != ( UBaseType_t ) 0 )
 8007030:	b16a      	cbz	r2, 800704e <prvCopyDataFromQueue+0x26>
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007032:	68dc      	ldr	r4, [r3, #12]
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007034:	6899      	ldr	r1, [r3, #8]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 8007036:	4414      	add	r4, r2
		if( pxQueue->u.xQueue.pcReadFrom >= pxQueue->u.xQueue.pcTail ) /*lint !e946 MISRA exception justified as use of the relational operator is the cleanest solutions. */
 8007038:	428c      	cmp	r4, r1
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 800703a:	bf28      	it	cs
 800703c:	6819      	ldrcs	r1, [r3, #0]
		pxQueue->u.xQueue.pcReadFrom += pxQueue->uxItemSize; /*lint !e9016 Pointer arithmetic on char types ok, especially in this use case where it is the clearest way of conveying intent. */
 800703e:	60dc      	str	r4, [r3, #12]
			pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead;
 8007040:	bf28      	it	cs
 8007042:	60d9      	strcs	r1, [r3, #12]
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 8007044:	68d9      	ldr	r1, [r3, #12]
}
 8007046:	f85d 4b04 	ldr.w	r4, [sp], #4
		( void ) memcpy( ( void * ) pvBuffer, ( void * ) pxQueue->u.xQueue.pcReadFrom, ( size_t ) pxQueue->uxItemSize ); /*lint !e961 !e418 !e9087 MISRA exception as the casts are only redundant for some ports.  Also previous logic ensures a null pointer can only be passed to memcpy() when the count is 0.  Cast to void required by function signature and safe as no alignment requirement and copy length specified in bytes. */
 800704a:	f012 bb71 	b.w	8019730 <memcpy>
}
 800704e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007052:	4770      	bx	lr

08007054 <prvUnlockQueue>:
{
 8007054:	b570      	push	{r4, r5, r6, lr}
 8007056:	4604      	mov	r4, r0
	taskENTER_CRITICAL();
 8007058:	f7ff fe5c 	bl	8006d14 <vPortEnterCritical>
		int8_t cTxLock = pxQueue->cTxLock;
 800705c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007060:	f104 0624 	add.w	r6, r4, #36	; 0x24
		int8_t cTxLock = pxQueue->cTxLock;
 8007064:	b26d      	sxtb	r5, r5
		while( cTxLock > queueLOCKED_UNMODIFIED )
 8007066:	2d00      	cmp	r5, #0
 8007068:	dc14      	bgt.n	8007094 <prvUnlockQueue+0x40>
		pxQueue->cTxLock = queueUNLOCKED;
 800706a:	23ff      	movs	r3, #255	; 0xff
 800706c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
	taskEXIT_CRITICAL();
 8007070:	f7ff fe72 	bl	8006d58 <vPortExitCritical>
	taskENTER_CRITICAL();
 8007074:	f7ff fe4e 	bl	8006d14 <vPortEnterCritical>
		int8_t cRxLock = pxQueue->cRxLock;
 8007078:	f894 5044 	ldrb.w	r5, [r4, #68]	; 0x44
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800707c:	f104 0610 	add.w	r6, r4, #16
		int8_t cRxLock = pxQueue->cRxLock;
 8007080:	b26d      	sxtb	r5, r5
		while( cRxLock > queueLOCKED_UNMODIFIED )
 8007082:	2d00      	cmp	r5, #0
 8007084:	dc12      	bgt.n	80070ac <prvUnlockQueue+0x58>
		pxQueue->cRxLock = queueUNLOCKED;
 8007086:	23ff      	movs	r3, #255	; 0xff
 8007088:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
}
 800708c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
	taskEXIT_CRITICAL();
 8007090:	f7ff be62 	b.w	8006d58 <vPortExitCritical>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007094:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007096:	2b00      	cmp	r3, #0
 8007098:	d0e7      	beq.n	800706a <prvUnlockQueue+0x16>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 800709a:	4630      	mov	r0, r6
 800709c:	f001 f898 	bl	80081d0 <xTaskRemoveFromEventList>
 80070a0:	b108      	cbz	r0, 80070a6 <prvUnlockQueue+0x52>
						vTaskMissedYield();
 80070a2:	f001 f921 	bl	80082e8 <vTaskMissedYield>
			--cTxLock;
 80070a6:	3d01      	subs	r5, #1
 80070a8:	b26d      	sxtb	r5, r5
 80070aa:	e7dc      	b.n	8007066 <prvUnlockQueue+0x12>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80070ac:	6923      	ldr	r3, [r4, #16]
 80070ae:	2b00      	cmp	r3, #0
 80070b0:	d0e9      	beq.n	8007086 <prvUnlockQueue+0x32>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80070b2:	4630      	mov	r0, r6
 80070b4:	f001 f88c 	bl	80081d0 <xTaskRemoveFromEventList>
 80070b8:	b108      	cbz	r0, 80070be <prvUnlockQueue+0x6a>
					vTaskMissedYield();
 80070ba:	f001 f915 	bl	80082e8 <vTaskMissedYield>
				--cRxLock;
 80070be:	3d01      	subs	r5, #1
 80070c0:	b26d      	sxtb	r5, r5
 80070c2:	e7de      	b.n	8007082 <prvUnlockQueue+0x2e>

080070c4 <xQueueGenericReset>:
{
 80070c4:	b538      	push	{r3, r4, r5, lr}
 80070c6:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80070c8:	4604      	mov	r4, r0
 80070ca:	b940      	cbnz	r0, 80070de <xQueueGenericReset+0x1a>
 80070cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80070d0:	f383 8811 	msr	BASEPRI, r3
 80070d4:	f3bf 8f6f 	isb	sy
 80070d8:	f3bf 8f4f 	dsb	sy
 80070dc:	e7fe      	b.n	80070dc <xQueueGenericReset+0x18>
	taskENTER_CRITICAL();
 80070de:	f7ff fe19 	bl	8006d14 <vPortEnterCritical>
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80070e2:	e9d4 310f 	ldrd	r3, r1, [r4, #60]	; 0x3c
 80070e6:	6822      	ldr	r2, [r4, #0]
		pxQueue->pcWriteTo = pxQueue->pcHead;
 80070e8:	6062      	str	r2, [r4, #4]
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80070ea:	434b      	muls	r3, r1
 80070ec:	18d0      	adds	r0, r2, r3
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80070ee:	1a5b      	subs	r3, r3, r1
 80070f0:	4413      	add	r3, r2
		pxQueue->u.xQueue.pcTail = pxQueue->pcHead + ( pxQueue->uxLength * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80070f2:	60a0      	str	r0, [r4, #8]
		pxQueue->u.xQueue.pcReadFrom = pxQueue->pcHead + ( ( pxQueue->uxLength - 1U ) * pxQueue->uxItemSize ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 80070f4:	60e3      	str	r3, [r4, #12]
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80070f6:	2000      	movs	r0, #0
		pxQueue->cRxLock = queueUNLOCKED;
 80070f8:	23ff      	movs	r3, #255	; 0xff
		pxQueue->uxMessagesWaiting = ( UBaseType_t ) 0U;
 80070fa:	63a0      	str	r0, [r4, #56]	; 0x38
		pxQueue->cRxLock = queueUNLOCKED;
 80070fc:	f884 3044 	strb.w	r3, [r4, #68]	; 0x44
		pxQueue->cTxLock = queueUNLOCKED;
 8007100:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
		if( xNewQueue == pdFALSE )
 8007104:	b995      	cbnz	r5, 800712c <xQueueGenericReset+0x68>
			if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007106:	6923      	ldr	r3, [r4, #16]
 8007108:	b163      	cbz	r3, 8007124 <xQueueGenericReset+0x60>
				if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 800710a:	f104 0010 	add.w	r0, r4, #16
 800710e:	f001 f85f 	bl	80081d0 <xTaskRemoveFromEventList>
 8007112:	b138      	cbz	r0, 8007124 <xQueueGenericReset+0x60>
					queueYIELD_IF_USING_PREEMPTION();
 8007114:	4b0a      	ldr	r3, [pc, #40]	; (8007140 <xQueueGenericReset+0x7c>)
 8007116:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800711a:	601a      	str	r2, [r3, #0]
 800711c:	f3bf 8f4f 	dsb	sy
 8007120:	f3bf 8f6f 	isb	sy
	taskEXIT_CRITICAL();
 8007124:	f7ff fe18 	bl	8006d58 <vPortExitCritical>
}
 8007128:	2001      	movs	r0, #1
 800712a:	bd38      	pop	{r3, r4, r5, pc}
			vListInitialise( &( pxQueue->xTasksWaitingToSend ) );
 800712c:	f104 0010 	add.w	r0, r4, #16
 8007130:	f7ff fd42 	bl	8006bb8 <vListInitialise>
			vListInitialise( &( pxQueue->xTasksWaitingToReceive ) );
 8007134:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007138:	f7ff fd3e 	bl	8006bb8 <vListInitialise>
 800713c:	e7f2      	b.n	8007124 <xQueueGenericReset+0x60>
 800713e:	bf00      	nop
 8007140:	e000ed04 	.word	0xe000ed04

08007144 <xQueueGenericCreateStatic>:
	{
 8007144:	b513      	push	{r0, r1, r4, lr}
 8007146:	461c      	mov	r4, r3
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 8007148:	b940      	cbnz	r0, 800715c <xQueueGenericCreateStatic+0x18>
 800714a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800714e:	f383 8811 	msr	BASEPRI, r3
 8007152:	f3bf 8f6f 	isb	sy
 8007156:	f3bf 8f4f 	dsb	sy
 800715a:	e7fe      	b.n	800715a <xQueueGenericCreateStatic+0x16>
		configASSERT( pxStaticQueue != NULL );
 800715c:	b943      	cbnz	r3, 8007170 <xQueueGenericCreateStatic+0x2c>
 800715e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007162:	f383 8811 	msr	BASEPRI, r3
 8007166:	f3bf 8f6f 	isb	sy
 800716a:	f3bf 8f4f 	dsb	sy
 800716e:	e7fe      	b.n	800716e <xQueueGenericCreateStatic+0x2a>
		configASSERT( !( ( pucQueueStorage != NULL ) && ( uxItemSize == 0 ) ) );
 8007170:	b14a      	cbz	r2, 8007186 <xQueueGenericCreateStatic+0x42>
 8007172:	b991      	cbnz	r1, 800719a <xQueueGenericCreateStatic+0x56>
 8007174:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007178:	f383 8811 	msr	BASEPRI, r3
 800717c:	f3bf 8f6f 	isb	sy
 8007180:	f3bf 8f4f 	dsb	sy
 8007184:	e7fe      	b.n	8007184 <xQueueGenericCreateStatic+0x40>
		configASSERT( !( ( pucQueueStorage == NULL ) && ( uxItemSize != 0 ) ) );
 8007186:	b141      	cbz	r1, 800719a <xQueueGenericCreateStatic+0x56>
 8007188:	f04f 0350 	mov.w	r3, #80	; 0x50
 800718c:	f383 8811 	msr	BASEPRI, r3
 8007190:	f3bf 8f6f 	isb	sy
 8007194:	f3bf 8f4f 	dsb	sy
 8007198:	e7fe      	b.n	8007198 <xQueueGenericCreateStatic+0x54>
			volatile size_t xSize = sizeof( StaticQueue_t );
 800719a:	2350      	movs	r3, #80	; 0x50
 800719c:	9301      	str	r3, [sp, #4]
			configASSERT( xSize == sizeof( Queue_t ) );
 800719e:	9b01      	ldr	r3, [sp, #4]
 80071a0:	2b50      	cmp	r3, #80	; 0x50
 80071a2:	d008      	beq.n	80071b6 <xQueueGenericCreateStatic+0x72>
 80071a4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071a8:	f383 8811 	msr	BASEPRI, r3
 80071ac:	f3bf 8f6f 	isb	sy
 80071b0:	f3bf 8f4f 	dsb	sy
 80071b4:	e7fe      	b.n	80071b4 <xQueueGenericCreateStatic+0x70>
	if( uxItemSize == ( UBaseType_t ) 0 )
 80071b6:	2900      	cmp	r1, #0
 80071b8:	bf08      	it	eq
 80071ba:	4622      	moveq	r2, r4
			( void ) xSize; /* Keeps lint quiet when configASSERT() is not defined. */
 80071bc:	9b01      	ldr	r3, [sp, #4]
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80071be:	6022      	str	r2, [r4, #0]
 80071c0:	2301      	movs	r3, #1
	pxNewQueue->uxItemSize = uxItemSize;
 80071c2:	e9c4 010f 	strd	r0, r1, [r4, #60]	; 0x3c
				pxNewQueue->ucStaticallyAllocated = pdTRUE;
 80071c6:	f884 3046 	strb.w	r3, [r4, #70]	; 0x46
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 80071ca:	4619      	mov	r1, r3
 80071cc:	4620      	mov	r0, r4
 80071ce:	f7ff ff79 	bl	80070c4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 80071d2:	f89d 3010 	ldrb.w	r3, [sp, #16]
 80071d6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
	}
 80071da:	4620      	mov	r0, r4
 80071dc:	b002      	add	sp, #8
 80071de:	bd10      	pop	{r4, pc}

080071e0 <xQueueGenericCreate>:
	{
 80071e0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80071e2:	460d      	mov	r5, r1
 80071e4:	4617      	mov	r7, r2
		configASSERT( uxQueueLength > ( UBaseType_t ) 0 );
 80071e6:	4606      	mov	r6, r0
 80071e8:	b940      	cbnz	r0, 80071fc <xQueueGenericCreate+0x1c>
 80071ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 80071ee:	f383 8811 	msr	BASEPRI, r3
 80071f2:	f3bf 8f6f 	isb	sy
 80071f6:	f3bf 8f4f 	dsb	sy
 80071fa:	e7fe      	b.n	80071fa <xQueueGenericCreate+0x1a>
		xQueueSizeInBytes = ( size_t ) ( uxQueueLength * uxItemSize ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80071fc:	4348      	muls	r0, r1
		pxNewQueue = ( Queue_t * ) pvPortMalloc( sizeof( Queue_t ) + xQueueSizeInBytes ); /*lint !e9087 !e9079 see comment above. */
 80071fe:	3050      	adds	r0, #80	; 0x50
 8007200:	f7ff fc0a 	bl	8006a18 <pvPortMalloc>
		if( pxNewQueue != NULL )
 8007204:	4604      	mov	r4, r0
 8007206:	b170      	cbz	r0, 8007226 <xQueueGenericCreate+0x46>
				pxNewQueue->ucStaticallyAllocated = pdFALSE;
 8007208:	2300      	movs	r3, #0
 800720a:	f880 3046 	strb.w	r3, [r0, #70]	; 0x46
	if( uxItemSize == ( UBaseType_t ) 0 )
 800720e:	b165      	cbz	r5, 800722a <xQueueGenericCreate+0x4a>
			pucQueueStorage += sizeof( Queue_t ); /*lint !e9016 Pointer arithmetic allowed on char types, especially when it assists conveying intent. */
 8007210:	f100 0350 	add.w	r3, r0, #80	; 0x50
	pxNewQueue->uxItemSize = uxItemSize;
 8007214:	e9c4 650f 	strd	r6, r5, [r4, #60]	; 0x3c
 8007218:	6023      	str	r3, [r4, #0]
	( void ) xQueueGenericReset( pxNewQueue, pdTRUE );
 800721a:	2101      	movs	r1, #1
 800721c:	4620      	mov	r0, r4
 800721e:	f7ff ff51 	bl	80070c4 <xQueueGenericReset>
		pxNewQueue->ucQueueType = ucQueueType;
 8007222:	f884 704c 	strb.w	r7, [r4, #76]	; 0x4c
	}
 8007226:	4620      	mov	r0, r4
 8007228:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800722a:	4603      	mov	r3, r0
 800722c:	e7f2      	b.n	8007214 <xQueueGenericCreate+0x34>

0800722e <xQueueCreateCountingSemaphoreStatic>:
	{
 800722e:	b513      	push	{r0, r1, r4, lr}
 8007230:	4613      	mov	r3, r2
 8007232:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007234:	b940      	cbnz	r0, 8007248 <xQueueCreateCountingSemaphoreStatic+0x1a>
 8007236:	f04f 0350 	mov.w	r3, #80	; 0x50
 800723a:	f383 8811 	msr	BASEPRI, r3
 800723e:	f3bf 8f6f 	isb	sy
 8007242:	f3bf 8f4f 	dsb	sy
 8007246:	e7fe      	b.n	8007246 <xQueueCreateCountingSemaphoreStatic+0x18>
		configASSERT( uxInitialCount <= uxMaxCount );
 8007248:	4288      	cmp	r0, r1
 800724a:	d208      	bcs.n	800725e <xQueueCreateCountingSemaphoreStatic+0x30>
 800724c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007250:	f383 8811 	msr	BASEPRI, r3
 8007254:	f3bf 8f6f 	isb	sy
 8007258:	f3bf 8f4f 	dsb	sy
 800725c:	e7fe      	b.n	800725c <xQueueCreateCountingSemaphoreStatic+0x2e>
		xHandle = xQueueGenericCreateStatic( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, NULL, pxStaticQueue, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 800725e:	2202      	movs	r2, #2
 8007260:	9200      	str	r2, [sp, #0]
 8007262:	2200      	movs	r2, #0
 8007264:	4611      	mov	r1, r2
 8007266:	f7ff ff6d 	bl	8007144 <xQueueGenericCreateStatic>
		if( xHandle != NULL )
 800726a:	b100      	cbz	r0, 800726e <xQueueCreateCountingSemaphoreStatic+0x40>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 800726c:	6384      	str	r4, [r0, #56]	; 0x38
	}
 800726e:	b002      	add	sp, #8
 8007270:	bd10      	pop	{r4, pc}

08007272 <xQueueCreateCountingSemaphore>:
	{
 8007272:	b510      	push	{r4, lr}
 8007274:	460c      	mov	r4, r1
		configASSERT( uxMaxCount != 0 );
 8007276:	b940      	cbnz	r0, 800728a <xQueueCreateCountingSemaphore+0x18>
 8007278:	f04f 0350 	mov.w	r3, #80	; 0x50
 800727c:	f383 8811 	msr	BASEPRI, r3
 8007280:	f3bf 8f6f 	isb	sy
 8007284:	f3bf 8f4f 	dsb	sy
 8007288:	e7fe      	b.n	8007288 <xQueueCreateCountingSemaphore+0x16>
		configASSERT( uxInitialCount <= uxMaxCount );
 800728a:	4288      	cmp	r0, r1
 800728c:	d208      	bcs.n	80072a0 <xQueueCreateCountingSemaphore+0x2e>
 800728e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007292:	f383 8811 	msr	BASEPRI, r3
 8007296:	f3bf 8f6f 	isb	sy
 800729a:	f3bf 8f4f 	dsb	sy
 800729e:	e7fe      	b.n	800729e <xQueueCreateCountingSemaphore+0x2c>
		xHandle = xQueueGenericCreate( uxMaxCount, queueSEMAPHORE_QUEUE_ITEM_LENGTH, queueQUEUE_TYPE_COUNTING_SEMAPHORE );
 80072a0:	2202      	movs	r2, #2
 80072a2:	2100      	movs	r1, #0
 80072a4:	f7ff ff9c 	bl	80071e0 <xQueueGenericCreate>
		if( xHandle != NULL )
 80072a8:	b100      	cbz	r0, 80072ac <xQueueCreateCountingSemaphore+0x3a>
			( ( Queue_t * ) xHandle )->uxMessagesWaiting = uxInitialCount;
 80072aa:	6384      	str	r4, [r0, #56]	; 0x38
	}
 80072ac:	bd10      	pop	{r4, pc}
	...

080072b0 <xQueueGenericSend>:
{
 80072b0:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80072b4:	4688      	mov	r8, r1
 80072b6:	9201      	str	r2, [sp, #4]
 80072b8:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 80072ba:	4604      	mov	r4, r0
 80072bc:	b940      	cbnz	r0, 80072d0 <xQueueGenericSend+0x20>
 80072be:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072c2:	f383 8811 	msr	BASEPRI, r3
 80072c6:	f3bf 8f6f 	isb	sy
 80072ca:	f3bf 8f4f 	dsb	sy
 80072ce:	e7fe      	b.n	80072ce <xQueueGenericSend+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80072d0:	b951      	cbnz	r1, 80072e8 <xQueueGenericSend+0x38>
 80072d2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80072d4:	b143      	cbz	r3, 80072e8 <xQueueGenericSend+0x38>
 80072d6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072da:	f383 8811 	msr	BASEPRI, r3
 80072de:	f3bf 8f6f 	isb	sy
 80072e2:	f3bf 8f4f 	dsb	sy
 80072e6:	e7fe      	b.n	80072e6 <xQueueGenericSend+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 80072e8:	2f02      	cmp	r7, #2
 80072ea:	d10b      	bne.n	8007304 <xQueueGenericSend+0x54>
 80072ec:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80072ee:	2b01      	cmp	r3, #1
 80072f0:	d008      	beq.n	8007304 <xQueueGenericSend+0x54>
 80072f2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80072f6:	f383 8811 	msr	BASEPRI, r3
 80072fa:	f3bf 8f6f 	isb	sy
 80072fe:	f3bf 8f4f 	dsb	sy
 8007302:	e7fe      	b.n	8007302 <xQueueGenericSend+0x52>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 8007304:	f000 fff6 	bl	80082f4 <xTaskGetSchedulerState>
 8007308:	4606      	mov	r6, r0
 800730a:	b950      	cbnz	r0, 8007322 <xQueueGenericSend+0x72>
 800730c:	9b01      	ldr	r3, [sp, #4]
 800730e:	b14b      	cbz	r3, 8007324 <xQueueGenericSend+0x74>
 8007310:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007314:	f383 8811 	msr	BASEPRI, r3
 8007318:	f3bf 8f6f 	isb	sy
 800731c:	f3bf 8f4f 	dsb	sy
 8007320:	e7fe      	b.n	8007320 <xQueueGenericSend+0x70>
 8007322:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 8007324:	f8df a0e8 	ldr.w	sl, [pc, #232]	; 8007410 <xQueueGenericSend+0x160>
		prvLockQueue( pxQueue );
 8007328:	f04f 0900 	mov.w	r9, #0
 800732c:	e037      	b.n	800739e <xQueueGenericSend+0xee>
				if( xTicksToWait == ( TickType_t ) 0 )
 800732e:	9d01      	ldr	r5, [sp, #4]
 8007330:	b91d      	cbnz	r5, 800733a <xQueueGenericSend+0x8a>
					taskEXIT_CRITICAL();
 8007332:	f7ff fd11 	bl	8006d58 <vPortExitCritical>
			return errQUEUE_FULL;
 8007336:	2000      	movs	r0, #0
 8007338:	e050      	b.n	80073dc <xQueueGenericSend+0x12c>
				else if( xEntryTimeSet == pdFALSE )
 800733a:	b916      	cbnz	r6, 8007342 <xQueueGenericSend+0x92>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800733c:	a802      	add	r0, sp, #8
 800733e:	f000 ff8b 	bl	8008258 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007342:	f7ff fd09 	bl	8006d58 <vPortExitCritical>
		vTaskSuspendAll();
 8007346:	f000 fd19 	bl	8007d7c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800734a:	f7ff fce3 	bl	8006d14 <vPortEnterCritical>
 800734e:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007352:	2bff      	cmp	r3, #255	; 0xff
 8007354:	bf08      	it	eq
 8007356:	f884 9044 	strbeq.w	r9, [r4, #68]	; 0x44
 800735a:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 800735e:	2bff      	cmp	r3, #255	; 0xff
 8007360:	bf08      	it	eq
 8007362:	f884 9045 	strbeq.w	r9, [r4, #69]	; 0x45
 8007366:	f7ff fcf7 	bl	8006d58 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800736a:	a901      	add	r1, sp, #4
 800736c:	a802      	add	r0, sp, #8
 800736e:	f000 ff7f 	bl	8008270 <xTaskCheckForTimeOut>
 8007372:	2800      	cmp	r0, #0
 8007374:	d146      	bne.n	8007404 <xQueueGenericSend+0x154>

static BaseType_t prvIsQueueFull( const Queue_t *pxQueue )
{
BaseType_t xReturn;

	taskENTER_CRITICAL();
 8007376:	f7ff fccd 	bl	8006d14 <vPortEnterCritical>
	{
		if( pxQueue->uxMessagesWaiting == pxQueue->uxLength )
 800737a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 800737c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800737e:	429a      	cmp	r2, r3
 8007380:	d12f      	bne.n	80073e2 <xQueueGenericSend+0x132>
		else
		{
			xReturn = pdFALSE;
		}
	}
	taskEXIT_CRITICAL();
 8007382:	f7ff fce9 	bl	8006d58 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToSend ), xTicksToWait );
 8007386:	9901      	ldr	r1, [sp, #4]
 8007388:	f104 0010 	add.w	r0, r4, #16
 800738c:	f000 fee8 	bl	8008160 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 8007390:	4620      	mov	r0, r4
 8007392:	f7ff fe5f 	bl	8007054 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007396:	f000 fd95 	bl	8007ec4 <xTaskResumeAll>
 800739a:	b350      	cbz	r0, 80073f2 <xQueueGenericSend+0x142>
 800739c:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800739e:	f7ff fcb9 	bl	8006d14 <vPortEnterCritical>
			if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 80073a2:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 80073a4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80073a6:	429a      	cmp	r2, r3
 80073a8:	d301      	bcc.n	80073ae <xQueueGenericSend+0xfe>
 80073aa:	2f02      	cmp	r7, #2
 80073ac:	d1bf      	bne.n	800732e <xQueueGenericSend+0x7e>
					xYieldRequired = prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 80073ae:	463a      	mov	r2, r7
 80073b0:	4641      	mov	r1, r8
 80073b2:	4620      	mov	r0, r4
 80073b4:	f7ff fe03 	bl	8006fbe <prvCopyDataToQueue>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80073b8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80073ba:	b11b      	cbz	r3, 80073c4 <xQueueGenericSend+0x114>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80073bc:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80073c0:	f000 ff06 	bl	80081d0 <xTaskRemoveFromEventList>
					else if( xYieldRequired != pdFALSE )
 80073c4:	b138      	cbz	r0, 80073d6 <xQueueGenericSend+0x126>
						queueYIELD_IF_USING_PREEMPTION();
 80073c6:	4b12      	ldr	r3, [pc, #72]	; (8007410 <xQueueGenericSend+0x160>)
 80073c8:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80073cc:	601a      	str	r2, [r3, #0]
 80073ce:	f3bf 8f4f 	dsb	sy
 80073d2:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80073d6:	f7ff fcbf 	bl	8006d58 <vPortExitCritical>
				return pdPASS;
 80073da:	2001      	movs	r0, #1
}
 80073dc:	b004      	add	sp, #16
 80073de:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
	taskEXIT_CRITICAL();
 80073e2:	f7ff fcb9 	bl	8006d58 <vPortExitCritical>
				prvUnlockQueue( pxQueue );
 80073e6:	4620      	mov	r0, r4
 80073e8:	f7ff fe34 	bl	8007054 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80073ec:	f000 fd6a 	bl	8007ec4 <xTaskResumeAll>
 80073f0:	e7d4      	b.n	800739c <xQueueGenericSend+0xec>
					portYIELD_WITHIN_API();
 80073f2:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80073f6:	f8ca 3000 	str.w	r3, [sl]
 80073fa:	f3bf 8f4f 	dsb	sy
 80073fe:	f3bf 8f6f 	isb	sy
 8007402:	e7cb      	b.n	800739c <xQueueGenericSend+0xec>
			prvUnlockQueue( pxQueue );
 8007404:	4620      	mov	r0, r4
 8007406:	f7ff fe25 	bl	8007054 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 800740a:	f000 fd5b 	bl	8007ec4 <xTaskResumeAll>
 800740e:	e792      	b.n	8007336 <xQueueGenericSend+0x86>
 8007410:	e000ed04 	.word	0xe000ed04

08007414 <xQueueGenericSendFromISR>:
{
 8007414:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8007418:	4689      	mov	r9, r1
 800741a:	4690      	mov	r8, r2
 800741c:	461f      	mov	r7, r3
	configASSERT( pxQueue );
 800741e:	4604      	mov	r4, r0
 8007420:	b940      	cbnz	r0, 8007434 <xQueueGenericSendFromISR+0x20>
 8007422:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007426:	f383 8811 	msr	BASEPRI, r3
 800742a:	f3bf 8f6f 	isb	sy
 800742e:	f3bf 8f4f 	dsb	sy
 8007432:	e7fe      	b.n	8007432 <xQueueGenericSendFromISR+0x1e>
	configASSERT( !( ( pvItemToQueue == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007434:	b951      	cbnz	r1, 800744c <xQueueGenericSendFromISR+0x38>
 8007436:	6c03      	ldr	r3, [r0, #64]	; 0x40
 8007438:	b143      	cbz	r3, 800744c <xQueueGenericSendFromISR+0x38>
 800743a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800743e:	f383 8811 	msr	BASEPRI, r3
 8007442:	f3bf 8f6f 	isb	sy
 8007446:	f3bf 8f4f 	dsb	sy
 800744a:	e7fe      	b.n	800744a <xQueueGenericSendFromISR+0x36>
	configASSERT( !( ( xCopyPosition == queueOVERWRITE ) && ( pxQueue->uxLength != 1 ) ) );
 800744c:	2f02      	cmp	r7, #2
 800744e:	d10b      	bne.n	8007468 <xQueueGenericSendFromISR+0x54>
 8007450:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007452:	2b01      	cmp	r3, #1
 8007454:	d008      	beq.n	8007468 <xQueueGenericSendFromISR+0x54>
 8007456:	f04f 0350 	mov.w	r3, #80	; 0x50
 800745a:	f383 8811 	msr	BASEPRI, r3
 800745e:	f3bf 8f6f 	isb	sy
 8007462:	f3bf 8f4f 	dsb	sy
 8007466:	e7fe      	b.n	8007466 <xQueueGenericSendFromISR+0x52>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007468:	f7ff fd70 	bl	8006f4c <vPortValidateInterruptPriority>
	__asm volatile
 800746c:	f3ef 8611 	mrs	r6, BASEPRI
 8007470:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007474:	f383 8811 	msr	BASEPRI, r3
 8007478:	f3bf 8f6f 	isb	sy
 800747c:	f3bf 8f4f 	dsb	sy
		if( ( pxQueue->uxMessagesWaiting < pxQueue->uxLength ) || ( xCopyPosition == queueOVERWRITE ) )
 8007480:	6ba2      	ldr	r2, [r4, #56]	; 0x38
 8007482:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8007484:	429a      	cmp	r2, r3
 8007486:	d301      	bcc.n	800748c <xQueueGenericSendFromISR+0x78>
 8007488:	2f02      	cmp	r7, #2
 800748a:	d123      	bne.n	80074d4 <xQueueGenericSendFromISR+0xc0>
			const int8_t cTxLock = pxQueue->cTxLock;
 800748c:	f894 5045 	ldrb.w	r5, [r4, #69]	; 0x45
			const UBaseType_t uxPreviousMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007490:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			const int8_t cTxLock = pxQueue->cTxLock;
 8007492:	b26d      	sxtb	r5, r5
			( void ) prvCopyDataToQueue( pxQueue, pvItemToQueue, xCopyPosition );
 8007494:	463a      	mov	r2, r7
 8007496:	4649      	mov	r1, r9
 8007498:	4620      	mov	r0, r4
 800749a:	f7ff fd90 	bl	8006fbe <prvCopyDataToQueue>
			if( cTxLock == queueUNLOCKED )
 800749e:	1c6b      	adds	r3, r5, #1
 80074a0:	d113      	bne.n	80074ca <xQueueGenericSendFromISR+0xb6>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 80074a2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80074a4:	b90b      	cbnz	r3, 80074aa <xQueueGenericSendFromISR+0x96>
			xReturn = pdPASS;
 80074a6:	2001      	movs	r0, #1
 80074a8:	e00b      	b.n	80074c2 <xQueueGenericSendFromISR+0xae>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 80074aa:	f104 0024 	add.w	r0, r4, #36	; 0x24
 80074ae:	f000 fe8f 	bl	80081d0 <xTaskRemoveFromEventList>
 80074b2:	2800      	cmp	r0, #0
 80074b4:	d0f7      	beq.n	80074a6 <xQueueGenericSendFromISR+0x92>
							if( pxHigherPriorityTaskWoken != NULL )
 80074b6:	f1b8 0f00 	cmp.w	r8, #0
 80074ba:	d0f4      	beq.n	80074a6 <xQueueGenericSendFromISR+0x92>
								*pxHigherPriorityTaskWoken = pdTRUE;
 80074bc:	2001      	movs	r0, #1
 80074be:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80074c2:	f386 8811 	msr	BASEPRI, r6
}
 80074c6:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 80074ca:	3501      	adds	r5, #1
 80074cc:	b26d      	sxtb	r5, r5
 80074ce:	f884 5045 	strb.w	r5, [r4, #69]	; 0x45
 80074d2:	e7e8      	b.n	80074a6 <xQueueGenericSendFromISR+0x92>
			xReturn = errQUEUE_FULL;
 80074d4:	2000      	movs	r0, #0
 80074d6:	e7f4      	b.n	80074c2 <xQueueGenericSendFromISR+0xae>

080074d8 <xQueueGiveFromISR>:
{
 80074d8:	b570      	push	{r4, r5, r6, lr}
 80074da:	460d      	mov	r5, r1
	configASSERT( pxQueue );
 80074dc:	4604      	mov	r4, r0
 80074de:	b940      	cbnz	r0, 80074f2 <xQueueGiveFromISR+0x1a>
	__asm volatile
 80074e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074e4:	f383 8811 	msr	BASEPRI, r3
 80074e8:	f3bf 8f6f 	isb	sy
 80074ec:	f3bf 8f4f 	dsb	sy
 80074f0:	e7fe      	b.n	80074f0 <xQueueGiveFromISR+0x18>
	configASSERT( pxQueue->uxItemSize == 0 );
 80074f2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80074f4:	b143      	cbz	r3, 8007508 <xQueueGiveFromISR+0x30>
 80074f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80074fa:	f383 8811 	msr	BASEPRI, r3
 80074fe:	f3bf 8f6f 	isb	sy
 8007502:	f3bf 8f4f 	dsb	sy
 8007506:	e7fe      	b.n	8007506 <xQueueGiveFromISR+0x2e>
	configASSERT( !( ( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX ) && ( pxQueue->u.xSemaphore.xMutexHolder != NULL ) ) );
 8007508:	6803      	ldr	r3, [r0, #0]
 800750a:	b953      	cbnz	r3, 8007522 <xQueueGiveFromISR+0x4a>
 800750c:	6883      	ldr	r3, [r0, #8]
 800750e:	b143      	cbz	r3, 8007522 <xQueueGiveFromISR+0x4a>
 8007510:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007514:	f383 8811 	msr	BASEPRI, r3
 8007518:	f3bf 8f6f 	isb	sy
 800751c:	f3bf 8f4f 	dsb	sy
 8007520:	e7fe      	b.n	8007520 <xQueueGiveFromISR+0x48>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 8007522:	f7ff fd13 	bl	8006f4c <vPortValidateInterruptPriority>
	__asm volatile
 8007526:	f3ef 8611 	mrs	r6, BASEPRI
 800752a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800752e:	f383 8811 	msr	BASEPRI, r3
 8007532:	f3bf 8f6f 	isb	sy
 8007536:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800753a:	6ba2      	ldr	r2, [r4, #56]	; 0x38
		if( uxMessagesWaiting < pxQueue->uxLength )
 800753c:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 800753e:	4293      	cmp	r3, r2
 8007540:	d91c      	bls.n	800757c <xQueueGiveFromISR+0xa4>
			const int8_t cTxLock = pxQueue->cTxLock;
 8007542:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 8007546:	3201      	adds	r2, #1
			if( cTxLock == queueUNLOCKED )
 8007548:	29ff      	cmp	r1, #255	; 0xff
			const int8_t cTxLock = pxQueue->cTxLock;
 800754a:	b24b      	sxtb	r3, r1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting + ( UBaseType_t ) 1;
 800754c:	63a2      	str	r2, [r4, #56]	; 0x38
			if( cTxLock == queueUNLOCKED )
 800754e:	d110      	bne.n	8007572 <xQueueGiveFromISR+0x9a>
					if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToReceive ) ) == pdFALSE )
 8007550:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8007552:	b90b      	cbnz	r3, 8007558 <xQueueGiveFromISR+0x80>
			xReturn = pdPASS;
 8007554:	2001      	movs	r0, #1
 8007556:	e009      	b.n	800756c <xQueueGiveFromISR+0x94>
						if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToReceive ) ) != pdFALSE )
 8007558:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800755c:	f000 fe38 	bl	80081d0 <xTaskRemoveFromEventList>
 8007560:	2800      	cmp	r0, #0
 8007562:	d0f7      	beq.n	8007554 <xQueueGiveFromISR+0x7c>
							if( pxHigherPriorityTaskWoken != NULL )
 8007564:	2d00      	cmp	r5, #0
 8007566:	d0f5      	beq.n	8007554 <xQueueGiveFromISR+0x7c>
								*pxHigherPriorityTaskWoken = pdTRUE;
 8007568:	2001      	movs	r0, #1
 800756a:	6028      	str	r0, [r5, #0]
	__asm volatile
 800756c:	f386 8811 	msr	BASEPRI, r6
}
 8007570:	bd70      	pop	{r4, r5, r6, pc}
				pxQueue->cTxLock = ( int8_t ) ( cTxLock + 1 );
 8007572:	3301      	adds	r3, #1
 8007574:	b25b      	sxtb	r3, r3
 8007576:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 800757a:	e7eb      	b.n	8007554 <xQueueGiveFromISR+0x7c>
			xReturn = errQUEUE_FULL;
 800757c:	2000      	movs	r0, #0
 800757e:	e7f5      	b.n	800756c <xQueueGiveFromISR+0x94>

08007580 <xQueueReceive>:
{
 8007580:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007584:	b085      	sub	sp, #20
 8007586:	460f      	mov	r7, r1
 8007588:	9201      	str	r2, [sp, #4]
	configASSERT( ( pxQueue ) );
 800758a:	4604      	mov	r4, r0
 800758c:	b940      	cbnz	r0, 80075a0 <xQueueReceive+0x20>
	__asm volatile
 800758e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007592:	f383 8811 	msr	BASEPRI, r3
 8007596:	f3bf 8f6f 	isb	sy
 800759a:	f3bf 8f4f 	dsb	sy
 800759e:	e7fe      	b.n	800759e <xQueueReceive+0x1e>
	configASSERT( !( ( ( pvBuffer ) == NULL ) && ( ( pxQueue )->uxItemSize != ( UBaseType_t ) 0U ) ) );
 80075a0:	b951      	cbnz	r1, 80075b8 <xQueueReceive+0x38>
 80075a2:	6c03      	ldr	r3, [r0, #64]	; 0x40
 80075a4:	b143      	cbz	r3, 80075b8 <xQueueReceive+0x38>
 80075a6:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075aa:	f383 8811 	msr	BASEPRI, r3
 80075ae:	f3bf 8f6f 	isb	sy
 80075b2:	f3bf 8f4f 	dsb	sy
 80075b6:	e7fe      	b.n	80075b6 <xQueueReceive+0x36>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80075b8:	f000 fe9c 	bl	80082f4 <xTaskGetSchedulerState>
 80075bc:	4606      	mov	r6, r0
 80075be:	b950      	cbnz	r0, 80075d6 <xQueueReceive+0x56>
 80075c0:	9b01      	ldr	r3, [sp, #4]
 80075c2:	b14b      	cbz	r3, 80075d8 <xQueueReceive+0x58>
 80075c4:	f04f 0350 	mov.w	r3, #80	; 0x50
 80075c8:	f383 8811 	msr	BASEPRI, r3
 80075cc:	f3bf 8f6f 	isb	sy
 80075d0:	f3bf 8f4f 	dsb	sy
 80075d4:	e7fe      	b.n	80075d4 <xQueueReceive+0x54>
 80075d6:	2600      	movs	r6, #0
					portYIELD_WITHIN_API();
 80075d8:	f8df 90e0 	ldr.w	r9, [pc, #224]	; 80076bc <xQueueReceive+0x13c>
		prvLockQueue( pxQueue );
 80075dc:	f04f 0800 	mov.w	r8, #0
 80075e0:	e03b      	b.n	800765a <xQueueReceive+0xda>
				if( xTicksToWait == ( TickType_t ) 0 )
 80075e2:	9d01      	ldr	r5, [sp, #4]
 80075e4:	b91d      	cbnz	r5, 80075ee <xQueueReceive+0x6e>
					taskEXIT_CRITICAL();
 80075e6:	f7ff fbb7 	bl	8006d58 <vPortExitCritical>
				return errQUEUE_EMPTY;
 80075ea:	2000      	movs	r0, #0
 80075ec:	e052      	b.n	8007694 <xQueueReceive+0x114>
				else if( xEntryTimeSet == pdFALSE )
 80075ee:	b916      	cbnz	r6, 80075f6 <xQueueReceive+0x76>
					vTaskInternalSetTimeOutState( &xTimeOut );
 80075f0:	a802      	add	r0, sp, #8
 80075f2:	f000 fe31 	bl	8008258 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 80075f6:	f7ff fbaf 	bl	8006d58 <vPortExitCritical>
		vTaskSuspendAll();
 80075fa:	f000 fbbf 	bl	8007d7c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 80075fe:	f7ff fb89 	bl	8006d14 <vPortEnterCritical>
 8007602:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007606:	2bff      	cmp	r3, #255	; 0xff
 8007608:	bf08      	it	eq
 800760a:	f884 8044 	strbeq.w	r8, [r4, #68]	; 0x44
 800760e:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007612:	2bff      	cmp	r3, #255	; 0xff
 8007614:	bf08      	it	eq
 8007616:	f884 8045 	strbeq.w	r8, [r4, #69]	; 0x45
 800761a:	f7ff fb9d 	bl	8006d58 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800761e:	a901      	add	r1, sp, #4
 8007620:	a802      	add	r0, sp, #8
 8007622:	f000 fe25 	bl	8008270 <xTaskCheckForTimeOut>
 8007626:	2800      	cmp	r0, #0
 8007628:	d13d      	bne.n	80076a6 <xQueueReceive+0x126>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 800762a:	4620      	mov	r0, r4
 800762c:	f7ff fcbc 	bl	8006fa8 <prvIsQueueEmpty>
 8007630:	b398      	cbz	r0, 800769a <xQueueReceive+0x11a>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007632:	9901      	ldr	r1, [sp, #4]
 8007634:	f104 0024 	add.w	r0, r4, #36	; 0x24
 8007638:	f000 fd92 	bl	8008160 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 800763c:	4620      	mov	r0, r4
 800763e:	f7ff fd09 	bl	8007054 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 8007642:	f000 fc3f 	bl	8007ec4 <xTaskResumeAll>
 8007646:	b938      	cbnz	r0, 8007658 <xQueueReceive+0xd8>
					portYIELD_WITHIN_API();
 8007648:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 800764c:	f8c9 3000 	str.w	r3, [r9]
 8007650:	f3bf 8f4f 	dsb	sy
 8007654:	f3bf 8f6f 	isb	sy
 8007658:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 800765a:	f7ff fb5b 	bl	8006d14 <vPortEnterCritical>
			const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 800765e:	6ba5      	ldr	r5, [r4, #56]	; 0x38
			if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007660:	2d00      	cmp	r5, #0
 8007662:	d0be      	beq.n	80075e2 <xQueueReceive+0x62>
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 8007664:	4639      	mov	r1, r7
 8007666:	4620      	mov	r0, r4
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 8007668:	3d01      	subs	r5, #1
				prvCopyDataFromQueue( pxQueue, pvBuffer );
 800766a:	f7ff fcdd 	bl	8007028 <prvCopyDataFromQueue>
				pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 800766e:	63a5      	str	r5, [r4, #56]	; 0x38
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 8007670:	6923      	ldr	r3, [r4, #16]
 8007672:	b163      	cbz	r3, 800768e <xQueueReceive+0x10e>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 8007674:	f104 0010 	add.w	r0, r4, #16
 8007678:	f000 fdaa 	bl	80081d0 <xTaskRemoveFromEventList>
 800767c:	b138      	cbz	r0, 800768e <xQueueReceive+0x10e>
						queueYIELD_IF_USING_PREEMPTION();
 800767e:	4b0f      	ldr	r3, [pc, #60]	; (80076bc <xQueueReceive+0x13c>)
 8007680:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007684:	601a      	str	r2, [r3, #0]
 8007686:	f3bf 8f4f 	dsb	sy
 800768a:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 800768e:	f7ff fb63 	bl	8006d58 <vPortExitCritical>
				return pdPASS;
 8007692:	2001      	movs	r0, #1
}
 8007694:	b005      	add	sp, #20
 8007696:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
				prvUnlockQueue( pxQueue );
 800769a:	4620      	mov	r0, r4
 800769c:	f7ff fcda 	bl	8007054 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 80076a0:	f000 fc10 	bl	8007ec4 <xTaskResumeAll>
 80076a4:	e7d8      	b.n	8007658 <xQueueReceive+0xd8>
			prvUnlockQueue( pxQueue );
 80076a6:	4620      	mov	r0, r4
 80076a8:	f7ff fcd4 	bl	8007054 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 80076ac:	f000 fc0a 	bl	8007ec4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 80076b0:	4620      	mov	r0, r4
 80076b2:	f7ff fc79 	bl	8006fa8 <prvIsQueueEmpty>
 80076b6:	2800      	cmp	r0, #0
 80076b8:	d0ce      	beq.n	8007658 <xQueueReceive+0xd8>
 80076ba:	e796      	b.n	80075ea <xQueueReceive+0x6a>
 80076bc:	e000ed04 	.word	0xe000ed04

080076c0 <xQueueSemaphoreTake>:
{
 80076c0:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
	configASSERT( ( pxQueue ) );
 80076c4:	4604      	mov	r4, r0
{
 80076c6:	9101      	str	r1, [sp, #4]
	configASSERT( ( pxQueue ) );
 80076c8:	b940      	cbnz	r0, 80076dc <xQueueSemaphoreTake+0x1c>
 80076ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076ce:	f383 8811 	msr	BASEPRI, r3
 80076d2:	f3bf 8f6f 	isb	sy
 80076d6:	f3bf 8f4f 	dsb	sy
 80076da:	e7fe      	b.n	80076da <xQueueSemaphoreTake+0x1a>
	configASSERT( pxQueue->uxItemSize == 0 );
 80076dc:	6c05      	ldr	r5, [r0, #64]	; 0x40
 80076de:	b145      	cbz	r5, 80076f2 <xQueueSemaphoreTake+0x32>
 80076e0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80076e4:	f383 8811 	msr	BASEPRI, r3
 80076e8:	f3bf 8f6f 	isb	sy
 80076ec:	f3bf 8f4f 	dsb	sy
 80076f0:	e7fe      	b.n	80076f0 <xQueueSemaphoreTake+0x30>
		configASSERT( !( ( xTaskGetSchedulerState() == taskSCHEDULER_SUSPENDED ) && ( xTicksToWait != 0 ) ) );
 80076f2:	f000 fdff 	bl	80082f4 <xTaskGetSchedulerState>
 80076f6:	4606      	mov	r6, r0
 80076f8:	b950      	cbnz	r0, 8007710 <xQueueSemaphoreTake+0x50>
 80076fa:	9b01      	ldr	r3, [sp, #4]
 80076fc:	b16b      	cbz	r3, 800771a <xQueueSemaphoreTake+0x5a>
 80076fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007702:	f383 8811 	msr	BASEPRI, r3
 8007706:	f3bf 8f6f 	isb	sy
 800770a:	f3bf 8f4f 	dsb	sy
 800770e:	e7fe      	b.n	800770e <xQueueSemaphoreTake+0x4e>
 8007710:	462e      	mov	r6, r5
					portYIELD_WITHIN_API();
 8007712:	f8df 8130 	ldr.w	r8, [pc, #304]	; 8007844 <xQueueSemaphoreTake+0x184>
		prvLockQueue( pxQueue );
 8007716:	2700      	movs	r7, #0
 8007718:	e051      	b.n	80077be <xQueueSemaphoreTake+0xfe>
 800771a:	4605      	mov	r5, r0
 800771c:	e7f9      	b.n	8007712 <xQueueSemaphoreTake+0x52>
				if( xTicksToWait == ( TickType_t ) 0 )
 800771e:	9b01      	ldr	r3, [sp, #4]
 8007720:	b963      	cbnz	r3, 800773c <xQueueSemaphoreTake+0x7c>
						configASSERT( xInheritanceOccurred == pdFALSE );
 8007722:	b145      	cbz	r5, 8007736 <xQueueSemaphoreTake+0x76>
 8007724:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007728:	f383 8811 	msr	BASEPRI, r3
 800772c:	f3bf 8f6f 	isb	sy
 8007730:	f3bf 8f4f 	dsb	sy
 8007734:	e7fe      	b.n	8007734 <xQueueSemaphoreTake+0x74>
					taskEXIT_CRITICAL();
 8007736:	f7ff fb0f 	bl	8006d58 <vPortExitCritical>
					return errQUEUE_EMPTY;
 800773a:	e05e      	b.n	80077fa <xQueueSemaphoreTake+0x13a>
				else if( xEntryTimeSet == pdFALSE )
 800773c:	b916      	cbnz	r6, 8007744 <xQueueSemaphoreTake+0x84>
					vTaskInternalSetTimeOutState( &xTimeOut );
 800773e:	a802      	add	r0, sp, #8
 8007740:	f000 fd8a 	bl	8008258 <vTaskInternalSetTimeOutState>
		taskEXIT_CRITICAL();
 8007744:	f7ff fb08 	bl	8006d58 <vPortExitCritical>
		vTaskSuspendAll();
 8007748:	f000 fb18 	bl	8007d7c <vTaskSuspendAll>
		prvLockQueue( pxQueue );
 800774c:	f7ff fae2 	bl	8006d14 <vPortEnterCritical>
 8007750:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007754:	2bff      	cmp	r3, #255	; 0xff
 8007756:	bf08      	it	eq
 8007758:	f884 7044 	strbeq.w	r7, [r4, #68]	; 0x44
 800775c:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007760:	2bff      	cmp	r3, #255	; 0xff
 8007762:	bf08      	it	eq
 8007764:	f884 7045 	strbeq.w	r7, [r4, #69]	; 0x45
 8007768:	f7ff faf6 	bl	8006d58 <vPortExitCritical>
		if( xTaskCheckForTimeOut( &xTimeOut, &xTicksToWait ) == pdFALSE )
 800776c:	a901      	add	r1, sp, #4
 800776e:	a802      	add	r0, sp, #8
 8007770:	f000 fd7e 	bl	8008270 <xTaskCheckForTimeOut>
 8007774:	2800      	cmp	r0, #0
 8007776:	d14a      	bne.n	800780e <xQueueSemaphoreTake+0x14e>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007778:	4620      	mov	r0, r4
 800777a:	f7ff fc15 	bl	8006fa8 <prvIsQueueEmpty>
 800777e:	2800      	cmp	r0, #0
 8007780:	d03f      	beq.n	8007802 <xQueueSemaphoreTake+0x142>
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 8007782:	6823      	ldr	r3, [r4, #0]
 8007784:	b93b      	cbnz	r3, 8007796 <xQueueSemaphoreTake+0xd6>
						taskENTER_CRITICAL();
 8007786:	f7ff fac5 	bl	8006d14 <vPortEnterCritical>
							xInheritanceOccurred = xTaskPriorityInherit( pxQueue->u.xSemaphore.xMutexHolder );
 800778a:	68a0      	ldr	r0, [r4, #8]
 800778c:	f000 fdc2 	bl	8008314 <xTaskPriorityInherit>
 8007790:	4605      	mov	r5, r0
						taskEXIT_CRITICAL();
 8007792:	f7ff fae1 	bl	8006d58 <vPortExitCritical>
				vTaskPlaceOnEventList( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait );
 8007796:	9901      	ldr	r1, [sp, #4]
 8007798:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800779c:	f000 fce0 	bl	8008160 <vTaskPlaceOnEventList>
				prvUnlockQueue( pxQueue );
 80077a0:	4620      	mov	r0, r4
 80077a2:	f7ff fc57 	bl	8007054 <prvUnlockQueue>
				if( xTaskResumeAll() == pdFALSE )
 80077a6:	f000 fb8d 	bl	8007ec4 <xTaskResumeAll>
 80077aa:	b938      	cbnz	r0, 80077bc <xQueueSemaphoreTake+0xfc>
					portYIELD_WITHIN_API();
 80077ac:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 80077b0:	f8c8 3000 	str.w	r3, [r8]
 80077b4:	f3bf 8f4f 	dsb	sy
 80077b8:	f3bf 8f6f 	isb	sy
 80077bc:	2601      	movs	r6, #1
		taskENTER_CRITICAL();
 80077be:	f7ff faa9 	bl	8006d14 <vPortEnterCritical>
			const UBaseType_t uxSemaphoreCount = pxQueue->uxMessagesWaiting;
 80077c2:	6ba3      	ldr	r3, [r4, #56]	; 0x38
			if( uxSemaphoreCount > ( UBaseType_t ) 0 )
 80077c4:	2b00      	cmp	r3, #0
 80077c6:	d0aa      	beq.n	800771e <xQueueSemaphoreTake+0x5e>
				pxQueue->uxMessagesWaiting = uxSemaphoreCount - ( UBaseType_t ) 1;
 80077c8:	3b01      	subs	r3, #1
 80077ca:	63a3      	str	r3, [r4, #56]	; 0x38
					if( pxQueue->uxQueueType == queueQUEUE_IS_MUTEX )
 80077cc:	6823      	ldr	r3, [r4, #0]
 80077ce:	b913      	cbnz	r3, 80077d6 <xQueueSemaphoreTake+0x116>
						pxQueue->u.xSemaphore.xMutexHolder = pvTaskIncrementMutexHeldCount();
 80077d0:	f000 fe78 	bl	80084c4 <pvTaskIncrementMutexHeldCount>
 80077d4:	60a0      	str	r0, [r4, #8]
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80077d6:	6923      	ldr	r3, [r4, #16]
 80077d8:	b163      	cbz	r3, 80077f4 <xQueueSemaphoreTake+0x134>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80077da:	f104 0010 	add.w	r0, r4, #16
 80077de:	f000 fcf7 	bl	80081d0 <xTaskRemoveFromEventList>
 80077e2:	b138      	cbz	r0, 80077f4 <xQueueSemaphoreTake+0x134>
						queueYIELD_IF_USING_PREEMPTION();
 80077e4:	4b17      	ldr	r3, [pc, #92]	; (8007844 <xQueueSemaphoreTake+0x184>)
 80077e6:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 80077ea:	601a      	str	r2, [r3, #0]
 80077ec:	f3bf 8f4f 	dsb	sy
 80077f0:	f3bf 8f6f 	isb	sy
				taskEXIT_CRITICAL();
 80077f4:	f7ff fab0 	bl	8006d58 <vPortExitCritical>
				return pdPASS;
 80077f8:	2501      	movs	r5, #1
}
 80077fa:	4628      	mov	r0, r5
 80077fc:	b004      	add	sp, #16
 80077fe:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
				prvUnlockQueue( pxQueue );
 8007802:	4620      	mov	r0, r4
 8007804:	f7ff fc26 	bl	8007054 <prvUnlockQueue>
				( void ) xTaskResumeAll();
 8007808:	f000 fb5c 	bl	8007ec4 <xTaskResumeAll>
 800780c:	e7d6      	b.n	80077bc <xQueueSemaphoreTake+0xfc>
			prvUnlockQueue( pxQueue );
 800780e:	4620      	mov	r0, r4
 8007810:	f7ff fc20 	bl	8007054 <prvUnlockQueue>
			( void ) xTaskResumeAll();
 8007814:	f000 fb56 	bl	8007ec4 <xTaskResumeAll>
			if( prvIsQueueEmpty( pxQueue ) != pdFALSE )
 8007818:	4620      	mov	r0, r4
 800781a:	f7ff fbc5 	bl	8006fa8 <prvIsQueueEmpty>
 800781e:	2800      	cmp	r0, #0
 8007820:	d0cc      	beq.n	80077bc <xQueueSemaphoreTake+0xfc>
					if( xInheritanceOccurred != pdFALSE )
 8007822:	2d00      	cmp	r5, #0
 8007824:	d0e9      	beq.n	80077fa <xQueueSemaphoreTake+0x13a>
						taskENTER_CRITICAL();
 8007826:	f7ff fa75 	bl	8006d14 <vPortEnterCritical>
		if( listCURRENT_LIST_LENGTH( &( pxQueue->xTasksWaitingToReceive ) ) > 0U )
 800782a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800782c:	b119      	cbz	r1, 8007836 <xQueueSemaphoreTake+0x176>
			uxHighestPriorityOfWaitingTasks = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) listGET_ITEM_VALUE_OF_HEAD_ENTRY( &( pxQueue->xTasksWaitingToReceive ) );
 800782e:	6b23      	ldr	r3, [r4, #48]	; 0x30
 8007830:	6819      	ldr	r1, [r3, #0]
 8007832:	f1c1 0138 	rsb	r1, r1, #56	; 0x38
							vTaskPriorityDisinheritAfterTimeout( pxQueue->u.xSemaphore.xMutexHolder, uxHighestWaitingPriority );
 8007836:	68a0      	ldr	r0, [r4, #8]
 8007838:	f000 fdf2 	bl	8008420 <vTaskPriorityDisinheritAfterTimeout>
				return errQUEUE_EMPTY;
 800783c:	2500      	movs	r5, #0
						taskEXIT_CRITICAL();
 800783e:	f7ff fa8b 	bl	8006d58 <vPortExitCritical>
 8007842:	e7da      	b.n	80077fa <xQueueSemaphoreTake+0x13a>
 8007844:	e000ed04 	.word	0xe000ed04

08007848 <xQueueReceiveFromISR>:
{
 8007848:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 800784c:	4689      	mov	r9, r1
 800784e:	4690      	mov	r8, r2
	configASSERT( pxQueue );
 8007850:	4605      	mov	r5, r0
 8007852:	b940      	cbnz	r0, 8007866 <xQueueReceiveFromISR+0x1e>
 8007854:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007858:	f383 8811 	msr	BASEPRI, r3
 800785c:	f3bf 8f6f 	isb	sy
 8007860:	f3bf 8f4f 	dsb	sy
 8007864:	e7fe      	b.n	8007864 <xQueueReceiveFromISR+0x1c>
	configASSERT( !( ( pvBuffer == NULL ) && ( pxQueue->uxItemSize != ( UBaseType_t ) 0U ) ) );
 8007866:	b951      	cbnz	r1, 800787e <xQueueReceiveFromISR+0x36>
 8007868:	6c03      	ldr	r3, [r0, #64]	; 0x40
 800786a:	b143      	cbz	r3, 800787e <xQueueReceiveFromISR+0x36>
 800786c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007870:	f383 8811 	msr	BASEPRI, r3
 8007874:	f3bf 8f6f 	isb	sy
 8007878:	f3bf 8f4f 	dsb	sy
 800787c:	e7fe      	b.n	800787c <xQueueReceiveFromISR+0x34>
	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 800787e:	f7ff fb65 	bl	8006f4c <vPortValidateInterruptPriority>
	__asm volatile
 8007882:	f3ef 8711 	mrs	r7, BASEPRI
 8007886:	f04f 0350 	mov.w	r3, #80	; 0x50
 800788a:	f383 8811 	msr	BASEPRI, r3
 800788e:	f3bf 8f6f 	isb	sy
 8007892:	f3bf 8f4f 	dsb	sy
		const UBaseType_t uxMessagesWaiting = pxQueue->uxMessagesWaiting;
 8007896:	6bac      	ldr	r4, [r5, #56]	; 0x38
		if( uxMessagesWaiting > ( UBaseType_t ) 0 )
 8007898:	b31c      	cbz	r4, 80078e2 <xQueueReceiveFromISR+0x9a>
			const int8_t cRxLock = pxQueue->cRxLock;
 800789a:	f895 6044 	ldrb.w	r6, [r5, #68]	; 0x44
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 800789e:	4649      	mov	r1, r9
			const int8_t cRxLock = pxQueue->cRxLock;
 80078a0:	b276      	sxtb	r6, r6
			prvCopyDataFromQueue( pxQueue, pvBuffer );
 80078a2:	4628      	mov	r0, r5
 80078a4:	f7ff fbc0 	bl	8007028 <prvCopyDataFromQueue>
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80078a8:	3c01      	subs	r4, #1
			if( cRxLock == queueUNLOCKED )
 80078aa:	1c73      	adds	r3, r6, #1
			pxQueue->uxMessagesWaiting = uxMessagesWaiting - ( UBaseType_t ) 1;
 80078ac:	63ac      	str	r4, [r5, #56]	; 0x38
			if( cRxLock == queueUNLOCKED )
 80078ae:	d113      	bne.n	80078d8 <xQueueReceiveFromISR+0x90>
				if( listLIST_IS_EMPTY( &( pxQueue->xTasksWaitingToSend ) ) == pdFALSE )
 80078b0:	692b      	ldr	r3, [r5, #16]
 80078b2:	b90b      	cbnz	r3, 80078b8 <xQueueReceiveFromISR+0x70>
			xReturn = pdPASS;
 80078b4:	2001      	movs	r0, #1
 80078b6:	e00b      	b.n	80078d0 <xQueueReceiveFromISR+0x88>
					if( xTaskRemoveFromEventList( &( pxQueue->xTasksWaitingToSend ) ) != pdFALSE )
 80078b8:	f105 0010 	add.w	r0, r5, #16
 80078bc:	f000 fc88 	bl	80081d0 <xTaskRemoveFromEventList>
 80078c0:	2800      	cmp	r0, #0
 80078c2:	d0f7      	beq.n	80078b4 <xQueueReceiveFromISR+0x6c>
						if( pxHigherPriorityTaskWoken != NULL )
 80078c4:	f1b8 0f00 	cmp.w	r8, #0
 80078c8:	d0f4      	beq.n	80078b4 <xQueueReceiveFromISR+0x6c>
							*pxHigherPriorityTaskWoken = pdTRUE;
 80078ca:	2001      	movs	r0, #1
 80078cc:	f8c8 0000 	str.w	r0, [r8]
	__asm volatile
 80078d0:	f387 8811 	msr	BASEPRI, r7
}
 80078d4:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
				pxQueue->cRxLock = ( int8_t ) ( cRxLock + 1 );
 80078d8:	3601      	adds	r6, #1
 80078da:	b276      	sxtb	r6, r6
 80078dc:	f885 6044 	strb.w	r6, [r5, #68]	; 0x44
 80078e0:	e7e8      	b.n	80078b4 <xQueueReceiveFromISR+0x6c>
			xReturn = pdFAIL;
 80078e2:	4620      	mov	r0, r4
 80078e4:	e7f4      	b.n	80078d0 <xQueueReceiveFromISR+0x88>
	...

080078e8 <vQueueAddToRegistry>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueAddToRegistry( QueueHandle_t xQueue, const char *pcQueueName ) /*lint !e971 Unqualified char types are allowed for strings and single characters only. */
	{
 80078e8:	b530      	push	{r4, r5, lr}

		/* See if there is an empty space in the registry.  A NULL name denotes
		a free slot. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80078ea:	4a07      	ldr	r2, [pc, #28]	; (8007908 <vQueueAddToRegistry+0x20>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 80078ec:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].pcQueueName == NULL )
 80078ee:	f852 5033 	ldr.w	r5, [r2, r3, lsl #3]
 80078f2:	eb02 04c3 	add.w	r4, r2, r3, lsl #3
 80078f6:	b91d      	cbnz	r5, 8007900 <vQueueAddToRegistry+0x18>
			{
				/* Store the information on this queue. */
				xQueueRegistry[ ux ].pcQueueName = pcQueueName;
 80078f8:	f842 1033 	str.w	r1, [r2, r3, lsl #3]
				xQueueRegistry[ ux ].xHandle = xQueue;
 80078fc:	6060      	str	r0, [r4, #4]
			else
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}
	}
 80078fe:	bd30      	pop	{r4, r5, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007900:	3301      	adds	r3, #1
 8007902:	2b08      	cmp	r3, #8
 8007904:	d1f3      	bne.n	80078ee <vQueueAddToRegistry+0x6>
 8007906:	e7fa      	b.n	80078fe <vQueueAddToRegistry+0x16>
 8007908:	2000a608 	.word	0x2000a608

0800790c <vQueueUnregisterQueue>:
/*-----------------------------------------------------------*/

#if ( configQUEUE_REGISTRY_SIZE > 0 )

	void vQueueUnregisterQueue( QueueHandle_t xQueue )
	{
 800790c:	b510      	push	{r4, lr}

		/* See if the handle of the queue being unregistered in actually in the
		registry. */
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
		{
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 800790e:	4909      	ldr	r1, [pc, #36]	; (8007934 <vQueueUnregisterQueue+0x28>)
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 8007910:	2300      	movs	r3, #0
			if( xQueueRegistry[ ux ].xHandle == xQueue )
 8007912:	f851 2033 	ldr.w	r2, [r1, r3, lsl #3]
 8007916:	4282      	cmp	r2, r0
 8007918:	ea4f 04c3 	mov.w	r4, r3, lsl #3
 800791c:	d106      	bne.n	800792c <vQueueUnregisterQueue+0x20>
			{
				/* Set the name to NULL to show that this slot if free again. */
				xQueueRegistry[ ux ].pcQueueName = NULL;
 800791e:	4a06      	ldr	r2, [pc, #24]	; (8007938 <vQueueUnregisterQueue+0x2c>)
 8007920:	2100      	movs	r1, #0
 8007922:	f842 1033 	str.w	r1, [r2, r3, lsl #3]

				/* Set the handle to NULL to ensure the same queue handle cannot
				appear in the registry twice if it is added, removed, then
				added again. */
				xQueueRegistry[ ux ].xHandle = ( QueueHandle_t ) 0;
 8007926:	4422      	add	r2, r4
 8007928:	6051      	str	r1, [r2, #4]
			{
				mtCOVERAGE_TEST_MARKER();
			}
		}

	} /*lint !e818 xQueue could not be pointer to const because it is a typedef. */
 800792a:	bd10      	pop	{r4, pc}
		for( ux = ( UBaseType_t ) 0U; ux < ( UBaseType_t ) configQUEUE_REGISTRY_SIZE; ux++ )
 800792c:	3301      	adds	r3, #1
 800792e:	2b08      	cmp	r3, #8
 8007930:	d1ef      	bne.n	8007912 <vQueueUnregisterQueue+0x6>
 8007932:	e7fa      	b.n	800792a <vQueueUnregisterQueue+0x1e>
 8007934:	2000a60c 	.word	0x2000a60c
 8007938:	2000a608 	.word	0x2000a608

0800793c <vQueueDelete>:
{
 800793c:	b510      	push	{r4, lr}
	configASSERT( pxQueue );
 800793e:	b940      	cbnz	r0, 8007952 <vQueueDelete+0x16>
	__asm volatile
 8007940:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007944:	f383 8811 	msr	BASEPRI, r3
 8007948:	f3bf 8f6f 	isb	sy
 800794c:	f3bf 8f4f 	dsb	sy
 8007950:	e7fe      	b.n	8007950 <vQueueDelete+0x14>
		vQueueUnregisterQueue( pxQueue );
 8007952:	f7ff ffdb 	bl	800790c <vQueueUnregisterQueue>
		if( pxQueue->ucStaticallyAllocated == ( uint8_t ) pdFALSE )
 8007956:	f890 3046 	ldrb.w	r3, [r0, #70]	; 0x46
 800795a:	b91b      	cbnz	r3, 8007964 <vQueueDelete+0x28>
}
 800795c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
			vPortFree( pxQueue );
 8007960:	f7ff b8ec 	b.w	8006b3c <vPortFree>
}
 8007964:	bd10      	pop	{r4, pc}

08007966 <vQueueWaitForMessageRestricted>:
/*-----------------------------------------------------------*/

#if ( configUSE_TIMERS == 1 )

	void vQueueWaitForMessageRestricted( QueueHandle_t xQueue, TickType_t xTicksToWait, const BaseType_t xWaitIndefinitely )
	{
 8007966:	b570      	push	{r4, r5, r6, lr}
 8007968:	4604      	mov	r4, r0
 800796a:	460d      	mov	r5, r1
 800796c:	4616      	mov	r6, r2
		will not actually cause the task to block, just place it on a blocked
		list.  It will not block until the scheduler is unlocked - at which
		time a yield will be performed.  If an item is added to the queue while
		the queue is locked, and the calling task blocks on the queue, then the
		calling task will be immediately unblocked when the queue is unlocked. */
		prvLockQueue( pxQueue );
 800796e:	f7ff f9d1 	bl	8006d14 <vPortEnterCritical>
 8007972:	f894 3044 	ldrb.w	r3, [r4, #68]	; 0x44
 8007976:	2bff      	cmp	r3, #255	; 0xff
 8007978:	bf04      	itt	eq
 800797a:	2300      	moveq	r3, #0
 800797c:	f884 3044 	strbeq.w	r3, [r4, #68]	; 0x44
 8007980:	f894 3045 	ldrb.w	r3, [r4, #69]	; 0x45
 8007984:	2bff      	cmp	r3, #255	; 0xff
 8007986:	bf04      	itt	eq
 8007988:	2300      	moveq	r3, #0
 800798a:	f884 3045 	strbeq.w	r3, [r4, #69]	; 0x45
 800798e:	f7ff f9e3 	bl	8006d58 <vPortExitCritical>
		if( pxQueue->uxMessagesWaiting == ( UBaseType_t ) 0U )
 8007992:	6ba3      	ldr	r3, [r4, #56]	; 0x38
 8007994:	b92b      	cbnz	r3, 80079a2 <vQueueWaitForMessageRestricted+0x3c>
		{
			/* There is nothing in the queue, block for the specified period. */
			vTaskPlaceOnEventListRestricted( &( pxQueue->xTasksWaitingToReceive ), xTicksToWait, xWaitIndefinitely );
 8007996:	4632      	mov	r2, r6
 8007998:	4629      	mov	r1, r5
 800799a:	f104 0024 	add.w	r0, r4, #36	; 0x24
 800799e:	f000 fbf9 	bl	8008194 <vTaskPlaceOnEventListRestricted>
		}
		else
		{
			mtCOVERAGE_TEST_MARKER();
		}
		prvUnlockQueue( pxQueue );
 80079a2:	4620      	mov	r0, r4
	}
 80079a4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
		prvUnlockQueue( pxQueue );
 80079a8:	f7ff bb54 	b.w	8007054 <prvUnlockQueue>

080079ac <prvAddNewTaskToReadyList>:
	}
}
/*-----------------------------------------------------------*/

static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
{
 80079ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80079b0:	4604      	mov	r4, r0
	/* Ensure interrupts don't access the task lists while the lists are being
	updated. */
	taskENTER_CRITICAL();
 80079b2:	f7ff f9af 	bl	8006d14 <vPortEnterCritical>
	{
		uxCurrentNumberOfTasks++;
 80079b6:	4b2f      	ldr	r3, [pc, #188]	; (8007a74 <prvAddNewTaskToReadyList+0xc8>)
		if( pxCurrentTCB == NULL )
 80079b8:	4d2f      	ldr	r5, [pc, #188]	; (8007a78 <prvAddNewTaskToReadyList+0xcc>)
		uxCurrentNumberOfTasks++;
 80079ba:	681a      	ldr	r2, [r3, #0]
 80079bc:	4f2f      	ldr	r7, [pc, #188]	; (8007a7c <prvAddNewTaskToReadyList+0xd0>)
 80079be:	3201      	adds	r2, #1
 80079c0:	601a      	str	r2, [r3, #0]
		if( pxCurrentTCB == NULL )
 80079c2:	682e      	ldr	r6, [r5, #0]
 80079c4:	2e00      	cmp	r6, #0
 80079c6:	d149      	bne.n	8007a5c <prvAddNewTaskToReadyList+0xb0>
		{
			/* There are no other tasks, or all the other tasks are in
			the suspended state - make this the current task. */
			pxCurrentTCB = pxNewTCB;
 80079c8:	602c      	str	r4, [r5, #0]

			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 80079ca:	681b      	ldr	r3, [r3, #0]
 80079cc:	2b01      	cmp	r3, #1
 80079ce:	d11f      	bne.n	8007a10 <prvAddNewTaskToReadyList+0x64>
 80079d0:	46b8      	mov	r8, r7
{
UBaseType_t uxPriority;

	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
	{
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80079d2:	4640      	mov	r0, r8
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80079d4:	3601      	adds	r6, #1
		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 80079d6:	f7ff f8ef 	bl	8006bb8 <vListInitialise>
	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriority++ )
 80079da:	2e38      	cmp	r6, #56	; 0x38
 80079dc:	f108 0814 	add.w	r8, r8, #20
 80079e0:	d1f7      	bne.n	80079d2 <prvAddNewTaskToReadyList+0x26>
	}

	vListInitialise( &xDelayedTaskList1 );
 80079e2:	f8df 80c4 	ldr.w	r8, [pc, #196]	; 8007aa8 <prvAddNewTaskToReadyList+0xfc>
	vListInitialise( &xDelayedTaskList2 );
 80079e6:	4e26      	ldr	r6, [pc, #152]	; (8007a80 <prvAddNewTaskToReadyList+0xd4>)
	vListInitialise( &xDelayedTaskList1 );
 80079e8:	4640      	mov	r0, r8
 80079ea:	f7ff f8e5 	bl	8006bb8 <vListInitialise>
	vListInitialise( &xDelayedTaskList2 );
 80079ee:	4630      	mov	r0, r6
 80079f0:	f7ff f8e2 	bl	8006bb8 <vListInitialise>
	vListInitialise( &xPendingReadyList );
 80079f4:	4823      	ldr	r0, [pc, #140]	; (8007a84 <prvAddNewTaskToReadyList+0xd8>)
 80079f6:	f7ff f8df 	bl	8006bb8 <vListInitialise>

	#if ( INCLUDE_vTaskDelete == 1 )
	{
		vListInitialise( &xTasksWaitingTermination );
 80079fa:	4823      	ldr	r0, [pc, #140]	; (8007a88 <prvAddNewTaskToReadyList+0xdc>)
 80079fc:	f7ff f8dc 	bl	8006bb8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskDelete */

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		vListInitialise( &xSuspendedTaskList );
 8007a00:	4822      	ldr	r0, [pc, #136]	; (8007a8c <prvAddNewTaskToReadyList+0xe0>)
 8007a02:	f7ff f8d9 	bl	8006bb8 <vListInitialise>
	}
	#endif /* INCLUDE_vTaskSuspend */

	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
	using list2. */
	pxDelayedTaskList = &xDelayedTaskList1;
 8007a06:	4b22      	ldr	r3, [pc, #136]	; (8007a90 <prvAddNewTaskToReadyList+0xe4>)
 8007a08:	f8c3 8000 	str.w	r8, [r3]
	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 8007a0c:	4b21      	ldr	r3, [pc, #132]	; (8007a94 <prvAddNewTaskToReadyList+0xe8>)
 8007a0e:	601e      	str	r6, [r3, #0]
		uxTaskNumber++;
 8007a10:	4a21      	ldr	r2, [pc, #132]	; (8007a98 <prvAddNewTaskToReadyList+0xec>)
 8007a12:	6813      	ldr	r3, [r2, #0]
 8007a14:	3301      	adds	r3, #1
 8007a16:	6013      	str	r3, [r2, #0]
		prvAddTaskToReadyList( pxNewTCB );
 8007a18:	4a20      	ldr	r2, [pc, #128]	; (8007a9c <prvAddNewTaskToReadyList+0xf0>)
			pxNewTCB->uxTCBNumber = uxTaskNumber;
 8007a1a:	6463      	str	r3, [r4, #68]	; 0x44
		prvAddTaskToReadyList( pxNewTCB );
 8007a1c:	6811      	ldr	r1, [r2, #0]
 8007a1e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007a20:	2014      	movs	r0, #20
 8007a22:	428b      	cmp	r3, r1
 8007a24:	fb00 7003 	mla	r0, r0, r3, r7
 8007a28:	f104 0104 	add.w	r1, r4, #4
 8007a2c:	bf88      	it	hi
 8007a2e:	6013      	strhi	r3, [r2, #0]
 8007a30:	f7ff f8d0 	bl	8006bd4 <vListInsertEnd>
	taskEXIT_CRITICAL();
 8007a34:	f7ff f990 	bl	8006d58 <vPortExitCritical>
	if( xSchedulerRunning != pdFALSE )
 8007a38:	4b19      	ldr	r3, [pc, #100]	; (8007aa0 <prvAddNewTaskToReadyList+0xf4>)
 8007a3a:	681b      	ldr	r3, [r3, #0]
 8007a3c:	b163      	cbz	r3, 8007a58 <prvAddNewTaskToReadyList+0xac>
		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 8007a3e:	682b      	ldr	r3, [r5, #0]
 8007a40:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007a42:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007a44:	429a      	cmp	r2, r3
 8007a46:	d207      	bcs.n	8007a58 <prvAddNewTaskToReadyList+0xac>
			taskYIELD_IF_USING_PREEMPTION();
 8007a48:	4b16      	ldr	r3, [pc, #88]	; (8007aa4 <prvAddNewTaskToReadyList+0xf8>)
 8007a4a:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007a4e:	601a      	str	r2, [r3, #0]
 8007a50:	f3bf 8f4f 	dsb	sy
 8007a54:	f3bf 8f6f 	isb	sy
}
 8007a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
			if( xSchedulerRunning == pdFALSE )
 8007a5c:	4b10      	ldr	r3, [pc, #64]	; (8007aa0 <prvAddNewTaskToReadyList+0xf4>)
 8007a5e:	681b      	ldr	r3, [r3, #0]
 8007a60:	2b00      	cmp	r3, #0
 8007a62:	d1d5      	bne.n	8007a10 <prvAddNewTaskToReadyList+0x64>
				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 8007a64:	682b      	ldr	r3, [r5, #0]
 8007a66:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007a68:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007a6a:	429a      	cmp	r2, r3
					pxCurrentTCB = pxNewTCB;
 8007a6c:	bf98      	it	ls
 8007a6e:	602c      	strls	r4, [r5, #0]
 8007a70:	e7ce      	b.n	8007a10 <prvAddNewTaskToReadyList+0x64>
 8007a72:	bf00      	nop
 8007a74:	20009f24 	.word	0x20009f24
 8007a78:	20009ab8 	.word	0x20009ab8
 8007a7c:	20009ac4 	.word	0x20009ac4
 8007a80:	20009f4c 	.word	0x20009f4c
 8007a84:	20009f6c 	.word	0x20009f6c
 8007a88:	20009f98 	.word	0x20009f98
 8007a8c:	20009f84 	.word	0x20009f84
 8007a90:	20009abc 	.word	0x20009abc
 8007a94:	20009ac0 	.word	0x20009ac0
 8007a98:	20009f30 	.word	0x20009f30
 8007a9c:	20009f34 	.word	0x20009f34
 8007aa0:	20009f80 	.word	0x20009f80
 8007aa4:	e000ed04 	.word	0xe000ed04
 8007aa8:	20009f38 	.word	0x20009f38

08007aac <prvResetNextTaskUnblockTime>:

static void prvResetNextTaskUnblockTime( void )
{
TCB_t *pxTCB;

	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007aac:	4a06      	ldr	r2, [pc, #24]	; (8007ac8 <prvResetNextTaskUnblockTime+0x1c>)
 8007aae:	6813      	ldr	r3, [r2, #0]
 8007ab0:	6819      	ldr	r1, [r3, #0]
 8007ab2:	4b06      	ldr	r3, [pc, #24]	; (8007acc <prvResetNextTaskUnblockTime+0x20>)
 8007ab4:	b919      	cbnz	r1, 8007abe <prvResetNextTaskUnblockTime+0x12>
	{
		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
		the maximum possible value so it is	extremely unlikely that the
		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
		there is an item in the delayed list. */
		xNextTaskUnblockTime = portMAX_DELAY;
 8007ab6:	f04f 32ff 	mov.w	r2, #4294967295
		/* The new current delayed list is not empty, get the value of
		the item at the head of the delayed list.  This is the time at
		which the task at the head of the delayed list should be removed
		from the Blocked state. */
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007aba:	601a      	str	r2, [r3, #0]
	}
}
 8007abc:	4770      	bx	lr
		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007abe:	6812      	ldr	r2, [r2, #0]
 8007ac0:	68d2      	ldr	r2, [r2, #12]
		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 8007ac2:	68d2      	ldr	r2, [r2, #12]
 8007ac4:	6852      	ldr	r2, [r2, #4]
 8007ac6:	e7f8      	b.n	8007aba <prvResetNextTaskUnblockTime+0xe>
 8007ac8:	20009abc 	.word	0x20009abc
 8007acc:	20009f60 	.word	0x20009f60

08007ad0 <prvInitialiseNewTask.isra.0>:
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007ad0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8007ad4:	e9dd 8409 	ldrd	r8, r4, [sp, #36]	; 0x24
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007ad8:	ea4f 0982 	mov.w	r9, r2, lsl #2
 8007adc:	464a      	mov	r2, r9
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007ade:	4606      	mov	r6, r0
 8007ae0:	460d      	mov	r5, r1
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007ae2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007ae4:	21a5      	movs	r1, #165	; 0xa5
static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 8007ae6:	461f      	mov	r7, r3
		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof( StackType_t ) );
 8007ae8:	f011 fe30 	bl	801974c <memset>
		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 8007aec:	6b22      	ldr	r2, [r4, #48]	; 0x30
 8007aee:	f1a9 0904 	sub.w	r9, r9, #4
 8007af2:	4491      	add	r9, r2
		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTER_SIZE_TYPE ) portBYTE_ALIGNMENT_MASK ) ) ); /*lint !e923 !e9033 !e9078 MISRA exception.  Avoiding casts between pointers and integers is not practical.  Size differences accounted for using portPOINTER_SIZE_TYPE type.  Checked by assert(). */
 8007af4:	f029 0907 	bic.w	r9, r9, #7
	if( pcName != NULL )
 8007af8:	2d00      	cmp	r5, #0
 8007afa:	d043      	beq.n	8007b84 <prvInitialiseNewTask.isra.0+0xb4>
 8007afc:	1e6b      	subs	r3, r5, #1
 8007afe:	f104 0234 	add.w	r2, r4, #52	; 0x34
 8007b02:	350f      	adds	r5, #15
			pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 8007b04:	f813 1f01 	ldrb.w	r1, [r3, #1]!
 8007b08:	f802 1b01 	strb.w	r1, [r2], #1
			if( pcName[ x ] == ( char ) 0x00 )
 8007b0c:	7819      	ldrb	r1, [r3, #0]
 8007b0e:	b109      	cbz	r1, 8007b14 <prvInitialiseNewTask.isra.0+0x44>
		for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 8007b10:	42ab      	cmp	r3, r5
 8007b12:	d1f7      	bne.n	8007b04 <prvInitialiseNewTask.isra.0+0x34>
		pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 8007b14:	2300      	movs	r3, #0
 8007b16:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 8007b1a:	9d08      	ldr	r5, [sp, #32]
 8007b1c:	2d37      	cmp	r5, #55	; 0x37
 8007b1e:	bf28      	it	cs
 8007b20:	2537      	movcs	r5, #55	; 0x37
		pxNewTCB->uxMutexesHeld = 0;
 8007b22:	f04f 0a00 	mov.w	sl, #0
	pxNewTCB->uxPriority = uxPriority;
 8007b26:	62e5      	str	r5, [r4, #44]	; 0x2c
		pxNewTCB->uxBasePriority = uxPriority;
 8007b28:	64e5      	str	r5, [r4, #76]	; 0x4c
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007b2a:	1d20      	adds	r0, r4, #4
		pxNewTCB->uxMutexesHeld = 0;
 8007b2c:	f8c4 a050 	str.w	sl, [r4, #80]	; 0x50
	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 8007b30:	f7ff f84d 	bl	8006bce <vListInitialiseItem>
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007b34:	f1c5 0538 	rsb	r5, r5, #56	; 0x38
	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 8007b38:	f104 0018 	add.w	r0, r4, #24
 8007b3c:	f7ff f847 	bl	8006bce <vListInitialiseItem>
		pxNewTCB->ulNotifiedValue = 0;
 8007b40:	f8c4 a0b8 	str.w	sl, [r4, #184]	; 0xb8
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8007b44:	2260      	movs	r2, #96	; 0x60
 8007b46:	4651      	mov	r1, sl
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 8007b48:	6124      	str	r4, [r4, #16]
	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007b4a:	61a5      	str	r5, [r4, #24]
	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 8007b4c:	6264      	str	r4, [r4, #36]	; 0x24
		pxNewTCB->pxTaskTag = NULL;
 8007b4e:	f8c4 a054 	str.w	sl, [r4, #84]	; 0x54
		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 8007b52:	f884 a0bc 	strb.w	sl, [r4, #188]	; 0xbc
		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
 8007b56:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8007b5a:	f011 fdf7 	bl	801974c <memset>
 8007b5e:	4b0b      	ldr	r3, [pc, #44]	; (8007b8c <prvInitialiseNewTask.isra.0+0xbc>)
 8007b60:	65e3      	str	r3, [r4, #92]	; 0x5c
 8007b62:	4b0b      	ldr	r3, [pc, #44]	; (8007b90 <prvInitialiseNewTask.isra.0+0xc0>)
 8007b64:	6623      	str	r3, [r4, #96]	; 0x60
 8007b66:	4b0b      	ldr	r3, [pc, #44]	; (8007b94 <prvInitialiseNewTask.isra.0+0xc4>)
 8007b68:	6663      	str	r3, [r4, #100]	; 0x64
			pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 8007b6a:	463a      	mov	r2, r7
 8007b6c:	4631      	mov	r1, r6
 8007b6e:	4648      	mov	r0, r9
 8007b70:	f7ff f8a2 	bl	8006cb8 <pxPortInitialiseStack>
 8007b74:	6020      	str	r0, [r4, #0]
	if( pxCreatedTask != NULL )
 8007b76:	f1b8 0f00 	cmp.w	r8, #0
 8007b7a:	d001      	beq.n	8007b80 <prvInitialiseNewTask.isra.0+0xb0>
		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 8007b7c:	f8c8 4000 	str.w	r4, [r8]
}
 8007b80:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
		pxNewTCB->pcTaskName[ 0 ] = 0x00;
 8007b84:	f884 5034 	strb.w	r5, [r4, #52]	; 0x34
 8007b88:	e7c7      	b.n	8007b1a <prvInitialiseNewTask.isra.0+0x4a>
 8007b8a:	bf00      	nop
 8007b8c:	0801d6a4 	.word	0x0801d6a4
 8007b90:	0801d6c4 	.word	0x0801d6c4
 8007b94:	0801d684 	.word	0x0801d684

08007b98 <prvDeleteTCB>:
	{
 8007b98:	b510      	push	{r4, lr}
 8007b9a:	4604      	mov	r4, r0
			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
 8007b9c:	3058      	adds	r0, #88	; 0x58
 8007b9e:	f012 f983 	bl	8019ea8 <_reclaim_reent>
			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
 8007ba2:	f894 30bd 	ldrb.w	r3, [r4, #189]	; 0xbd
 8007ba6:	b93b      	cbnz	r3, 8007bb8 <prvDeleteTCB+0x20>
				vPortFree( pxTCB->pxStack );
 8007ba8:	6b20      	ldr	r0, [r4, #48]	; 0x30
 8007baa:	f7fe ffc7 	bl	8006b3c <vPortFree>
				vPortFree( pxTCB );
 8007bae:	4620      	mov	r0, r4
	}
 8007bb0:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
				vPortFree( pxTCB );
 8007bb4:	f7fe bfc2 	b.w	8006b3c <vPortFree>
			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
 8007bb8:	2b01      	cmp	r3, #1
 8007bba:	d0f8      	beq.n	8007bae <prvDeleteTCB+0x16>
				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
 8007bbc:	2b02      	cmp	r3, #2
 8007bbe:	d008      	beq.n	8007bd2 <prvDeleteTCB+0x3a>
 8007bc0:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007bc4:	f383 8811 	msr	BASEPRI, r3
 8007bc8:	f3bf 8f6f 	isb	sy
 8007bcc:	f3bf 8f4f 	dsb	sy
 8007bd0:	e7fe      	b.n	8007bd0 <prvDeleteTCB+0x38>
	}
 8007bd2:	bd10      	pop	{r4, pc}

08007bd4 <prvIdleTask>:
{
 8007bd4:	b580      	push	{r7, lr}
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007bd6:	4e14      	ldr	r6, [pc, #80]	; (8007c28 <prvIdleTask+0x54>)
				taskYIELD();
 8007bd8:	4f14      	ldr	r7, [pc, #80]	; (8007c2c <prvIdleTask+0x58>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007bda:	4c15      	ldr	r4, [pc, #84]	; (8007c30 <prvIdleTask+0x5c>)
				--uxCurrentNumberOfTasks;
 8007bdc:	4d15      	ldr	r5, [pc, #84]	; (8007c34 <prvIdleTask+0x60>)
		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 8007bde:	6823      	ldr	r3, [r4, #0]
 8007be0:	b96b      	cbnz	r3, 8007bfe <prvIdleTask+0x2a>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 8007be2:	4b15      	ldr	r3, [pc, #84]	; (8007c38 <prvIdleTask+0x64>)
 8007be4:	681b      	ldr	r3, [r3, #0]
 8007be6:	2b01      	cmp	r3, #1
 8007be8:	d906      	bls.n	8007bf8 <prvIdleTask+0x24>
				taskYIELD();
 8007bea:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8007bee:	603b      	str	r3, [r7, #0]
 8007bf0:	f3bf 8f4f 	dsb	sy
 8007bf4:	f3bf 8f6f 	isb	sy
			vApplicationIdleHook();
 8007bf8:	f7f9 fbfc 	bl	80013f4 <vApplicationIdleHook>
		prvCheckTasksWaitingTermination();
 8007bfc:	e7ed      	b.n	8007bda <prvIdleTask+0x6>
			taskENTER_CRITICAL();
 8007bfe:	f7ff f889 	bl	8006d14 <vPortEnterCritical>
				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007c02:	68f3      	ldr	r3, [r6, #12]
 8007c04:	f8d3 800c 	ldr.w	r8, [r3, #12]
				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007c08:	f108 0004 	add.w	r0, r8, #4
 8007c0c:	f7ff f805 	bl	8006c1a <uxListRemove>
				--uxCurrentNumberOfTasks;
 8007c10:	682b      	ldr	r3, [r5, #0]
 8007c12:	3b01      	subs	r3, #1
 8007c14:	602b      	str	r3, [r5, #0]
				--uxDeletedTasksWaitingCleanUp;
 8007c16:	6823      	ldr	r3, [r4, #0]
 8007c18:	3b01      	subs	r3, #1
 8007c1a:	6023      	str	r3, [r4, #0]
			taskEXIT_CRITICAL();
 8007c1c:	f7ff f89c 	bl	8006d58 <vPortExitCritical>
			prvDeleteTCB( pxTCB );
 8007c20:	4640      	mov	r0, r8
 8007c22:	f7ff ffb9 	bl	8007b98 <prvDeleteTCB>
 8007c26:	e7da      	b.n	8007bde <prvIdleTask+0xa>
 8007c28:	20009f98 	.word	0x20009f98
 8007c2c:	e000ed04 	.word	0xe000ed04
 8007c30:	20009f28 	.word	0x20009f28
 8007c34:	20009f24 	.word	0x20009f24
 8007c38:	20009ac4 	.word	0x20009ac4

08007c3c <prvAddCurrentTaskToDelayedList>:

#endif
/*-----------------------------------------------------------*/

static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockIndefinitely )
{
 8007c3c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
TickType_t xTimeToWake;
const TickType_t xConstTickCount = xTickCount;
 8007c3e:	4b16      	ldr	r3, [pc, #88]	; (8007c98 <prvAddCurrentTaskToDelayedList+0x5c>)
	}
	#endif

	/* Remove the task from the ready list before adding it to the blocked list
	as the same list item is used for both lists. */
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007c40:	4e16      	ldr	r6, [pc, #88]	; (8007c9c <prvAddCurrentTaskToDelayedList+0x60>)
const TickType_t xConstTickCount = xTickCount;
 8007c42:	681d      	ldr	r5, [r3, #0]
{
 8007c44:	4604      	mov	r4, r0
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007c46:	6830      	ldr	r0, [r6, #0]
 8007c48:	3004      	adds	r0, #4
{
 8007c4a:	460f      	mov	r7, r1
	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8007c4c:	f7fe ffe5 	bl	8006c1a <uxListRemove>
		mtCOVERAGE_TEST_MARKER();
	}

	#if ( INCLUDE_vTaskSuspend == 1 )
	{
		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 8007c50:	1c63      	adds	r3, r4, #1
 8007c52:	4633      	mov	r3, r6
 8007c54:	d107      	bne.n	8007c66 <prvAddCurrentTaskToDelayedList+0x2a>
 8007c56:	b137      	cbz	r7, 8007c66 <prvAddCurrentTaskToDelayedList+0x2a>
		{
			/* Add the task to the suspended task list instead of a delayed task
			list to ensure it is not woken by a timing event.  It will block
			indefinitely. */
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007c58:	6831      	ldr	r1, [r6, #0]
 8007c5a:	4811      	ldr	r0, [pc, #68]	; (8007ca0 <prvAddCurrentTaskToDelayedList+0x64>)

		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
		( void ) xCanBlockIndefinitely;
	}
	#endif /* INCLUDE_vTaskSuspend */
}
 8007c5c:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007c60:	3104      	adds	r1, #4
 8007c62:	f7fe bfb7 	b.w	8006bd4 <vListInsertEnd>
			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
 8007c66:	681a      	ldr	r2, [r3, #0]
 8007c68:	192c      	adds	r4, r5, r4
 8007c6a:	6054      	str	r4, [r2, #4]
			if( xTimeToWake < xConstTickCount )
 8007c6c:	d307      	bcc.n	8007c7e <prvAddCurrentTaskToDelayedList+0x42>
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007c6e:	4a0d      	ldr	r2, [pc, #52]	; (8007ca4 <prvAddCurrentTaskToDelayedList+0x68>)
 8007c70:	6810      	ldr	r0, [r2, #0]
 8007c72:	6819      	ldr	r1, [r3, #0]
}
 8007c74:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007c78:	3104      	adds	r1, #4
 8007c7a:	f7fe bfb7 	b.w	8006bec <vListInsert>
				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
 8007c7e:	4a0a      	ldr	r2, [pc, #40]	; (8007ca8 <prvAddCurrentTaskToDelayedList+0x6c>)
 8007c80:	6810      	ldr	r0, [r2, #0]
 8007c82:	6819      	ldr	r1, [r3, #0]
 8007c84:	3104      	adds	r1, #4
 8007c86:	f7fe ffb1 	bl	8006bec <vListInsert>
				if( xTimeToWake < xNextTaskUnblockTime )
 8007c8a:	4b08      	ldr	r3, [pc, #32]	; (8007cac <prvAddCurrentTaskToDelayedList+0x70>)
 8007c8c:	681a      	ldr	r2, [r3, #0]
 8007c8e:	42a2      	cmp	r2, r4
					xNextTaskUnblockTime = xTimeToWake;
 8007c90:	bf88      	it	hi
 8007c92:	601c      	strhi	r4, [r3, #0]
}
 8007c94:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8007c96:	bf00      	nop
 8007c98:	20009fac 	.word	0x20009fac
 8007c9c:	20009ab8 	.word	0x20009ab8
 8007ca0:	20009f84 	.word	0x20009f84
 8007ca4:	20009ac0 	.word	0x20009ac0
 8007ca8:	20009abc 	.word	0x20009abc
 8007cac:	20009f60 	.word	0x20009f60

08007cb0 <xTaskCreateStatic>:
	{
 8007cb0:	b570      	push	{r4, r5, r6, lr}
 8007cb2:	b086      	sub	sp, #24
 8007cb4:	e9dd 540b 	ldrd	r5, r4, [sp, #44]	; 0x2c
		configASSERT( puxStackBuffer != NULL );
 8007cb8:	b945      	cbnz	r5, 8007ccc <xTaskCreateStatic+0x1c>
 8007cba:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cbe:	f383 8811 	msr	BASEPRI, r3
 8007cc2:	f3bf 8f6f 	isb	sy
 8007cc6:	f3bf 8f4f 	dsb	sy
 8007cca:	e7fe      	b.n	8007cca <xTaskCreateStatic+0x1a>
		configASSERT( pxTaskBuffer != NULL );
 8007ccc:	b944      	cbnz	r4, 8007ce0 <xTaskCreateStatic+0x30>
 8007cce:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cd2:	f383 8811 	msr	BASEPRI, r3
 8007cd6:	f3bf 8f6f 	isb	sy
 8007cda:	f3bf 8f4f 	dsb	sy
 8007cde:	e7fe      	b.n	8007cde <xTaskCreateStatic+0x2e>
			volatile size_t xSize = sizeof( StaticTask_t );
 8007ce0:	26c0      	movs	r6, #192	; 0xc0
 8007ce2:	9605      	str	r6, [sp, #20]
			configASSERT( xSize == sizeof( TCB_t ) );
 8007ce4:	9e05      	ldr	r6, [sp, #20]
 8007ce6:	2ec0      	cmp	r6, #192	; 0xc0
 8007ce8:	d008      	beq.n	8007cfc <xTaskCreateStatic+0x4c>
 8007cea:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007cee:	f383 8811 	msr	BASEPRI, r3
 8007cf2:	f3bf 8f6f 	isb	sy
 8007cf6:	f3bf 8f4f 	dsb	sy
 8007cfa:	e7fe      	b.n	8007cfa <xTaskCreateStatic+0x4a>
			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 8007cfc:	6325      	str	r5, [r4, #48]	; 0x30
				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 8007cfe:	2502      	movs	r5, #2
 8007d00:	f884 50bd 	strb.w	r5, [r4, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8007d04:	ad04      	add	r5, sp, #16
 8007d06:	9501      	str	r5, [sp, #4]
 8007d08:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8007d0a:	9402      	str	r4, [sp, #8]
 8007d0c:	9500      	str	r5, [sp, #0]
			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 8007d0e:	9e05      	ldr	r6, [sp, #20]
			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNewTCB, NULL );
 8007d10:	f7ff fede 	bl	8007ad0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8007d14:	4620      	mov	r0, r4
 8007d16:	f7ff fe49 	bl	80079ac <prvAddNewTaskToReadyList>
	}
 8007d1a:	9804      	ldr	r0, [sp, #16]
 8007d1c:	b006      	add	sp, #24
 8007d1e:	bd70      	pop	{r4, r5, r6, pc}

08007d20 <xTaskCreate>:
	{
 8007d20:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007d24:	4607      	mov	r7, r0
 8007d26:	b085      	sub	sp, #20
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8007d28:	0090      	lsls	r0, r2, #2
	{
 8007d2a:	4688      	mov	r8, r1
 8007d2c:	4616      	mov	r6, r2
 8007d2e:	4699      	mov	r9, r3
			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack and this allocation is the stack. */
 8007d30:	f7fe fe72 	bl	8006a18 <pvPortMalloc>
			if( pxStack != NULL )
 8007d34:	4605      	mov	r5, r0
 8007d36:	b1e8      	cbz	r0, 8007d74 <xTaskCreate+0x54>
				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returned by pvPortMalloc() have at least the alignment required by the MCU's stack, and the first member of TCB_t is always a pointer to the task's stack. */
 8007d38:	20c0      	movs	r0, #192	; 0xc0
 8007d3a:	f7fe fe6d 	bl	8006a18 <pvPortMalloc>
				if( pxNewTCB != NULL )
 8007d3e:	4604      	mov	r4, r0
 8007d40:	b1a8      	cbz	r0, 8007d6e <xTaskCreate+0x4e>
				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 8007d42:	2300      	movs	r3, #0
 8007d44:	f880 30bd 	strb.w	r3, [r0, #189]	; 0xbd
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8007d48:	9b0d      	ldr	r3, [sp, #52]	; 0x34
					pxNewTCB->pxStack = pxStack;
 8007d4a:	6305      	str	r5, [r0, #48]	; 0x30
			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, pxCreatedTask, pxNewTCB, NULL );
 8007d4c:	9301      	str	r3, [sp, #4]
 8007d4e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007d50:	9002      	str	r0, [sp, #8]
 8007d52:	9300      	str	r3, [sp, #0]
 8007d54:	4632      	mov	r2, r6
 8007d56:	464b      	mov	r3, r9
 8007d58:	4641      	mov	r1, r8
 8007d5a:	4638      	mov	r0, r7
 8007d5c:	f7ff feb8 	bl	8007ad0 <prvInitialiseNewTask.isra.0>
			prvAddNewTaskToReadyList( pxNewTCB );
 8007d60:	4620      	mov	r0, r4
 8007d62:	f7ff fe23 	bl	80079ac <prvAddNewTaskToReadyList>
			xReturn = pdPASS;
 8007d66:	2001      	movs	r0, #1
	}
 8007d68:	b005      	add	sp, #20
 8007d6a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
					vPortFree( pxStack );
 8007d6e:	4628      	mov	r0, r5
 8007d70:	f7fe fee4 	bl	8006b3c <vPortFree>
			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 8007d74:	f04f 30ff 	mov.w	r0, #4294967295
		return xReturn;
 8007d78:	e7f6      	b.n	8007d68 <xTaskCreate+0x48>
	...

08007d7c <vTaskSuspendAll>:
	++uxSchedulerSuspended;
 8007d7c:	4a02      	ldr	r2, [pc, #8]	; (8007d88 <vTaskSuspendAll+0xc>)
 8007d7e:	6813      	ldr	r3, [r2, #0]
 8007d80:	3301      	adds	r3, #1
 8007d82:	6013      	str	r3, [r2, #0]
}
 8007d84:	4770      	bx	lr
 8007d86:	bf00      	nop
 8007d88:	20009f2c 	.word	0x20009f2c

08007d8c <xTaskGetTickCount>:
		xTicks = xTickCount;
 8007d8c:	4b01      	ldr	r3, [pc, #4]	; (8007d94 <xTaskGetTickCount+0x8>)
 8007d8e:	6818      	ldr	r0, [r3, #0]
}
 8007d90:	4770      	bx	lr
 8007d92:	bf00      	nop
 8007d94:	20009fac 	.word	0x20009fac

08007d98 <xTaskIncrementTick>:
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007d98:	4b3f      	ldr	r3, [pc, #252]	; (8007e98 <xTaskIncrementTick+0x100>)
 8007d9a:	681b      	ldr	r3, [r3, #0]
{
 8007d9c:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007da0:	2b00      	cmp	r3, #0
 8007da2:	d173      	bne.n	8007e8c <xTaskIncrementTick+0xf4>
		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 8007da4:	4b3d      	ldr	r3, [pc, #244]	; (8007e9c <xTaskIncrementTick+0x104>)
 8007da6:	681d      	ldr	r5, [r3, #0]
 8007da8:	3501      	adds	r5, #1
		xTickCount = xConstTickCount;
 8007daa:	601d      	str	r5, [r3, #0]
		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as it is looking for an overflow. */
 8007dac:	b9bd      	cbnz	r5, 8007dde <xTaskIncrementTick+0x46>
			taskSWITCH_DELAYED_LISTS();
 8007dae:	4b3c      	ldr	r3, [pc, #240]	; (8007ea0 <xTaskIncrementTick+0x108>)
 8007db0:	681a      	ldr	r2, [r3, #0]
 8007db2:	6812      	ldr	r2, [r2, #0]
 8007db4:	b142      	cbz	r2, 8007dc8 <xTaskIncrementTick+0x30>
 8007db6:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007dba:	f383 8811 	msr	BASEPRI, r3
 8007dbe:	f3bf 8f6f 	isb	sy
 8007dc2:	f3bf 8f4f 	dsb	sy
 8007dc6:	e7fe      	b.n	8007dc6 <xTaskIncrementTick+0x2e>
 8007dc8:	4a36      	ldr	r2, [pc, #216]	; (8007ea4 <xTaskIncrementTick+0x10c>)
 8007dca:	6819      	ldr	r1, [r3, #0]
 8007dcc:	6810      	ldr	r0, [r2, #0]
 8007dce:	6018      	str	r0, [r3, #0]
 8007dd0:	6011      	str	r1, [r2, #0]
 8007dd2:	4a35      	ldr	r2, [pc, #212]	; (8007ea8 <xTaskIncrementTick+0x110>)
 8007dd4:	6813      	ldr	r3, [r2, #0]
 8007dd6:	3301      	adds	r3, #1
 8007dd8:	6013      	str	r3, [r2, #0]
 8007dda:	f7ff fe67 	bl	8007aac <prvResetNextTaskUnblockTime>
		if( xConstTickCount >= xNextTaskUnblockTime )
 8007dde:	4e33      	ldr	r6, [pc, #204]	; (8007eac <xTaskIncrementTick+0x114>)
 8007de0:	4f33      	ldr	r7, [pc, #204]	; (8007eb0 <xTaskIncrementTick+0x118>)
 8007de2:	6833      	ldr	r3, [r6, #0]
 8007de4:	f8df 80d4 	ldr.w	r8, [pc, #212]	; 8007ebc <xTaskIncrementTick+0x124>
 8007de8:	429d      	cmp	r5, r3
BaseType_t xSwitchRequired = pdFALSE;
 8007dea:	f04f 0400 	mov.w	r4, #0
		if( xConstTickCount >= xNextTaskUnblockTime )
 8007dee:	d211      	bcs.n	8007e14 <xTaskIncrementTick+0x7c>
			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_t ) 1 )
 8007df0:	f8d8 3000 	ldr.w	r3, [r8]
 8007df4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8007df6:	2314      	movs	r3, #20
 8007df8:	4353      	muls	r3, r2
 8007dfa:	58fb      	ldr	r3, [r7, r3]
				xSwitchRequired = pdTRUE;
 8007dfc:	2b02      	cmp	r3, #2
			if( xYieldPending != pdFALSE )
 8007dfe:	4b2d      	ldr	r3, [pc, #180]	; (8007eb4 <xTaskIncrementTick+0x11c>)
 8007e00:	681b      	ldr	r3, [r3, #0]
				xSwitchRequired = pdTRUE;
 8007e02:	bf28      	it	cs
 8007e04:	2401      	movcs	r4, #1
				xSwitchRequired = pdTRUE;
 8007e06:	2b00      	cmp	r3, #0
 8007e08:	bf18      	it	ne
 8007e0a:	2401      	movne	r4, #1
}
 8007e0c:	4620      	mov	r0, r4
 8007e0e:	b003      	add	sp, #12
 8007e10:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007e14:	f8df 9088 	ldr.w	r9, [pc, #136]	; 8007ea0 <xTaskIncrementTick+0x108>
					prvAddTaskToReadyList( pxTCB );
 8007e18:	f8df a0a4 	ldr.w	sl, [pc, #164]	; 8007ec0 <xTaskIncrementTick+0x128>
				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 8007e1c:	f8d9 3000 	ldr.w	r3, [r9]
 8007e20:	681b      	ldr	r3, [r3, #0]
 8007e22:	b91b      	cbnz	r3, 8007e2c <xTaskIncrementTick+0x94>
					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 8007e24:	f04f 33ff 	mov.w	r3, #4294967295
 8007e28:	6033      	str	r3, [r6, #0]
					break;
 8007e2a:	e7e1      	b.n	8007df0 <xTaskIncrementTick+0x58>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007e2c:	f8d9 3000 	ldr.w	r3, [r9]
 8007e30:	68db      	ldr	r3, [r3, #12]
 8007e32:	f8d3 b00c 	ldr.w	fp, [r3, #12]
					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 8007e36:	f8db 2004 	ldr.w	r2, [fp, #4]
					if( xConstTickCount < xItemValue )
 8007e3a:	4295      	cmp	r5, r2
 8007e3c:	d201      	bcs.n	8007e42 <xTaskIncrementTick+0xaa>
						xNextTaskUnblockTime = xItemValue;
 8007e3e:	6032      	str	r2, [r6, #0]
						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks. */
 8007e40:	e7d6      	b.n	8007df0 <xTaskIncrementTick+0x58>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007e42:	f10b 0104 	add.w	r1, fp, #4
 8007e46:	4608      	mov	r0, r1
 8007e48:	9101      	str	r1, [sp, #4]
 8007e4a:	f7fe fee6 	bl	8006c1a <uxListRemove>
					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 8007e4e:	f8db 2028 	ldr.w	r2, [fp, #40]	; 0x28
 8007e52:	9901      	ldr	r1, [sp, #4]
 8007e54:	b122      	cbz	r2, 8007e60 <xTaskIncrementTick+0xc8>
						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8007e56:	f10b 0018 	add.w	r0, fp, #24
 8007e5a:	f7fe fede 	bl	8006c1a <uxListRemove>
 8007e5e:	9901      	ldr	r1, [sp, #4]
					prvAddTaskToReadyList( pxTCB );
 8007e60:	f8db 002c 	ldr.w	r0, [fp, #44]	; 0x2c
 8007e64:	f8da 2000 	ldr.w	r2, [sl]
 8007e68:	2314      	movs	r3, #20
 8007e6a:	4290      	cmp	r0, r2
 8007e6c:	bf88      	it	hi
 8007e6e:	f8ca 0000 	strhi.w	r0, [sl]
 8007e72:	fb03 7000 	mla	r0, r3, r0, r7
 8007e76:	f7fe fead 	bl	8006bd4 <vListInsertEnd>
						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8007e7a:	f8d8 1000 	ldr.w	r1, [r8]
 8007e7e:	f8db 202c 	ldr.w	r2, [fp, #44]	; 0x2c
 8007e82:	6acb      	ldr	r3, [r1, #44]	; 0x2c
							xSwitchRequired = pdTRUE;
 8007e84:	429a      	cmp	r2, r3
 8007e86:	bf28      	it	cs
 8007e88:	2401      	movcs	r4, #1
 8007e8a:	e7c7      	b.n	8007e1c <xTaskIncrementTick+0x84>
		++xPendedTicks;
 8007e8c:	4a0a      	ldr	r2, [pc, #40]	; (8007eb8 <xTaskIncrementTick+0x120>)
 8007e8e:	6813      	ldr	r3, [r2, #0]
 8007e90:	3301      	adds	r3, #1
 8007e92:	6013      	str	r3, [r2, #0]
BaseType_t xSwitchRequired = pdFALSE;
 8007e94:	2400      	movs	r4, #0
	return xSwitchRequired;
 8007e96:	e7b9      	b.n	8007e0c <xTaskIncrementTick+0x74>
 8007e98:	20009f2c 	.word	0x20009f2c
 8007e9c:	20009fac 	.word	0x20009fac
 8007ea0:	20009abc 	.word	0x20009abc
 8007ea4:	20009ac0 	.word	0x20009ac0
 8007ea8:	20009f64 	.word	0x20009f64
 8007eac:	20009f60 	.word	0x20009f60
 8007eb0:	20009ac4 	.word	0x20009ac4
 8007eb4:	20009fb0 	.word	0x20009fb0
 8007eb8:	20009f68 	.word	0x20009f68
 8007ebc:	20009ab8 	.word	0x20009ab8
 8007ec0:	20009f34 	.word	0x20009f34

08007ec4 <xTaskResumeAll>:
{
 8007ec4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	configASSERT( uxSchedulerSuspended );
 8007ec6:	4c30      	ldr	r4, [pc, #192]	; (8007f88 <xTaskResumeAll+0xc4>)
 8007ec8:	6823      	ldr	r3, [r4, #0]
 8007eca:	b943      	cbnz	r3, 8007ede <xTaskResumeAll+0x1a>
 8007ecc:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007ed0:	f383 8811 	msr	BASEPRI, r3
 8007ed4:	f3bf 8f6f 	isb	sy
 8007ed8:	f3bf 8f4f 	dsb	sy
 8007edc:	e7fe      	b.n	8007edc <xTaskResumeAll+0x18>
	taskENTER_CRITICAL();
 8007ede:	f7fe ff19 	bl	8006d14 <vPortEnterCritical>
		--uxSchedulerSuspended;
 8007ee2:	6823      	ldr	r3, [r4, #0]
 8007ee4:	3b01      	subs	r3, #1
 8007ee6:	6023      	str	r3, [r4, #0]
		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 8007ee8:	6824      	ldr	r4, [r4, #0]
 8007eea:	b12c      	cbz	r4, 8007ef8 <xTaskResumeAll+0x34>
BaseType_t xAlreadyYielded = pdFALSE;
 8007eec:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 8007eee:	f7fe ff33 	bl	8006d58 <vPortExitCritical>
}
 8007ef2:	4620      	mov	r0, r4
 8007ef4:	b003      	add	sp, #12
 8007ef6:	bdf0      	pop	{r4, r5, r6, r7, pc}
			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 8007ef8:	4b24      	ldr	r3, [pc, #144]	; (8007f8c <xTaskResumeAll+0xc8>)
 8007efa:	681b      	ldr	r3, [r3, #0]
 8007efc:	2b00      	cmp	r3, #0
 8007efe:	d0f5      	beq.n	8007eec <xTaskResumeAll+0x28>
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8007f00:	4d23      	ldr	r5, [pc, #140]	; (8007f90 <xTaskResumeAll+0xcc>)
					prvAddTaskToReadyList( pxTCB );
 8007f02:	4e24      	ldr	r6, [pc, #144]	; (8007f94 <xTaskResumeAll+0xd0>)
 8007f04:	4f24      	ldr	r7, [pc, #144]	; (8007f98 <xTaskResumeAll+0xd4>)
 8007f06:	e01e      	b.n	8007f46 <xTaskResumeAll+0x82>
					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8007f08:	68eb      	ldr	r3, [r5, #12]
 8007f0a:	68dc      	ldr	r4, [r3, #12]
					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 8007f0c:	f104 0018 	add.w	r0, r4, #24
 8007f10:	f7fe fe83 	bl	8006c1a <uxListRemove>
					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 8007f14:	1d21      	adds	r1, r4, #4
 8007f16:	4608      	mov	r0, r1
 8007f18:	9101      	str	r1, [sp, #4]
 8007f1a:	f7fe fe7e 	bl	8006c1a <uxListRemove>
					prvAddTaskToReadyList( pxTCB );
 8007f1e:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8007f20:	6832      	ldr	r2, [r6, #0]
 8007f22:	9901      	ldr	r1, [sp, #4]
 8007f24:	2014      	movs	r0, #20
 8007f26:	4293      	cmp	r3, r2
 8007f28:	fb00 7003 	mla	r0, r0, r3, r7
 8007f2c:	bf88      	it	hi
 8007f2e:	6033      	strhi	r3, [r6, #0]
 8007f30:	f7fe fe50 	bl	8006bd4 <vListInsertEnd>
					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 8007f34:	4b19      	ldr	r3, [pc, #100]	; (8007f9c <xTaskResumeAll+0xd8>)
 8007f36:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8007f38:	681b      	ldr	r3, [r3, #0]
 8007f3a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8007f3c:	429a      	cmp	r2, r3
 8007f3e:	d302      	bcc.n	8007f46 <xTaskResumeAll+0x82>
						xYieldPending = pdTRUE;
 8007f40:	4b17      	ldr	r3, [pc, #92]	; (8007fa0 <xTaskResumeAll+0xdc>)
 8007f42:	2201      	movs	r2, #1
 8007f44:	601a      	str	r2, [r3, #0]
				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 8007f46:	682b      	ldr	r3, [r5, #0]
 8007f48:	2b00      	cmp	r3, #0
 8007f4a:	d1dd      	bne.n	8007f08 <xTaskResumeAll+0x44>
				if( pxTCB != NULL )
 8007f4c:	b10c      	cbz	r4, 8007f52 <xTaskResumeAll+0x8e>
					prvResetNextTaskUnblockTime();
 8007f4e:	f7ff fdad 	bl	8007aac <prvResetNextTaskUnblockTime>
					TickType_t xPendedCounts = xPendedTicks; /* Non-volatile copy. */
 8007f52:	4d14      	ldr	r5, [pc, #80]	; (8007fa4 <xTaskResumeAll+0xe0>)
 8007f54:	682c      	ldr	r4, [r5, #0]
					if( xPendedCounts > ( TickType_t ) 0U )
 8007f56:	b144      	cbz	r4, 8007f6a <xTaskResumeAll+0xa6>
								xYieldPending = pdTRUE;
 8007f58:	4e11      	ldr	r6, [pc, #68]	; (8007fa0 <xTaskResumeAll+0xdc>)
 8007f5a:	2701      	movs	r7, #1
							if( xTaskIncrementTick() != pdFALSE )
 8007f5c:	f7ff ff1c 	bl	8007d98 <xTaskIncrementTick>
 8007f60:	b100      	cbz	r0, 8007f64 <xTaskResumeAll+0xa0>
								xYieldPending = pdTRUE;
 8007f62:	6037      	str	r7, [r6, #0]
						} while( xPendedCounts > ( TickType_t ) 0U );
 8007f64:	3c01      	subs	r4, #1
 8007f66:	d1f9      	bne.n	8007f5c <xTaskResumeAll+0x98>
						xPendedTicks = 0;
 8007f68:	602c      	str	r4, [r5, #0]
				if( xYieldPending != pdFALSE )
 8007f6a:	4b0d      	ldr	r3, [pc, #52]	; (8007fa0 <xTaskResumeAll+0xdc>)
 8007f6c:	681b      	ldr	r3, [r3, #0]
 8007f6e:	2b00      	cmp	r3, #0
 8007f70:	d0bc      	beq.n	8007eec <xTaskResumeAll+0x28>
					taskYIELD_IF_USING_PREEMPTION();
 8007f72:	4b0d      	ldr	r3, [pc, #52]	; (8007fa8 <xTaskResumeAll+0xe4>)
 8007f74:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007f78:	601a      	str	r2, [r3, #0]
 8007f7a:	f3bf 8f4f 	dsb	sy
 8007f7e:	f3bf 8f6f 	isb	sy
						xAlreadyYielded = pdTRUE;
 8007f82:	2401      	movs	r4, #1
 8007f84:	e7b3      	b.n	8007eee <xTaskResumeAll+0x2a>
 8007f86:	bf00      	nop
 8007f88:	20009f2c 	.word	0x20009f2c
 8007f8c:	20009f24 	.word	0x20009f24
 8007f90:	20009f6c 	.word	0x20009f6c
 8007f94:	20009f34 	.word	0x20009f34
 8007f98:	20009ac4 	.word	0x20009ac4
 8007f9c:	20009ab8 	.word	0x20009ab8
 8007fa0:	20009fb0 	.word	0x20009fb0
 8007fa4:	20009f68 	.word	0x20009f68
 8007fa8:	e000ed04 	.word	0xe000ed04

08007fac <vTaskDelay>:
	{
 8007fac:	b508      	push	{r3, lr}
		if( xTicksToDelay > ( TickType_t ) 0U )
 8007fae:	b940      	cbnz	r0, 8007fc2 <vTaskDelay+0x16>
			portYIELD_WITHIN_API();
 8007fb0:	4b0e      	ldr	r3, [pc, #56]	; (8007fec <vTaskDelay+0x40>)
 8007fb2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8007fb6:	601a      	str	r2, [r3, #0]
 8007fb8:	f3bf 8f4f 	dsb	sy
 8007fbc:	f3bf 8f6f 	isb	sy
	}
 8007fc0:	bd08      	pop	{r3, pc}
			configASSERT( uxSchedulerSuspended == 0 );
 8007fc2:	4b0b      	ldr	r3, [pc, #44]	; (8007ff0 <vTaskDelay+0x44>)
 8007fc4:	6819      	ldr	r1, [r3, #0]
 8007fc6:	b141      	cbz	r1, 8007fda <vTaskDelay+0x2e>
 8007fc8:	f04f 0350 	mov.w	r3, #80	; 0x50
 8007fcc:	f383 8811 	msr	BASEPRI, r3
 8007fd0:	f3bf 8f6f 	isb	sy
 8007fd4:	f3bf 8f4f 	dsb	sy
 8007fd8:	e7fe      	b.n	8007fd8 <vTaskDelay+0x2c>
			vTaskSuspendAll();
 8007fda:	f7ff fecf 	bl	8007d7c <vTaskSuspendAll>
				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 8007fde:	f7ff fe2d 	bl	8007c3c <prvAddCurrentTaskToDelayedList>
			xAlreadyYielded = xTaskResumeAll();
 8007fe2:	f7ff ff6f 	bl	8007ec4 <xTaskResumeAll>
		if( xAlreadyYielded == pdFALSE )
 8007fe6:	2800      	cmp	r0, #0
 8007fe8:	d0e2      	beq.n	8007fb0 <vTaskDelay+0x4>
 8007fea:	e7e9      	b.n	8007fc0 <vTaskDelay+0x14>
 8007fec:	e000ed04 	.word	0xe000ed04
 8007ff0:	20009f2c 	.word	0x20009f2c

08007ff4 <vTaskSetApplicationTaskTag>:
	{
 8007ff4:	b538      	push	{r3, r4, r5, lr}
 8007ff6:	460d      	mov	r5, r1
		if( xTask == NULL )
 8007ff8:	4604      	mov	r4, r0
 8007ffa:	b908      	cbnz	r0, 8008000 <vTaskSetApplicationTaskTag+0xc>
			xTCB = ( TCB_t * ) pxCurrentTCB;
 8007ffc:	4b04      	ldr	r3, [pc, #16]	; (8008010 <vTaskSetApplicationTaskTag+0x1c>)
 8007ffe:	681c      	ldr	r4, [r3, #0]
		taskENTER_CRITICAL();
 8008000:	f7fe fe88 	bl	8006d14 <vPortEnterCritical>
			xTCB->pxTaskTag = pxHookFunction;
 8008004:	6565      	str	r5, [r4, #84]	; 0x54
	}
 8008006:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		taskEXIT_CRITICAL();
 800800a:	f7fe bea5 	b.w	8006d58 <vPortExitCritical>
 800800e:	bf00      	nop
 8008010:	20009ab8 	.word	0x20009ab8

08008014 <xTaskCallApplicationTaskHook>:
	{
 8008014:	4603      	mov	r3, r0
 8008016:	4608      	mov	r0, r1
		if( xTask == NULL )
 8008018:	b90b      	cbnz	r3, 800801e <xTaskCallApplicationTaskHook+0xa>
			xTCB = pxCurrentTCB;
 800801a:	4b03      	ldr	r3, [pc, #12]	; (8008028 <xTaskCallApplicationTaskHook+0x14>)
 800801c:	681b      	ldr	r3, [r3, #0]
		if( xTCB->pxTaskTag != NULL )
 800801e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008020:	b103      	cbz	r3, 8008024 <xTaskCallApplicationTaskHook+0x10>
			xReturn = xTCB->pxTaskTag( pvParameter );
 8008022:	4718      	bx	r3
	}
 8008024:	4618      	mov	r0, r3
 8008026:	4770      	bx	lr
 8008028:	20009ab8 	.word	0x20009ab8

0800802c <vTaskStartScheduler>:
{
 800802c:	b510      	push	{r4, lr}
 800802e:	b088      	sub	sp, #32
		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
 8008030:	2400      	movs	r4, #0
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 8008032:	aa07      	add	r2, sp, #28
 8008034:	a906      	add	r1, sp, #24
 8008036:	a805      	add	r0, sp, #20
		StackType_t *pxIdleTaskStackBuffer = NULL;
 8008038:	e9cd 4405 	strd	r4, r4, [sp, #20]
		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize );
 800803c:	f7fe fcb0 	bl	80069a0 <vApplicationGetIdleTaskMemory>
		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
 8008040:	9b05      	ldr	r3, [sp, #20]
 8008042:	9302      	str	r3, [sp, #8]
 8008044:	9b06      	ldr	r3, [sp, #24]
 8008046:	9a07      	ldr	r2, [sp, #28]
 8008048:	4919      	ldr	r1, [pc, #100]	; (80080b0 <vTaskStartScheduler+0x84>)
 800804a:	481a      	ldr	r0, [pc, #104]	; (80080b4 <vTaskStartScheduler+0x88>)
 800804c:	e9cd 4300 	strd	r4, r3, [sp]
 8008050:	4623      	mov	r3, r4
 8008052:	f7ff fe2d 	bl	8007cb0 <xTaskCreateStatic>
		if( xIdleTaskHandle != NULL )
 8008056:	b1f0      	cbz	r0, 8008096 <vTaskStartScheduler+0x6a>
			xReturn = xTimerCreateTimerTask();
 8008058:	f000 fa92 	bl	8008580 <xTimerCreateTimerTask>
	if( xReturn == pdPASS )
 800805c:	2801      	cmp	r0, #1
 800805e:	d11c      	bne.n	800809a <vTaskStartScheduler+0x6e>
 8008060:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008064:	f383 8811 	msr	BASEPRI, r3
 8008068:	f3bf 8f6f 	isb	sy
 800806c:	f3bf 8f4f 	dsb	sy
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8008070:	4a11      	ldr	r2, [pc, #68]	; (80080b8 <vTaskStartScheduler+0x8c>)
 8008072:	4912      	ldr	r1, [pc, #72]	; (80080bc <vTaskStartScheduler+0x90>)
 8008074:	6813      	ldr	r3, [r2, #0]
 8008076:	3358      	adds	r3, #88	; 0x58
 8008078:	600b      	str	r3, [r1, #0]
		xNextTaskUnblockTime = portMAX_DELAY;
 800807a:	4b11      	ldr	r3, [pc, #68]	; (80080c0 <vTaskStartScheduler+0x94>)
 800807c:	f04f 31ff 	mov.w	r1, #4294967295
 8008080:	6019      	str	r1, [r3, #0]
		xSchedulerRunning = pdTRUE;
 8008082:	4b10      	ldr	r3, [pc, #64]	; (80080c4 <vTaskStartScheduler+0x98>)
 8008084:	6018      	str	r0, [r3, #0]
		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 8008086:	4b10      	ldr	r3, [pc, #64]	; (80080c8 <vTaskStartScheduler+0x9c>)
 8008088:	601c      	str	r4, [r3, #0]
		traceTASK_SWITCHED_IN();
 800808a:	6810      	ldr	r0, [r2, #0]
 800808c:	4621      	mov	r1, r4
 800808e:	f7ff ffc1 	bl	8008014 <xTaskCallApplicationTaskHook>
		if( xPortStartScheduler() != pdFALSE )
 8008092:	f7fe fed7 	bl	8006e44 <xPortStartScheduler>
}
 8008096:	b008      	add	sp, #32
 8008098:	bd10      	pop	{r4, pc}
		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
 800809a:	3001      	adds	r0, #1
 800809c:	d1fb      	bne.n	8008096 <vTaskStartScheduler+0x6a>
 800809e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80080a2:	f383 8811 	msr	BASEPRI, r3
 80080a6:	f3bf 8f6f 	isb	sy
 80080aa:	f3bf 8f4f 	dsb	sy
 80080ae:	e7fe      	b.n	80080ae <vTaskStartScheduler+0x82>
 80080b0:	0801b54d 	.word	0x0801b54d
 80080b4:	08007bd5 	.word	0x08007bd5
 80080b8:	20009ab8 	.word	0x20009ab8
 80080bc:	200000d8 	.word	0x200000d8
 80080c0:	20009f60 	.word	0x20009f60
 80080c4:	20009f80 	.word	0x20009f80
 80080c8:	20009fac 	.word	0x20009fac

080080cc <vTaskSwitchContext>:
{
 80080cc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 80080ce:	4b1e      	ldr	r3, [pc, #120]	; (8008148 <vTaskSwitchContext+0x7c>)
 80080d0:	681a      	ldr	r2, [r3, #0]
 80080d2:	4b1e      	ldr	r3, [pc, #120]	; (800814c <vTaskSwitchContext+0x80>)
 80080d4:	b112      	cbz	r2, 80080dc <vTaskSwitchContext+0x10>
		xYieldPending = pdTRUE;
 80080d6:	2201      	movs	r2, #1
 80080d8:	601a      	str	r2, [r3, #0]
}
 80080da:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
		traceTASK_SWITCHED_OUT();
 80080dc:	4c1c      	ldr	r4, [pc, #112]	; (8008150 <vTaskSwitchContext+0x84>)
		xYieldPending = pdFALSE;
 80080de:	601a      	str	r2, [r3, #0]
		traceTASK_SWITCHED_OUT();
 80080e0:	6820      	ldr	r0, [r4, #0]
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80080e2:	4e1c      	ldr	r6, [pc, #112]	; (8008154 <vTaskSwitchContext+0x88>)
		traceTASK_SWITCHED_OUT();
 80080e4:	2101      	movs	r1, #1
 80080e6:	f7ff ff95 	bl	8008014 <xTaskCallApplicationTaskHook>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80080ea:	4a1b      	ldr	r2, [pc, #108]	; (8008158 <vTaskSwitchContext+0x8c>)
 80080ec:	6833      	ldr	r3, [r6, #0]
 80080ee:	f04f 0c14 	mov.w	ip, #20
 80080f2:	4617      	mov	r7, r2
 80080f4:	fb0c f103 	mul.w	r1, ip, r3
 80080f8:	1850      	adds	r0, r2, r1
 80080fa:	5855      	ldr	r5, [r2, r1]
 80080fc:	b1c5      	cbz	r5, 8008130 <vTaskSwitchContext+0x64>
 80080fe:	6845      	ldr	r5, [r0, #4]
 8008100:	3108      	adds	r1, #8
 8008102:	686d      	ldr	r5, [r5, #4]
 8008104:	6045      	str	r5, [r0, #4]
 8008106:	440a      	add	r2, r1
 8008108:	4295      	cmp	r5, r2
 800810a:	bf04      	itt	eq
 800810c:	686a      	ldreq	r2, [r5, #4]
 800810e:	6042      	streq	r2, [r0, #4]
 8008110:	2214      	movs	r2, #20
 8008112:	fb02 7203 	mla	r2, r2, r3, r7
		traceTASK_SWITCHED_IN();
 8008116:	2100      	movs	r1, #0
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008118:	6852      	ldr	r2, [r2, #4]
 800811a:	68d2      	ldr	r2, [r2, #12]
 800811c:	6022      	str	r2, [r4, #0]
 800811e:	6033      	str	r3, [r6, #0]
		traceTASK_SWITCHED_IN();
 8008120:	6820      	ldr	r0, [r4, #0]
 8008122:	f7ff ff77 	bl	8008014 <xTaskCallApplicationTaskHook>
			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
 8008126:	6823      	ldr	r3, [r4, #0]
 8008128:	4a0c      	ldr	r2, [pc, #48]	; (800815c <vTaskSwitchContext+0x90>)
 800812a:	3358      	adds	r3, #88	; 0x58
 800812c:	6013      	str	r3, [r2, #0]
}
 800812e:	e7d4      	b.n	80080da <vTaskSwitchContext+0xe>
		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008130:	b943      	cbnz	r3, 8008144 <vTaskSwitchContext+0x78>
 8008132:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008136:	f383 8811 	msr	BASEPRI, r3
 800813a:	f3bf 8f6f 	isb	sy
 800813e:	f3bf 8f4f 	dsb	sy
 8008142:	e7fe      	b.n	8008142 <vTaskSwitchContext+0x76>
 8008144:	3b01      	subs	r3, #1
 8008146:	e7d5      	b.n	80080f4 <vTaskSwitchContext+0x28>
 8008148:	20009f2c 	.word	0x20009f2c
 800814c:	20009fb0 	.word	0x20009fb0
 8008150:	20009ab8 	.word	0x20009ab8
 8008154:	20009f34 	.word	0x20009f34
 8008158:	20009ac4 	.word	0x20009ac4
 800815c:	200000d8 	.word	0x200000d8

08008160 <vTaskPlaceOnEventList>:
{
 8008160:	b510      	push	{r4, lr}
 8008162:	460c      	mov	r4, r1
	configASSERT( pxEventList );
 8008164:	b940      	cbnz	r0, 8008178 <vTaskPlaceOnEventList+0x18>
 8008166:	f04f 0350 	mov.w	r3, #80	; 0x50
 800816a:	f383 8811 	msr	BASEPRI, r3
 800816e:	f3bf 8f6f 	isb	sy
 8008172:	f3bf 8f4f 	dsb	sy
 8008176:	e7fe      	b.n	8008176 <vTaskPlaceOnEventList+0x16>
	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 8008178:	4b05      	ldr	r3, [pc, #20]	; (8008190 <vTaskPlaceOnEventList+0x30>)
 800817a:	6819      	ldr	r1, [r3, #0]
 800817c:	3118      	adds	r1, #24
 800817e:	f7fe fd35 	bl	8006bec <vListInsert>
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 8008182:	4620      	mov	r0, r4
 8008184:	2101      	movs	r1, #1
}
 8008186:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 800818a:	f7ff bd57 	b.w	8007c3c <prvAddCurrentTaskToDelayedList>
 800818e:	bf00      	nop
 8008190:	20009ab8 	.word	0x20009ab8

08008194 <vTaskPlaceOnEventListRestricted>:
	{
 8008194:	b538      	push	{r3, r4, r5, lr}
 8008196:	460d      	mov	r5, r1
 8008198:	4614      	mov	r4, r2
		configASSERT( pxEventList );
 800819a:	b940      	cbnz	r0, 80081ae <vTaskPlaceOnEventListRestricted+0x1a>
 800819c:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081a0:	f383 8811 	msr	BASEPRI, r3
 80081a4:	f3bf 8f6f 	isb	sy
 80081a8:	f3bf 8f4f 	dsb	sy
 80081ac:	e7fe      	b.n	80081ac <vTaskPlaceOnEventListRestricted+0x18>
		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 80081ae:	4b07      	ldr	r3, [pc, #28]	; (80081cc <vTaskPlaceOnEventListRestricted+0x38>)
 80081b0:	6819      	ldr	r1, [r3, #0]
 80081b2:	3118      	adds	r1, #24
 80081b4:	f7fe fd0e 	bl	8006bd4 <vListInsertEnd>
			xTicksToWait = portMAX_DELAY;
 80081b8:	2c00      	cmp	r4, #0
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80081ba:	4621      	mov	r1, r4
 80081bc:	bf0c      	ite	eq
 80081be:	4628      	moveq	r0, r5
 80081c0:	f04f 30ff 	movne.w	r0, #4294967295
	}
 80081c4:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 80081c8:	f7ff bd38 	b.w	8007c3c <prvAddCurrentTaskToDelayedList>
 80081cc:	20009ab8 	.word	0x20009ab8

080081d0 <xTaskRemoveFromEventList>:
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80081d0:	68c3      	ldr	r3, [r0, #12]
{
 80081d2:	b513      	push	{r0, r1, r4, lr}
	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this macro is used with timers and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 80081d4:	68dc      	ldr	r4, [r3, #12]
	configASSERT( pxUnblockedTCB );
 80081d6:	b944      	cbnz	r4, 80081ea <xTaskRemoveFromEventList+0x1a>
 80081d8:	f04f 0350 	mov.w	r3, #80	; 0x50
 80081dc:	f383 8811 	msr	BASEPRI, r3
 80081e0:	f3bf 8f6f 	isb	sy
 80081e4:	f3bf 8f4f 	dsb	sy
 80081e8:	e7fe      	b.n	80081e8 <xTaskRemoveFromEventList+0x18>
	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 80081ea:	f104 0118 	add.w	r1, r4, #24
 80081ee:	4608      	mov	r0, r1
 80081f0:	9101      	str	r1, [sp, #4]
 80081f2:	f7fe fd12 	bl	8006c1a <uxListRemove>
	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80081f6:	4b12      	ldr	r3, [pc, #72]	; (8008240 <xTaskRemoveFromEventList+0x70>)
 80081f8:	9901      	ldr	r1, [sp, #4]
 80081fa:	681b      	ldr	r3, [r3, #0]
 80081fc:	b9eb      	cbnz	r3, 800823a <xTaskRemoveFromEventList+0x6a>
		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 80081fe:	1d21      	adds	r1, r4, #4
 8008200:	4608      	mov	r0, r1
 8008202:	9101      	str	r1, [sp, #4]
 8008204:	f7fe fd09 	bl	8006c1a <uxListRemove>
		prvAddTaskToReadyList( pxUnblockedTCB );
 8008208:	4a0e      	ldr	r2, [pc, #56]	; (8008244 <xTaskRemoveFromEventList+0x74>)
 800820a:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800820c:	6810      	ldr	r0, [r2, #0]
 800820e:	9901      	ldr	r1, [sp, #4]
 8008210:	4283      	cmp	r3, r0
 8008212:	bf88      	it	hi
 8008214:	6013      	strhi	r3, [r2, #0]
 8008216:	4a0c      	ldr	r2, [pc, #48]	; (8008248 <xTaskRemoveFromEventList+0x78>)
 8008218:	2014      	movs	r0, #20
 800821a:	fb00 2003 	mla	r0, r0, r3, r2
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800821e:	f7fe fcd9 	bl	8006bd4 <vListInsertEnd>
	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 8008222:	4b0a      	ldr	r3, [pc, #40]	; (800824c <xTaskRemoveFromEventList+0x7c>)
 8008224:	6ae2      	ldr	r2, [r4, #44]	; 0x2c
 8008226:	681b      	ldr	r3, [r3, #0]
 8008228:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800822a:	429a      	cmp	r2, r3
		xYieldPending = pdTRUE;
 800822c:	bf85      	ittet	hi
 800822e:	4b08      	ldrhi	r3, [pc, #32]	; (8008250 <xTaskRemoveFromEventList+0x80>)
 8008230:	2001      	movhi	r0, #1
		xReturn = pdFALSE;
 8008232:	2000      	movls	r0, #0
		xYieldPending = pdTRUE;
 8008234:	6018      	strhi	r0, [r3, #0]
}
 8008236:	b002      	add	sp, #8
 8008238:	bd10      	pop	{r4, pc}
		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 800823a:	4806      	ldr	r0, [pc, #24]	; (8008254 <xTaskRemoveFromEventList+0x84>)
 800823c:	e7ef      	b.n	800821e <xTaskRemoveFromEventList+0x4e>
 800823e:	bf00      	nop
 8008240:	20009f2c 	.word	0x20009f2c
 8008244:	20009f34 	.word	0x20009f34
 8008248:	20009ac4 	.word	0x20009ac4
 800824c:	20009ab8 	.word	0x20009ab8
 8008250:	20009fb0 	.word	0x20009fb0
 8008254:	20009f6c 	.word	0x20009f6c

08008258 <vTaskInternalSetTimeOutState>:
	pxTimeOut->xOverflowCount = xNumOfOverflows;
 8008258:	4b03      	ldr	r3, [pc, #12]	; (8008268 <vTaskInternalSetTimeOutState+0x10>)
 800825a:	681b      	ldr	r3, [r3, #0]
 800825c:	6003      	str	r3, [r0, #0]
	pxTimeOut->xTimeOnEntering = xTickCount;
 800825e:	4b03      	ldr	r3, [pc, #12]	; (800826c <vTaskInternalSetTimeOutState+0x14>)
 8008260:	681b      	ldr	r3, [r3, #0]
 8008262:	6043      	str	r3, [r0, #4]
}
 8008264:	4770      	bx	lr
 8008266:	bf00      	nop
 8008268:	20009f64 	.word	0x20009f64
 800826c:	20009fac 	.word	0x20009fac

08008270 <xTaskCheckForTimeOut>:
{
 8008270:	b570      	push	{r4, r5, r6, lr}
 8008272:	460c      	mov	r4, r1
	configASSERT( pxTimeOut );
 8008274:	4605      	mov	r5, r0
 8008276:	b940      	cbnz	r0, 800828a <xTaskCheckForTimeOut+0x1a>
 8008278:	f04f 0350 	mov.w	r3, #80	; 0x50
 800827c:	f383 8811 	msr	BASEPRI, r3
 8008280:	f3bf 8f6f 	isb	sy
 8008284:	f3bf 8f4f 	dsb	sy
 8008288:	e7fe      	b.n	8008288 <xTaskCheckForTimeOut+0x18>
	configASSERT( pxTicksToWait );
 800828a:	b941      	cbnz	r1, 800829e <xTaskCheckForTimeOut+0x2e>
 800828c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008290:	f383 8811 	msr	BASEPRI, r3
 8008294:	f3bf 8f6f 	isb	sy
 8008298:	f3bf 8f4f 	dsb	sy
 800829c:	e7fe      	b.n	800829c <xTaskCheckForTimeOut+0x2c>
	taskENTER_CRITICAL();
 800829e:	f7fe fd39 	bl	8006d14 <vPortEnterCritical>
		const TickType_t xConstTickCount = xTickCount;
 80082a2:	4b0f      	ldr	r3, [pc, #60]	; (80082e0 <xTaskCheckForTimeOut+0x70>)
 80082a4:	6819      	ldr	r1, [r3, #0]
			if( *pxTicksToWait == portMAX_DELAY )
 80082a6:	6823      	ldr	r3, [r4, #0]
 80082a8:	1c5a      	adds	r2, r3, #1
 80082aa:	d010      	beq.n	80082ce <xTaskCheckForTimeOut+0x5e>
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80082ac:	480d      	ldr	r0, [pc, #52]	; (80082e4 <xTaskCheckForTimeOut+0x74>)
 80082ae:	682e      	ldr	r6, [r5, #0]
 80082b0:	6800      	ldr	r0, [r0, #0]
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80082b2:	686a      	ldr	r2, [r5, #4]
		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEntering ) ) /*lint !e525 Indentation preferred as is to make code within pre-processor directives clearer. */
 80082b4:	4286      	cmp	r6, r0
 80082b6:	d001      	beq.n	80082bc <xTaskCheckForTimeOut+0x4c>
 80082b8:	428a      	cmp	r2, r1
 80082ba:	d90f      	bls.n	80082dc <xTaskCheckForTimeOut+0x6c>
		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 80082bc:	1a88      	subs	r0, r1, r2
		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with some compilers, whereas others require it to prevent integer conversion errors. */
 80082be:	4283      	cmp	r3, r0
 80082c0:	d90a      	bls.n	80082d8 <xTaskCheckForTimeOut+0x68>
			*pxTicksToWait -= xElapsedTime;
 80082c2:	1a5b      	subs	r3, r3, r1
 80082c4:	4413      	add	r3, r2
 80082c6:	6023      	str	r3, [r4, #0]
			vTaskInternalSetTimeOutState( pxTimeOut );
 80082c8:	4628      	mov	r0, r5
 80082ca:	f7ff ffc5 	bl	8008258 <vTaskInternalSetTimeOutState>
				xReturn = pdFALSE;
 80082ce:	2400      	movs	r4, #0
	taskEXIT_CRITICAL();
 80082d0:	f7fe fd42 	bl	8006d58 <vPortExitCritical>
}
 80082d4:	4620      	mov	r0, r4
 80082d6:	bd70      	pop	{r4, r5, r6, pc}
			*pxTicksToWait = 0;
 80082d8:	2300      	movs	r3, #0
 80082da:	6023      	str	r3, [r4, #0]
			xReturn = pdTRUE;
 80082dc:	2401      	movs	r4, #1
 80082de:	e7f7      	b.n	80082d0 <xTaskCheckForTimeOut+0x60>
 80082e0:	20009fac 	.word	0x20009fac
 80082e4:	20009f64 	.word	0x20009f64

080082e8 <vTaskMissedYield>:
	xYieldPending = pdTRUE;
 80082e8:	4b01      	ldr	r3, [pc, #4]	; (80082f0 <vTaskMissedYield+0x8>)
 80082ea:	2201      	movs	r2, #1
 80082ec:	601a      	str	r2, [r3, #0]
}
 80082ee:	4770      	bx	lr
 80082f0:	20009fb0 	.word	0x20009fb0

080082f4 <xTaskGetSchedulerState>:
		if( xSchedulerRunning == pdFALSE )
 80082f4:	4b05      	ldr	r3, [pc, #20]	; (800830c <xTaskGetSchedulerState+0x18>)
 80082f6:	681b      	ldr	r3, [r3, #0]
 80082f8:	b133      	cbz	r3, 8008308 <xTaskGetSchedulerState+0x14>
			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 80082fa:	4b05      	ldr	r3, [pc, #20]	; (8008310 <xTaskGetSchedulerState+0x1c>)
 80082fc:	681b      	ldr	r3, [r3, #0]
 80082fe:	2b00      	cmp	r3, #0
				xReturn = taskSCHEDULER_SUSPENDED;
 8008300:	bf0c      	ite	eq
 8008302:	2002      	moveq	r0, #2
 8008304:	2000      	movne	r0, #0
 8008306:	4770      	bx	lr
			xReturn = taskSCHEDULER_NOT_STARTED;
 8008308:	2001      	movs	r0, #1
	}
 800830a:	4770      	bx	lr
 800830c:	20009f80 	.word	0x20009f80
 8008310:	20009f2c 	.word	0x20009f2c

08008314 <xTaskPriorityInherit>:
	{
 8008314:	b573      	push	{r0, r1, r4, r5, r6, lr}
		if( pxMutexHolder != NULL )
 8008316:	4604      	mov	r4, r0
 8008318:	b350      	cbz	r0, 8008370 <xTaskPriorityInherit+0x5c>
			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 800831a:	4a1c      	ldr	r2, [pc, #112]	; (800838c <xTaskPriorityInherit+0x78>)
 800831c:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 800831e:	6811      	ldr	r1, [r2, #0]
 8008320:	6ac9      	ldr	r1, [r1, #44]	; 0x2c
 8008322:	428b      	cmp	r3, r1
 8008324:	4616      	mov	r6, r2
 8008326:	d229      	bcs.n	800837c <xTaskPriorityInherit+0x68>
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008328:	6982      	ldr	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800832a:	4d19      	ldr	r5, [pc, #100]	; (8008390 <xTaskPriorityInherit+0x7c>)
				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800832c:	2a00      	cmp	r2, #0
					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxCurrentTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800832e:	bfa1      	itttt	ge
 8008330:	6832      	ldrge	r2, [r6, #0]
 8008332:	6ad2      	ldrge	r2, [r2, #44]	; 0x2c
 8008334:	f1c2 0238 	rsbge	r2, r2, #56	; 0x38
 8008338:	6182      	strge	r2, [r0, #24]
				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutexHolderTCB->xStateListItem ) ) != pdFALSE )
 800833a:	2214      	movs	r2, #20
 800833c:	fb02 5303 	mla	r3, r2, r3, r5
 8008340:	6942      	ldr	r2, [r0, #20]
 8008342:	429a      	cmp	r2, r3
 8008344:	d116      	bne.n	8008374 <xTaskPriorityInherit+0x60>
					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008346:	1d01      	adds	r1, r0, #4
 8008348:	4608      	mov	r0, r1
 800834a:	9101      	str	r1, [sp, #4]
 800834c:	f7fe fc65 	bl	8006c1a <uxListRemove>
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008350:	6833      	ldr	r3, [r6, #0]
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008352:	4a10      	ldr	r2, [pc, #64]	; (8008394 <xTaskPriorityInherit+0x80>)
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008354:	6adb      	ldr	r3, [r3, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 8008356:	6810      	ldr	r0, [r2, #0]
 8008358:	9901      	ldr	r1, [sp, #4]
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 800835a:	62e3      	str	r3, [r4, #44]	; 0x2c
					prvAddTaskToReadyList( pxMutexHolderTCB );
 800835c:	4283      	cmp	r3, r0
 800835e:	f04f 0014 	mov.w	r0, #20
 8008362:	fb00 5003 	mla	r0, r0, r3, r5
 8008366:	bf88      	it	hi
 8008368:	6013      	strhi	r3, [r2, #0]
 800836a:	f7fe fc33 	bl	8006bd4 <vListInsertEnd>
				xReturn = pdTRUE;
 800836e:	2001      	movs	r0, #1
	}
 8008370:	b002      	add	sp, #8
 8008372:	bd70      	pop	{r4, r5, r6, pc}
					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 8008374:	6833      	ldr	r3, [r6, #0]
 8008376:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8008378:	62c3      	str	r3, [r0, #44]	; 0x2c
 800837a:	e7f8      	b.n	800836e <xTaskPriorityInherit+0x5a>
				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 800837c:	6813      	ldr	r3, [r2, #0]
 800837e:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 8008380:	6adc      	ldr	r4, [r3, #44]	; 0x2c
 8008382:	42a0      	cmp	r0, r4
 8008384:	bf2c      	ite	cs
 8008386:	2000      	movcs	r0, #0
 8008388:	2001      	movcc	r0, #1
 800838a:	e7f1      	b.n	8008370 <xTaskPriorityInherit+0x5c>
 800838c:	20009ab8 	.word	0x20009ab8
 8008390:	20009ac4 	.word	0x20009ac4
 8008394:	20009f34 	.word	0x20009f34

08008398 <xTaskPriorityDisinherit>:
	{
 8008398:	b513      	push	{r0, r1, r4, lr}
		if( pxMutexHolder != NULL )
 800839a:	b910      	cbnz	r0, 80083a2 <xTaskPriorityDisinherit+0xa>
	BaseType_t xReturn = pdFALSE;
 800839c:	2000      	movs	r0, #0
	}
 800839e:	b002      	add	sp, #8
 80083a0:	bd10      	pop	{r4, pc}
			configASSERT( pxTCB == pxCurrentTCB );
 80083a2:	4b1c      	ldr	r3, [pc, #112]	; (8008414 <xTaskPriorityDisinherit+0x7c>)
 80083a4:	681c      	ldr	r4, [r3, #0]
 80083a6:	4284      	cmp	r4, r0
 80083a8:	d008      	beq.n	80083bc <xTaskPriorityDisinherit+0x24>
 80083aa:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083ae:	f383 8811 	msr	BASEPRI, r3
 80083b2:	f3bf 8f6f 	isb	sy
 80083b6:	f3bf 8f4f 	dsb	sy
 80083ba:	e7fe      	b.n	80083ba <xTaskPriorityDisinherit+0x22>
			configASSERT( pxTCB->uxMutexesHeld );
 80083bc:	6d23      	ldr	r3, [r4, #80]	; 0x50
 80083be:	b943      	cbnz	r3, 80083d2 <xTaskPriorityDisinherit+0x3a>
 80083c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 80083c4:	f383 8811 	msr	BASEPRI, r3
 80083c8:	f3bf 8f6f 	isb	sy
 80083cc:	f3bf 8f4f 	dsb	sy
 80083d0:	e7fe      	b.n	80083d0 <xTaskPriorityDisinherit+0x38>
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80083d2:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80083d4:	6ce2      	ldr	r2, [r4, #76]	; 0x4c
			( pxTCB->uxMutexesHeld )--;
 80083d6:	3b01      	subs	r3, #1
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80083d8:	4291      	cmp	r1, r2
			( pxTCB->uxMutexesHeld )--;
 80083da:	6523      	str	r3, [r4, #80]	; 0x50
			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 80083dc:	d0de      	beq.n	800839c <xTaskPriorityDisinherit+0x4>
				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 80083de:	2b00      	cmp	r3, #0
 80083e0:	d1dc      	bne.n	800839c <xTaskPriorityDisinherit+0x4>
					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 80083e2:	1d21      	adds	r1, r4, #4
 80083e4:	4608      	mov	r0, r1
 80083e6:	9101      	str	r1, [sp, #4]
 80083e8:	f7fe fc17 	bl	8006c1a <uxListRemove>
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80083ec:	6ce3      	ldr	r3, [r4, #76]	; 0x4c
					prvAddTaskToReadyList( pxTCB );
 80083ee:	9901      	ldr	r1, [sp, #4]
					pxTCB->uxPriority = pxTCB->uxBasePriority;
 80083f0:	62e3      	str	r3, [r4, #44]	; 0x2c
					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) pxTCB->uxPriority ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 80083f2:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 80083f6:	61a2      	str	r2, [r4, #24]
					prvAddTaskToReadyList( pxTCB );
 80083f8:	4a07      	ldr	r2, [pc, #28]	; (8008418 <xTaskPriorityDisinherit+0x80>)
 80083fa:	6810      	ldr	r0, [r2, #0]
 80083fc:	4283      	cmp	r3, r0
 80083fe:	bf88      	it	hi
 8008400:	6013      	strhi	r3, [r2, #0]
 8008402:	4a06      	ldr	r2, [pc, #24]	; (800841c <xTaskPriorityDisinherit+0x84>)
 8008404:	2014      	movs	r0, #20
 8008406:	fb00 2003 	mla	r0, r0, r3, r2
 800840a:	f7fe fbe3 	bl	8006bd4 <vListInsertEnd>
					xReturn = pdTRUE;
 800840e:	2001      	movs	r0, #1
		return xReturn;
 8008410:	e7c5      	b.n	800839e <xTaskPriorityDisinherit+0x6>
 8008412:	bf00      	nop
 8008414:	20009ab8 	.word	0x20009ab8
 8008418:	20009f34 	.word	0x20009f34
 800841c:	20009ac4 	.word	0x20009ac4

08008420 <vTaskPriorityDisinheritAfterTimeout>:
	{
 8008420:	b537      	push	{r0, r1, r2, r4, r5, lr}
		if( pxMutexHolder != NULL )
 8008422:	4604      	mov	r4, r0
 8008424:	2800      	cmp	r0, #0
 8008426:	d044      	beq.n	80084b2 <vTaskPriorityDisinheritAfterTimeout+0x92>
			configASSERT( pxTCB->uxMutexesHeld );
 8008428:	6d02      	ldr	r2, [r0, #80]	; 0x50
 800842a:	b942      	cbnz	r2, 800843e <vTaskPriorityDisinheritAfterTimeout+0x1e>
 800842c:	f04f 0350 	mov.w	r3, #80	; 0x50
 8008430:	f383 8811 	msr	BASEPRI, r3
 8008434:	f3bf 8f6f 	isb	sy
 8008438:	f3bf 8f4f 	dsb	sy
 800843c:	e7fe      	b.n	800843c <vTaskPriorityDisinheritAfterTimeout+0x1c>
			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 800843e:	6cc3      	ldr	r3, [r0, #76]	; 0x4c
 8008440:	4299      	cmp	r1, r3
 8008442:	bf38      	it	cc
 8008444:	4619      	movcc	r1, r3
			if( pxTCB->uxPriority != uxPriorityToUse )
 8008446:	6ac3      	ldr	r3, [r0, #44]	; 0x2c
 8008448:	428b      	cmp	r3, r1
 800844a:	d032      	beq.n	80084b2 <vTaskPriorityDisinheritAfterTimeout+0x92>
				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 800844c:	2a01      	cmp	r2, #1
 800844e:	d130      	bne.n	80084b2 <vTaskPriorityDisinheritAfterTimeout+0x92>
					configASSERT( pxTCB != pxCurrentTCB );
 8008450:	4a19      	ldr	r2, [pc, #100]	; (80084b8 <vTaskPriorityDisinheritAfterTimeout+0x98>)
 8008452:	6812      	ldr	r2, [r2, #0]
 8008454:	4282      	cmp	r2, r0
 8008456:	d108      	bne.n	800846a <vTaskPriorityDisinheritAfterTimeout+0x4a>
 8008458:	f04f 0350 	mov.w	r3, #80	; 0x50
 800845c:	f383 8811 	msr	BASEPRI, r3
 8008460:	f3bf 8f6f 	isb	sy
 8008464:	f3bf 8f4f 	dsb	sy
 8008468:	e7fe      	b.n	8008468 <vTaskPriorityDisinheritAfterTimeout+0x48>
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 800846a:	6982      	ldr	r2, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 800846c:	4d13      	ldr	r5, [pc, #76]	; (80084bc <vTaskPriorityDisinheritAfterTimeout+0x9c>)
					pxTCB->uxPriority = uxPriorityToUse;
 800846e:	62c1      	str	r1, [r0, #44]	; 0x2c
					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE ) == 0UL )
 8008470:	2a00      	cmp	r2, #0
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008472:	f04f 0214 	mov.w	r2, #20
 8008476:	fb02 5303 	mla	r3, r2, r3, r5
 800847a:	6942      	ldr	r2, [r0, #20]
						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( TickType_t ) uxPriorityToUse ); /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800847c:	bfa4      	itt	ge
 800847e:	f1c1 0138 	rsbge	r1, r1, #56	; 0x38
 8008482:	6181      	strge	r1, [r0, #24]
					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateListItem ) ) != pdFALSE )
 8008484:	429a      	cmp	r2, r3
 8008486:	d114      	bne.n	80084b2 <vTaskPriorityDisinheritAfterTimeout+0x92>
						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 8008488:	1d01      	adds	r1, r0, #4
 800848a:	4608      	mov	r0, r1
 800848c:	9101      	str	r1, [sp, #4]
 800848e:	f7fe fbc4 	bl	8006c1a <uxListRemove>
						prvAddTaskToReadyList( pxTCB );
 8008492:	4a0b      	ldr	r2, [pc, #44]	; (80084c0 <vTaskPriorityDisinheritAfterTimeout+0xa0>)
 8008494:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 8008496:	6810      	ldr	r0, [r2, #0]
 8008498:	9901      	ldr	r1, [sp, #4]
 800849a:	4283      	cmp	r3, r0
 800849c:	f04f 0014 	mov.w	r0, #20
 80084a0:	fb00 5003 	mla	r0, r0, r3, r5
 80084a4:	bf88      	it	hi
 80084a6:	6013      	strhi	r3, [r2, #0]
	}
 80084a8:	b003      	add	sp, #12
 80084aa:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
						prvAddTaskToReadyList( pxTCB );
 80084ae:	f7fe bb91 	b.w	8006bd4 <vListInsertEnd>
	}
 80084b2:	b003      	add	sp, #12
 80084b4:	bd30      	pop	{r4, r5, pc}
 80084b6:	bf00      	nop
 80084b8:	20009ab8 	.word	0x20009ab8
 80084bc:	20009ac4 	.word	0x20009ac4
 80084c0:	20009f34 	.word	0x20009f34

080084c4 <pvTaskIncrementMutexHeldCount>:
		if( pxCurrentTCB != NULL )
 80084c4:	4b04      	ldr	r3, [pc, #16]	; (80084d8 <pvTaskIncrementMutexHeldCount+0x14>)
 80084c6:	681a      	ldr	r2, [r3, #0]
 80084c8:	b11a      	cbz	r2, 80084d2 <pvTaskIncrementMutexHeldCount+0xe>
			( pxCurrentTCB->uxMutexesHeld )++;
 80084ca:	6819      	ldr	r1, [r3, #0]
 80084cc:	6d0a      	ldr	r2, [r1, #80]	; 0x50
 80084ce:	3201      	adds	r2, #1
 80084d0:	650a      	str	r2, [r1, #80]	; 0x50
		return pxCurrentTCB;
 80084d2:	6818      	ldr	r0, [r3, #0]
	}
 80084d4:	4770      	bx	lr
 80084d6:	bf00      	nop
 80084d8:	20009ab8 	.word	0x20009ab8

080084dc <prvCheckForValidListAndQueue>:
	pxOverflowTimerList = pxTemp;
}
/*-----------------------------------------------------------*/

static void prvCheckForValidListAndQueue( void )
{
 80084dc:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
	/* Check that the list from which active timers are referenced, and the
	queue used to communicate with the timer service, have been
	initialised. */
	taskENTER_CRITICAL();
	{
		if( xTimerQueue == NULL )
 80084de:	4c11      	ldr	r4, [pc, #68]	; (8008524 <prvCheckForValidListAndQueue+0x48>)
	taskENTER_CRITICAL();
 80084e0:	f7fe fc18 	bl	8006d14 <vPortEnterCritical>
		if( xTimerQueue == NULL )
 80084e4:	6825      	ldr	r5, [r4, #0]
 80084e6:	b9bd      	cbnz	r5, 8008518 <prvCheckForValidListAndQueue+0x3c>
		{
			vListInitialise( &xActiveTimerList1 );
 80084e8:	4f0f      	ldr	r7, [pc, #60]	; (8008528 <prvCheckForValidListAndQueue+0x4c>)
			vListInitialise( &xActiveTimerList2 );
 80084ea:	4e10      	ldr	r6, [pc, #64]	; (800852c <prvCheckForValidListAndQueue+0x50>)
			vListInitialise( &xActiveTimerList1 );
 80084ec:	4638      	mov	r0, r7
 80084ee:	f7fe fb63 	bl	8006bb8 <vListInitialise>
			vListInitialise( &xActiveTimerList2 );
 80084f2:	4630      	mov	r0, r6
 80084f4:	f7fe fb60 	bl	8006bb8 <vListInitialise>
			pxCurrentTimerList = &xActiveTimerList1;
 80084f8:	4b0d      	ldr	r3, [pc, #52]	; (8008530 <prvCheckForValidListAndQueue+0x54>)
				/* The timer queue is allocated statically in case
				configSUPPORT_DYNAMIC_ALLOCATION is 0. */
				static StaticQueue_t xStaticTimerQueue; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */
				static uint8_t ucStaticTimerQueueStorage[ ( size_t ) configTIMER_QUEUE_LENGTH * sizeof( DaemonTaskMessage_t ) ]; /*lint !e956 Ok to declare in this manner to prevent additional conditional compilation guards in other locations. */

				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 80084fa:	4a0e      	ldr	r2, [pc, #56]	; (8008534 <prvCheckForValidListAndQueue+0x58>)
			pxCurrentTimerList = &xActiveTimerList1;
 80084fc:	601f      	str	r7, [r3, #0]
			pxOverflowTimerList = &xActiveTimerList2;
 80084fe:	4b0e      	ldr	r3, [pc, #56]	; (8008538 <prvCheckForValidListAndQueue+0x5c>)
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008500:	2110      	movs	r1, #16
			pxOverflowTimerList = &xActiveTimerList2;
 8008502:	601e      	str	r6, [r3, #0]
				xTimerQueue = xQueueCreateStatic( ( UBaseType_t ) configTIMER_QUEUE_LENGTH, ( UBaseType_t ) sizeof( DaemonTaskMessage_t ), &( ucStaticTimerQueueStorage[ 0 ] ), &xStaticTimerQueue );
 8008504:	200a      	movs	r0, #10
 8008506:	4b0d      	ldr	r3, [pc, #52]	; (800853c <prvCheckForValidListAndQueue+0x60>)
 8008508:	9500      	str	r5, [sp, #0]
 800850a:	f7fe fe1b 	bl	8007144 <xQueueGenericCreateStatic>
 800850e:	6020      	str	r0, [r4, #0]
			}
			#endif

			#if ( configQUEUE_REGISTRY_SIZE > 0 )
			{
				if( xTimerQueue != NULL )
 8008510:	b110      	cbz	r0, 8008518 <prvCheckForValidListAndQueue+0x3c>
				{
					vQueueAddToRegistry( xTimerQueue, "TmrQ" );
 8008512:	490b      	ldr	r1, [pc, #44]	; (8008540 <prvCheckForValidListAndQueue+0x64>)
 8008514:	f7ff f9e8 	bl	80078e8 <vQueueAddToRegistry>
		{
			mtCOVERAGE_TEST_MARKER();
		}
	}
	taskEXIT_CRITICAL();
}
 8008518:	b003      	add	sp, #12
 800851a:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
	taskEXIT_CRITICAL();
 800851e:	f7fe bc1b 	b.w	8006d58 <vPortExitCritical>
 8008522:	bf00      	nop
 8008524:	2000a0d8 	.word	0x2000a0d8
 8008528:	2000a05c 	.word	0x2000a05c
 800852c:	2000a070 	.word	0x2000a070
 8008530:	20009fb4 	.word	0x20009fb4
 8008534:	20009fbc 	.word	0x20009fbc
 8008538:	20009fb8 	.word	0x20009fb8
 800853c:	2000a088 	.word	0x2000a088
 8008540:	0801b552 	.word	0x0801b552

08008544 <prvInsertTimerInActiveList>:
	if( xNextExpiryTime <= xTimeNow )
 8008544:	4291      	cmp	r1, r2
{
 8008546:	b508      	push	{r3, lr}
	listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xNextExpiryTime );
 8008548:	6041      	str	r1, [r0, #4]
	listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 800854a:	6100      	str	r0, [r0, #16]
	if( xNextExpiryTime <= xTimeNow )
 800854c:	d80a      	bhi.n	8008564 <prvInsertTimerInActiveList+0x20>
		if( ( ( TickType_t ) ( xTimeNow - xCommandTime ) ) >= pxTimer->xTimerPeriodInTicks ) /*lint !e961 MISRA exception as the casts are only redundant for some ports. */
 800854e:	1ad2      	subs	r2, r2, r3
 8008550:	6983      	ldr	r3, [r0, #24]
 8008552:	429a      	cmp	r2, r3
 8008554:	d20d      	bcs.n	8008572 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxOverflowTimerList, &( pxTimer->xTimerListItem ) );
 8008556:	4b08      	ldr	r3, [pc, #32]	; (8008578 <prvInsertTimerInActiveList+0x34>)
 8008558:	1d01      	adds	r1, r0, #4
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800855a:	6818      	ldr	r0, [r3, #0]
 800855c:	f7fe fb46 	bl	8006bec <vListInsert>
BaseType_t xProcessTimerNow = pdFALSE;
 8008560:	2000      	movs	r0, #0
}
 8008562:	bd08      	pop	{r3, pc}
		if( ( xTimeNow < xCommandTime ) && ( xNextExpiryTime >= xCommandTime ) )
 8008564:	429a      	cmp	r2, r3
 8008566:	d201      	bcs.n	800856c <prvInsertTimerInActiveList+0x28>
 8008568:	4299      	cmp	r1, r3
 800856a:	d202      	bcs.n	8008572 <prvInsertTimerInActiveList+0x2e>
			vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 800856c:	4b03      	ldr	r3, [pc, #12]	; (800857c <prvInsertTimerInActiveList+0x38>)
 800856e:	1d01      	adds	r1, r0, #4
 8008570:	e7f3      	b.n	800855a <prvInsertTimerInActiveList+0x16>
			xProcessTimerNow = pdTRUE;
 8008572:	2001      	movs	r0, #1
	return xProcessTimerNow;
 8008574:	e7f5      	b.n	8008562 <prvInsertTimerInActiveList+0x1e>
 8008576:	bf00      	nop
 8008578:	20009fb8 	.word	0x20009fb8
 800857c:	20009fb4 	.word	0x20009fb4

08008580 <xTimerCreateTimerTask>:
{
 8008580:	b510      	push	{r4, lr}
 8008582:	b088      	sub	sp, #32
	prvCheckForValidListAndQueue();
 8008584:	f7ff ffaa 	bl	80084dc <prvCheckForValidListAndQueue>
	if( xTimerQueue != NULL )
 8008588:	4b12      	ldr	r3, [pc, #72]	; (80085d4 <xTimerCreateTimerTask+0x54>)
 800858a:	681b      	ldr	r3, [r3, #0]
 800858c:	b1b3      	cbz	r3, 80085bc <xTimerCreateTimerTask+0x3c>
			StaticTask_t *pxTimerTaskTCBBuffer = NULL;
 800858e:	2400      	movs	r4, #0
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 8008590:	aa07      	add	r2, sp, #28
 8008592:	a906      	add	r1, sp, #24
 8008594:	a805      	add	r0, sp, #20
			StackType_t *pxTimerTaskStackBuffer = NULL;
 8008596:	e9cd 4405 	strd	r4, r4, [sp, #20]
			vApplicationGetTimerTaskMemory( &pxTimerTaskTCBBuffer, &pxTimerTaskStackBuffer, &ulTimerTaskStackSize );
 800859a:	f7fe fa0d 	bl	80069b8 <vApplicationGetTimerTaskMemory>
			xTimerTaskHandle = xTaskCreateStatic(	prvTimerTask,
 800859e:	9b05      	ldr	r3, [sp, #20]
 80085a0:	9302      	str	r3, [sp, #8]
 80085a2:	9b06      	ldr	r3, [sp, #24]
 80085a4:	9301      	str	r3, [sp, #4]
 80085a6:	2302      	movs	r3, #2
 80085a8:	9300      	str	r3, [sp, #0]
 80085aa:	9a07      	ldr	r2, [sp, #28]
 80085ac:	490a      	ldr	r1, [pc, #40]	; (80085d8 <xTimerCreateTimerTask+0x58>)
 80085ae:	480b      	ldr	r0, [pc, #44]	; (80085dc <xTimerCreateTimerTask+0x5c>)
 80085b0:	4623      	mov	r3, r4
 80085b2:	f7ff fb7d 	bl	8007cb0 <xTaskCreateStatic>
 80085b6:	4b0a      	ldr	r3, [pc, #40]	; (80085e0 <xTimerCreateTimerTask+0x60>)
 80085b8:	6018      	str	r0, [r3, #0]
			if( xTimerTaskHandle != NULL )
 80085ba:	b940      	cbnz	r0, 80085ce <xTimerCreateTimerTask+0x4e>
 80085bc:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085c0:	f383 8811 	msr	BASEPRI, r3
 80085c4:	f3bf 8f6f 	isb	sy
 80085c8:	f3bf 8f4f 	dsb	sy
	configASSERT( xReturn );
 80085cc:	e7fe      	b.n	80085cc <xTimerCreateTimerTask+0x4c>
}
 80085ce:	2001      	movs	r0, #1
 80085d0:	b008      	add	sp, #32
 80085d2:	bd10      	pop	{r4, pc}
 80085d4:	2000a0d8 	.word	0x2000a0d8
 80085d8:	0801b557 	.word	0x0801b557
 80085dc:	080086b9 	.word	0x080086b9
 80085e0:	2000a0dc 	.word	0x2000a0dc

080085e4 <xTimerGenericCommand>:
{
 80085e4:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 80085e6:	4616      	mov	r6, r2
	configASSERT( xTimer );
 80085e8:	4604      	mov	r4, r0
{
 80085ea:	461a      	mov	r2, r3
	configASSERT( xTimer );
 80085ec:	b940      	cbnz	r0, 8008600 <xTimerGenericCommand+0x1c>
 80085ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80085f2:	f383 8811 	msr	BASEPRI, r3
 80085f6:	f3bf 8f6f 	isb	sy
 80085fa:	f3bf 8f4f 	dsb	sy
 80085fe:	e7fe      	b.n	80085fe <xTimerGenericCommand+0x1a>
	if( xTimerQueue != NULL )
 8008600:	4d0d      	ldr	r5, [pc, #52]	; (8008638 <xTimerGenericCommand+0x54>)
 8008602:	6828      	ldr	r0, [r5, #0]
 8008604:	b180      	cbz	r0, 8008628 <xTimerGenericCommand+0x44>
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 8008606:	2905      	cmp	r1, #5
		xMessage.u.xTimerParameters.xMessageValue = xOptionalValue;
 8008608:	e9cd 1600 	strd	r1, r6, [sp]
		xMessage.u.xTimerParameters.pxTimer = xTimer;
 800860c:	9402      	str	r4, [sp, #8]
		if( xCommandID < tmrFIRST_FROM_ISR_COMMAND )
 800860e:	dc0d      	bgt.n	800862c <xTimerGenericCommand+0x48>
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008610:	f7ff fe70 	bl	80082f4 <xTaskGetSchedulerState>
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008614:	2300      	movs	r3, #0
			if( xTaskGetSchedulerState() == taskSCHEDULER_RUNNING )
 8008616:	2802      	cmp	r0, #2
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, xTicksToWait );
 8008618:	bf08      	it	eq
 800861a:	9a08      	ldreq	r2, [sp, #32]
				xReturn = xQueueSendToBack( xTimerQueue, &xMessage, tmrNO_DELAY );
 800861c:	6828      	ldr	r0, [r5, #0]
 800861e:	bf18      	it	ne
 8008620:	461a      	movne	r2, r3
 8008622:	4669      	mov	r1, sp
 8008624:	f7fe fe44 	bl	80072b0 <xQueueGenericSend>
}
 8008628:	b004      	add	sp, #16
 800862a:	bd70      	pop	{r4, r5, r6, pc}
			xReturn = xQueueSendToBackFromISR( xTimerQueue, &xMessage, pxHigherPriorityTaskWoken );
 800862c:	2300      	movs	r3, #0
 800862e:	4669      	mov	r1, sp
 8008630:	f7fe fef0 	bl	8007414 <xQueueGenericSendFromISR>
 8008634:	e7f8      	b.n	8008628 <xTimerGenericCommand+0x44>
 8008636:	bf00      	nop
 8008638:	2000a0d8 	.word	0x2000a0d8

0800863c <prvSwitchTimerLists>:
{
 800863c:	b5f0      	push	{r4, r5, r6, r7, lr}
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 800863e:	4d1c      	ldr	r5, [pc, #112]	; (80086b0 <prvSwitchTimerLists+0x74>)
{
 8008640:	b085      	sub	sp, #20
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008642:	2700      	movs	r7, #0
	while( listLIST_IS_EMPTY( pxCurrentTimerList ) == pdFALSE )
 8008644:	682b      	ldr	r3, [r5, #0]
 8008646:	681a      	ldr	r2, [r3, #0]
 8008648:	b92a      	cbnz	r2, 8008656 <prvSwitchTimerLists+0x1a>
	pxCurrentTimerList = pxOverflowTimerList;
 800864a:	4a1a      	ldr	r2, [pc, #104]	; (80086b4 <prvSwitchTimerLists+0x78>)
 800864c:	6811      	ldr	r1, [r2, #0]
 800864e:	6029      	str	r1, [r5, #0]
	pxOverflowTimerList = pxTemp;
 8008650:	6013      	str	r3, [r2, #0]
}
 8008652:	b005      	add	sp, #20
 8008654:	bdf0      	pop	{r4, r5, r6, r7, pc}
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 8008656:	68db      	ldr	r3, [r3, #12]
		pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008658:	68dc      	ldr	r4, [r3, #12]
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 800865a:	681e      	ldr	r6, [r3, #0]
		( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800865c:	1d21      	adds	r1, r4, #4
 800865e:	4608      	mov	r0, r1
 8008660:	9103      	str	r1, [sp, #12]
 8008662:	f7fe fada 	bl	8006c1a <uxListRemove>
		pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008666:	6a23      	ldr	r3, [r4, #32]
 8008668:	4620      	mov	r0, r4
 800866a:	4798      	blx	r3
		if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 800866c:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 8008670:	9903      	ldr	r1, [sp, #12]
 8008672:	f013 0f04 	tst.w	r3, #4
 8008676:	d0e5      	beq.n	8008644 <prvSwitchTimerLists+0x8>
			xReloadTime = ( xNextExpireTime + pxTimer->xTimerPeriodInTicks );
 8008678:	69a3      	ldr	r3, [r4, #24]
 800867a:	4433      	add	r3, r6
			if( xReloadTime > xNextExpireTime )
 800867c:	429e      	cmp	r6, r3
 800867e:	d205      	bcs.n	800868c <prvSwitchTimerLists+0x50>
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008680:	6828      	ldr	r0, [r5, #0]
				listSET_LIST_ITEM_VALUE( &( pxTimer->xTimerListItem ), xReloadTime );
 8008682:	6063      	str	r3, [r4, #4]
				listSET_LIST_ITEM_OWNER( &( pxTimer->xTimerListItem ), pxTimer );
 8008684:	6124      	str	r4, [r4, #16]
				vListInsert( pxCurrentTimerList, &( pxTimer->xTimerListItem ) );
 8008686:	f7fe fab1 	bl	8006bec <vListInsert>
 800868a:	e7db      	b.n	8008644 <prvSwitchTimerLists+0x8>
				xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 800868c:	2300      	movs	r3, #0
 800868e:	9700      	str	r7, [sp, #0]
 8008690:	4632      	mov	r2, r6
 8008692:	4619      	mov	r1, r3
 8008694:	4620      	mov	r0, r4
 8008696:	f7ff ffa5 	bl	80085e4 <xTimerGenericCommand>
				configASSERT( xResult );
 800869a:	2800      	cmp	r0, #0
 800869c:	d1d2      	bne.n	8008644 <prvSwitchTimerLists+0x8>
 800869e:	f04f 0350 	mov.w	r3, #80	; 0x50
 80086a2:	f383 8811 	msr	BASEPRI, r3
 80086a6:	f3bf 8f6f 	isb	sy
 80086aa:	f3bf 8f4f 	dsb	sy
 80086ae:	e7fe      	b.n	80086ae <prvSwitchTimerLists+0x72>
 80086b0:	20009fb4 	.word	0x20009fb4
 80086b4:	20009fb8 	.word	0x20009fb8

080086b8 <prvTimerTask>:
{
 80086b8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80086bc:	4f77      	ldr	r7, [pc, #476]	; (800889c <prvTimerTask+0x1e4>)
					portYIELD_WITHIN_API();
 80086be:	f8df a1ec 	ldr.w	sl, [pc, #492]	; 80088ac <prvTimerTask+0x1f4>
{
 80086c2:	b087      	sub	sp, #28
 80086c4:	46b9      	mov	r9, r7
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80086c6:	683b      	ldr	r3, [r7, #0]
 80086c8:	f8d3 b000 	ldr.w	fp, [r3]
 80086cc:	f1bb 0f00 	cmp.w	fp, #0
 80086d0:	d028      	beq.n	8008724 <prvTimerTask+0x6c>
		xNextExpireTime = listGET_ITEM_VALUE_OF_HEAD_ENTRY( pxCurrentTimerList );
 80086d2:	68db      	ldr	r3, [r3, #12]
 80086d4:	f8d3 b000 	ldr.w	fp, [r3]
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 80086d8:	2400      	movs	r4, #0
	if( xTimeNow < xLastTime )
 80086da:	4e71      	ldr	r6, [pc, #452]	; (80088a0 <prvTimerTask+0x1e8>)
	vTaskSuspendAll();
 80086dc:	f7ff fb4e 	bl	8007d7c <vTaskSuspendAll>
	xTimeNow = xTaskGetTickCount();
 80086e0:	f7ff fb54 	bl	8007d8c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80086e4:	6833      	ldr	r3, [r6, #0]
 80086e6:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80086e8:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 80086ea:	46b0      	mov	r8, r6
 80086ec:	d31c      	bcc.n	8008728 <prvTimerTask+0x70>
	xLastTime = xTimeNow;
 80086ee:	6030      	str	r0, [r6, #0]
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 80086f0:	b31c      	cbz	r4, 800873a <prvTimerTask+0x82>
					xListWasEmpty = listLIST_IS_EMPTY( pxOverflowTimerList );
 80086f2:	4b6c      	ldr	r3, [pc, #432]	; (80088a4 <prvTimerTask+0x1ec>)
 80086f4:	681b      	ldr	r3, [r3, #0]
 80086f6:	681c      	ldr	r4, [r3, #0]
 80086f8:	fab4 f484 	clz	r4, r4
 80086fc:	0964      	lsrs	r4, r4, #5
				vQueueWaitForMessageRestricted( xTimerQueue, ( xNextExpireTime - xTimeNow ), xListWasEmpty );
 80086fe:	4b6a      	ldr	r3, [pc, #424]	; (80088a8 <prvTimerTask+0x1f0>)
 8008700:	4622      	mov	r2, r4
 8008702:	6818      	ldr	r0, [r3, #0]
 8008704:	ebab 0105 	sub.w	r1, fp, r5
 8008708:	f7ff f92d 	bl	8007966 <vQueueWaitForMessageRestricted>
				if( xTaskResumeAll() == pdFALSE )
 800870c:	f7ff fbda 	bl	8007ec4 <xTaskResumeAll>
 8008710:	b978      	cbnz	r0, 8008732 <prvTimerTask+0x7a>
					portYIELD_WITHIN_API();
 8008712:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8008716:	f8ca 3000 	str.w	r3, [sl]
 800871a:	f3bf 8f4f 	dsb	sy
 800871e:	f3bf 8f6f 	isb	sy
 8008722:	e006      	b.n	8008732 <prvTimerTask+0x7a>
	*pxListWasEmpty = listLIST_IS_EMPTY( pxCurrentTimerList );
 8008724:	2401      	movs	r4, #1
 8008726:	e7d8      	b.n	80086da <prvTimerTask+0x22>
		prvSwitchTimerLists();
 8008728:	f7ff ff88 	bl	800863c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 800872c:	6035      	str	r5, [r6, #0]
			( void ) xTaskResumeAll();
 800872e:	f7ff fbc9 	bl	8007ec4 <xTaskResumeAll>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 8008732:	4e5d      	ldr	r6, [pc, #372]	; (80088a8 <prvTimerTask+0x1f0>)
 8008734:	f04f 0b00 	mov.w	fp, #0
 8008738:	e035      	b.n	80087a6 <prvTimerTask+0xee>
			if( ( xListWasEmpty == pdFALSE ) && ( xNextExpireTime <= xTimeNow ) )
 800873a:	4583      	cmp	fp, r0
 800873c:	d8df      	bhi.n	80086fe <prvTimerTask+0x46>
				( void ) xTaskResumeAll();
 800873e:	f7ff fbc1 	bl	8007ec4 <xTaskResumeAll>
Timer_t * const pxTimer = ( Timer_t * ) listGET_OWNER_OF_HEAD_ENTRY( pxCurrentTimerList ); /*lint !e9087 !e9079 void * is used as this macro is used with tasks and co-routines too.  Alignment is known to be fine as the type of the pointer stored and retrieved is the same. */
 8008742:	f8d9 3000 	ldr.w	r3, [r9]
 8008746:	68db      	ldr	r3, [r3, #12]
 8008748:	68de      	ldr	r6, [r3, #12]
	( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 800874a:	1d30      	adds	r0, r6, #4
 800874c:	f7fe fa65 	bl	8006c1a <uxListRemove>
	if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008750:	f896 3028 	ldrb.w	r3, [r6, #40]	; 0x28
 8008754:	0758      	lsls	r0, r3, #29
 8008756:	d518      	bpl.n	800878a <prvTimerTask+0xd2>
		if( prvInsertTimerInActiveList( pxTimer, ( xNextExpireTime + pxTimer->xTimerPeriodInTicks ), xTimeNow, xNextExpireTime ) != pdFALSE )
 8008758:	69b1      	ldr	r1, [r6, #24]
 800875a:	465b      	mov	r3, fp
 800875c:	462a      	mov	r2, r5
 800875e:	4459      	add	r1, fp
 8008760:	4630      	mov	r0, r6
 8008762:	f7ff feef 	bl	8008544 <prvInsertTimerInActiveList>
 8008766:	b1a0      	cbz	r0, 8008792 <prvTimerTask+0xda>
			xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xNextExpireTime, NULL, tmrNO_DELAY );
 8008768:	9400      	str	r4, [sp, #0]
 800876a:	4623      	mov	r3, r4
 800876c:	465a      	mov	r2, fp
 800876e:	4621      	mov	r1, r4
 8008770:	4630      	mov	r0, r6
 8008772:	f7ff ff37 	bl	80085e4 <xTimerGenericCommand>
			configASSERT( xResult );
 8008776:	b960      	cbnz	r0, 8008792 <prvTimerTask+0xda>
 8008778:	f04f 0350 	mov.w	r3, #80	; 0x50
 800877c:	f383 8811 	msr	BASEPRI, r3
 8008780:	f3bf 8f6f 	isb	sy
 8008784:	f3bf 8f4f 	dsb	sy
 8008788:	e7fe      	b.n	8008788 <prvTimerTask+0xd0>
		pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800878a:	f023 0301 	bic.w	r3, r3, #1
 800878e:	f886 3028 	strb.w	r3, [r6, #40]	; 0x28
	pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008792:	6a33      	ldr	r3, [r6, #32]
 8008794:	4630      	mov	r0, r6
 8008796:	4798      	blx	r3
}
 8008798:	e7cb      	b.n	8008732 <prvTimerTask+0x7a>
				pxCallback->pxCallbackFunction( pxCallback->pvParameter1, pxCallback->ulParameter2 );
 800879a:	9b03      	ldr	r3, [sp, #12]
 800879c:	9905      	ldr	r1, [sp, #20]
 800879e:	4798      	blx	r3
		if( xMessage.xMessageID >= ( BaseType_t ) 0 )
 80087a0:	9b02      	ldr	r3, [sp, #8]
 80087a2:	2b00      	cmp	r3, #0
 80087a4:	da0a      	bge.n	80087bc <prvTimerTask+0x104>
	while( xQueueReceive( xTimerQueue, &xMessage, tmrNO_DELAY ) != pdFAIL ) /*lint !e603 xMessage does not have to be initialised as it is passed out, not in, and it is not used unless xQueueReceive() returns pdTRUE. */
 80087a6:	6830      	ldr	r0, [r6, #0]
 80087a8:	2200      	movs	r2, #0
 80087aa:	a902      	add	r1, sp, #8
 80087ac:	f7fe fee8 	bl	8007580 <xQueueReceive>
 80087b0:	2800      	cmp	r0, #0
 80087b2:	d088      	beq.n	80086c6 <prvTimerTask+0xe>
			if( xMessage.xMessageID < ( BaseType_t ) 0 )
 80087b4:	9b02      	ldr	r3, [sp, #8]
 80087b6:	9804      	ldr	r0, [sp, #16]
 80087b8:	2b00      	cmp	r3, #0
 80087ba:	dbee      	blt.n	800879a <prvTimerTask+0xe2>
			pxTimer = xMessage.u.xTimerParameters.pxTimer;
 80087bc:	9c04      	ldr	r4, [sp, #16]
			if( listIS_CONTAINED_WITHIN( NULL, &( pxTimer->xTimerListItem ) ) == pdFALSE ) /*lint !e961. The cast is only redundant when NULL is passed into the macro. */
 80087be:	6963      	ldr	r3, [r4, #20]
 80087c0:	b9a3      	cbnz	r3, 80087ec <prvTimerTask+0x134>
	xTimeNow = xTaskGetTickCount();
 80087c2:	f7ff fae3 	bl	8007d8c <xTaskGetTickCount>
	if( xTimeNow < xLastTime )
 80087c6:	f8d8 3000 	ldr.w	r3, [r8]
 80087ca:	4298      	cmp	r0, r3
	xTimeNow = xTaskGetTickCount();
 80087cc:	4605      	mov	r5, r0
	if( xTimeNow < xLastTime )
 80087ce:	d201      	bcs.n	80087d4 <prvTimerTask+0x11c>
		prvSwitchTimerLists();
 80087d0:	f7ff ff34 	bl	800863c <prvSwitchTimerLists>
	xLastTime = xTimeNow;
 80087d4:	9b02      	ldr	r3, [sp, #8]
 80087d6:	f8c8 5000 	str.w	r5, [r8]
			switch( xMessage.xMessageID )
 80087da:	2b09      	cmp	r3, #9
 80087dc:	d8e3      	bhi.n	80087a6 <prvTimerTask+0xee>
 80087de:	e8df f003 	tbb	[pc, r3]
 80087e2:	0909      	.short	0x0909
 80087e4:	543b3409 	.word	0x543b3409
 80087e8:	3b340909 	.word	0x3b340909
				( void ) uxListRemove( &( pxTimer->xTimerListItem ) );
 80087ec:	1d20      	adds	r0, r4, #4
 80087ee:	f7fe fa14 	bl	8006c1a <uxListRemove>
 80087f2:	e7e6      	b.n	80087c2 <prvTimerTask+0x10a>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80087f4:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 80087f8:	69a1      	ldr	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 80087fa:	f043 0301 	orr.w	r3, r3, #1
 80087fe:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					if( prvInsertTimerInActiveList( pxTimer,  xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, xTimeNow, xMessage.u.xTimerParameters.xMessageValue ) != pdFALSE )
 8008802:	9b03      	ldr	r3, [sp, #12]
 8008804:	462a      	mov	r2, r5
 8008806:	4419      	add	r1, r3
 8008808:	4620      	mov	r0, r4
 800880a:	f7ff fe9b 	bl	8008544 <prvInsertTimerInActiveList>
 800880e:	2800      	cmp	r0, #0
 8008810:	d0c9      	beq.n	80087a6 <prvTimerTask+0xee>
						pxTimer->pxCallbackFunction( ( TimerHandle_t ) pxTimer );
 8008812:	6a23      	ldr	r3, [r4, #32]
 8008814:	4620      	mov	r0, r4
 8008816:	4798      	blx	r3
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_AUTORELOAD ) != 0 )
 8008818:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800881c:	0759      	lsls	r1, r3, #29
 800881e:	d5c2      	bpl.n	80087a6 <prvTimerTask+0xee>
							xResult = xTimerGenericCommand( pxTimer, tmrCOMMAND_START_DONT_TRACE, xMessage.u.xTimerParameters.xMessageValue + pxTimer->xTimerPeriodInTicks, NULL, tmrNO_DELAY );
 8008820:	69a2      	ldr	r2, [r4, #24]
 8008822:	9903      	ldr	r1, [sp, #12]
 8008824:	f8cd b000 	str.w	fp, [sp]
 8008828:	2300      	movs	r3, #0
 800882a:	440a      	add	r2, r1
 800882c:	4620      	mov	r0, r4
 800882e:	4619      	mov	r1, r3
 8008830:	f7ff fed8 	bl	80085e4 <xTimerGenericCommand>
							configASSERT( xResult );
 8008834:	2800      	cmp	r0, #0
 8008836:	d1b6      	bne.n	80087a6 <prvTimerTask+0xee>
 8008838:	f04f 0350 	mov.w	r3, #80	; 0x50
 800883c:	f383 8811 	msr	BASEPRI, r3
 8008840:	f3bf 8f6f 	isb	sy
 8008844:	f3bf 8f4f 	dsb	sy
 8008848:	e7fe      	b.n	8008848 <prvTimerTask+0x190>
					pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800884a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
							pxTimer->ucStatus &= ~tmrSTATUS_IS_ACTIVE;
 800884e:	f023 0301 	bic.w	r3, r3, #1
 8008852:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
 8008856:	e7a6      	b.n	80087a6 <prvTimerTask+0xee>
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008858:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
					pxTimer->xTimerPeriodInTicks = xMessage.u.xTimerParameters.xMessageValue;
 800885c:	9903      	ldr	r1, [sp, #12]
 800885e:	61a1      	str	r1, [r4, #24]
					pxTimer->ucStatus |= tmrSTATUS_IS_ACTIVE;
 8008860:	f043 0301 	orr.w	r3, r3, #1
 8008864:	f884 3028 	strb.w	r3, [r4, #40]	; 0x28
					configASSERT( ( pxTimer->xTimerPeriodInTicks > 0 ) );
 8008868:	b941      	cbnz	r1, 800887c <prvTimerTask+0x1c4>
 800886a:	f04f 0350 	mov.w	r3, #80	; 0x50
 800886e:	f383 8811 	msr	BASEPRI, r3
 8008872:	f3bf 8f6f 	isb	sy
 8008876:	f3bf 8f4f 	dsb	sy
 800887a:	e7fe      	b.n	800887a <prvTimerTask+0x1c2>
					( void ) prvInsertTimerInActiveList( pxTimer, ( xTimeNow + pxTimer->xTimerPeriodInTicks ), xTimeNow, xTimeNow );
 800887c:	462b      	mov	r3, r5
 800887e:	462a      	mov	r2, r5
 8008880:	4429      	add	r1, r5
 8008882:	4620      	mov	r0, r4
 8008884:	f7ff fe5e 	bl	8008544 <prvInsertTimerInActiveList>
					break;
 8008888:	e78d      	b.n	80087a6 <prvTimerTask+0xee>
						if( ( pxTimer->ucStatus & tmrSTATUS_IS_STATICALLY_ALLOCATED ) == ( uint8_t ) 0 )
 800888a:	f894 3028 	ldrb.w	r3, [r4, #40]	; 0x28
 800888e:	079a      	lsls	r2, r3, #30
 8008890:	d4dd      	bmi.n	800884e <prvTimerTask+0x196>
							vPortFree( pxTimer );
 8008892:	4620      	mov	r0, r4
 8008894:	f7fe f952 	bl	8006b3c <vPortFree>
 8008898:	e785      	b.n	80087a6 <prvTimerTask+0xee>
 800889a:	bf00      	nop
 800889c:	20009fb4 	.word	0x20009fb4
 80088a0:	2000a084 	.word	0x2000a084
 80088a4:	20009fb8 	.word	0x20009fb8
 80088a8:	2000a0d8 	.word	0x2000a0d8
 80088ac:	e000ed04 	.word	0xe000ed04

080088b0 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 80088b0:	8880      	ldrh	r0, [r0, #4]
 80088b2:	4770      	bx	lr

080088b4 <_ZN8touchgfx17AbstractPartition5clearEv>:
 80088b4:	2300      	movs	r3, #0
 80088b6:	8083      	strh	r3, [r0, #4]
 80088b8:	4770      	bx	lr
	...

080088bc <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 80088bc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80088be:	6803      	ldr	r3, [r0, #0]
 80088c0:	4605      	mov	r5, r0
 80088c2:	460e      	mov	r6, r1
 80088c4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80088c6:	2100      	movs	r1, #0
 80088c8:	4798      	blx	r3
 80088ca:	682b      	ldr	r3, [r5, #0]
 80088cc:	4604      	mov	r4, r0
 80088ce:	6a1b      	ldr	r3, [r3, #32]
 80088d0:	4628      	mov	r0, r5
 80088d2:	4798      	blx	r3
 80088d4:	88ab      	ldrh	r3, [r5, #4]
 80088d6:	1b34      	subs	r4, r6, r4
 80088d8:	b2a4      	uxth	r4, r4
 80088da:	fbb4 f4f0 	udiv	r4, r4, r0
 80088de:	42a3      	cmp	r3, r4
 80088e0:	d805      	bhi.n	80088ee <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x32>
 80088e2:	4b0e      	ldr	r3, [pc, #56]	; (800891c <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x60>)
 80088e4:	4a0e      	ldr	r2, [pc, #56]	; (8008920 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 80088e6:	211e      	movs	r1, #30
 80088e8:	480e      	ldr	r0, [pc, #56]	; (8008924 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x68>)
 80088ea:	f010 fda9 	bl	8019440 <__assert_func>
 80088ee:	682b      	ldr	r3, [r5, #0]
 80088f0:	2100      	movs	r1, #0
 80088f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80088f4:	4628      	mov	r0, r5
 80088f6:	4798      	blx	r3
 80088f8:	682b      	ldr	r3, [r5, #0]
 80088fa:	4607      	mov	r7, r0
 80088fc:	6a1b      	ldr	r3, [r3, #32]
 80088fe:	4628      	mov	r0, r5
 8008900:	4798      	blx	r3
 8008902:	1bf3      	subs	r3, r6, r7
 8008904:	b29b      	uxth	r3, r3
 8008906:	fbb3 f2f0 	udiv	r2, r3, r0
 800890a:	fb02 3010 	mls	r0, r2, r0, r3
 800890e:	b118      	cbz	r0, 8008918 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x5c>
 8008910:	4b05      	ldr	r3, [pc, #20]	; (8008928 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x6c>)
 8008912:	4a03      	ldr	r2, [pc, #12]	; (8008920 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x64>)
 8008914:	211f      	movs	r1, #31
 8008916:	e7e7      	b.n	80088e8 <_ZN8touchgfx17AbstractPartition7indexOfEPKv+0x2c>
 8008918:	4620      	mov	r0, r4
 800891a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800891c:	0801b55f 	.word	0x0801b55f
 8008920:	0801b6ca 	.word	0x0801b6ca
 8008924:	0801b574 	.word	0x0801b574
 8008928:	0801b5a2 	.word	0x0801b5a2

0800892c <_ZN8touchgfx17AbstractPartition8allocateEt>:
 800892c:	b538      	push	{r3, r4, r5, lr}
 800892e:	6803      	ldr	r3, [r0, #0]
 8008930:	6a1b      	ldr	r3, [r3, #32]
 8008932:	460d      	mov	r5, r1
 8008934:	4604      	mov	r4, r0
 8008936:	4798      	blx	r3
 8008938:	4285      	cmp	r5, r0
 800893a:	d905      	bls.n	8008948 <_ZN8touchgfx17AbstractPartition8allocateEt+0x1c>
 800893c:	4b0c      	ldr	r3, [pc, #48]	; (8008970 <_ZN8touchgfx17AbstractPartition8allocateEt+0x44>)
 800893e:	4a0d      	ldr	r2, [pc, #52]	; (8008974 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 8008940:	2130      	movs	r1, #48	; 0x30
 8008942:	480d      	ldr	r0, [pc, #52]	; (8008978 <_ZN8touchgfx17AbstractPartition8allocateEt+0x4c>)
 8008944:	f010 fd7c 	bl	8019440 <__assert_func>
 8008948:	6823      	ldr	r3, [r4, #0]
 800894a:	88a5      	ldrh	r5, [r4, #4]
 800894c:	69db      	ldr	r3, [r3, #28]
 800894e:	4620      	mov	r0, r4
 8008950:	4798      	blx	r3
 8008952:	4285      	cmp	r5, r0
 8008954:	d303      	bcc.n	800895e <_ZN8touchgfx17AbstractPartition8allocateEt+0x32>
 8008956:	4b09      	ldr	r3, [pc, #36]	; (800897c <_ZN8touchgfx17AbstractPartition8allocateEt+0x50>)
 8008958:	4a06      	ldr	r2, [pc, #24]	; (8008974 <_ZN8touchgfx17AbstractPartition8allocateEt+0x48>)
 800895a:	2131      	movs	r1, #49	; 0x31
 800895c:	e7f1      	b.n	8008942 <_ZN8touchgfx17AbstractPartition8allocateEt+0x16>
 800895e:	6823      	ldr	r3, [r4, #0]
 8008960:	88a1      	ldrh	r1, [r4, #4]
 8008962:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008964:	4620      	mov	r0, r4
 8008966:	4798      	blx	r3
 8008968:	88a3      	ldrh	r3, [r4, #4]
 800896a:	3301      	adds	r3, #1
 800896c:	80a3      	strh	r3, [r4, #4]
 800896e:	bd38      	pop	{r3, r4, r5, pc}
 8008970:	0801b61c 	.word	0x0801b61c
 8008974:	0801b70d 	.word	0x0801b70d
 8008978:	0801b574 	.word	0x0801b574
 800897c:	0801b633 	.word	0x0801b633

08008980 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8008980:	b570      	push	{r4, r5, r6, lr}
 8008982:	6803      	ldr	r3, [r0, #0]
 8008984:	6a1b      	ldr	r3, [r3, #32]
 8008986:	4616      	mov	r6, r2
 8008988:	4604      	mov	r4, r0
 800898a:	460d      	mov	r5, r1
 800898c:	4798      	blx	r3
 800898e:	4286      	cmp	r6, r0
 8008990:	d905      	bls.n	800899e <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x1e>
 8008992:	4b06      	ldr	r3, [pc, #24]	; (80089ac <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x2c>)
 8008994:	4a06      	ldr	r2, [pc, #24]	; (80089b0 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x30>)
 8008996:	4807      	ldr	r0, [pc, #28]	; (80089b4 <_ZN8touchgfx17AbstractPartition10allocateAtEtt+0x34>)
 8008998:	213a      	movs	r1, #58	; 0x3a
 800899a:	f010 fd51 	bl	8019440 <__assert_func>
 800899e:	6823      	ldr	r3, [r4, #0]
 80089a0:	4629      	mov	r1, r5
 80089a2:	4620      	mov	r0, r4
 80089a4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80089a6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80089aa:	4718      	bx	r3
 80089ac:	0801b61c 	.word	0x0801b61c
 80089b0:	0801b680 	.word	0x0801b680
 80089b4:	0801b574 	.word	0x0801b574

080089b8 <_ZN8touchgfx17AbstractPartitionD1Ev>:
 80089b8:	4770      	bx	lr
	...

080089bc <_ZN8touchgfx17AbstractPartitionC1Ev>:
 80089bc:	4a02      	ldr	r2, [pc, #8]	; (80089c8 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 80089be:	6002      	str	r2, [r0, #0]
 80089c0:	2200      	movs	r2, #0
 80089c2:	8082      	strh	r2, [r0, #4]
 80089c4:	4770      	bx	lr
 80089c6:	bf00      	nop
 80089c8:	0801b654 	.word	0x0801b654

080089cc <_ZN8touchgfx9Container13getFirstChildEv>:
 80089cc:	6a80      	ldr	r0, [r0, #40]	; 0x28
 80089ce:	4770      	bx	lr

080089d0 <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 80089d0:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80089d2:	2000      	movs	r0, #0
 80089d4:	b12b      	cbz	r3, 80089e2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80089d6:	b920      	cbnz	r0, 80089e2 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 80089d8:	1a5a      	subs	r2, r3, r1
 80089da:	4250      	negs	r0, r2
 80089dc:	4150      	adcs	r0, r2
 80089de:	699b      	ldr	r3, [r3, #24]
 80089e0:	e7f8      	b.n	80089d4 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 80089e2:	4770      	bx	lr

080089e4 <_ZN8touchgfx9Container9removeAllEv>:
 80089e4:	2200      	movs	r2, #0
 80089e6:	6a83      	ldr	r3, [r0, #40]	; 0x28
 80089e8:	b123      	cbz	r3, 80089f4 <_ZN8touchgfx9Container9removeAllEv+0x10>
 80089ea:	6999      	ldr	r1, [r3, #24]
 80089ec:	6281      	str	r1, [r0, #40]	; 0x28
 80089ee:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80089f2:	e7f8      	b.n	80089e6 <_ZN8touchgfx9Container9removeAllEv+0x2>
 80089f4:	4770      	bx	lr

080089f6 <_ZN8touchgfx9Container6unlinkEv>:
 80089f6:	2300      	movs	r3, #0
 80089f8:	6283      	str	r3, [r0, #40]	; 0x28
 80089fa:	4770      	bx	lr

080089fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 80089fc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008a00:	461f      	mov	r7, r3
 8008a02:	f890 3024 	ldrb.w	r3, [r0, #36]	; 0x24
 8008a06:	460d      	mov	r5, r1
 8008a08:	4616      	mov	r6, r2
 8008a0a:	b103      	cbz	r3, 8008a0e <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8008a0c:	6038      	str	r0, [r7, #0]
 8008a0e:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008a10:	b314      	cbz	r4, 8008a58 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 8008a12:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008a16:	b1eb      	cbz	r3, 8008a54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008a18:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8008a1c:	428d      	cmp	r5, r1
 8008a1e:	db19      	blt.n	8008a54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008a20:	8923      	ldrh	r3, [r4, #8]
 8008a22:	b289      	uxth	r1, r1
 8008a24:	440b      	add	r3, r1
 8008a26:	b21b      	sxth	r3, r3
 8008a28:	429d      	cmp	r5, r3
 8008a2a:	da13      	bge.n	8008a54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008a2c:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 8008a30:	4296      	cmp	r6, r2
 8008a32:	db0f      	blt.n	8008a54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008a34:	8963      	ldrh	r3, [r4, #10]
 8008a36:	b292      	uxth	r2, r2
 8008a38:	4413      	add	r3, r2
 8008a3a:	b21b      	sxth	r3, r3
 8008a3c:	429e      	cmp	r6, r3
 8008a3e:	da09      	bge.n	8008a54 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8008a40:	6823      	ldr	r3, [r4, #0]
 8008a42:	1ab2      	subs	r2, r6, r2
 8008a44:	1a69      	subs	r1, r5, r1
 8008a46:	f8d3 8020 	ldr.w	r8, [r3, #32]
 8008a4a:	b212      	sxth	r2, r2
 8008a4c:	463b      	mov	r3, r7
 8008a4e:	b209      	sxth	r1, r1
 8008a50:	4620      	mov	r0, r4
 8008a52:	47c0      	blx	r8
 8008a54:	69a4      	ldr	r4, [r4, #24]
 8008a56:	e7db      	b.n	8008a10 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 8008a58:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008a5c <_ZNK8touchgfx9Container12getSolidRectEv>:
 8008a5c:	2200      	movs	r2, #0
 8008a5e:	8002      	strh	r2, [r0, #0]
 8008a60:	8042      	strh	r2, [r0, #2]
 8008a62:	8082      	strh	r2, [r0, #4]
 8008a64:	80c2      	strh	r2, [r0, #6]
 8008a66:	4770      	bx	lr

08008a68 <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 8008a68:	b570      	push	{r4, r5, r6, lr}
 8008a6a:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008a6c:	460d      	mov	r5, r1
 8008a6e:	4616      	mov	r6, r2
 8008a70:	b13c      	cbz	r4, 8008a82 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 8008a72:	6823      	ldr	r3, [r4, #0]
 8008a74:	4620      	mov	r0, r4
 8008a76:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8008a78:	4632      	mov	r2, r6
 8008a7a:	4629      	mov	r1, r5
 8008a7c:	4798      	blx	r3
 8008a7e:	69a4      	ldr	r4, [r4, #24]
 8008a80:	e7f6      	b.n	8008a70 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 8008a82:	bd70      	pop	{r4, r5, r6, pc}

08008a84 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 8008a84:	b538      	push	{r3, r4, r5, lr}
 8008a86:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008a88:	460d      	mov	r5, r1
 8008a8a:	b134      	cbz	r4, 8008a9a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8008a8c:	682b      	ldr	r3, [r5, #0]
 8008a8e:	4621      	mov	r1, r4
 8008a90:	689b      	ldr	r3, [r3, #8]
 8008a92:	4628      	mov	r0, r5
 8008a94:	4798      	blx	r3
 8008a96:	69a4      	ldr	r4, [r4, #24]
 8008a98:	e7f7      	b.n	8008a8a <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8008a9a:	bd38      	pop	{r3, r4, r5, pc}

08008a9c <_ZN8touchgfx9ContainerD1Ev>:
 8008a9c:	4770      	bx	lr

08008a9e <_ZN8touchgfx9ContainerD0Ev>:
 8008a9e:	b510      	push	{r4, lr}
 8008aa0:	212c      	movs	r1, #44	; 0x2c
 8008aa2:	4604      	mov	r4, r0
 8008aa4:	f010 fc9d 	bl	80193e2 <_ZdlPvj>
 8008aa8:	4620      	mov	r0, r4
 8008aaa:	bd10      	pop	{r4, pc}

08008aac <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8008aac:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008aae:	b19b      	cbz	r3, 8008ad8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008ab0:	428b      	cmp	r3, r1
 8008ab2:	d109      	bne.n	8008ac8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 8008ab4:	699a      	ldr	r2, [r3, #24]
 8008ab6:	2100      	movs	r1, #0
 8008ab8:	6159      	str	r1, [r3, #20]
 8008aba:	6282      	str	r2, [r0, #40]	; 0x28
 8008abc:	b902      	cbnz	r2, 8008ac0 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8008abe:	4770      	bx	lr
 8008ac0:	6199      	str	r1, [r3, #24]
 8008ac2:	4770      	bx	lr
 8008ac4:	4613      	mov	r3, r2
 8008ac6:	b13a      	cbz	r2, 8008ad8 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8008ac8:	699a      	ldr	r2, [r3, #24]
 8008aca:	428a      	cmp	r2, r1
 8008acc:	d1fa      	bne.n	8008ac4 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8008ace:	698a      	ldr	r2, [r1, #24]
 8008ad0:	619a      	str	r2, [r3, #24]
 8008ad2:	2300      	movs	r3, #0
 8008ad4:	e9c1 3305 	strd	r3, r3, [r1, #20]
 8008ad8:	4770      	bx	lr

08008ada <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8008ada:	b410      	push	{r4}
 8008adc:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008ade:	4604      	mov	r4, r0
 8008ae0:	b92b      	cbnz	r3, 8008aee <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8008ae2:	6803      	ldr	r3, [r0, #0]
 8008ae4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008ae8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 8008aea:	4611      	mov	r1, r2
 8008aec:	4718      	bx	r3
 8008aee:	b941      	cbnz	r1, 8008b02 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8008af0:	6193      	str	r3, [r2, #24]
 8008af2:	6282      	str	r2, [r0, #40]	; 0x28
 8008af4:	6154      	str	r4, [r2, #20]
 8008af6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8008afa:	4770      	bx	lr
 8008afc:	4603      	mov	r3, r0
 8008afe:	2800      	cmp	r0, #0
 8008b00:	d0f9      	beq.n	8008af6 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8008b02:	4299      	cmp	r1, r3
 8008b04:	6998      	ldr	r0, [r3, #24]
 8008b06:	d1f9      	bne.n	8008afc <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 8008b08:	6190      	str	r0, [r2, #24]
 8008b0a:	618a      	str	r2, [r1, #24]
 8008b0c:	e7f2      	b.n	8008af4 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>
	...

08008b10 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 8008b10:	4288      	cmp	r0, r1
 8008b12:	b508      	push	{r3, lr}
 8008b14:	d105      	bne.n	8008b22 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x12>
 8008b16:	4b11      	ldr	r3, [pc, #68]	; (8008b5c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x4c>)
 8008b18:	4a11      	ldr	r2, [pc, #68]	; (8008b60 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008b1a:	2121      	movs	r1, #33	; 0x21
 8008b1c:	4811      	ldr	r0, [pc, #68]	; (8008b64 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x54>)
 8008b1e:	f010 fc8f 	bl	8019440 <__assert_func>
 8008b22:	694b      	ldr	r3, [r1, #20]
 8008b24:	b11b      	cbz	r3, 8008b2e <_ZN8touchgfx9Container3addERNS_8DrawableE+0x1e>
 8008b26:	4b10      	ldr	r3, [pc, #64]	; (8008b68 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x58>)
 8008b28:	4a0d      	ldr	r2, [pc, #52]	; (8008b60 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008b2a:	2122      	movs	r1, #34	; 0x22
 8008b2c:	e7f6      	b.n	8008b1c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008b2e:	e9c1 0305 	strd	r0, r3, [r1, #20]
 8008b32:	6a83      	ldr	r3, [r0, #40]	; 0x28
 8008b34:	b913      	cbnz	r3, 8008b3c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2c>
 8008b36:	6281      	str	r1, [r0, #40]	; 0x28
 8008b38:	bd08      	pop	{r3, pc}
 8008b3a:	4613      	mov	r3, r2
 8008b3c:	699a      	ldr	r2, [r3, #24]
 8008b3e:	b12a      	cbz	r2, 8008b4c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x3c>
 8008b40:	428b      	cmp	r3, r1
 8008b42:	d1fa      	bne.n	8008b3a <_ZN8touchgfx9Container3addERNS_8DrawableE+0x2a>
 8008b44:	4b09      	ldr	r3, [pc, #36]	; (8008b6c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008b46:	4a06      	ldr	r2, [pc, #24]	; (8008b60 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008b48:	2133      	movs	r1, #51	; 0x33
 8008b4a:	e7e7      	b.n	8008b1c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008b4c:	428b      	cmp	r3, r1
 8008b4e:	d103      	bne.n	8008b58 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x48>
 8008b50:	4b06      	ldr	r3, [pc, #24]	; (8008b6c <_ZN8touchgfx9Container3addERNS_8DrawableE+0x5c>)
 8008b52:	4a03      	ldr	r2, [pc, #12]	; (8008b60 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x50>)
 8008b54:	2136      	movs	r1, #54	; 0x36
 8008b56:	e7e1      	b.n	8008b1c <_ZN8touchgfx9Container3addERNS_8DrawableE+0xc>
 8008b58:	6199      	str	r1, [r3, #24]
 8008b5a:	e7ed      	b.n	8008b38 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x28>
 8008b5c:	0801b74b 	.word	0x0801b74b
 8008b60:	0801b89c 	.word	0x0801b89c
 8008b64:	0801b777 	.word	0x0801b777
 8008b68:	0801b7aa 	.word	0x0801b7aa
 8008b6c:	0801b7e0 	.word	0x0801b7e0

08008b70 <_ZN8touchgfx4RectaNERKS0_>:
 8008b70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8008b74:	f9b1 7000 	ldrsh.w	r7, [r1]
 8008b78:	888c      	ldrh	r4, [r1, #4]
 8008b7a:	f9b0 9000 	ldrsh.w	r9, [r0]
 8008b7e:	443c      	add	r4, r7
 8008b80:	b2a4      	uxth	r4, r4
 8008b82:	fa0f f884 	sxth.w	r8, r4
 8008b86:	45c1      	cmp	r9, r8
 8008b88:	da2f      	bge.n	8008bea <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008b8a:	8882      	ldrh	r2, [r0, #4]
 8008b8c:	444a      	add	r2, r9
 8008b8e:	b292      	uxth	r2, r2
 8008b90:	fa0f fe82 	sxth.w	lr, r2
 8008b94:	4577      	cmp	r7, lr
 8008b96:	da28      	bge.n	8008bea <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008b98:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8008b9c:	88cb      	ldrh	r3, [r1, #6]
 8008b9e:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8008ba2:	442b      	add	r3, r5
 8008ba4:	b21b      	sxth	r3, r3
 8008ba6:	429e      	cmp	r6, r3
 8008ba8:	da1f      	bge.n	8008bea <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008baa:	88c3      	ldrh	r3, [r0, #6]
 8008bac:	4433      	add	r3, r6
 8008bae:	b29b      	uxth	r3, r3
 8008bb0:	fa0f fc83 	sxth.w	ip, r3
 8008bb4:	4565      	cmp	r5, ip
 8008bb6:	da18      	bge.n	8008bea <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8008bb8:	454f      	cmp	r7, r9
 8008bba:	bfb8      	it	lt
 8008bbc:	464f      	movlt	r7, r9
 8008bbe:	42b5      	cmp	r5, r6
 8008bc0:	bfb8      	it	lt
 8008bc2:	4635      	movlt	r5, r6
 8008bc4:	45f0      	cmp	r8, lr
 8008bc6:	bfd8      	it	le
 8008bc8:	4622      	movle	r2, r4
 8008bca:	1bd2      	subs	r2, r2, r7
 8008bcc:	8082      	strh	r2, [r0, #4]
 8008bce:	884a      	ldrh	r2, [r1, #2]
 8008bd0:	88c9      	ldrh	r1, [r1, #6]
 8008bd2:	8007      	strh	r7, [r0, #0]
 8008bd4:	440a      	add	r2, r1
 8008bd6:	b292      	uxth	r2, r2
 8008bd8:	b211      	sxth	r1, r2
 8008bda:	458c      	cmp	ip, r1
 8008bdc:	bfa8      	it	ge
 8008bde:	4613      	movge	r3, r2
 8008be0:	1b5b      	subs	r3, r3, r5
 8008be2:	80c3      	strh	r3, [r0, #6]
 8008be4:	8045      	strh	r5, [r0, #2]
 8008be6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8008bea:	2300      	movs	r3, #0
 8008bec:	8003      	strh	r3, [r0, #0]
 8008bee:	8043      	strh	r3, [r0, #2]
 8008bf0:	8083      	strh	r3, [r0, #4]
 8008bf2:	80c3      	strh	r3, [r0, #6]
 8008bf4:	e7f7      	b.n	8008be6 <_ZN8touchgfx4RectaNERKS0_+0x76>

08008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8008bf6:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8008bfa:	2b00      	cmp	r3, #0
 8008bfc:	dd06      	ble.n	8008c0c <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8008bfe:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8008c02:	2800      	cmp	r0, #0
 8008c04:	bfcc      	ite	gt
 8008c06:	2000      	movgt	r0, #0
 8008c08:	2001      	movle	r0, #1
 8008c0a:	4770      	bx	lr
 8008c0c:	2001      	movs	r0, #1
 8008c0e:	4770      	bx	lr

08008c10 <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8008c10:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008c14:	2300      	movs	r3, #0
 8008c16:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 8008c18:	8003      	strh	r3, [r0, #0]
 8008c1a:	4604      	mov	r4, r0
 8008c1c:	8043      	strh	r3, [r0, #2]
 8008c1e:	8083      	strh	r3, [r0, #4]
 8008c20:	80c3      	strh	r3, [r0, #6]
 8008c22:	2d00      	cmp	r5, #0
 8008c24:	d040      	beq.n	8008ca8 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8008c26:	1d28      	adds	r0, r5, #4
 8008c28:	f7ff ffe5 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008c2c:	b988      	cbnz	r0, 8008c52 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8008c2e:	4620      	mov	r0, r4
 8008c30:	f7ff ffe1 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008c34:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8008c38:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8008c3c:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8008c40:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8008c44:	b138      	cbz	r0, 8008c56 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8008c46:	8022      	strh	r2, [r4, #0]
 8008c48:	8063      	strh	r3, [r4, #2]
 8008c4a:	f8a4 e004 	strh.w	lr, [r4, #4]
 8008c4e:	f8a4 c006 	strh.w	ip, [r4, #6]
 8008c52:	69ad      	ldr	r5, [r5, #24]
 8008c54:	e7e5      	b.n	8008c22 <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8008c56:	f9b4 0000 	ldrsh.w	r0, [r4]
 8008c5a:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8008c5e:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8008c62:	4290      	cmp	r0, r2
 8008c64:	4607      	mov	r7, r0
 8008c66:	bfa8      	it	ge
 8008c68:	4617      	movge	r7, r2
 8008c6a:	4472      	add	r2, lr
 8008c6c:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8008c70:	8027      	strh	r7, [r4, #0]
 8008c72:	4299      	cmp	r1, r3
 8008c74:	460e      	mov	r6, r1
 8008c76:	4440      	add	r0, r8
 8008c78:	bfa8      	it	ge
 8008c7a:	461e      	movge	r6, r3
 8008c7c:	4471      	add	r1, lr
 8008c7e:	4463      	add	r3, ip
 8008c80:	b200      	sxth	r0, r0
 8008c82:	b212      	sxth	r2, r2
 8008c84:	b209      	sxth	r1, r1
 8008c86:	b21b      	sxth	r3, r3
 8008c88:	4290      	cmp	r0, r2
 8008c8a:	bfac      	ite	ge
 8008c8c:	ebc7 0200 	rsbge	r2, r7, r0
 8008c90:	ebc7 0202 	rsblt	r2, r7, r2
 8008c94:	4299      	cmp	r1, r3
 8008c96:	bfac      	ite	ge
 8008c98:	ebc6 0301 	rsbge	r3, r6, r1
 8008c9c:	ebc6 0303 	rsblt	r3, r6, r3
 8008ca0:	8066      	strh	r6, [r4, #2]
 8008ca2:	80a2      	strh	r2, [r4, #4]
 8008ca4:	80e3      	strh	r3, [r4, #6]
 8008ca6:	e7d4      	b.n	8008c52 <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8008ca8:	4620      	mov	r0, r4
 8008caa:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008cae <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8008cae:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8008cb2:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8008cb6:	b383      	cbz	r3, 8008d1a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8008cb8:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008cba:	b374      	cbz	r4, 8008d1a <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8008cbc:	f9b1 5000 	ldrsh.w	r5, [r1]
 8008cc0:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8008cc4:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8008cc8:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8008ccc:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008cd0:	b303      	cbz	r3, 8008d14 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8008cd2:	4668      	mov	r0, sp
 8008cd4:	1d21      	adds	r1, r4, #4
 8008cd6:	f8ad 5000 	strh.w	r5, [sp]
 8008cda:	f8ad 6002 	strh.w	r6, [sp, #2]
 8008cde:	f8ad 7004 	strh.w	r7, [sp, #4]
 8008ce2:	f8ad 8006 	strh.w	r8, [sp, #6]
 8008ce6:	f7ff ff43 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 8008cea:	4668      	mov	r0, sp
 8008cec:	f7ff ff83 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008cf0:	b980      	cbnz	r0, 8008d14 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8008cf2:	f8bd 3000 	ldrh.w	r3, [sp]
 8008cf6:	88a2      	ldrh	r2, [r4, #4]
 8008cf8:	1a9b      	subs	r3, r3, r2
 8008cfa:	f8ad 3000 	strh.w	r3, [sp]
 8008cfe:	88e2      	ldrh	r2, [r4, #6]
 8008d00:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8008d04:	1a9b      	subs	r3, r3, r2
 8008d06:	f8ad 3002 	strh.w	r3, [sp, #2]
 8008d0a:	6823      	ldr	r3, [r4, #0]
 8008d0c:	4669      	mov	r1, sp
 8008d0e:	689b      	ldr	r3, [r3, #8]
 8008d10:	4620      	mov	r0, r4
 8008d12:	4798      	blx	r3
 8008d14:	69a4      	ldr	r4, [r4, #24]
 8008d16:	2c00      	cmp	r4, #0
 8008d18:	d1d8      	bne.n	8008ccc <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8008d1a:	b002      	add	sp, #8
 8008d1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08008d20 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8008d20:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8008d22:	f890 3025 	ldrb.w	r3, [r0, #37]	; 0x25
 8008d26:	460d      	mov	r5, r1
 8008d28:	4616      	mov	r6, r2
 8008d2a:	b323      	cbz	r3, 8008d76 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8008d2c:	6a84      	ldr	r4, [r0, #40]	; 0x28
 8008d2e:	b314      	cbz	r4, 8008d76 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8008d30:	f894 3025 	ldrb.w	r3, [r4, #37]	; 0x25
 8008d34:	b1eb      	cbz	r3, 8008d72 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8008d36:	6828      	ldr	r0, [r5, #0]
 8008d38:	6869      	ldr	r1, [r5, #4]
 8008d3a:	466b      	mov	r3, sp
 8008d3c:	c303      	stmia	r3!, {r0, r1}
 8008d3e:	4668      	mov	r0, sp
 8008d40:	1d21      	adds	r1, r4, #4
 8008d42:	f7ff ff15 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 8008d46:	4668      	mov	r0, sp
 8008d48:	f7ff ff55 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8008d4c:	b988      	cbnz	r0, 8008d72 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8008d4e:	f8bd 3000 	ldrh.w	r3, [sp]
 8008d52:	88a2      	ldrh	r2, [r4, #4]
 8008d54:	1a9b      	subs	r3, r3, r2
 8008d56:	f8ad 3000 	strh.w	r3, [sp]
 8008d5a:	88e2      	ldrh	r2, [r4, #6]
 8008d5c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8008d60:	1a9b      	subs	r3, r3, r2
 8008d62:	f8ad 3002 	strh.w	r3, [sp, #2]
 8008d66:	6823      	ldr	r3, [r4, #0]
 8008d68:	4632      	mov	r2, r6
 8008d6a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8008d6c:	4669      	mov	r1, sp
 8008d6e:	4620      	mov	r0, r4
 8008d70:	4798      	blx	r3
 8008d72:	69a4      	ldr	r4, [r4, #24]
 8008d74:	e7db      	b.n	8008d2e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8008d76:	b002      	add	sp, #8
 8008d78:	bd70      	pop	{r4, r5, r6, pc}

08008d7a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8008d7a:	b513      	push	{r0, r1, r4, lr}
 8008d7c:	6803      	ldr	r3, [r0, #0]
 8008d7e:	f8d3 409c 	ldr.w	r4, [r3, #156]	; 0x9c
 8008d82:	2300      	movs	r3, #0
 8008d84:	e9cd 3300 	strd	r3, r3, [sp]
 8008d88:	466b      	mov	r3, sp
 8008d8a:	47a0      	blx	r4
 8008d8c:	b002      	add	sp, #8
 8008d8e:	bd10      	pop	{r4, pc}

08008d90 <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8008d90:	2301      	movs	r3, #1
 8008d92:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8008d96:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8008d9a:	4770      	bx	lr

08008d9c <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8008d9c:	2301      	movs	r3, #1
 8008d9e:	f880 304b 	strb.w	r3, [r0, #75]	; 0x4b
 8008da2:	f880 3069 	strb.w	r3, [r0, #105]	; 0x69
 8008da6:	4770      	bx	lr

08008da8 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8008da8:	6843      	ldr	r3, [r0, #4]
 8008daa:	2201      	movs	r2, #1
 8008dac:	725a      	strb	r2, [r3, #9]
 8008dae:	6840      	ldr	r0, [r0, #4]
 8008db0:	6803      	ldr	r3, [r0, #0]
 8008db2:	691b      	ldr	r3, [r3, #16]
 8008db4:	4718      	bx	r3

08008db6 <_ZN8touchgfx3HAL8flushDMAEv>:
 8008db6:	6840      	ldr	r0, [r0, #4]
 8008db8:	6803      	ldr	r3, [r0, #0]
 8008dba:	689b      	ldr	r3, [r3, #8]
 8008dbc:	4718      	bx	r3

08008dbe <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_>:
 8008dbe:	b530      	push	{r4, r5, lr}
 8008dc0:	b08b      	sub	sp, #44	; 0x2c
 8008dc2:	6804      	ldr	r4, [r0, #0]
 8008dc4:	f89d 5054 	ldrb.w	r5, [sp, #84]	; 0x54
 8008dc8:	9508      	str	r5, [sp, #32]
 8008dca:	f89d 5050 	ldrb.w	r5, [sp, #80]	; 0x50
 8008dce:	9507      	str	r5, [sp, #28]
 8008dd0:	f8bd 504c 	ldrh.w	r5, [sp, #76]	; 0x4c
 8008dd4:	9506      	str	r5, [sp, #24]
 8008dd6:	f89d 5048 	ldrb.w	r5, [sp, #72]	; 0x48
 8008dda:	9505      	str	r5, [sp, #20]
 8008ddc:	f89d 5044 	ldrb.w	r5, [sp, #68]	; 0x44
 8008de0:	9504      	str	r5, [sp, #16]
 8008de2:	f8bd 5040 	ldrh.w	r5, [sp, #64]	; 0x40
 8008de6:	9503      	str	r5, [sp, #12]
 8008de8:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 8008dec:	9502      	str	r5, [sp, #8]
 8008dee:	f8bd 5038 	ldrh.w	r5, [sp, #56]	; 0x38
 8008df2:	e9cd 3500 	strd	r3, r5, [sp]
 8008df6:	4613      	mov	r3, r2
 8008df8:	6ba4      	ldr	r4, [r4, #56]	; 0x38
 8008dfa:	2200      	movs	r2, #0
 8008dfc:	47a0      	blx	r4
 8008dfe:	b00b      	add	sp, #44	; 0x2c
 8008e00:	bd30      	pop	{r4, r5, pc}
	...

08008e04 <_ZN8touchgfx3HAL10beginFrameEv>:
 8008e04:	4b04      	ldr	r3, [pc, #16]	; (8008e18 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8008e06:	781b      	ldrb	r3, [r3, #0]
 8008e08:	b123      	cbz	r3, 8008e14 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8008e0a:	f890 006a 	ldrb.w	r0, [r0, #106]	; 0x6a
 8008e0e:	f080 0001 	eor.w	r0, r0, #1
 8008e12:	4770      	bx	lr
 8008e14:	2001      	movs	r0, #1
 8008e16:	4770      	bx	lr
 8008e18:	2000a0ea 	.word	0x2000a0ea

08008e1c <_ZN8touchgfx3HAL8endFrameEv>:
 8008e1c:	b510      	push	{r4, lr}
 8008e1e:	4604      	mov	r4, r0
 8008e20:	6840      	ldr	r0, [r0, #4]
 8008e22:	6803      	ldr	r3, [r0, #0]
 8008e24:	689b      	ldr	r3, [r3, #8]
 8008e26:	4798      	blx	r3
 8008e28:	f894 3069 	ldrb.w	r3, [r4, #105]	; 0x69
 8008e2c:	b113      	cbz	r3, 8008e34 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8008e2e:	2301      	movs	r3, #1
 8008e30:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8008e34:	bd10      	pop	{r4, pc}

08008e36 <_ZN8touchgfx3HAL10initializeEv>:
 8008e36:	b510      	push	{r4, lr}
 8008e38:	4604      	mov	r4, r0
 8008e3a:	f7f7 ff0d 	bl	8000c58 <_ZN8touchgfx10OSWrappers10initializeEv>
 8008e3e:	6860      	ldr	r0, [r4, #4]
 8008e40:	6803      	ldr	r3, [r0, #0]
 8008e42:	68db      	ldr	r3, [r3, #12]
 8008e44:	4798      	blx	r3
 8008e46:	68e0      	ldr	r0, [r4, #12]
 8008e48:	6803      	ldr	r3, [r0, #0]
 8008e4a:	689b      	ldr	r3, [r3, #8]
 8008e4c:	4798      	blx	r3
 8008e4e:	6823      	ldr	r3, [r4, #0]
 8008e50:	4620      	mov	r0, r4
 8008e52:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8008e54:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8008e58:	4718      	bx	r3
	...

08008e5c <_ZN8touchgfx3HAL4tickEv>:
 8008e5c:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008e5e:	6803      	ldr	r3, [r0, #0]
 8008e60:	4d5c      	ldr	r5, [pc, #368]	; (8008fd4 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8008e62:	f8d3 30a4 	ldr.w	r3, [r3, #164]	; 0xa4
 8008e66:	4604      	mov	r4, r0
 8008e68:	4798      	blx	r3
 8008e6a:	2800      	cmp	r0, #0
 8008e6c:	f000 8097 	beq.w	8008f9e <_ZN8touchgfx3HAL4tickEv+0x142>
 8008e70:	2001      	movs	r0, #1
 8008e72:	f7f7 fc6f 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8008e76:	f894 3066 	ldrb.w	r3, [r4, #102]	; 0x66
 8008e7a:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8008e7e:	f894 3075 	ldrb.w	r3, [r4, #117]	; 0x75
 8008e82:	2600      	movs	r6, #0
 8008e84:	f884 6066 	strb.w	r6, [r4, #102]	; 0x66
 8008e88:	f884 604b 	strb.w	r6, [r4, #75]	; 0x4b
 8008e8c:	b133      	cbz	r3, 8008e9c <_ZN8touchgfx3HAL4tickEv+0x40>
 8008e8e:	6823      	ldr	r3, [r4, #0]
 8008e90:	4620      	mov	r0, r4
 8008e92:	f8d3 30b8 	ldr.w	r3, [r3, #184]	; 0xb8
 8008e96:	4798      	blx	r3
 8008e98:	f884 6075 	strb.w	r6, [r4, #117]	; 0x75
 8008e9c:	f894 304a 	ldrb.w	r3, [r4, #74]	; 0x4a
 8008ea0:	6862      	ldr	r2, [r4, #4]
 8008ea2:	f083 0301 	eor.w	r3, r3, #1
 8008ea6:	7253      	strb	r3, [r2, #9]
 8008ea8:	2601      	movs	r6, #1
 8008eaa:	702e      	strb	r6, [r5, #0]
 8008eac:	f001 ffa4 	bl	800adf8 <_ZN8touchgfx11Application11getInstanceEv>
 8008eb0:	6803      	ldr	r3, [r0, #0]
 8008eb2:	4631      	mov	r1, r6
 8008eb4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008eb6:	4798      	blx	r3
 8008eb8:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8008ebc:	b90b      	cbnz	r3, 8008ec2 <_ZN8touchgfx3HAL4tickEv+0x66>
 8008ebe:	f884 6067 	strb.w	r6, [r4, #103]	; 0x67
 8008ec2:	f001 ff99 	bl	800adf8 <_ZN8touchgfx11Application11getInstanceEv>
 8008ec6:	6803      	ldr	r3, [r0, #0]
 8008ec8:	695b      	ldr	r3, [r3, #20]
 8008eca:	4798      	blx	r3
 8008ecc:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008ece:	6803      	ldr	r3, [r0, #0]
 8008ed0:	691b      	ldr	r3, [r3, #16]
 8008ed2:	4798      	blx	r3
 8008ed4:	f894 3067 	ldrb.w	r3, [r4, #103]	; 0x67
 8008ed8:	f894 2068 	ldrb.w	r2, [r4, #104]	; 0x68
 8008edc:	3b01      	subs	r3, #1
 8008ede:	b2db      	uxtb	r3, r3
 8008ee0:	f884 3067 	strb.w	r3, [r4, #103]	; 0x67
 8008ee4:	b10a      	cbz	r2, 8008eea <_ZN8touchgfx3HAL4tickEv+0x8e>
 8008ee6:	2b00      	cmp	r3, #0
 8008ee8:	d1eb      	bne.n	8008ec2 <_ZN8touchgfx3HAL4tickEv+0x66>
 8008eea:	4a3b      	ldr	r2, [pc, #236]	; (8008fd8 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8008eec:	f994 1064 	ldrsb.w	r1, [r4, #100]	; 0x64
 8008ef0:	7813      	ldrb	r3, [r2, #0]
 8008ef2:	3301      	adds	r3, #1
 8008ef4:	b25b      	sxtb	r3, r3
 8008ef6:	4299      	cmp	r1, r3
 8008ef8:	7013      	strb	r3, [r2, #0]
 8008efa:	dc10      	bgt.n	8008f1e <_ZN8touchgfx3HAL4tickEv+0xc2>
 8008efc:	68e0      	ldr	r0, [r4, #12]
 8008efe:	2300      	movs	r3, #0
 8008f00:	7013      	strb	r3, [r2, #0]
 8008f02:	6803      	ldr	r3, [r0, #0]
 8008f04:	aa03      	add	r2, sp, #12
 8008f06:	68db      	ldr	r3, [r3, #12]
 8008f08:	a902      	add	r1, sp, #8
 8008f0a:	4798      	blx	r3
 8008f0c:	6823      	ldr	r3, [r4, #0]
 8008f0e:	2800      	cmp	r0, #0
 8008f10:	d051      	beq.n	8008fb6 <_ZN8touchgfx3HAL4tickEv+0x15a>
 8008f12:	f8d3 30b0 	ldr.w	r3, [r3, #176]	; 0xb0
 8008f16:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8008f1a:	4620      	mov	r0, r4
 8008f1c:	4798      	blx	r3
 8008f1e:	6960      	ldr	r0, [r4, #20]
 8008f20:	2300      	movs	r3, #0
 8008f22:	f88d 3007 	strb.w	r3, [sp, #7]
 8008f26:	b158      	cbz	r0, 8008f40 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8008f28:	6803      	ldr	r3, [r0, #0]
 8008f2a:	f10d 0107 	add.w	r1, sp, #7
 8008f2e:	68db      	ldr	r3, [r3, #12]
 8008f30:	4798      	blx	r3
 8008f32:	b128      	cbz	r0, 8008f40 <_ZN8touchgfx3HAL4tickEv+0xe4>
 8008f34:	6da0      	ldr	r0, [r4, #88]	; 0x58
 8008f36:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8008f3a:	6803      	ldr	r3, [r0, #0]
 8008f3c:	68db      	ldr	r3, [r3, #12]
 8008f3e:	4798      	blx	r3
 8008f40:	f104 001c 	add.w	r0, r4, #28
 8008f44:	f010 f994 	bl	8019270 <_ZN8touchgfx8Gestures4tickEv>
 8008f48:	f894 306c 	ldrb.w	r3, [r4, #108]	; 0x6c
 8008f4c:	b30b      	cbz	r3, 8008f92 <_ZN8touchgfx3HAL4tickEv+0x136>
 8008f4e:	6920      	ldr	r0, [r4, #16]
 8008f50:	6803      	ldr	r3, [r0, #0]
 8008f52:	691b      	ldr	r3, [r3, #16]
 8008f54:	4798      	blx	r3
 8008f56:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8008f58:	4606      	mov	r6, r0
 8008f5a:	b903      	cbnz	r3, 8008f5e <_ZN8touchgfx3HAL4tickEv+0x102>
 8008f5c:	6720      	str	r0, [r4, #112]	; 0x70
 8008f5e:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8008f60:	4a1e      	ldr	r2, [pc, #120]	; (8008fdc <_ZN8touchgfx3HAL4tickEv+0x180>)
 8008f62:	1af3      	subs	r3, r6, r3
 8008f64:	4293      	cmp	r3, r2
 8008f66:	d914      	bls.n	8008f92 <_ZN8touchgfx3HAL4tickEv+0x136>
 8008f68:	6920      	ldr	r0, [r4, #16]
 8008f6a:	6803      	ldr	r3, [r0, #0]
 8008f6c:	699b      	ldr	r3, [r3, #24]
 8008f6e:	4798      	blx	r3
 8008f70:	6f23      	ldr	r3, [r4, #112]	; 0x70
 8008f72:	2264      	movs	r2, #100	; 0x64
 8008f74:	1af3      	subs	r3, r6, r3
 8008f76:	fbb3 f3f2 	udiv	r3, r3, r2
 8008f7a:	fbb0 f0f3 	udiv	r0, r0, r3
 8008f7e:	2800      	cmp	r0, #0
 8008f80:	dc1e      	bgt.n	8008fc0 <_ZN8touchgfx3HAL4tickEv+0x164>
 8008f82:	f884 2065 	strb.w	r2, [r4, #101]	; 0x65
 8008f86:	6920      	ldr	r0, [r4, #16]
 8008f88:	6803      	ldr	r3, [r0, #0]
 8008f8a:	2100      	movs	r1, #0
 8008f8c:	69db      	ldr	r3, [r3, #28]
 8008f8e:	4798      	blx	r3
 8008f90:	6726      	str	r6, [r4, #112]	; 0x70
 8008f92:	f001 ff31 	bl	800adf8 <_ZN8touchgfx11Application11getInstanceEv>
 8008f96:	6803      	ldr	r3, [r0, #0]
 8008f98:	2100      	movs	r1, #0
 8008f9a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8008f9c:	4798      	blx	r3
 8008f9e:	6823      	ldr	r3, [r4, #0]
 8008fa0:	4620      	mov	r0, r4
 8008fa2:	f8d3 30a8 	ldr.w	r3, [r3, #168]	; 0xa8
 8008fa6:	4798      	blx	r3
 8008fa8:	2001      	movs	r0, #1
 8008faa:	f7f7 fbef 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8008fae:	2300      	movs	r3, #0
 8008fb0:	702b      	strb	r3, [r5, #0]
 8008fb2:	b004      	add	sp, #16
 8008fb4:	bd70      	pop	{r4, r5, r6, pc}
 8008fb6:	f8d3 30b4 	ldr.w	r3, [r3, #180]	; 0xb4
 8008fba:	4620      	mov	r0, r4
 8008fbc:	4798      	blx	r3
 8008fbe:	e7ae      	b.n	8008f1e <_ZN8touchgfx3HAL4tickEv+0xc2>
 8008fc0:	2863      	cmp	r0, #99	; 0x63
 8008fc2:	bfcb      	itete	gt
 8008fc4:	2300      	movgt	r3, #0
 8008fc6:	f1c0 0064 	rsble	r0, r0, #100	; 0x64
 8008fca:	f884 3065 	strbgt.w	r3, [r4, #101]	; 0x65
 8008fce:	f884 0065 	strble.w	r0, [r4, #101]	; 0x65
 8008fd2:	e7d8      	b.n	8008f86 <_ZN8touchgfx3HAL4tickEv+0x12a>
 8008fd4:	2000a0f0 	.word	0x2000a0f0
 8008fd8:	2000a0f1 	.word	0x2000a0f1
 8008fdc:	05f5e100 	.word	0x05f5e100

08008fe0 <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 8008fe0:	f7f7 be6a 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08008fe4 <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 8008fe4:	6581      	str	r1, [r0, #88]	; 0x58
 8008fe6:	301c      	adds	r0, #28
 8008fe8:	f010 b940 	b.w	801926c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08008fec <_ZN8touchgfx3HAL5touchEll>:
 8008fec:	b530      	push	{r4, r5, lr}
 8008fee:	b087      	sub	sp, #28
 8008ff0:	4604      	mov	r4, r0
 8008ff2:	a804      	add	r0, sp, #16
 8008ff4:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8008ff8:	f001 fcbe 	bl	800a978 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8008ffc:	9b04      	ldr	r3, [sp, #16]
 8008ffe:	f8ad 300c 	strh.w	r3, [sp, #12]
 8009002:	a906      	add	r1, sp, #24
 8009004:	9b05      	ldr	r3, [sp, #20]
 8009006:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 800900a:	a803      	add	r0, sp, #12
 800900c:	f001 fcf2 	bl	800a9f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8009010:	f894 106b 	ldrb.w	r1, [r4, #107]	; 0x6b
 8009014:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8009018:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 800901c:	f104 001c 	add.w	r0, r4, #28
 8009020:	b189      	cbz	r1, 8009046 <_ZN8touchgfx3HAL5touchEll+0x5a>
 8009022:	f8b4 5060 	ldrh.w	r5, [r4, #96]	; 0x60
 8009026:	9300      	str	r3, [sp, #0]
 8009028:	f8b4 105c 	ldrh.w	r1, [r4, #92]	; 0x5c
 800902c:	4613      	mov	r3, r2
 800902e:	462a      	mov	r2, r5
 8009030:	f010 f92c 	bl	801928c <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 8009034:	b128      	cbz	r0, 8009042 <_ZN8touchgfx3HAL5touchEll+0x56>
 8009036:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 800903a:	65e3      	str	r3, [r4, #92]	; 0x5c
 800903c:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8009040:	6623      	str	r3, [r4, #96]	; 0x60
 8009042:	b007      	add	sp, #28
 8009044:	bd30      	pop	{r4, r5, pc}
 8009046:	f010 f965 	bl	8019314 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 800904a:	2301      	movs	r3, #1
 800904c:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 8009050:	e7f1      	b.n	8009036 <_ZN8touchgfx3HAL5touchEll+0x4a>

08009052 <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 8009052:	b570      	push	{r4, r5, r6, lr}
 8009054:	2b00      	cmp	r3, #0
 8009056:	d050      	beq.n	80090fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009058:	ea81 0002 	eor.w	r0, r1, r2
 800905c:	07c6      	lsls	r6, r0, #31
 800905e:	d508      	bpl.n	8009072 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 8009060:	3a01      	subs	r2, #1
 8009062:	18cc      	adds	r4, r1, r3
 8009064:	42a1      	cmp	r1, r4
 8009066:	d048      	beq.n	80090fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 8009068:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 800906c:	f801 0b01 	strb.w	r0, [r1], #1
 8009070:	e7f8      	b.n	8009064 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 8009072:	07d5      	lsls	r5, r2, #31
 8009074:	bf42      	ittt	mi
 8009076:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 800907a:	f801 0b01 	strbmi.w	r0, [r1], #1
 800907e:	f103 33ff 	addmi.w	r3, r3, #4294967295
 8009082:	2b01      	cmp	r3, #1
 8009084:	d915      	bls.n	80090b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 8009086:	ea82 0001 	eor.w	r0, r2, r1
 800908a:	0784      	lsls	r4, r0, #30
 800908c:	d02d      	beq.n	80090ea <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x98>
 800908e:	1e94      	subs	r4, r2, #2
 8009090:	4608      	mov	r0, r1
 8009092:	18ce      	adds	r6, r1, r3
 8009094:	f834 5f02 	ldrh.w	r5, [r4, #2]!
 8009098:	f820 5b02 	strh.w	r5, [r0], #2
 800909c:	1a35      	subs	r5, r6, r0
 800909e:	2d01      	cmp	r5, #1
 80090a0:	d8f8      	bhi.n	8009094 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x42>
 80090a2:	1e98      	subs	r0, r3, #2
 80090a4:	f020 0001 	bic.w	r0, r0, #1
 80090a8:	3002      	adds	r0, #2
 80090aa:	4401      	add	r1, r0
 80090ac:	4402      	add	r2, r0
 80090ae:	f003 0301 	and.w	r3, r3, #1
 80090b2:	1f14      	subs	r4, r2, #4
 80090b4:	4608      	mov	r0, r1
 80090b6:	18ce      	adds	r6, r1, r3
 80090b8:	1a35      	subs	r5, r6, r0
 80090ba:	2d03      	cmp	r5, #3
 80090bc:	d810      	bhi.n	80090e0 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x8e>
 80090be:	089c      	lsrs	r4, r3, #2
 80090c0:	00a0      	lsls	r0, r4, #2
 80090c2:	4401      	add	r1, r0
 80090c4:	3801      	subs	r0, #1
 80090c6:	4402      	add	r2, r0
 80090c8:	f06f 0003 	mvn.w	r0, #3
 80090cc:	fb00 3404 	mla	r4, r0, r4, r3
 80090d0:	440c      	add	r4, r1
 80090d2:	42a1      	cmp	r1, r4
 80090d4:	d011      	beq.n	80090fa <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0xa8>
 80090d6:	f812 3f01 	ldrb.w	r3, [r2, #1]!
 80090da:	f801 3b01 	strb.w	r3, [r1], #1
 80090de:	e7f8      	b.n	80090d2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x80>
 80090e0:	f854 5f04 	ldr.w	r5, [r4, #4]!
 80090e4:	f840 5b04 	str.w	r5, [r0], #4
 80090e8:	e7e6      	b.n	80090b8 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x66>
 80090ea:	0790      	lsls	r0, r2, #30
 80090ec:	d0e1      	beq.n	80090b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 80090ee:	f832 0b02 	ldrh.w	r0, [r2], #2
 80090f2:	f821 0b02 	strh.w	r0, [r1], #2
 80090f6:	3b02      	subs	r3, #2
 80090f8:	e7db      	b.n	80090b2 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x60>
 80090fa:	2001      	movs	r0, #1
 80090fc:	bd70      	pop	{r4, r5, r6, pc}

080090fe <_ZN8touchgfx3HAL7noTouchEv>:
 80090fe:	b510      	push	{r4, lr}
 8009100:	f890 306b 	ldrb.w	r3, [r0, #107]	; 0x6b
 8009104:	4604      	mov	r4, r0
 8009106:	b153      	cbz	r3, 800911e <_ZN8touchgfx3HAL7noTouchEv+0x20>
 8009108:	f8b0 3060 	ldrh.w	r3, [r0, #96]	; 0x60
 800910c:	f8b0 205c 	ldrh.w	r2, [r0, #92]	; 0x5c
 8009110:	2101      	movs	r1, #1
 8009112:	301c      	adds	r0, #28
 8009114:	f010 f8fe 	bl	8019314 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 8009118:	2300      	movs	r3, #0
 800911a:	f884 306b 	strb.w	r3, [r4, #107]	; 0x6b
 800911e:	bd10      	pop	{r4, pc}

08009120 <_ZN8touchgfx8Drawable5setXYEss>:
 8009120:	b570      	push	{r4, r5, r6, lr}
 8009122:	6803      	ldr	r3, [r0, #0]
 8009124:	4604      	mov	r4, r0
 8009126:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009128:	4615      	mov	r5, r2
 800912a:	4798      	blx	r3
 800912c:	6823      	ldr	r3, [r4, #0]
 800912e:	4629      	mov	r1, r5
 8009130:	4620      	mov	r0, r4
 8009132:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009134:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009138:	4718      	bx	r3
	...

0800913c <_ZN8touchgfx3HAL3lcdEv>:
 800913c:	4b04      	ldr	r3, [pc, #16]	; (8009150 <_ZN8touchgfx3HAL3lcdEv+0x14>)
 800913e:	681b      	ldr	r3, [r3, #0]
 8009140:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009144:	b10a      	cbz	r2, 800914a <_ZN8touchgfx3HAL3lcdEv+0xe>
 8009146:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009148:	b900      	cbnz	r0, 800914c <_ZN8touchgfx3HAL3lcdEv+0x10>
 800914a:	6898      	ldr	r0, [r3, #8]
 800914c:	4770      	bx	lr
 800914e:	bf00      	nop
 8009150:	2000a0ec 	.word	0x2000a0ec

08009154 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8009154:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009158:	4604      	mov	r4, r0
 800915a:	6980      	ldr	r0, [r0, #24]
 800915c:	b085      	sub	sp, #20
 800915e:	460f      	mov	r7, r1
 8009160:	4690      	mov	r8, r2
 8009162:	4699      	mov	r9, r3
 8009164:	b930      	cbnz	r0, 8009174 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x20>
 8009166:	4b1c      	ldr	r3, [pc, #112]	; (80091d8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x84>)
 8009168:	4a1c      	ldr	r2, [pc, #112]	; (80091dc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 800916a:	f44f 71a5 	mov.w	r1, #330	; 0x14a
 800916e:	481c      	ldr	r0, [pc, #112]	; (80091e0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x8c>)
 8009170:	f010 f966 	bl	8019440 <__assert_func>
 8009174:	ad04      	add	r5, sp, #16
 8009176:	2600      	movs	r6, #0
 8009178:	f845 6d04 	str.w	r6, [r5, #-4]!
 800917c:	6806      	ldr	r6, [r0, #0]
 800917e:	9501      	str	r5, [sp, #4]
 8009180:	f8bd 5030 	ldrh.w	r5, [sp, #48]	; 0x30
 8009184:	9500      	str	r5, [sp, #0]
 8009186:	6835      	ldr	r5, [r6, #0]
 8009188:	47a8      	blx	r5
 800918a:	4d16      	ldr	r5, [pc, #88]	; (80091e4 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x90>)
 800918c:	4606      	mov	r6, r0
 800918e:	f8a5 9000 	strh.w	r9, [r5]
 8009192:	f7ff ffd3 	bl	800913c <_ZN8touchgfx3HAL3lcdEv>
 8009196:	6803      	ldr	r3, [r0, #0]
 8009198:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800919a:	4798      	blx	r3
 800919c:	2801      	cmp	r0, #1
 800919e:	d012      	beq.n	80091c6 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x72>
 80091a0:	d306      	bcc.n	80091b0 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x5c>
 80091a2:	280d      	cmp	r0, #13
 80091a4:	d80b      	bhi.n	80091be <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80091a6:	4b10      	ldr	r3, [pc, #64]	; (80091e8 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x94>)
 80091a8:	4a0c      	ldr	r2, [pc, #48]	; (80091dc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x88>)
 80091aa:	f44f 71b4 	mov.w	r1, #360	; 0x168
 80091ae:	e7de      	b.n	800916e <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x1a>
 80091b0:	882b      	ldrh	r3, [r5, #0]
 80091b2:	fb08 7203 	mla	r2, r8, r3, r7
 80091b6:	9b03      	ldr	r3, [sp, #12]
 80091b8:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80091bc:	63e3      	str	r3, [r4, #60]	; 0x3c
 80091be:	4630      	mov	r0, r6
 80091c0:	b005      	add	sp, #20
 80091c2:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80091c6:	882a      	ldrh	r2, [r5, #0]
 80091c8:	9b03      	ldr	r3, [sp, #12]
 80091ca:	fb08 7202 	mla	r2, r8, r2, r7
 80091ce:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80091d2:	1a9a      	subs	r2, r3, r2
 80091d4:	63e2      	str	r2, [r4, #60]	; 0x3c
 80091d6:	e7f2      	b.n	80091be <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x6a>
 80091d8:	0801ba44 	.word	0x0801ba44
 80091dc:	0801bcfc 	.word	0x0801bcfc
 80091e0:	0801ba89 	.word	0x0801ba89
 80091e4:	2000a0e6 	.word	0x2000a0e6
 80091e8:	0801baaf 	.word	0x0801baaf

080091ec <_ZN8touchgfx3HAL8blitCopyEPKtttttthb>:
 80091ec:	b5f0      	push	{r4, r5, r6, r7, lr}
 80091ee:	b08b      	sub	sp, #44	; 0x2c
 80091f0:	4617      	mov	r7, r2
 80091f2:	4604      	mov	r4, r0
 80091f4:	460e      	mov	r6, r1
 80091f6:	461d      	mov	r5, r3
 80091f8:	f7ff ffa0 	bl	800913c <_ZN8touchgfx3HAL3lcdEv>
 80091fc:	6803      	ldr	r3, [r0, #0]
 80091fe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009200:	4798      	blx	r3
 8009202:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8009206:	4b0e      	ldr	r3, [pc, #56]	; (8009240 <_ZN8touchgfx3HAL8blitCopyEPKtttttthb+0x54>)
 8009208:	6822      	ldr	r2, [r4, #0]
 800920a:	881b      	ldrh	r3, [r3, #0]
 800920c:	9306      	str	r3, [sp, #24]
 800920e:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8009212:	9305      	str	r3, [sp, #20]
 8009214:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 8009218:	9304      	str	r3, [sp, #16]
 800921a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 800921e:	9303      	str	r3, [sp, #12]
 8009220:	f8bd 3044 	ldrh.w	r3, [sp, #68]	; 0x44
 8009224:	9302      	str	r3, [sp, #8]
 8009226:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 800922a:	e9cd 5300 	strd	r5, r3, [sp]
 800922e:	4631      	mov	r1, r6
 8009230:	6b95      	ldr	r5, [r2, #56]	; 0x38
 8009232:	463b      	mov	r3, r7
 8009234:	2200      	movs	r2, #0
 8009236:	4620      	mov	r0, r4
 8009238:	47a8      	blx	r5
 800923a:	b00b      	add	sp, #44	; 0x2c
 800923c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800923e:	bf00      	nop
 8009240:	2000a0e6 	.word	0x2000a0e6

08009244 <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth>:
 8009244:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8009248:	4698      	mov	r8, r3
 800924a:	6803      	ldr	r3, [r0, #0]
 800924c:	6b9d      	ldr	r5, [r3, #56]	; 0x38
 800924e:	4b13      	ldr	r3, [pc, #76]	; (800929c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth+0x58>)
 8009250:	b08b      	sub	sp, #44	; 0x2c
 8009252:	4617      	mov	r7, r2
 8009254:	f8b3 9000 	ldrh.w	r9, [r3]
 8009258:	460e      	mov	r6, r1
 800925a:	4604      	mov	r4, r0
 800925c:	f7ff ff6e 	bl	800913c <_ZN8touchgfx3HAL3lcdEv>
 8009260:	6803      	ldr	r3, [r0, #0]
 8009262:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009264:	4798      	blx	r3
 8009266:	2302      	movs	r3, #2
 8009268:	e9cd 9306 	strd	r9, r3, [sp, #24]
 800926c:	2301      	movs	r3, #1
 800926e:	9305      	str	r3, [sp, #20]
 8009270:	f89d 3054 	ldrb.w	r3, [sp, #84]	; 0x54
 8009274:	9304      	str	r3, [sp, #16]
 8009276:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 800927a:	9303      	str	r3, [sp, #12]
 800927c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009280:	9302      	str	r3, [sp, #8]
 8009282:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8009286:	9008      	str	r0, [sp, #32]
 8009288:	e9cd 8300 	strd	r8, r3, [sp]
 800928c:	2200      	movs	r2, #0
 800928e:	463b      	mov	r3, r7
 8009290:	4631      	mov	r1, r6
 8009292:	4620      	mov	r0, r4
 8009294:	47a8      	blx	r5
 8009296:	b00b      	add	sp, #44	; 0x2c
 8009298:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800929c:	2000a0e6 	.word	0x2000a0e6

080092a0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth>:
 80092a0:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 80092a4:	4698      	mov	r8, r3
 80092a6:	6803      	ldr	r3, [r0, #0]
 80092a8:	6d5d      	ldr	r5, [r3, #84]	; 0x54
 80092aa:	4b0f      	ldr	r3, [pc, #60]	; (80092e8 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth+0x48>)
 80092ac:	b087      	sub	sp, #28
 80092ae:	f8b3 9000 	ldrh.w	r9, [r3]
 80092b2:	460e      	mov	r6, r1
 80092b4:	4617      	mov	r7, r2
 80092b6:	4604      	mov	r4, r0
 80092b8:	f7ff ff40 	bl	800913c <_ZN8touchgfx3HAL3lcdEv>
 80092bc:	6803      	ldr	r3, [r0, #0]
 80092be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80092c0:	4798      	blx	r3
 80092c2:	f89d 3040 	ldrb.w	r3, [sp, #64]	; 0x40
 80092c6:	9302      	str	r3, [sp, #8]
 80092c8:	f8bd 303c 	ldrh.w	r3, [sp, #60]	; 0x3c
 80092cc:	9301      	str	r3, [sp, #4]
 80092ce:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 80092d2:	9300      	str	r3, [sp, #0]
 80092d4:	e9cd 9003 	strd	r9, r0, [sp, #12]
 80092d8:	4643      	mov	r3, r8
 80092da:	463a      	mov	r2, r7
 80092dc:	4631      	mov	r1, r6
 80092de:	4620      	mov	r0, r4
 80092e0:	47a8      	blx	r5
 80092e2:	b007      	add	sp, #28
 80092e4:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80092e8:	2000a0e6 	.word	0x2000a0e6

080092ec <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80092ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80092f0:	4604      	mov	r4, r0
 80092f2:	b08f      	sub	sp, #60	; 0x3c
 80092f4:	4610      	mov	r0, r2
 80092f6:	460d      	mov	r5, r1
 80092f8:	4691      	mov	r9, r2
 80092fa:	461e      	mov	r6, r3
 80092fc:	f004 f918 	bl	800d530 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009300:	2800      	cmp	r0, #0
 8009302:	f000 80b3 	beq.w	800946c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x180>
 8009306:	6823      	ldr	r3, [r4, #0]
 8009308:	f8df b190 	ldr.w	fp, [pc, #400]	; 800949c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>
 800930c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800930e:	f8df a190 	ldr.w	sl, [pc, #400]	; 80094a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>
 8009312:	4f5f      	ldr	r7, [pc, #380]	; (8009490 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8009314:	4620      	mov	r0, r4
 8009316:	4798      	blx	r3
 8009318:	6823      	ldr	r3, [r4, #0]
 800931a:	4620      	mov	r0, r4
 800931c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800931e:	4798      	blx	r3
 8009320:	f8bb 3000 	ldrh.w	r3, [fp]
 8009324:	9300      	str	r3, [sp, #0]
 8009326:	f10d 0838 	add.w	r8, sp, #56	; 0x38
 800932a:	f8ba 3000 	ldrh.w	r3, [sl]
 800932e:	9301      	str	r3, [sp, #4]
 8009330:	883b      	ldrh	r3, [r7, #0]
 8009332:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 8009336:	9302      	str	r3, [sp, #8]
 8009338:	4b56      	ldr	r3, [pc, #344]	; (8009494 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 800933a:	9304      	str	r3, [sp, #16]
 800933c:	881a      	ldrh	r2, [r3, #0]
 800933e:	9203      	str	r2, [sp, #12]
 8009340:	4640      	mov	r0, r8
 8009342:	f004 f9af 	bl	800d6a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8009346:	8038      	strh	r0, [r7, #0]
 8009348:	4640      	mov	r0, r8
 800934a:	f004 f9e5 	bl	800d718 <_ZNK8touchgfx6Bitmap9getHeightEv>
 800934e:	9b04      	ldr	r3, [sp, #16]
 8009350:	8018      	strh	r0, [r3, #0]
 8009352:	4b51      	ldr	r3, [pc, #324]	; (8009498 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 8009354:	781b      	ldrb	r3, [r3, #0]
 8009356:	2b00      	cmp	r3, #0
 8009358:	f040 808b 	bne.w	8009472 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x186>
 800935c:	883b      	ldrh	r3, [r7, #0]
 800935e:	f8ab 3000 	strh.w	r3, [fp]
 8009362:	f8aa 0000 	strh.w	r0, [sl]
 8009366:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 8009368:	9304      	str	r3, [sp, #16]
 800936a:	4648      	mov	r0, r9
 800936c:	6c27      	ldr	r7, [r4, #64]	; 0x40
 800936e:	f004 f8df 	bl	800d530 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8009372:	e9c4 000f 	strd	r0, r0, [r4, #60]	; 0x3c
 8009376:	2200      	movs	r2, #0
 8009378:	4611      	mov	r1, r2
 800937a:	4628      	mov	r0, r5
 800937c:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8009380:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 8009384:	f7ff fecc 	bl	8009120 <_ZN8touchgfx8Drawable5setXYEss>
 8009388:	2301      	movs	r3, #1
 800938a:	f895 b025 	ldrb.w	fp, [r5, #37]	; 0x25
 800938e:	f885 3025 	strb.w	r3, [r5, #37]	; 0x25
 8009392:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8009396:	2b00      	cmp	r3, #0
 8009398:	dd71      	ble.n	800947e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 800939a:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 800939e:	2b00      	cmp	r3, #0
 80093a0:	dd6d      	ble.n	800947e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x192>
 80093a2:	462a      	mov	r2, r5
 80093a4:	ab0a      	add	r3, sp, #40	; 0x28
 80093a6:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80093aa:	6851      	ldr	r1, [r2, #4]
 80093ac:	c303      	stmia	r3!, {r0, r1}
 80093ae:	4631      	mov	r1, r6
 80093b0:	a80a      	add	r0, sp, #40	; 0x28
 80093b2:	f7ff fbdd 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 80093b6:	4b36      	ldr	r3, [pc, #216]	; (8009490 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 80093b8:	f9b3 2000 	ldrsh.w	r2, [r3]
 80093bc:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 80093c0:	4b34      	ldr	r3, [pc, #208]	; (8009494 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 80093c2:	aa0a      	add	r2, sp, #40	; 0x28
 80093c4:	e892 0003 	ldmia.w	r2, {r0, r1}
 80093c8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80093cc:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 80093d0:	ab08      	add	r3, sp, #32
 80093d2:	e883 0003 	stmia.w	r3, {r0, r1}
 80093d6:	2600      	movs	r6, #0
 80093d8:	4618      	mov	r0, r3
 80093da:	a90c      	add	r1, sp, #48	; 0x30
 80093dc:	960c      	str	r6, [sp, #48]	; 0x30
 80093de:	f7ff fbc7 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 80093e2:	a807      	add	r0, sp, #28
 80093e4:	f004 faf0 	bl	800d9c8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80093e8:	4680      	mov	r8, r0
 80093ea:	f7ff fea7 	bl	800913c <_ZN8touchgfx3HAL3lcdEv>
 80093ee:	6802      	ldr	r2, [r0, #0]
 80093f0:	6a52      	ldr	r2, [r2, #36]	; 0x24
 80093f2:	4790      	blx	r2
 80093f4:	4580      	cmp	r8, r0
 80093f6:	d049      	beq.n	800948c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a0>
 80093f8:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 80093fa:	b150      	cbz	r0, 8009412 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 80093fc:	a807      	add	r0, sp, #28
 80093fe:	f004 fae3 	bl	800d9c8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 8009402:	4606      	mov	r6, r0
 8009404:	6ce0      	ldr	r0, [r4, #76]	; 0x4c
 8009406:	6803      	ldr	r3, [r0, #0]
 8009408:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800940a:	4798      	blx	r3
 800940c:	1a33      	subs	r3, r6, r0
 800940e:	4258      	negs	r0, r3
 8009410:	4158      	adcs	r0, r3
 8009412:	f884 0076 	strb.w	r0, [r4, #118]	; 0x76
 8009416:	2600      	movs	r6, #0
 8009418:	682a      	ldr	r2, [r5, #0]
 800941a:	696b      	ldr	r3, [r5, #20]
 800941c:	616e      	str	r6, [r5, #20]
 800941e:	9305      	str	r3, [sp, #20]
 8009420:	6892      	ldr	r2, [r2, #8]
 8009422:	a908      	add	r1, sp, #32
 8009424:	4628      	mov	r0, r5
 8009426:	4790      	blx	r2
 8009428:	9b05      	ldr	r3, [sp, #20]
 800942a:	616b      	str	r3, [r5, #20]
 800942c:	4652      	mov	r2, sl
 800942e:	f884 6076 	strb.w	r6, [r4, #118]	; 0x76
 8009432:	4649      	mov	r1, r9
 8009434:	4628      	mov	r0, r5
 8009436:	f885 b025 	strb.w	fp, [r5, #37]	; 0x25
 800943a:	f7ff fe71 	bl	8009120 <_ZN8touchgfx8Drawable5setXYEss>
 800943e:	9b04      	ldr	r3, [sp, #16]
 8009440:	9a00      	ldr	r2, [sp, #0]
 8009442:	e9c4 370f 	strd	r3, r7, [r4, #60]	; 0x3c
 8009446:	4b15      	ldr	r3, [pc, #84]	; (800949c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8009448:	801a      	strh	r2, [r3, #0]
 800944a:	4b15      	ldr	r3, [pc, #84]	; (80094a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 800944c:	9a01      	ldr	r2, [sp, #4]
 800944e:	801a      	strh	r2, [r3, #0]
 8009450:	4b0f      	ldr	r3, [pc, #60]	; (8009490 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a4>)
 8009452:	9a02      	ldr	r2, [sp, #8]
 8009454:	801a      	strh	r2, [r3, #0]
 8009456:	4b0f      	ldr	r3, [pc, #60]	; (8009494 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1a8>)
 8009458:	9a03      	ldr	r2, [sp, #12]
 800945a:	801a      	strh	r2, [r3, #0]
 800945c:	6823      	ldr	r3, [r4, #0]
 800945e:	4620      	mov	r0, r4
 8009460:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009462:	4798      	blx	r3
 8009464:	6823      	ldr	r3, [r4, #0]
 8009466:	4620      	mov	r0, r4
 8009468:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800946a:	4798      	blx	r3
 800946c:	b00f      	add	sp, #60	; 0x3c
 800946e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009472:	883b      	ldrh	r3, [r7, #0]
 8009474:	f8ab 0000 	strh.w	r0, [fp]
 8009478:	f8aa 3000 	strh.w	r3, [sl]
 800947c:	e773      	b.n	8009366 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 800947e:	462a      	mov	r2, r5
 8009480:	ab0a      	add	r3, sp, #40	; 0x28
 8009482:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8009486:	6851      	ldr	r1, [r2, #4]
 8009488:	c303      	stmia	r3!, {r0, r1}
 800948a:	e794      	b.n	80093b6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xca>
 800948c:	4630      	mov	r0, r6
 800948e:	e7c0      	b.n	8009412 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x126>
 8009490:	2000a0e0 	.word	0x2000a0e0
 8009494:	2000a0e2 	.word	0x2000a0e2
 8009498:	2000a0e4 	.word	0x2000a0e4
 800949c:	2000a0e6 	.word	0x2000a0e6
 80094a0:	2000a0e8 	.word	0x2000a0e8

080094a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80094a4:	b510      	push	{r4, lr}
 80094a6:	4b07      	ldr	r3, [pc, #28]	; (80094c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80094a8:	781b      	ldrb	r3, [r3, #0]
 80094aa:	4604      	mov	r4, r0
 80094ac:	b13b      	cbz	r3, 80094be <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80094ae:	6803      	ldr	r3, [r0, #0]
 80094b0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80094b2:	4798      	blx	r3
 80094b4:	6be3      	ldr	r3, [r4, #60]	; 0x3c
 80094b6:	4283      	cmp	r3, r0
 80094b8:	d101      	bne.n	80094be <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80094ba:	6c20      	ldr	r0, [r4, #64]	; 0x40
 80094bc:	bd10      	pop	{r4, pc}
 80094be:	6be0      	ldr	r0, [r4, #60]	; 0x3c
 80094c0:	e7fc      	b.n	80094bc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80094c2:	bf00      	nop
 80094c4:	2000a0ea 	.word	0x2000a0ea

080094c8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80094c8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80094cc:	b088      	sub	sp, #32
 80094ce:	461c      	mov	r4, r3
 80094d0:	f44f 6380 	mov.w	r3, #1024	; 0x400
 80094d4:	2500      	movs	r5, #0
 80094d6:	f8bd 8040 	ldrh.w	r8, [sp, #64]	; 0x40
 80094da:	f8bd 7044 	ldrh.w	r7, [sp, #68]	; 0x44
 80094de:	f8bd 904c 	ldrh.w	r9, [sp, #76]	; 0x4c
 80094e2:	9503      	str	r5, [sp, #12]
 80094e4:	e9cd 3100 	strd	r3, r1, [sp]
 80094e8:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 80094ec:	f8ad 8014 	strh.w	r8, [sp, #20]
 80094f0:	4692      	mov	sl, r2
 80094f2:	4606      	mov	r6, r0
 80094f4:	f8ad 7016 	strh.w	r7, [sp, #22]
 80094f8:	f8ad 3018 	strh.w	r3, [sp, #24]
 80094fc:	f88d 501c 	strb.w	r5, [sp, #28]
 8009500:	f7ff ffd0 	bl	80094a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009504:	fb09 a404 	mla	r4, r9, r4, sl
 8009508:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800950c:	9404      	str	r4, [sp, #16]
 800950e:	f8ad 901a 	strh.w	r9, [sp, #26]
 8009512:	f88d 501e 	strb.w	r5, [sp, #30]
 8009516:	f88d 501d 	strb.w	r5, [sp, #29]
 800951a:	f1b8 0f00 	cmp.w	r8, #0
 800951e:	d000      	beq.n	8009522 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x5a>
 8009520:	b937      	cbnz	r7, 8009530 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x68>
 8009522:	4b0d      	ldr	r3, [pc, #52]	; (8009558 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x90>)
 8009524:	4a0d      	ldr	r2, [pc, #52]	; (800955c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 8009526:	f44f 7101 	mov.w	r1, #516	; 0x204
 800952a:	480d      	ldr	r0, [pc, #52]	; (8009560 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x98>)
 800952c:	f00f ff88 	bl	8019440 <__assert_func>
 8009530:	6833      	ldr	r3, [r6, #0]
 8009532:	9c00      	ldr	r4, [sp, #0]
 8009534:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009536:	4630      	mov	r0, r6
 8009538:	4798      	blx	r3
 800953a:	4220      	tst	r0, r4
 800953c:	d104      	bne.n	8009548 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x80>
 800953e:	4b09      	ldr	r3, [pc, #36]	; (8009564 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x9c>)
 8009540:	4a06      	ldr	r2, [pc, #24]	; (800955c <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x94>)
 8009542:	f240 2105 	movw	r1, #517	; 0x205
 8009546:	e7f0      	b.n	800952a <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt+0x62>
 8009548:	6870      	ldr	r0, [r6, #4]
 800954a:	6803      	ldr	r3, [r0, #0]
 800954c:	4669      	mov	r1, sp
 800954e:	685b      	ldr	r3, [r3, #4]
 8009550:	4798      	blx	r3
 8009552:	b008      	add	sp, #32
 8009554:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8009558:	0801b8d7 	.word	0x0801b8d7
 800955c:	0801bb37 	.word	0x0801bb37
 8009560:	0801ba89 	.word	0x0801ba89
 8009564:	0801b90f 	.word	0x0801b90f

08009568 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8009568:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800956c:	b089      	sub	sp, #36	; 0x24
 800956e:	2400      	movs	r4, #0
 8009570:	461d      	mov	r5, r3
 8009572:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8009576:	f8bd 9050 	ldrh.w	r9, [sp, #80]	; 0x50
 800957a:	f8bd 8048 	ldrh.w	r8, [sp, #72]	; 0x48
 800957e:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 8009582:	9403      	str	r4, [sp, #12]
 8009584:	468a      	mov	sl, r1
 8009586:	4693      	mov	fp, r2
 8009588:	4606      	mov	r6, r0
 800958a:	e9cd 3400 	strd	r3, r4, [sp]
 800958e:	f7ff ff89 	bl	80094a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009592:	fb09 b505 	mla	r5, r9, r5, fp
 8009596:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 800959a:	9504      	str	r5, [sp, #16]
 800959c:	f8ad 8014 	strh.w	r8, [sp, #20]
 80095a0:	f8ad 7016 	strh.w	r7, [sp, #22]
 80095a4:	f8ad 4018 	strh.w	r4, [sp, #24]
 80095a8:	f8ad 901a 	strh.w	r9, [sp, #26]
 80095ac:	f8cd a00c 	str.w	sl, [sp, #12]
 80095b0:	f8ad 401c 	strh.w	r4, [sp, #28]
 80095b4:	f88d 401e 	strb.w	r4, [sp, #30]
 80095b8:	f1b8 0f00 	cmp.w	r8, #0
 80095bc:	d000      	beq.n	80095c0 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x58>
 80095be:	b937      	cbnz	r7, 80095ce <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x66>
 80095c0:	4b0d      	ldr	r3, [pc, #52]	; (80095f8 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x90>)
 80095c2:	4a0e      	ldr	r2, [pc, #56]	; (80095fc <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 80095c4:	f240 2119 	movw	r1, #537	; 0x219
 80095c8:	480d      	ldr	r0, [pc, #52]	; (8009600 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x98>)
 80095ca:	f00f ff39 	bl	8019440 <__assert_func>
 80095ce:	6833      	ldr	r3, [r6, #0]
 80095d0:	9c00      	ldr	r4, [sp, #0]
 80095d2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80095d4:	4630      	mov	r0, r6
 80095d6:	4798      	blx	r3
 80095d8:	4220      	tst	r0, r4
 80095da:	d104      	bne.n	80095e6 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x7e>
 80095dc:	4b09      	ldr	r3, [pc, #36]	; (8009604 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x9c>)
 80095de:	4a07      	ldr	r2, [pc, #28]	; (80095fc <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x94>)
 80095e0:	f240 211a 	movw	r1, #538	; 0x21a
 80095e4:	e7f0      	b.n	80095c8 <_ZN8touchgfx3HAL12blitFillWordEtttttt+0x60>
 80095e6:	6870      	ldr	r0, [r6, #4]
 80095e8:	6803      	ldr	r3, [r0, #0]
 80095ea:	4669      	mov	r1, sp
 80095ec:	685b      	ldr	r3, [r3, #4]
 80095ee:	4798      	blx	r3
 80095f0:	b009      	add	sp, #36	; 0x24
 80095f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80095f6:	bf00      	nop
 80095f8:	0801b954 	.word	0x0801b954
 80095fc:	0801bbad 	.word	0x0801bbad
 8009600:	0801ba89 	.word	0x0801ba89
 8009604:	0801b98c 	.word	0x0801b98c

08009608 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8009608:	b510      	push	{r4, lr}
 800960a:	4b0b      	ldr	r3, [pc, #44]	; (8009638 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x30>)
 800960c:	781b      	ldrb	r3, [r3, #0]
 800960e:	4604      	mov	r4, r0
 8009610:	b95b      	cbnz	r3, 800962a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009612:	f890 3048 	ldrb.w	r3, [r0, #72]	; 0x48
 8009616:	2b02      	cmp	r3, #2
 8009618:	d007      	beq.n	800962a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 800961a:	6840      	ldr	r0, [r0, #4]
 800961c:	f000 fb6c 	bl	8009cf8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8009620:	b118      	cbz	r0, 800962a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8009622:	6862      	ldr	r2, [r4, #4]
 8009624:	7a53      	ldrb	r3, [r2, #9]
 8009626:	2b00      	cmp	r3, #0
 8009628:	d0fc      	beq.n	8009624 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 800962a:	f7f7 fb3d 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 800962e:	4620      	mov	r0, r4
 8009630:	f7ff ff38 	bl	80094a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009634:	bd10      	pop	{r4, pc}
 8009636:	bf00      	nop
 8009638:	2000a0ea 	.word	0x2000a0ea

0800963c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>:
 800963c:	b508      	push	{r3, lr}
 800963e:	290d      	cmp	r1, #13
 8009640:	d817      	bhi.n	8009672 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x36>
 8009642:	e8df f001 	tbb	[pc, r1]
 8009646:	090b      	.short	0x090b
 8009648:	0d0d0d07 	.word	0x0d0d0d07
 800964c:	1414140d 	.word	0x1414140d
 8009650:	0d0d1414 	.word	0x0d0d1414
 8009654:	2020      	movs	r0, #32
 8009656:	bd08      	pop	{r3, pc}
 8009658:	2018      	movs	r0, #24
 800965a:	e7fc      	b.n	8009656 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 800965c:	2010      	movs	r0, #16
 800965e:	e7fa      	b.n	8009656 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009660:	4b05      	ldr	r3, [pc, #20]	; (8009678 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x3c>)
 8009662:	4a06      	ldr	r2, [pc, #24]	; (800967c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x40>)
 8009664:	4806      	ldr	r0, [pc, #24]	; (8009680 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x44>)
 8009666:	f240 2177 	movw	r1, #631	; 0x277
 800966a:	f00f fee9 	bl	8019440 <__assert_func>
 800966e:	2008      	movs	r0, #8
 8009670:	e7f1      	b.n	8009656 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009672:	2000      	movs	r0, #0
 8009674:	e7ef      	b.n	8009656 <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE+0x1a>
 8009676:	bf00      	nop
 8009678:	0801bb05 	.word	0x0801bb05
 800967c:	0801bec6 	.word	0x0801bec6
 8009680:	0801ba89 	.word	0x0801ba89

08009684 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>:
 8009684:	b570      	push	{r4, r5, r6, lr}
 8009686:	460d      	mov	r5, r1
 8009688:	f89d 1014 	ldrb.w	r1, [sp, #20]
 800968c:	4616      	mov	r6, r2
 800968e:	461c      	mov	r4, r3
 8009690:	f7ff ffd4 	bl	800963c <_ZNK8touchgfx3HAL11getBitDepthENS_6Bitmap12BitmapFormatE>
 8009694:	f8bd 1010 	ldrh.w	r1, [sp, #16]
 8009698:	10c0      	asrs	r0, r0, #3
 800969a:	fb06 5101 	mla	r1, r6, r1, r5
 800969e:	fb00 4001 	mla	r0, r0, r1, r4
 80096a2:	bd70      	pop	{r4, r5, r6, pc}

080096a4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_>:
 80096a4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80096a8:	b08a      	sub	sp, #40	; 0x28
 80096aa:	f04f 0c00 	mov.w	ip, #0
 80096ae:	f89d 5064 	ldrb.w	r5, [sp, #100]	; 0x64
 80096b2:	f8bd 704c 	ldrh.w	r7, [sp, #76]	; 0x4c
 80096b6:	f8bd 6050 	ldrh.w	r6, [sp, #80]	; 0x50
 80096ba:	f8bd 9060 	ldrh.w	r9, [sp, #96]	; 0x60
 80096be:	f89d 8068 	ldrb.w	r8, [sp, #104]	; 0x68
 80096c2:	f8cd c014 	str.w	ip, [sp, #20]
 80096c6:	2d0b      	cmp	r5, #11
 80096c8:	4604      	mov	r4, r0
 80096ca:	469a      	mov	sl, r3
 80096cc:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 80096d0:	f89d 3058 	ldrb.w	r3, [sp, #88]	; 0x58
 80096d4:	d129      	bne.n	800972a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x86>
 80096d6:	2080      	movs	r0, #128	; 0x80
 80096d8:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80096dc:	9204      	str	r2, [sp, #16]
 80096de:	4620      	mov	r0, r4
 80096e0:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 80096e4:	f8ad 2020 	strh.w	r2, [sp, #32]
 80096e8:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 80096ec:	f8ad 701c 	strh.w	r7, [sp, #28]
 80096f0:	f8ad 601e 	strh.w	r6, [sp, #30]
 80096f4:	f7ff fed6 	bl	80094a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80096f8:	e9cd 9800 	strd	r9, r8, [sp]
 80096fc:	4603      	mov	r3, r0
 80096fe:	f8bd 2048 	ldrh.w	r2, [sp, #72]	; 0x48
 8009702:	4651      	mov	r1, sl
 8009704:	4620      	mov	r0, r4
 8009706:	f7ff ffbd 	bl	8009684 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 800970a:	f8ad 9022 	strh.w	r9, [sp, #34]	; 0x22
 800970e:	9006      	str	r0, [sp, #24]
 8009710:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 8009714:	f88d 8026 	strb.w	r8, [sp, #38]	; 0x26
 8009718:	b107      	cbz	r7, 800971c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x78>
 800971a:	b9d6      	cbnz	r6, 8009752 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xae>
 800971c:	4b17      	ldr	r3, [pc, #92]	; (800977c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xd8>)
 800971e:	4a18      	ldr	r2, [pc, #96]	; (8009780 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 8009720:	f240 11cf 	movw	r1, #463	; 0x1cf
 8009724:	4817      	ldr	r0, [pc, #92]	; (8009784 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe0>)
 8009726:	f00f fe8b 	bl	8019440 <__assert_func>
 800972a:	2d02      	cmp	r5, #2
 800972c:	d108      	bne.n	8009740 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x9c>
 800972e:	2bff      	cmp	r3, #255	; 0xff
 8009730:	d104      	bne.n	800973c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x98>
 8009732:	2800      	cmp	r0, #0
 8009734:	bf14      	ite	ne
 8009736:	2040      	movne	r0, #64	; 0x40
 8009738:	2020      	moveq	r0, #32
 800973a:	e7cd      	b.n	80096d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800973c:	2040      	movs	r0, #64	; 0x40
 800973e:	e7cb      	b.n	80096d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 8009740:	2bff      	cmp	r3, #255	; 0xff
 8009742:	d104      	bne.n	800974e <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xaa>
 8009744:	2800      	cmp	r0, #0
 8009746:	bf14      	ite	ne
 8009748:	2004      	movne	r0, #4
 800974a:	2001      	moveq	r0, #1
 800974c:	e7c4      	b.n	80096d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 800974e:	2004      	movs	r0, #4
 8009750:	e7c2      	b.n	80096d8 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x34>
 8009752:	6823      	ldr	r3, [r4, #0]
 8009754:	9d02      	ldr	r5, [sp, #8]
 8009756:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009758:	4620      	mov	r0, r4
 800975a:	4798      	blx	r3
 800975c:	4228      	tst	r0, r5
 800975e:	d104      	bne.n	800976a <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xc6>
 8009760:	4b09      	ldr	r3, [pc, #36]	; (8009788 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xe4>)
 8009762:	4a07      	ldr	r2, [pc, #28]	; (8009780 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0xdc>)
 8009764:	f44f 71e8 	mov.w	r1, #464	; 0x1d0
 8009768:	e7dc      	b.n	8009724 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_+0x80>
 800976a:	6860      	ldr	r0, [r4, #4]
 800976c:	6803      	ldr	r3, [r0, #0]
 800976e:	a902      	add	r1, sp, #8
 8009770:	685b      	ldr	r3, [r3, #4]
 8009772:	4798      	blx	r3
 8009774:	b00a      	add	sp, #40	; 0x28
 8009776:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 800977a:	bf00      	nop
 800977c:	0801b8d7 	.word	0x0801b8d7
 8009780:	0801bd60 	.word	0x0801bd60
 8009784:	0801ba89 	.word	0x0801ba89
 8009788:	0801b90f 	.word	0x0801b90f

0800978c <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE>:
 800978c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009790:	b08b      	sub	sp, #44	; 0x2c
 8009792:	469b      	mov	fp, r3
 8009794:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8009798:	f89d 5060 	ldrb.w	r5, [sp, #96]	; 0x60
 800979c:	f8bd 805c 	ldrh.w	r8, [sp, #92]	; 0x5c
 80097a0:	2fff      	cmp	r7, #255	; 0xff
 80097a2:	bf14      	ite	ne
 80097a4:	2308      	movne	r3, #8
 80097a6:	2302      	moveq	r3, #2
 80097a8:	2600      	movs	r6, #0
 80097aa:	4604      	mov	r4, r0
 80097ac:	4689      	mov	r9, r1
 80097ae:	4692      	mov	sl, r2
 80097b0:	e9cd 3602 	strd	r3, r6, [sp, #8]
 80097b4:	9605      	str	r6, [sp, #20]
 80097b6:	f7ff fe75 	bl	80094a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80097ba:	e9cd 8500 	strd	r8, r5, [sp]
 80097be:	4603      	mov	r3, r0
 80097c0:	465a      	mov	r2, fp
 80097c2:	4651      	mov	r1, sl
 80097c4:	4620      	mov	r0, r4
 80097c6:	f7ff ff5d 	bl	8009684 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 80097ca:	f8bd 3050 	ldrh.w	r3, [sp, #80]	; 0x50
 80097ce:	f8ad 301c 	strh.w	r3, [sp, #28]
 80097d2:	f8bd 3054 	ldrh.w	r3, [sp, #84]	; 0x54
 80097d6:	f8ad 301e 	strh.w	r3, [sp, #30]
 80097da:	6823      	ldr	r3, [r4, #0]
 80097dc:	9006      	str	r0, [sp, #24]
 80097de:	f88d 5025 	strb.w	r5, [sp, #37]	; 0x25
 80097e2:	f88d 5026 	strb.w	r5, [sp, #38]	; 0x26
 80097e6:	f8ad 6020 	strh.w	r6, [sp, #32]
 80097ea:	f8ad 8022 	strh.w	r8, [sp, #34]	; 0x22
 80097ee:	f8cd 9014 	str.w	r9, [sp, #20]
 80097f2:	f88d 7024 	strb.w	r7, [sp, #36]	; 0x24
 80097f6:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80097f8:	9d02      	ldr	r5, [sp, #8]
 80097fa:	4620      	mov	r0, r4
 80097fc:	4798      	blx	r3
 80097fe:	4228      	tst	r0, r5
 8009800:	d106      	bne.n	8009810 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x84>
 8009802:	4b07      	ldr	r3, [pc, #28]	; (8009820 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x94>)
 8009804:	4a07      	ldr	r2, [pc, #28]	; (8009824 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x98>)
 8009806:	4808      	ldr	r0, [pc, #32]	; (8009828 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatE+0x9c>)
 8009808:	f240 212e 	movw	r1, #558	; 0x22e
 800980c:	f00f fe18 	bl	8019440 <__assert_func>
 8009810:	6860      	ldr	r0, [r4, #4]
 8009812:	6803      	ldr	r3, [r0, #0]
 8009814:	a902      	add	r1, sp, #8
 8009816:	685b      	ldr	r3, [r3, #4]
 8009818:	4798      	blx	r3
 800981a:	b00b      	add	sp, #44	; 0x2c
 800981c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009820:	0801b90f 	.word	0x0801b90f
 8009824:	0801be31 	.word	0x0801be31
 8009828:	0801ba89 	.word	0x0801ba89

0800982c <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 800982c:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8009830:	461f      	mov	r7, r3
 8009832:	4b0b      	ldr	r3, [pc, #44]	; (8009860 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8009834:	460d      	mov	r5, r1
 8009836:	f8b3 8000 	ldrh.w	r8, [r3]
 800983a:	4616      	mov	r6, r2
 800983c:	4604      	mov	r4, r0
 800983e:	f7ff fc7d 	bl	800913c <_ZN8touchgfx3HAL3lcdEv>
 8009842:	6803      	ldr	r3, [r0, #0]
 8009844:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009846:	4798      	blx	r3
 8009848:	463b      	mov	r3, r7
 800984a:	e9cd 8000 	strd	r8, r0, [sp]
 800984e:	4632      	mov	r2, r6
 8009850:	4629      	mov	r1, r5
 8009852:	4620      	mov	r0, r4
 8009854:	f7ff ff16 	bl	8009684 <_ZNK8touchgfx3HAL13getDstAddressEttPttNS_6Bitmap12BitmapFormatE>
 8009858:	b002      	add	sp, #8
 800985a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800985e:	bf00      	nop
 8009860:	2000a0e6 	.word	0x2000a0e6

08009864 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE>:
 8009864:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8009868:	b088      	sub	sp, #32
 800986a:	4698      	mov	r8, r3
 800986c:	2300      	movs	r3, #0
 800986e:	9303      	str	r3, [sp, #12]
 8009870:	f8bd 304c 	ldrh.w	r3, [sp, #76]	; 0x4c
 8009874:	f8bd 6038 	ldrh.w	r6, [sp, #56]	; 0x38
 8009878:	f8bd 503c 	ldrh.w	r5, [sp, #60]	; 0x3c
 800987c:	f8ad 6014 	strh.w	r6, [sp, #20]
 8009880:	e9cd 3100 	strd	r3, r1, [sp]
 8009884:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8009888:	f8ad 3018 	strh.w	r3, [sp, #24]
 800988c:	f89d 3048 	ldrb.w	r3, [sp, #72]	; 0x48
 8009890:	f88d 301c 	strb.w	r3, [sp, #28]
 8009894:	4617      	mov	r7, r2
 8009896:	4604      	mov	r4, r0
 8009898:	f8ad 5016 	strh.w	r5, [sp, #22]
 800989c:	f7ff fe02 	bl	80094a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80098a0:	4642      	mov	r2, r8
 80098a2:	4603      	mov	r3, r0
 80098a4:	4639      	mov	r1, r7
 80098a6:	4620      	mov	r0, r4
 80098a8:	f7ff ffc0 	bl	800982c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80098ac:	4b16      	ldr	r3, [pc, #88]	; (8009908 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa4>)
 80098ae:	9004      	str	r0, [sp, #16]
 80098b0:	881b      	ldrh	r3, [r3, #0]
 80098b2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80098b6:	f7ff fc41 	bl	800913c <_ZN8touchgfx3HAL3lcdEv>
 80098ba:	6803      	ldr	r3, [r0, #0]
 80098bc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80098be:	4798      	blx	r3
 80098c0:	f88d 001e 	strb.w	r0, [sp, #30]
 80098c4:	f88d 001d 	strb.w	r0, [sp, #29]
 80098c8:	b106      	cbz	r6, 80098cc <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x68>
 80098ca:	b935      	cbnz	r5, 80098da <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x76>
 80098cc:	4b0f      	ldr	r3, [pc, #60]	; (800990c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xa8>)
 80098ce:	4a10      	ldr	r2, [pc, #64]	; (8009910 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 80098d0:	f44f 71f6 	mov.w	r1, #492	; 0x1ec
 80098d4:	480f      	ldr	r0, [pc, #60]	; (8009914 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb0>)
 80098d6:	f00f fdb3 	bl	8019440 <__assert_func>
 80098da:	6823      	ldr	r3, [r4, #0]
 80098dc:	9d00      	ldr	r5, [sp, #0]
 80098de:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80098e0:	4620      	mov	r0, r4
 80098e2:	4798      	blx	r3
 80098e4:	4228      	tst	r0, r5
 80098e6:	d104      	bne.n	80098f2 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x8e>
 80098e8:	4b0b      	ldr	r3, [pc, #44]	; (8009918 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xb4>)
 80098ea:	4a09      	ldr	r2, [pc, #36]	; (8009910 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0xac>)
 80098ec:	f240 11ed 	movw	r1, #493	; 0x1ed
 80098f0:	e7f0      	b.n	80098d4 <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE+0x70>
 80098f2:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80098f4:	6860      	ldr	r0, [r4, #4]
 80098f6:	9303      	str	r3, [sp, #12]
 80098f8:	6803      	ldr	r3, [r0, #0]
 80098fa:	4669      	mov	r1, sp
 80098fc:	685b      	ldr	r3, [r3, #4]
 80098fe:	4798      	blx	r3
 8009900:	b008      	add	sp, #32
 8009902:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8009906:	bf00      	nop
 8009908:	2000a0e6 	.word	0x2000a0e6
 800990c:	0801b8d7 	.word	0x0801b8d7
 8009910:	0801bc12 	.word	0x0801bc12
 8009914:	0801ba89 	.word	0x0801ba89
 8009918:	0801b90f 	.word	0x0801b90f

0800991c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 800991c:	b570      	push	{r4, r5, r6, lr}
 800991e:	b08a      	sub	sp, #40	; 0x28
 8009920:	466b      	mov	r3, sp
 8009922:	e883 0006 	stmia.w	r3, {r1, r2}
 8009926:	4b20      	ldr	r3, [pc, #128]	; (80099a8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x8c>)
 8009928:	781b      	ldrb	r3, [r3, #0]
 800992a:	4604      	mov	r4, r0
 800992c:	b933      	cbnz	r3, 800993c <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x20>
 800992e:	4b1f      	ldr	r3, [pc, #124]	; (80099ac <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x90>)
 8009930:	4a1f      	ldr	r2, [pc, #124]	; (80099b0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x94>)
 8009932:	4820      	ldr	r0, [pc, #128]	; (80099b4 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x98>)
 8009934:	f240 213f 	movw	r1, #575	; 0x23f
 8009938:	f00f fd82 	bl	8019440 <__assert_func>
 800993c:	2300      	movs	r3, #0
 800993e:	9305      	str	r3, [sp, #20]
 8009940:	2301      	movs	r3, #1
 8009942:	9302      	str	r3, [sp, #8]
 8009944:	6803      	ldr	r3, [r0, #0]
 8009946:	f8bd 5000 	ldrh.w	r5, [sp]
 800994a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800994c:	f8bd 6002 	ldrh.w	r6, [sp, #2]
 8009950:	4798      	blx	r3
 8009952:	4632      	mov	r2, r6
 8009954:	4629      	mov	r1, r5
 8009956:	4603      	mov	r3, r0
 8009958:	4620      	mov	r0, r4
 800995a:	f7ff ff67 	bl	800982c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 800995e:	6c63      	ldr	r3, [r4, #68]	; 0x44
 8009960:	9306      	str	r3, [sp, #24]
 8009962:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8009966:	f8ad 301c 	strh.w	r3, [sp, #28]
 800996a:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 800996e:	f8ad 301e 	strh.w	r3, [sp, #30]
 8009972:	4b11      	ldr	r3, [pc, #68]	; (80099b8 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x9c>)
 8009974:	9003      	str	r0, [sp, #12]
 8009976:	881b      	ldrh	r3, [r3, #0]
 8009978:	f8ad 3020 	strh.w	r3, [sp, #32]
 800997c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8009980:	f7ff fbdc 	bl	800913c <_ZN8touchgfx3HAL3lcdEv>
 8009984:	6803      	ldr	r3, [r0, #0]
 8009986:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009988:	4798      	blx	r3
 800998a:	23ff      	movs	r3, #255	; 0xff
 800998c:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8009990:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8009994:	6860      	ldr	r0, [r4, #4]
 8009996:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 800999a:	6803      	ldr	r3, [r0, #0]
 800999c:	a902      	add	r1, sp, #8
 800999e:	685b      	ldr	r3, [r3, #4]
 80099a0:	4798      	blx	r3
 80099a2:	6c60      	ldr	r0, [r4, #68]	; 0x44
 80099a4:	b00a      	add	sp, #40	; 0x28
 80099a6:	bd70      	pop	{r4, r5, r6, pc}
 80099a8:	2000a0eb 	.word	0x2000a0eb
 80099ac:	0801b9d6 	.word	0x0801b9d6
 80099b0:	0801bcb6 	.word	0x0801bcb6
 80099b4:	0801ba89 	.word	0x0801ba89
 80099b8:	2000a0e6 	.word	0x2000a0e6

080099bc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 80099bc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80099be:	b08b      	sub	sp, #44	; 0x2c
 80099c0:	466d      	mov	r5, sp
 80099c2:	e885 0006 	stmia.w	r5, {r1, r2}
 80099c6:	461d      	mov	r5, r3
 80099c8:	2300      	movs	r3, #0
 80099ca:	9305      	str	r3, [sp, #20]
 80099cc:	2301      	movs	r3, #1
 80099ce:	9302      	str	r3, [sp, #8]
 80099d0:	6803      	ldr	r3, [r0, #0]
 80099d2:	f8bd 6000 	ldrh.w	r6, [sp]
 80099d6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80099d8:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80099dc:	4604      	mov	r4, r0
 80099de:	4798      	blx	r3
 80099e0:	463a      	mov	r2, r7
 80099e2:	4631      	mov	r1, r6
 80099e4:	4603      	mov	r3, r0
 80099e6:	4620      	mov	r0, r4
 80099e8:	f7ff ff20 	bl	800982c <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80099ec:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80099f0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80099f4:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80099f8:	f8ad 301e 	strh.w	r3, [sp, #30]
 80099fc:	4b0e      	ldr	r3, [pc, #56]	; (8009a38 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x7c>)
 80099fe:	9003      	str	r0, [sp, #12]
 8009a00:	881b      	ldrh	r3, [r3, #0]
 8009a02:	f8ad 3020 	strh.w	r3, [sp, #32]
 8009a06:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8009a08:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 8009a0c:	9506      	str	r5, [sp, #24]
 8009a0e:	f7ff fb95 	bl	800913c <_ZN8touchgfx3HAL3lcdEv>
 8009a12:	6803      	ldr	r3, [r0, #0]
 8009a14:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009a16:	4798      	blx	r3
 8009a18:	23ff      	movs	r3, #255	; 0xff
 8009a1a:	f88d 0025 	strb.w	r0, [sp, #37]	; 0x25
 8009a1e:	f88d 0026 	strb.w	r0, [sp, #38]	; 0x26
 8009a22:	6860      	ldr	r0, [r4, #4]
 8009a24:	f88d 3024 	strb.w	r3, [sp, #36]	; 0x24
 8009a28:	6803      	ldr	r3, [r0, #0]
 8009a2a:	a902      	add	r1, sp, #8
 8009a2c:	685b      	ldr	r3, [r3, #4]
 8009a2e:	4798      	blx	r3
 8009a30:	4628      	mov	r0, r5
 8009a32:	b00b      	add	sp, #44	; 0x2c
 8009a34:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009a36:	bf00      	nop
 8009a38:	2000a0e6 	.word	0x2000a0e6

08009a3c <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8009a3c:	b570      	push	{r4, r5, r6, lr}
 8009a3e:	f890 306a 	ldrb.w	r3, [r0, #106]	; 0x6a
 8009a42:	4604      	mov	r4, r0
 8009a44:	b19b      	cbz	r3, 8009a6e <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 8009a46:	2002      	movs	r0, #2
 8009a48:	f7f6 febc 	bl	80007c4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8009a4c:	2300      	movs	r3, #0
 8009a4e:	f884 306a 	strb.w	r3, [r4, #106]	; 0x6a
 8009a52:	f884 3069 	strb.w	r3, [r4, #105]	; 0x69
 8009a56:	6823      	ldr	r3, [r4, #0]
 8009a58:	4620      	mov	r0, r4
 8009a5a:	f8d3 50ac 	ldr.w	r5, [r3, #172]	; 0xac
 8009a5e:	f7ff fd21 	bl	80094a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8009a62:	462b      	mov	r3, r5
 8009a64:	4601      	mov	r1, r0
 8009a66:	4620      	mov	r0, r4
 8009a68:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009a6c:	4718      	bx	r3
 8009a6e:	bd70      	pop	{r4, r5, r6, pc}

08009a70 <_ZN8touchgfx3HAL12setMCUActiveEb>:
 8009a70:	b570      	push	{r4, r5, r6, lr}
 8009a72:	4605      	mov	r5, r0
 8009a74:	460c      	mov	r4, r1
 8009a76:	2003      	movs	r0, #3
 8009a78:	b149      	cbz	r1, 8009a8e <_ZN8touchgfx3HAL12setMCUActiveEb+0x1e>
 8009a7a:	f7f6 fe6b 	bl	8000754 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8009a7e:	6928      	ldr	r0, [r5, #16]
 8009a80:	b168      	cbz	r0, 8009a9e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8009a82:	6803      	ldr	r3, [r0, #0]
 8009a84:	695b      	ldr	r3, [r3, #20]
 8009a86:	2101      	movs	r1, #1
 8009a88:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009a8c:	4718      	bx	r3
 8009a8e:	f7f6 fe7d 	bl	800078c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8009a92:	6928      	ldr	r0, [r5, #16]
 8009a94:	b118      	cbz	r0, 8009a9e <_ZN8touchgfx3HAL12setMCUActiveEb+0x2e>
 8009a96:	6803      	ldr	r3, [r0, #0]
 8009a98:	4621      	mov	r1, r4
 8009a9a:	695b      	ldr	r3, [r3, #20]
 8009a9c:	e7f4      	b.n	8009a88 <_ZN8touchgfx3HAL12setMCUActiveEb+0x18>
 8009a9e:	bd70      	pop	{r4, r5, r6, pc}

08009aa0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8009aa0:	4770      	bx	lr

08009aa2 <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 8009aa2:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 8009aa6:	1a13      	subs	r3, r2, r0
 8009aa8:	4258      	negs	r0, r3
 8009aaa:	4158      	adcs	r0, r3
 8009aac:	4770      	bx	lr

08009aae <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 8009aae:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 8009ab2:	1a9b      	subs	r3, r3, r2
 8009ab4:	2b00      	cmp	r3, #0
 8009ab6:	bfdc      	itt	le
 8009ab8:	6882      	ldrle	r2, [r0, #8]
 8009aba:	189b      	addle	r3, r3, r2
 8009abc:	2b01      	cmp	r3, #1
 8009abe:	bfcc      	ite	gt
 8009ac0:	2000      	movgt	r0, #0
 8009ac2:	2001      	movle	r0, #1
 8009ac4:	4770      	bx	lr

08009ac6 <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 8009ac6:	6902      	ldr	r2, [r0, #16]
 8009ac8:	6840      	ldr	r0, [r0, #4]
 8009aca:	eb00 1042 	add.w	r0, r0, r2, lsl #5
 8009ace:	4770      	bx	lr

08009ad0 <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 8009ad0:	6803      	ldr	r3, [r0, #0]
 8009ad2:	691b      	ldr	r3, [r3, #16]
 8009ad4:	4718      	bx	r3

08009ad6 <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8009ad6:	4770      	bx	lr

08009ad8 <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8009ad8:	4770      	bx	lr

08009ada <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 8009ada:	4770      	bx	lr

08009adc <_ZN8touchgfx13DMA_Interface7executeEv>:
 8009adc:	b570      	push	{r4, r5, r6, lr}
 8009ade:	2301      	movs	r3, #1
 8009ae0:	7203      	strb	r3, [r0, #8]
 8009ae2:	4604      	mov	r4, r0
 8009ae4:	6840      	ldr	r0, [r0, #4]
 8009ae6:	6803      	ldr	r3, [r0, #0]
 8009ae8:	699b      	ldr	r3, [r3, #24]
 8009aea:	4798      	blx	r3
 8009aec:	6803      	ldr	r3, [r0, #0]
 8009aee:	2b40      	cmp	r3, #64	; 0x40
 8009af0:	4605      	mov	r5, r0
 8009af2:	d039      	beq.n	8009b68 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009af4:	d815      	bhi.n	8009b22 <_ZN8touchgfx13DMA_Interface7executeEv+0x46>
 8009af6:	2b04      	cmp	r3, #4
 8009af8:	d022      	beq.n	8009b40 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8009afa:	d808      	bhi.n	8009b0e <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8009afc:	2b01      	cmp	r3, #1
 8009afe:	d033      	beq.n	8009b68 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009b00:	2b02      	cmp	r3, #2
 8009b02:	d108      	bne.n	8009b16 <_ZN8touchgfx13DMA_Interface7executeEv+0x3a>
 8009b04:	6823      	ldr	r3, [r4, #0]
 8009b06:	4620      	mov	r0, r4
 8009b08:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009b0a:	4798      	blx	r3
 8009b0c:	e025      	b.n	8009b5a <_ZN8touchgfx13DMA_Interface7executeEv+0x7e>
 8009b0e:	2b08      	cmp	r3, #8
 8009b10:	d01e      	beq.n	8009b50 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>
 8009b12:	2b20      	cmp	r3, #32
 8009b14:	d028      	beq.n	8009b68 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009b16:	4b17      	ldr	r3, [pc, #92]	; (8009b74 <_ZN8touchgfx13DMA_Interface7executeEv+0x98>)
 8009b18:	4a17      	ldr	r2, [pc, #92]	; (8009b78 <_ZN8touchgfx13DMA_Interface7executeEv+0x9c>)
 8009b1a:	4818      	ldr	r0, [pc, #96]	; (8009b7c <_ZN8touchgfx13DMA_Interface7executeEv+0xa0>)
 8009b1c:	218b      	movs	r1, #139	; 0x8b
 8009b1e:	f00f fc8f 	bl	8019440 <__assert_func>
 8009b22:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009b26:	d01f      	beq.n	8009b68 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009b28:	d804      	bhi.n	8009b34 <_ZN8touchgfx13DMA_Interface7executeEv+0x58>
 8009b2a:	2b80      	cmp	r3, #128	; 0x80
 8009b2c:	d01c      	beq.n	8009b68 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009b2e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009b32:	e7ef      	b.n	8009b14 <_ZN8touchgfx13DMA_Interface7executeEv+0x38>
 8009b34:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009b38:	d016      	beq.n	8009b68 <_ZN8touchgfx13DMA_Interface7executeEv+0x8c>
 8009b3a:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 8009b3e:	e7e0      	b.n	8009b02 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8009b40:	6823      	ldr	r3, [r4, #0]
 8009b42:	7f01      	ldrb	r1, [r0, #28]
 8009b44:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b46:	4620      	mov	r0, r4
 8009b48:	4798      	blx	r3
 8009b4a:	6823      	ldr	r3, [r4, #0]
 8009b4c:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009b4e:	e006      	b.n	8009b5e <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 8009b50:	6823      	ldr	r3, [r4, #0]
 8009b52:	7f01      	ldrb	r1, [r0, #28]
 8009b54:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009b56:	4620      	mov	r0, r4
 8009b58:	4798      	blx	r3
 8009b5a:	6823      	ldr	r3, [r4, #0]
 8009b5c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009b5e:	4629      	mov	r1, r5
 8009b60:	4620      	mov	r0, r4
 8009b62:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009b66:	4718      	bx	r3
 8009b68:	6823      	ldr	r3, [r4, #0]
 8009b6a:	4620      	mov	r0, r4
 8009b6c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009b6e:	4798      	blx	r3
 8009b70:	e7eb      	b.n	8009b4a <_ZN8touchgfx13DMA_Interface7executeEv+0x6e>
 8009b72:	bf00      	nop
 8009b74:	0801bf0f 	.word	0x0801bf0f
 8009b78:	0801bfd0 	.word	0x0801bfd0
 8009b7c:	0801bf34 	.word	0x0801bf34

08009b80 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8009b80:	b570      	push	{r4, r5, r6, lr}
 8009b82:	4604      	mov	r4, r0
 8009b84:	460e      	mov	r6, r1
 8009b86:	6860      	ldr	r0, [r4, #4]
 8009b88:	6803      	ldr	r3, [r0, #0]
 8009b8a:	685b      	ldr	r3, [r3, #4]
 8009b8c:	4798      	blx	r3
 8009b8e:	2800      	cmp	r0, #0
 8009b90:	d1f9      	bne.n	8009b86 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8009b92:	4d0d      	ldr	r5, [pc, #52]	; (8009bc8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8009b94:	6828      	ldr	r0, [r5, #0]
 8009b96:	6803      	ldr	r3, [r0, #0]
 8009b98:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8009b9a:	4798      	blx	r3
 8009b9c:	f7f7 f892 	bl	8000cc4 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8009ba0:	6828      	ldr	r0, [r5, #0]
 8009ba2:	2101      	movs	r1, #1
 8009ba4:	f7ff ff7c 	bl	8009aa0 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8009ba8:	6860      	ldr	r0, [r4, #4]
 8009baa:	6803      	ldr	r3, [r0, #0]
 8009bac:	4631      	mov	r1, r6
 8009bae:	689b      	ldr	r3, [r3, #8]
 8009bb0:	4798      	blx	r3
 8009bb2:	6823      	ldr	r3, [r4, #0]
 8009bb4:	4620      	mov	r0, r4
 8009bb6:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8009bb8:	4798      	blx	r3
 8009bba:	6828      	ldr	r0, [r5, #0]
 8009bbc:	6803      	ldr	r3, [r0, #0]
 8009bbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009bc2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009bc4:	4718      	bx	r3
 8009bc6:	bf00      	nop
 8009bc8:	2000a0ec 	.word	0x2000a0ec

08009bcc <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8009bcc:	b508      	push	{r3, lr}
 8009bce:	f7f7 f86b 	bl	8000ca8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8009bd2:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8009bd6:	f7f7 b86f 	b.w	8000cb8 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08009bda <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 8009bda:	b510      	push	{r4, lr}
 8009bdc:	2114      	movs	r1, #20
 8009bde:	4604      	mov	r4, r0
 8009be0:	f00f fbff 	bl	80193e2 <_ZdlPvj>
 8009be4:	4620      	mov	r0, r4
 8009be6:	bd10      	pop	{r4, pc}

08009be8 <_ZN8touchgfx13DMA_Interface5startEv>:
 8009be8:	b510      	push	{r4, lr}
 8009bea:	4604      	mov	r4, r0
 8009bec:	6840      	ldr	r0, [r0, #4]
 8009bee:	6803      	ldr	r3, [r0, #0]
 8009bf0:	681b      	ldr	r3, [r3, #0]
 8009bf2:	4798      	blx	r3
 8009bf4:	b948      	cbnz	r0, 8009c0a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8009bf6:	7a63      	ldrb	r3, [r4, #9]
 8009bf8:	b13b      	cbz	r3, 8009c0a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8009bfa:	7a23      	ldrb	r3, [r4, #8]
 8009bfc:	b92b      	cbnz	r3, 8009c0a <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8009bfe:	6823      	ldr	r3, [r4, #0]
 8009c00:	4620      	mov	r0, r4
 8009c02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009c04:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8009c08:	4718      	bx	r3
 8009c0a:	bd10      	pop	{r4, pc}

08009c0c <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8009c0c:	b510      	push	{r4, lr}
 8009c0e:	e9d0 4203 	ldrd	r4, r2, [r0, #12]
 8009c12:	1b12      	subs	r2, r2, r4
 8009c14:	2a00      	cmp	r2, #0
 8009c16:	bfdc      	itt	le
 8009c18:	6883      	ldrle	r3, [r0, #8]
 8009c1a:	18d2      	addle	r2, r2, r3
 8009c1c:	2a01      	cmp	r2, #1
 8009c1e:	dd18      	ble.n	8009c52 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x46>
 8009c20:	6843      	ldr	r3, [r0, #4]
 8009c22:	f101 021c 	add.w	r2, r1, #28
 8009c26:	eb03 1344 	add.w	r3, r3, r4, lsl #5
 8009c2a:	f851 4b04 	ldr.w	r4, [r1], #4
 8009c2e:	f843 4b04 	str.w	r4, [r3], #4
 8009c32:	4291      	cmp	r1, r2
 8009c34:	d1f9      	bne.n	8009c2a <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x1e>
 8009c36:	880a      	ldrh	r2, [r1, #0]
 8009c38:	801a      	strh	r2, [r3, #0]
 8009c3a:	788a      	ldrb	r2, [r1, #2]
 8009c3c:	709a      	strb	r2, [r3, #2]
 8009c3e:	68c3      	ldr	r3, [r0, #12]
 8009c40:	6882      	ldr	r2, [r0, #8]
 8009c42:	f3bf 8f5b 	dmb	ish
 8009c46:	3301      	adds	r3, #1
 8009c48:	429a      	cmp	r2, r3
 8009c4a:	bfd8      	it	le
 8009c4c:	1a9b      	suble	r3, r3, r2
 8009c4e:	60c3      	str	r3, [r0, #12]
 8009c50:	bd10      	pop	{r4, pc}
 8009c52:	4b03      	ldr	r3, [pc, #12]	; (8009c60 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x54>)
 8009c54:	4a03      	ldr	r2, [pc, #12]	; (8009c64 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x58>)
 8009c56:	4804      	ldr	r0, [pc, #16]	; (8009c68 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x5c>)
 8009c58:	2139      	movs	r1, #57	; 0x39
 8009c5a:	f00f fbf1 	bl	8019440 <__assert_func>
 8009c5e:	bf00      	nop
 8009c60:	0801bf5a 	.word	0x0801bf5a
 8009c64:	0801c000 	.word	0x0801c000
 8009c68:	0801bf34 	.word	0x0801bf34

08009c6c <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8009c6c:	b510      	push	{r4, lr}
 8009c6e:	6803      	ldr	r3, [r0, #0]
 8009c70:	681b      	ldr	r3, [r3, #0]
 8009c72:	4604      	mov	r4, r0
 8009c74:	4798      	blx	r3
 8009c76:	b128      	cbz	r0, 8009c84 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x18>
 8009c78:	4b07      	ldr	r3, [pc, #28]	; (8009c98 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x2c>)
 8009c7a:	4a08      	ldr	r2, [pc, #32]	; (8009c9c <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x30>)
 8009c7c:	4808      	ldr	r0, [pc, #32]	; (8009ca0 <_ZN8touchgfx17LockFreeDMA_Queue3popEv+0x34>)
 8009c7e:	213f      	movs	r1, #63	; 0x3f
 8009c80:	f00f fbde 	bl	8019440 <__assert_func>
 8009c84:	6923      	ldr	r3, [r4, #16]
 8009c86:	68a2      	ldr	r2, [r4, #8]
 8009c88:	f3bf 8f5b 	dmb	ish
 8009c8c:	3301      	adds	r3, #1
 8009c8e:	429a      	cmp	r2, r3
 8009c90:	bfd8      	it	le
 8009c92:	1a9b      	suble	r3, r3, r2
 8009c94:	6123      	str	r3, [r4, #16]
 8009c96:	bd10      	pop	{r4, pc}
 8009c98:	0801bf7d 	.word	0x0801bf7d
 8009c9c:	0801c04e 	.word	0x0801c04e
 8009ca0:	0801bf34 	.word	0x0801bf34

08009ca4 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8009ca4:	b570      	push	{r4, r5, r6, lr}
 8009ca6:	4604      	mov	r4, r0
 8009ca8:	6840      	ldr	r0, [r0, #4]
 8009caa:	6803      	ldr	r3, [r0, #0]
 8009cac:	681b      	ldr	r3, [r3, #0]
 8009cae:	4798      	blx	r3
 8009cb0:	4605      	mov	r5, r0
 8009cb2:	b930      	cbnz	r0, 8009cc2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8009cb4:	7a23      	ldrb	r3, [r4, #8]
 8009cb6:	b123      	cbz	r3, 8009cc2 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8009cb8:	6860      	ldr	r0, [r4, #4]
 8009cba:	6803      	ldr	r3, [r0, #0]
 8009cbc:	695b      	ldr	r3, [r3, #20]
 8009cbe:	4798      	blx	r3
 8009cc0:	7225      	strb	r5, [r4, #8]
 8009cc2:	6860      	ldr	r0, [r4, #4]
 8009cc4:	6803      	ldr	r3, [r0, #0]
 8009cc6:	681b      	ldr	r3, [r3, #0]
 8009cc8:	4798      	blx	r3
 8009cca:	b928      	cbnz	r0, 8009cd8 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8009ccc:	6823      	ldr	r3, [r4, #0]
 8009cce:	4620      	mov	r0, r4
 8009cd0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009cd2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009cd6:	4718      	bx	r3
 8009cd8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8009cdc:	f7f6 bffa 	b.w	8000cd4 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>

08009ce0 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8009ce0:	b510      	push	{r4, lr}
 8009ce2:	4c04      	ldr	r4, [pc, #16]	; (8009cf4 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8009ce4:	6082      	str	r2, [r0, #8]
 8009ce6:	2200      	movs	r2, #0
 8009ce8:	e9c0 4100 	strd	r4, r1, [r0]
 8009cec:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8009cf0:	bd10      	pop	{r4, pc}
 8009cf2:	bf00      	nop
 8009cf4:	0801bfb4 	.word	0x0801bfb4

08009cf8 <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8009cf8:	6840      	ldr	r0, [r0, #4]
 8009cfa:	6803      	ldr	r3, [r0, #0]
 8009cfc:	681b      	ldr	r3, [r3, #0]
 8009cfe:	4718      	bx	r3

08009d00 <_ZNK8touchgfx3Box12getSolidRectEv>:
 8009d00:	2300      	movs	r3, #0
 8009d02:	8083      	strh	r3, [r0, #4]
 8009d04:	80c3      	strh	r3, [r0, #6]
 8009d06:	8003      	strh	r3, [r0, #0]
 8009d08:	8043      	strh	r3, [r0, #2]
 8009d0a:	f891 3026 	ldrb.w	r3, [r1, #38]	; 0x26
 8009d0e:	2bff      	cmp	r3, #255	; 0xff
 8009d10:	bf01      	itttt	eq
 8009d12:	890b      	ldrheq	r3, [r1, #8]
 8009d14:	8083      	strheq	r3, [r0, #4]
 8009d16:	894b      	ldrheq	r3, [r1, #10]
 8009d18:	80c3      	strheq	r3, [r0, #6]
 8009d1a:	4770      	bx	lr

08009d1c <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8009d1c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 8009d1e:	4604      	mov	r4, r0
 8009d20:	6808      	ldr	r0, [r1, #0]
 8009d22:	6849      	ldr	r1, [r1, #4]
 8009d24:	466b      	mov	r3, sp
 8009d26:	c303      	stmia	r3!, {r0, r1}
 8009d28:	6823      	ldr	r3, [r4, #0]
 8009d2a:	4669      	mov	r1, sp
 8009d2c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8009d2e:	4620      	mov	r0, r4
 8009d30:	4798      	blx	r3
 8009d32:	4b08      	ldr	r3, [pc, #32]	; (8009d54 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8009d34:	681b      	ldr	r3, [r3, #0]
 8009d36:	f893 2076 	ldrb.w	r2, [r3, #118]	; 0x76
 8009d3a:	b10a      	cbz	r2, 8009d40 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8009d3c:	6cd8      	ldr	r0, [r3, #76]	; 0x4c
 8009d3e:	b900      	cbnz	r0, 8009d42 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 8009d40:	6898      	ldr	r0, [r3, #8]
 8009d42:	6803      	ldr	r3, [r0, #0]
 8009d44:	6aa2      	ldr	r2, [r4, #40]	; 0x28
 8009d46:	699d      	ldr	r5, [r3, #24]
 8009d48:	f894 3026 	ldrb.w	r3, [r4, #38]	; 0x26
 8009d4c:	4669      	mov	r1, sp
 8009d4e:	47a8      	blx	r5
 8009d50:	b003      	add	sp, #12
 8009d52:	bd30      	pop	{r4, r5, pc}
 8009d54:	2000a0ec 	.word	0x2000a0ec

08009d58 <_ZN8touchgfx3BoxD1Ev>:
 8009d58:	4770      	bx	lr

08009d5a <_ZN8touchgfx3BoxD0Ev>:
 8009d5a:	b510      	push	{r4, lr}
 8009d5c:	212c      	movs	r1, #44	; 0x2c
 8009d5e:	4604      	mov	r4, r0
 8009d60:	f00f fb3f 	bl	80193e2 <_ZdlPvj>
 8009d64:	4620      	mov	r0, r4
 8009d66:	bd10      	pop	{r4, pc}

08009d68 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 8009d68:	4b01      	ldr	r3, [pc, #4]	; (8009d70 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 8009d6a:	6019      	str	r1, [r3, #0]
 8009d6c:	4770      	bx	lr
 8009d6e:	bf00      	nop
 8009d70:	2000a0f4 	.word	0x2000a0f4

08009d74 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8009d74:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009d78:	4696      	mov	lr, r2
 8009d7a:	4605      	mov	r5, r0
 8009d7c:	4614      	mov	r4, r2
 8009d7e:	460e      	mov	r6, r1
 8009d80:	461f      	mov	r7, r3
 8009d82:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8009d86:	b097      	sub	sp, #92	; 0x5c
 8009d88:	f10d 0c1c 	add.w	ip, sp, #28
 8009d8c:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8009d90:	f8de 3000 	ldr.w	r3, [lr]
 8009d94:	f8cc 3000 	str.w	r3, [ip]
 8009d98:	f104 0e14 	add.w	lr, r4, #20
 8009d9c:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8009da0:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8009da4:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8009da8:	f8de 3000 	ldr.w	r3, [lr]
 8009dac:	f8cc 3000 	str.w	r3, [ip]
 8009db0:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8009db4:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8009db8:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8009dbc:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8009dc0:	f89d 908c 	ldrb.w	r9, [sp, #140]	; 0x8c
 8009dc4:	f8bd a090 	ldrh.w	sl, [sp, #144]	; 0x90
 8009dc8:	f8bd 8088 	ldrh.w	r8, [sp, #136]	; 0x88
 8009dcc:	f8de 3000 	ldr.w	r3, [lr]
 8009dd0:	f8cc 3000 	str.w	r3, [ip]
 8009dd4:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8009dd6:	682b      	ldr	r3, [r5, #0]
 8009dd8:	9201      	str	r2, [sp, #4]
 8009dda:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8009dde:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8009de0:	9200      	str	r2, [sp, #0]
 8009de2:	f8cd 8008 	str.w	r8, [sp, #8]
 8009de6:	f8d3 b030 	ldr.w	fp, [r3, #48]	; 0x30
 8009dea:	aa07      	add	r2, sp, #28
 8009dec:	463b      	mov	r3, r7
 8009dee:	4631      	mov	r1, r6
 8009df0:	4628      	mov	r0, r5
 8009df2:	47d8      	blx	fp
 8009df4:	46a6      	mov	lr, r4
 8009df6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8009dfa:	f10d 0c1c 	add.w	ip, sp, #28
 8009dfe:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8009e02:	f8de 3000 	ldr.w	r3, [lr]
 8009e06:	f8cc 3000 	str.w	r3, [ip]
 8009e0a:	f104 0e28 	add.w	lr, r4, #40	; 0x28
 8009e0e:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8009e12:	f10d 0c30 	add.w	ip, sp, #48	; 0x30
 8009e16:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8009e1a:	343c      	adds	r4, #60	; 0x3c
 8009e1c:	f8de 3000 	ldr.w	r3, [lr]
 8009e20:	f8cc 3000 	str.w	r3, [ip]
 8009e24:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009e26:	f10d 0c44 	add.w	ip, sp, #68	; 0x44
 8009e2a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8009e2e:	6823      	ldr	r3, [r4, #0]
 8009e30:	f8cc 3000 	str.w	r3, [ip]
 8009e34:	682b      	ldr	r3, [r5, #0]
 8009e36:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8009e3a:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8009e3c:	9201      	str	r2, [sp, #4]
 8009e3e:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8009e40:	9200      	str	r2, [sp, #0]
 8009e42:	f8cd 8008 	str.w	r8, [sp, #8]
 8009e46:	6b1c      	ldr	r4, [r3, #48]	; 0x30
 8009e48:	aa07      	add	r2, sp, #28
 8009e4a:	463b      	mov	r3, r7
 8009e4c:	4631      	mov	r1, r6
 8009e4e:	4628      	mov	r0, r5
 8009e50:	47a0      	blx	r4
 8009e52:	b017      	add	sp, #92	; 0x5c
 8009e54:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08009e58 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8009e58:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009e5c:	b08d      	sub	sp, #52	; 0x34
 8009e5e:	4688      	mov	r8, r1
 8009e60:	9916      	ldr	r1, [sp, #88]	; 0x58
 8009e62:	f8d3 c000 	ldr.w	ip, [r3]
 8009e66:	680f      	ldr	r7, [r1, #0]
 8009e68:	f8bd 4070 	ldrh.w	r4, [sp, #112]	; 0x70
 8009e6c:	ed92 4a09 	vldr	s8, [r2, #36]	; 0x24
 8009e70:	edd2 4a0b 	vldr	s9, [r2, #44]	; 0x2c
 8009e74:	edd3 6a07 	vldr	s13, [r3, #28]
 8009e78:	9918      	ldr	r1, [sp, #96]	; 0x60
 8009e7a:	f8dd a064 	ldr.w	sl, [sp, #100]	; 0x64
 8009e7e:	f9b1 9000 	ldrsh.w	r9, [r1]
 8009e82:	f9ba 1000 	ldrsh.w	r1, [sl]
 8009e86:	edd3 1a0a 	vldr	s3, [r3, #40]	; 0x28
 8009e8a:	ed93 2a0d 	vldr	s4, [r3, #52]	; 0x34
 8009e8e:	eba7 070c 	sub.w	r7, r7, ip
 8009e92:	42bc      	cmp	r4, r7
 8009e94:	bfa8      	it	ge
 8009e96:	463c      	movge	r4, r7
 8009e98:	ee07 4a90 	vmov	s15, r4
 8009e9c:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 8009ea0:	edd2 7a0d 	vldr	s15, [r2, #52]	; 0x34
 8009ea4:	ee25 4a04 	vmul.f32	s8, s10, s8
 8009ea8:	ee65 4a24 	vmul.f32	s9, s10, s9
 8009eac:	ee25 5a27 	vmul.f32	s10, s10, s15
 8009eb0:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8009eb4:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8009eb8:	eb09 0e0c 	add.w	lr, r9, ip
 8009ebc:	4571      	cmp	r1, lr
 8009ebe:	ee71 0aa4 	vadd.f32	s1, s3, s9
 8009ec2:	ee32 1a05 	vadd.f32	s2, s4, s10
 8009ec6:	ee36 0a84 	vadd.f32	s0, s13, s8
 8009eca:	ee61 1a87 	vmul.f32	s3, s3, s14
 8009ece:	ee22 2a07 	vmul.f32	s4, s4, s14
 8009ed2:	f340 808d 	ble.w	8009ff0 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8009ed6:	eba1 060e 	sub.w	r6, r1, lr
 8009eda:	fb96 f5f4 	sdiv	r5, r6, r4
 8009ede:	ee07 5a10 	vmov	s14, r5
 8009ee2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8009ee6:	2d00      	cmp	r5, #0
 8009ee8:	fb04 6615 	mls	r6, r4, r5, r6
 8009eec:	eea7 0a04 	vfma.f32	s0, s14, s8
 8009ef0:	eee7 0a24 	vfma.f32	s1, s14, s9
 8009ef4:	eea7 1a05 	vfma.f32	s2, s14, s10
 8009ef8:	dd13      	ble.n	8009f22 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8009efa:	ee70 6a44 	vsub.f32	s13, s0, s8
 8009efe:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8009f02:	eef5 6a40 	vcmp.f32	s13, #0.0
 8009f06:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8009f0a:	bf18      	it	ne
 8009f0c:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8009f10:	ee31 2a45 	vsub.f32	s4, s2, s10
 8009f14:	bf08      	it	eq
 8009f16:	eeb0 7a67 	vmoveq.f32	s14, s15
 8009f1a:	ee61 1a87 	vmul.f32	s3, s3, s14
 8009f1e:	ee22 2a07 	vmul.f32	s4, s4, s14
 8009f22:	fb05 f204 	mul.w	r2, r5, r4
 8009f26:	1abf      	subs	r7, r7, r2
 8009f28:	4494      	add	ip, r2
 8009f2a:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8009f2e:	4411      	add	r1, r2
 8009f30:	eb09 020c 	add.w	r2, r9, ip
 8009f34:	443a      	add	r2, r7
 8009f36:	b209      	sxth	r1, r1
 8009f38:	428a      	cmp	r2, r1
 8009f3a:	bfc4      	itt	gt
 8009f3c:	eba1 0209 	subgt.w	r2, r1, r9
 8009f40:	eba2 070c 	subgt.w	r7, r2, ip
 8009f44:	2f00      	cmp	r7, #0
 8009f46:	dd50      	ble.n	8009fea <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8009f48:	fb97 f1f4 	sdiv	r1, r7, r4
 8009f4c:	fb04 7211 	mls	r2, r4, r1, r7
 8009f50:	b90a      	cbnz	r2, 8009f56 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8009f52:	3901      	subs	r1, #1
 8009f54:	4622      	mov	r2, r4
 8009f56:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8009f5a:	6840      	ldr	r0, [r0, #4]
 8009f5c:	900b      	str	r0, [sp, #44]	; 0x2c
 8009f5e:	f8d0 a000 	ldr.w	sl, [r0]
 8009f62:	9817      	ldr	r0, [sp, #92]	; 0x5c
 8009f64:	9008      	str	r0, [sp, #32]
 8009f66:	f89d b06c 	ldrb.w	fp, [sp, #108]	; 0x6c
 8009f6a:	9818      	ldr	r0, [sp, #96]	; 0x60
 8009f6c:	f8cd b024 	str.w	fp, [sp, #36]	; 0x24
 8009f70:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8009f74:	695b      	ldr	r3, [r3, #20]
 8009f76:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8009f78:	445b      	add	r3, fp
 8009f7a:	eef0 6a42 	vmov.f32	s13, s4
 8009f7e:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8009f82:	ee21 3a23 	vmul.f32	s6, s2, s7
 8009f86:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8009f8a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8009f8e:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8009f92:	9307      	str	r3, [sp, #28]
 8009f94:	ee17 7a90 	vmov	r7, s15
 8009f98:	ee73 7a42 	vsub.f32	s15, s6, s4
 8009f9c:	eeb0 7a61 	vmov.f32	s14, s3
 8009fa0:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8009fa4:	ee16 3a90 	vmov	r3, s13
 8009fa8:	fb97 f7f4 	sdiv	r7, r7, r4
 8009fac:	ee17 ca90 	vmov	ip, s15
 8009fb0:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8009fb4:	fb9c fcf4 	sdiv	ip, ip, r4
 8009fb8:	fb0c 3306 	mla	r3, ip, r6, r3
 8009fbc:	9302      	str	r3, [sp, #8]
 8009fbe:	ee17 3a10 	vmov	r3, s14
 8009fc2:	44b6      	add	lr, r6
 8009fc4:	fb04 e505 	mla	r5, r4, r5, lr
 8009fc8:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8009fcc:	fb07 3706 	mla	r7, r7, r6, r3
 8009fd0:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8009fd4:	e9cd 4700 	strd	r4, r7, [sp]
 8009fd8:	2900      	cmp	r1, #0
 8009fda:	bfcc      	ite	gt
 8009fdc:	46a1      	movgt	r9, r4
 8009fde:	4691      	movle	r9, r2
 8009fe0:	eba9 0306 	sub.w	r3, r9, r6
 8009fe4:	f8da 4008 	ldr.w	r4, [sl, #8]
 8009fe8:	47a0      	blx	r4
 8009fea:	b00d      	add	sp, #52	; 0x34
 8009fec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8009ff0:	2500      	movs	r5, #0
 8009ff2:	462e      	mov	r6, r5
 8009ff4:	e799      	b.n	8009f2a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08009ff8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8009ff8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009ffc:	b0db      	sub	sp, #364	; 0x16c
 8009ffe:	461d      	mov	r5, r3
 800a000:	f8bd 3198 	ldrh.w	r3, [sp, #408]	; 0x198
 800a004:	930a      	str	r3, [sp, #40]	; 0x28
 800a006:	f89d 319c 	ldrb.w	r3, [sp, #412]	; 0x19c
 800a00a:	930b      	str	r3, [sp, #44]	; 0x2c
 800a00c:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	; 0x1a0
 800a010:	9310      	str	r3, [sp, #64]	; 0x40
 800a012:	6803      	ldr	r3, [r0, #0]
 800a014:	910f      	str	r1, [sp, #60]	; 0x3c
 800a016:	6b9f      	ldr	r7, [r3, #56]	; 0x38
 800a018:	9009      	str	r0, [sp, #36]	; 0x24
 800a01a:	4614      	mov	r4, r2
 800a01c:	4629      	mov	r1, r5
 800a01e:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 800a022:	f8dd b194 	ldr.w	fp, [sp, #404]	; 0x194
 800a026:	47b8      	blx	r7
 800a028:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a02a:	6058      	str	r0, [r3, #4]
 800a02c:	2800      	cmp	r0, #0
 800a02e:	f000 83a1 	beq.w	800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a032:	682b      	ldr	r3, [r5, #0]
 800a034:	9314      	str	r3, [sp, #80]	; 0x50
 800a036:	686b      	ldr	r3, [r5, #4]
 800a038:	9315      	str	r3, [sp, #84]	; 0x54
 800a03a:	4bc4      	ldr	r3, [pc, #784]	; (800a34c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 800a03c:	ed94 7a02 	vldr	s14, [r4, #8]
 800a040:	7819      	ldrb	r1, [r3, #0]
 800a042:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 800a046:	eef2 7a04 	vmov.f32	s15, #36	; 0x41200000  10.0
 800a04a:	2900      	cmp	r1, #0
 800a04c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800a050:	bf16      	itet	ne
 800a052:	4619      	movne	r1, r3
 800a054:	4611      	moveq	r1, r2
 800a056:	4613      	movne	r3, r2
 800a058:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a05c:	9116      	str	r1, [sp, #88]	; 0x58
 800a05e:	e9cd 3217 	strd	r3, r2, [sp, #92]	; 0x5c
 800a062:	f240 8387 	bls.w	800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a066:	ed94 7a07 	vldr	s14, [r4, #28]
 800a06a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800a06e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a072:	f240 837f 	bls.w	800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a076:	ed94 7a0c 	vldr	s14, [r4, #48]	; 0x30
 800a07a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800a07e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800a082:	f240 8377 	bls.w	800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a086:	6822      	ldr	r2, [r4, #0]
 800a088:	4bb1      	ldr	r3, [pc, #708]	; (800a350 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 800a08a:	429a      	cmp	r2, r3
 800a08c:	f2c0 8372 	blt.w	800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a090:	49b0      	ldr	r1, [pc, #704]	; (800a354 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 800a092:	6963      	ldr	r3, [r4, #20]
 800a094:	428a      	cmp	r2, r1
 800a096:	f300 836d 	bgt.w	800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a09a:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800a09e:	48ae      	ldr	r0, [pc, #696]	; (800a358 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 800a0a0:	33ff      	adds	r3, #255	; 0xff
 800a0a2:	4283      	cmp	r3, r0
 800a0a4:	f200 8366 	bhi.w	800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a0a8:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 800a0aa:	4dac      	ldr	r5, [pc, #688]	; (800a35c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 800a0ac:	f503 331c 	add.w	r3, r3, #159744	; 0x27000
 800a0b0:	33ff      	adds	r3, #255	; 0xff
 800a0b2:	42ab      	cmp	r3, r5
 800a0b4:	f200 835e 	bhi.w	800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a0b8:	6862      	ldr	r2, [r4, #4]
 800a0ba:	f502 331c 	add.w	r3, r2, #159744	; 0x27000
 800a0be:	33ff      	adds	r3, #255	; 0xff
 800a0c0:	4283      	cmp	r3, r0
 800a0c2:	f200 8357 	bhi.w	800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a0c6:	69a1      	ldr	r1, [r4, #24]
 800a0c8:	f501 331c 	add.w	r3, r1, #159744	; 0x27000
 800a0cc:	33ff      	adds	r3, #255	; 0xff
 800a0ce:	4283      	cmp	r3, r0
 800a0d0:	f200 8350 	bhi.w	800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a0d4:	6ae3      	ldr	r3, [r4, #44]	; 0x2c
 800a0d6:	f503 301c 	add.w	r0, r3, #159744	; 0x27000
 800a0da:	30ff      	adds	r0, #255	; 0xff
 800a0dc:	42a8      	cmp	r0, r5
 800a0de:	f200 8349 	bhi.w	800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a0e2:	428a      	cmp	r2, r1
 800a0e4:	f280 8110 	bge.w	800a308 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 800a0e8:	429a      	cmp	r2, r3
 800a0ea:	f300 8119 	bgt.w	800a320 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 800a0ee:	4299      	cmp	r1, r3
 800a0f0:	f280 811d 	bge.w	800a32e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 800a0f4:	2502      	movs	r5, #2
 800a0f6:	2701      	movs	r7, #1
 800a0f8:	46a9      	mov	r9, r5
 800a0fa:	46b8      	mov	r8, r7
 800a0fc:	f04f 0a00 	mov.w	sl, #0
 800a100:	4621      	mov	r1, r4
 800a102:	a849      	add	r0, sp, #292	; 0x124
 800a104:	f003 f81c 	bl	800d140 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 800a108:	4622      	mov	r2, r4
 800a10a:	4653      	mov	r3, sl
 800a10c:	a949      	add	r1, sp, #292	; 0x124
 800a10e:	f8cd 9000 	str.w	r9, [sp]
 800a112:	a819      	add	r0, sp, #100	; 0x64
 800a114:	f003 f944 	bl	800d3a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800a118:	4622      	mov	r2, r4
 800a11a:	4653      	mov	r3, sl
 800a11c:	a949      	add	r1, sp, #292	; 0x124
 800a11e:	f8cd 8000 	str.w	r8, [sp]
 800a122:	a829      	add	r0, sp, #164	; 0xa4
 800a124:	f003 f93c 	bl	800d3a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800a128:	4643      	mov	r3, r8
 800a12a:	4622      	mov	r2, r4
 800a12c:	a949      	add	r1, sp, #292	; 0x124
 800a12e:	f8cd 9000 	str.w	r9, [sp]
 800a132:	a839      	add	r0, sp, #228	; 0xe4
 800a134:	f003 f934 	bl	800d3a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 800a138:	42af      	cmp	r7, r5
 800a13a:	bfb5      	itete	lt
 800a13c:	2300      	movlt	r3, #0
 800a13e:	2301      	movge	r3, #1
 800a140:	930e      	strlt	r3, [sp, #56]	; 0x38
 800a142:	930e      	strge	r3, [sp, #56]	; 0x38
 800a144:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a146:	e893 0003 	ldmia.w	r3, {r0, r1}
 800a14a:	af12      	add	r7, sp, #72	; 0x48
 800a14c:	bfb9      	ittee	lt
 800a14e:	ad29      	addlt	r5, sp, #164	; 0xa4
 800a150:	ac19      	addlt	r4, sp, #100	; 0x64
 800a152:	ad19      	addge	r5, sp, #100	; 0x64
 800a154:	ac29      	addge	r4, sp, #164	; 0xa4
 800a156:	e887 0003 	stmia.w	r7, {r0, r1}
 800a15a:	b928      	cbnz	r0, 800a168 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 800a15c:	4b80      	ldr	r3, [pc, #512]	; (800a360 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 800a15e:	6818      	ldr	r0, [r3, #0]
 800a160:	6803      	ldr	r3, [r0, #0]
 800a162:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800a164:	4798      	blx	r3
 800a166:	6038      	str	r0, [r7, #0]
 800a168:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800a16a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800a16e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800a172:	930c      	str	r3, [sp, #48]	; 0x30
 800a174:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a176:	6963      	ldr	r3, [r4, #20]
 800a178:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 800a17a:	440b      	add	r3, r1
 800a17c:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800a180:	4408      	add	r0, r1
 800a182:	b200      	sxth	r0, r0
 800a184:	4283      	cmp	r3, r0
 800a186:	900d      	str	r0, [sp, #52]	; 0x34
 800a188:	f280 80dd 	bge.w	800a346 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 800a18c:	428b      	cmp	r3, r1
 800a18e:	da08      	bge.n	800a1a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800a190:	2a00      	cmp	r2, #0
 800a192:	dd06      	ble.n	800a1a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800a194:	1acb      	subs	r3, r1, r3
 800a196:	429a      	cmp	r2, r3
 800a198:	f2c0 80e4 	blt.w	800a364 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 800a19c:	2b00      	cmp	r3, #0
 800a19e:	f300 80e2 	bgt.w	800a366 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 800a1a2:	6967      	ldr	r7, [r4, #20]
 800a1a4:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a1a6:	443b      	add	r3, r7
 800a1a8:	461f      	mov	r7, r3
 800a1aa:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a1ac:	1bdf      	subs	r7, r3, r7
 800a1ae:	4297      	cmp	r7, r2
 800a1b0:	bfa8      	it	ge
 800a1b2:	4617      	movge	r7, r2
 800a1b4:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800a1b8:	2f00      	cmp	r7, #0
 800a1ba:	f340 8166 	ble.w	800a48a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 800a1be:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800a1c0:	6829      	ldr	r1, [r5, #0]
 800a1c2:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a1c6:	f9bb 3000 	ldrsh.w	r3, [fp]
 800a1ca:	6820      	ldr	r0, [r4, #0]
 800a1cc:	4411      	add	r1, r2
 800a1ce:	4299      	cmp	r1, r3
 800a1d0:	dd1a      	ble.n	800a208 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800a1d2:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800a1d6:	440b      	add	r3, r1
 800a1d8:	4402      	add	r2, r0
 800a1da:	b21b      	sxth	r3, r3
 800a1dc:	429a      	cmp	r2, r3
 800a1de:	dc13      	bgt.n	800a208 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 800a1e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a1e2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a1e4:	681b      	ldr	r3, [r3, #0]
 800a1e6:	9206      	str	r2, [sp, #24]
 800a1e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a1ea:	9205      	str	r2, [sp, #20]
 800a1ec:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a1ee:	9500      	str	r5, [sp, #0]
 800a1f0:	e9cd b203 	strd	fp, r2, [sp, #12]
 800a1f4:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800a1f6:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a1f8:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800a1fc:	a912      	add	r1, sp, #72	; 0x48
 800a1fe:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800a202:	aa49      	add	r2, sp, #292	; 0x124
 800a204:	4623      	mov	r3, r4
 800a206:	47c8      	blx	r9
 800a208:	e9d4 2300 	ldrd	r2, r3, [r4]
 800a20c:	441a      	add	r2, r3
 800a20e:	6963      	ldr	r3, [r4, #20]
 800a210:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800a214:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800a218:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800a21c:	68a1      	ldr	r1, [r4, #8]
 800a21e:	ed94 6a08 	vldr	s12, [r4, #32]
 800a222:	6022      	str	r2, [r4, #0]
 800a224:	3301      	adds	r3, #1
 800a226:	6163      	str	r3, [r4, #20]
 800a228:	69a3      	ldr	r3, [r4, #24]
 800a22a:	ee37 7a27 	vadd.f32	s14, s14, s15
 800a22e:	3b01      	subs	r3, #1
 800a230:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800a234:	61a3      	str	r3, [r4, #24]
 800a236:	6923      	ldr	r3, [r4, #16]
 800a238:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800a23c:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a240:	edd4 6a07 	vldr	s13, [r4, #28]
 800a244:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800a248:	440b      	add	r3, r1
 800a24a:	68e1      	ldr	r1, [r4, #12]
 800a24c:	6123      	str	r3, [r4, #16]
 800a24e:	ee76 6a86 	vadd.f32	s13, s13, s12
 800a252:	428b      	cmp	r3, r1
 800a254:	edc4 6a07 	vstr	s13, [r4, #28]
 800a258:	db15      	blt.n	800a286 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 800a25a:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800a25e:	ee76 6a26 	vadd.f32	s13, s12, s13
 800a262:	3201      	adds	r2, #1
 800a264:	edc4 6a07 	vstr	s13, [r4, #28]
 800a268:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800a26c:	6022      	str	r2, [r4, #0]
 800a26e:	ee36 7a87 	vadd.f32	s14, s13, s14
 800a272:	1a5b      	subs	r3, r3, r1
 800a274:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800a278:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800a27c:	6123      	str	r3, [r4, #16]
 800a27e:	ee77 7a27 	vadd.f32	s15, s14, s15
 800a282:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800a286:	e9d5 2300 	ldrd	r2, r3, [r5]
 800a28a:	441a      	add	r2, r3
 800a28c:	696b      	ldr	r3, [r5, #20]
 800a28e:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800a292:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800a296:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800a29a:	68a9      	ldr	r1, [r5, #8]
 800a29c:	ed95 6a08 	vldr	s12, [r5, #32]
 800a2a0:	602a      	str	r2, [r5, #0]
 800a2a2:	3301      	adds	r3, #1
 800a2a4:	616b      	str	r3, [r5, #20]
 800a2a6:	69ab      	ldr	r3, [r5, #24]
 800a2a8:	ee37 7a27 	vadd.f32	s14, s14, s15
 800a2ac:	3b01      	subs	r3, #1
 800a2ae:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800a2b2:	61ab      	str	r3, [r5, #24]
 800a2b4:	692b      	ldr	r3, [r5, #16]
 800a2b6:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800a2ba:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a2be:	edd5 6a07 	vldr	s13, [r5, #28]
 800a2c2:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800a2c6:	440b      	add	r3, r1
 800a2c8:	68e9      	ldr	r1, [r5, #12]
 800a2ca:	612b      	str	r3, [r5, #16]
 800a2cc:	ee76 6a86 	vadd.f32	s13, s13, s12
 800a2d0:	428b      	cmp	r3, r1
 800a2d2:	edc5 6a07 	vstr	s13, [r5, #28]
 800a2d6:	db15      	blt.n	800a304 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 800a2d8:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800a2dc:	ee76 6a26 	vadd.f32	s13, s12, s13
 800a2e0:	3201      	adds	r2, #1
 800a2e2:	edc5 6a07 	vstr	s13, [r5, #28]
 800a2e6:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800a2ea:	602a      	str	r2, [r5, #0]
 800a2ec:	ee36 7a87 	vadd.f32	s14, s13, s14
 800a2f0:	1a5b      	subs	r3, r3, r1
 800a2f2:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800a2f6:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800a2fa:	612b      	str	r3, [r5, #16]
 800a2fc:	ee77 7a27 	vadd.f32	s15, s14, s15
 800a300:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800a304:	3f01      	subs	r7, #1
 800a306:	e757      	b.n	800a1b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 800a308:	4299      	cmp	r1, r3
 800a30a:	dc13      	bgt.n	800a334 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 800a30c:	429a      	cmp	r2, r3
 800a30e:	da14      	bge.n	800a33a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 800a310:	2502      	movs	r5, #2
 800a312:	2703      	movs	r7, #3
 800a314:	46a9      	mov	r9, r5
 800a316:	f04f 0800 	mov.w	r8, #0
 800a31a:	f04f 0a01 	mov.w	sl, #1
 800a31e:	e6ef      	b.n	800a100 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800a320:	2501      	movs	r5, #1
 800a322:	2700      	movs	r7, #0
 800a324:	46a9      	mov	r9, r5
 800a326:	46b8      	mov	r8, r7
 800a328:	f04f 0a02 	mov.w	sl, #2
 800a32c:	e6e8      	b.n	800a100 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 800a32e:	2501      	movs	r5, #1
 800a330:	2702      	movs	r7, #2
 800a332:	e6e1      	b.n	800a0f8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 800a334:	2500      	movs	r5, #0
 800a336:	2701      	movs	r7, #1
 800a338:	e7f4      	b.n	800a324 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 800a33a:	2702      	movs	r7, #2
 800a33c:	2503      	movs	r5, #3
 800a33e:	f04f 0900 	mov.w	r9, #0
 800a342:	46b8      	mov	r8, r7
 800a344:	e7e9      	b.n	800a31a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 800a346:	4613      	mov	r3, r2
 800a348:	e728      	b.n	800a19c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 800a34a:	bf00      	nop
 800a34c:	2000a0e4 	.word	0x2000a0e4
 800a350:	fffd8f01 	.word	0xfffd8f01
 800a354:	00027100 	.word	0x00027100
 800a358:	0004e1ff 	.word	0x0004e1ff
 800a35c:	0004e1fe 	.word	0x0004e1fe
 800a360:	2000a0ec 	.word	0x2000a0ec
 800a364:	4613      	mov	r3, r2
 800a366:	992b      	ldr	r1, [sp, #172]	; 0xac
 800a368:	9111      	str	r1, [sp, #68]	; 0x44
 800a36a:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	; 0xa4
 800a36e:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	; 0xb0
 800a372:	9f2e      	ldr	r7, [sp, #184]	; 0xb8
 800a374:	eddd 4a34 	vldr	s9, [sp, #208]	; 0xd0
 800a378:	ed9d 7a33 	vldr	s14, [sp, #204]	; 0xcc
 800a37c:	ed9d 4a37 	vldr	s8, [sp, #220]	; 0xdc
 800a380:	eddd 7a36 	vldr	s15, [sp, #216]	; 0xd8
 800a384:	eddd 3a31 	vldr	s7, [sp, #196]	; 0xc4
 800a388:	eddd 6a30 	vldr	s13, [sp, #192]	; 0xc0
 800a38c:	ed9d 5a32 	vldr	s10, [sp, #200]	; 0xc8
 800a390:	eddd 5a35 	vldr	s11, [sp, #212]	; 0xd4
 800a394:	ed9d 6a38 	vldr	s12, [sp, #224]	; 0xe0
 800a398:	469e      	mov	lr, r3
 800a39a:	469c      	mov	ip, r3
 800a39c:	f04f 0900 	mov.w	r9, #0
 800a3a0:	f1bc 0f00 	cmp.w	ip, #0
 800a3a4:	d147      	bne.n	800a436 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 800a3a6:	eb03 0c07 	add.w	ip, r3, r7
 800a3aa:	1ad7      	subs	r7, r2, r3
 800a3ac:	f1b9 0f00 	cmp.w	r9, #0
 800a3b0:	d009      	beq.n	800a3c6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 800a3b2:	e9cd c72e 	strd	ip, r7, [sp, #184]	; 0xb8
 800a3b6:	9029      	str	r0, [sp, #164]	; 0xa4
 800a3b8:	ed8d 7a33 	vstr	s14, [sp, #204]	; 0xcc
 800a3bc:	edcd 7a36 	vstr	s15, [sp, #216]	; 0xd8
 800a3c0:	edcd 6a30 	vstr	s13, [sp, #192]	; 0xc0
 800a3c4:	912d      	str	r1, [sp, #180]	; 0xb4
 800a3c6:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800a3c8:	9111      	str	r1, [sp, #68]	; 0x44
 800a3ca:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800a3ce:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800a3d2:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800a3d6:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800a3da:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800a3de:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800a3e2:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800a3e6:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800a3ea:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800a3ee:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800a3f2:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800a3f6:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800a3fa:	f04f 0800 	mov.w	r8, #0
 800a3fe:	f1be 0f00 	cmp.w	lr, #0
 800a402:	d031      	beq.n	800a468 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 800a404:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800a406:	4431      	add	r1, r6
 800a408:	4549      	cmp	r1, r9
 800a40a:	4450      	add	r0, sl
 800a40c:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800a410:	ee37 7a04 	vadd.f32	s14, s14, s8
 800a414:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800a418:	db08      	blt.n	800a42c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 800a41a:	ee77 7a85 	vadd.f32	s15, s15, s10
 800a41e:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800a422:	ee37 7a06 	vadd.f32	s14, s14, s12
 800a426:	3001      	adds	r0, #1
 800a428:	eba1 0109 	sub.w	r1, r1, r9
 800a42c:	f10e 3eff 	add.w	lr, lr, #4294967295
 800a430:	f04f 0801 	mov.w	r8, #1
 800a434:	e7e3      	b.n	800a3fe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 800a436:	9e11      	ldr	r6, [sp, #68]	; 0x44
 800a438:	4431      	add	r1, r6
 800a43a:	4541      	cmp	r1, r8
 800a43c:	4450      	add	r0, sl
 800a43e:	ee37 7a24 	vadd.f32	s14, s14, s9
 800a442:	ee77 7a84 	vadd.f32	s15, s15, s8
 800a446:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800a44a:	db08      	blt.n	800a45e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 800a44c:	ee76 6a85 	vadd.f32	s13, s13, s10
 800a450:	ee37 7a25 	vadd.f32	s14, s14, s11
 800a454:	ee77 7a86 	vadd.f32	s15, s15, s12
 800a458:	3001      	adds	r0, #1
 800a45a:	eba1 0108 	sub.w	r1, r1, r8
 800a45e:	f10c 3cff 	add.w	ip, ip, #4294967295
 800a462:	f04f 0901 	mov.w	r9, #1
 800a466:	e79b      	b.n	800a3a0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 800a468:	449c      	add	ip, r3
 800a46a:	1aff      	subs	r7, r7, r3
 800a46c:	f1b8 0f00 	cmp.w	r8, #0
 800a470:	d009      	beq.n	800a486 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 800a472:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800a476:	9019      	str	r0, [sp, #100]	; 0x64
 800a478:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800a47c:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800a480:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800a484:	911d      	str	r1, [sp, #116]	; 0x74
 800a486:	1ad2      	subs	r2, r2, r3
 800a488:	e68b      	b.n	800a1a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 800a48a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800a48c:	9a3f      	ldr	r2, [sp, #252]	; 0xfc
 800a48e:	2b00      	cmp	r3, #0
 800a490:	f000 80d1 	beq.w	800a636 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 800a494:	ad19      	add	r5, sp, #100	; 0x64
 800a496:	ac39      	add	r4, sp, #228	; 0xe4
 800a498:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800a49a:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 800a49e:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 800a4a2:	930c      	str	r3, [sp, #48]	; 0x30
 800a4a4:	990c      	ldr	r1, [sp, #48]	; 0x30
 800a4a6:	6963      	ldr	r3, [r4, #20]
 800a4a8:	440b      	add	r3, r1
 800a4aa:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 800a4ae:	4408      	add	r0, r1
 800a4b0:	b200      	sxth	r0, r0
 800a4b2:	4283      	cmp	r3, r0
 800a4b4:	900d      	str	r0, [sp, #52]	; 0x34
 800a4b6:	f280 80c1 	bge.w	800a63c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 800a4ba:	428b      	cmp	r3, r1
 800a4bc:	da08      	bge.n	800a4d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800a4be:	2a00      	cmp	r2, #0
 800a4c0:	dd06      	ble.n	800a4d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800a4c2:	1acb      	subs	r3, r1, r3
 800a4c4:	429a      	cmp	r2, r3
 800a4c6:	f2c0 80bb 	blt.w	800a640 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 800a4ca:	2b00      	cmp	r3, #0
 800a4cc:	f300 80b9 	bgt.w	800a642 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 800a4d0:	6967      	ldr	r7, [r4, #20]
 800a4d2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800a4d4:	443b      	add	r3, r7
 800a4d6:	461f      	mov	r7, r3
 800a4d8:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 800a4da:	1bdf      	subs	r7, r3, r7
 800a4dc:	4297      	cmp	r7, r2
 800a4de:	bfa8      	it	ge
 800a4e0:	4617      	movge	r7, r2
 800a4e2:	f10d 0850 	add.w	r8, sp, #80	; 0x50
 800a4e6:	2f00      	cmp	r7, #0
 800a4e8:	f340 813c 	ble.w	800a764 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 800a4ec:	9b64      	ldr	r3, [sp, #400]	; 0x190
 800a4ee:	6829      	ldr	r1, [r5, #0]
 800a4f0:	f9b3 2000 	ldrsh.w	r2, [r3]
 800a4f4:	f9bb 3000 	ldrsh.w	r3, [fp]
 800a4f8:	6820      	ldr	r0, [r4, #0]
 800a4fa:	4411      	add	r1, r2
 800a4fc:	4299      	cmp	r1, r3
 800a4fe:	dd1a      	ble.n	800a536 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800a500:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 800a504:	440b      	add	r3, r1
 800a506:	4402      	add	r2, r0
 800a508:	b21b      	sxth	r3, r3
 800a50a:	429a      	cmp	r2, r3
 800a50c:	dc13      	bgt.n	800a536 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 800a50e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800a510:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800a512:	681b      	ldr	r3, [r3, #0]
 800a514:	9206      	str	r2, [sp, #24]
 800a516:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800a518:	9205      	str	r2, [sp, #20]
 800a51a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 800a51c:	9500      	str	r5, [sp, #0]
 800a51e:	e9cd b203 	strd	fp, r2, [sp, #12]
 800a522:	9a64      	ldr	r2, [sp, #400]	; 0x190
 800a524:	9809      	ldr	r0, [sp, #36]	; 0x24
 800a526:	e9cd 8201 	strd	r8, r2, [sp, #4]
 800a52a:	a912      	add	r1, sp, #72	; 0x48
 800a52c:	f8d3 903c 	ldr.w	r9, [r3, #60]	; 0x3c
 800a530:	aa49      	add	r2, sp, #292	; 0x124
 800a532:	4623      	mov	r3, r4
 800a534:	47c8      	blx	r9
 800a536:	e9d4 2300 	ldrd	r2, r3, [r4]
 800a53a:	441a      	add	r2, r3
 800a53c:	6963      	ldr	r3, [r4, #20]
 800a53e:	ed94 7a0a 	vldr	s14, [r4, #40]	; 0x28
 800a542:	edd4 7a0b 	vldr	s15, [r4, #44]	; 0x2c
 800a546:	edd4 6a0e 	vldr	s13, [r4, #56]	; 0x38
 800a54a:	68a1      	ldr	r1, [r4, #8]
 800a54c:	ed94 6a08 	vldr	s12, [r4, #32]
 800a550:	6022      	str	r2, [r4, #0]
 800a552:	3301      	adds	r3, #1
 800a554:	6163      	str	r3, [r4, #20]
 800a556:	69a3      	ldr	r3, [r4, #24]
 800a558:	ee37 7a27 	vadd.f32	s14, s14, s15
 800a55c:	3b01      	subs	r3, #1
 800a55e:	edd4 7a0d 	vldr	s15, [r4, #52]	; 0x34
 800a562:	61a3      	str	r3, [r4, #24]
 800a564:	6923      	ldr	r3, [r4, #16]
 800a566:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800a56a:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a56e:	edd4 6a07 	vldr	s13, [r4, #28]
 800a572:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800a576:	440b      	add	r3, r1
 800a578:	68e1      	ldr	r1, [r4, #12]
 800a57a:	6123      	str	r3, [r4, #16]
 800a57c:	ee76 6a86 	vadd.f32	s13, s13, s12
 800a580:	428b      	cmp	r3, r1
 800a582:	edc4 6a07 	vstr	s13, [r4, #28]
 800a586:	db15      	blt.n	800a5b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 800a588:	ed94 6a09 	vldr	s12, [r4, #36]	; 0x24
 800a58c:	ee76 6a26 	vadd.f32	s13, s12, s13
 800a590:	3201      	adds	r2, #1
 800a592:	edc4 6a07 	vstr	s13, [r4, #28]
 800a596:	edd4 6a0c 	vldr	s13, [r4, #48]	; 0x30
 800a59a:	6022      	str	r2, [r4, #0]
 800a59c:	ee36 7a87 	vadd.f32	s14, s13, s14
 800a5a0:	1a5b      	subs	r3, r3, r1
 800a5a2:	ed84 7a0a 	vstr	s14, [r4, #40]	; 0x28
 800a5a6:	ed94 7a0f 	vldr	s14, [r4, #60]	; 0x3c
 800a5aa:	6123      	str	r3, [r4, #16]
 800a5ac:	ee77 7a27 	vadd.f32	s15, s14, s15
 800a5b0:	edc4 7a0d 	vstr	s15, [r4, #52]	; 0x34
 800a5b4:	e9d5 2300 	ldrd	r2, r3, [r5]
 800a5b8:	441a      	add	r2, r3
 800a5ba:	696b      	ldr	r3, [r5, #20]
 800a5bc:	ed95 7a0a 	vldr	s14, [r5, #40]	; 0x28
 800a5c0:	edd5 7a0b 	vldr	s15, [r5, #44]	; 0x2c
 800a5c4:	edd5 6a0e 	vldr	s13, [r5, #56]	; 0x38
 800a5c8:	68a9      	ldr	r1, [r5, #8]
 800a5ca:	ed95 6a08 	vldr	s12, [r5, #32]
 800a5ce:	602a      	str	r2, [r5, #0]
 800a5d0:	3301      	adds	r3, #1
 800a5d2:	616b      	str	r3, [r5, #20]
 800a5d4:	69ab      	ldr	r3, [r5, #24]
 800a5d6:	ee37 7a27 	vadd.f32	s14, s14, s15
 800a5da:	3b01      	subs	r3, #1
 800a5dc:	edd5 7a0d 	vldr	s15, [r5, #52]	; 0x34
 800a5e0:	61ab      	str	r3, [r5, #24]
 800a5e2:	692b      	ldr	r3, [r5, #16]
 800a5e4:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800a5e8:	ee77 7aa6 	vadd.f32	s15, s15, s13
 800a5ec:	edd5 6a07 	vldr	s13, [r5, #28]
 800a5f0:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800a5f4:	440b      	add	r3, r1
 800a5f6:	68e9      	ldr	r1, [r5, #12]
 800a5f8:	612b      	str	r3, [r5, #16]
 800a5fa:	ee76 6a86 	vadd.f32	s13, s13, s12
 800a5fe:	428b      	cmp	r3, r1
 800a600:	edc5 6a07 	vstr	s13, [r5, #28]
 800a604:	db15      	blt.n	800a632 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 800a606:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800a60a:	ee76 6a26 	vadd.f32	s13, s12, s13
 800a60e:	3201      	adds	r2, #1
 800a610:	edc5 6a07 	vstr	s13, [r5, #28]
 800a614:	edd5 6a0c 	vldr	s13, [r5, #48]	; 0x30
 800a618:	602a      	str	r2, [r5, #0]
 800a61a:	ee36 7a87 	vadd.f32	s14, s13, s14
 800a61e:	1a5b      	subs	r3, r3, r1
 800a620:	ed85 7a0a 	vstr	s14, [r5, #40]	; 0x28
 800a624:	ed95 7a0f 	vldr	s14, [r5, #60]	; 0x3c
 800a628:	612b      	str	r3, [r5, #16]
 800a62a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800a62e:	edc5 7a0d 	vstr	s15, [r5, #52]	; 0x34
 800a632:	3f01      	subs	r7, #1
 800a634:	e757      	b.n	800a4e6 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 800a636:	ad39      	add	r5, sp, #228	; 0xe4
 800a638:	ac19      	add	r4, sp, #100	; 0x64
 800a63a:	e72d      	b.n	800a498 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 800a63c:	4613      	mov	r3, r2
 800a63e:	e744      	b.n	800a4ca <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 800a640:	4613      	mov	r3, r2
 800a642:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	; 0xe4
 800a646:	9e3b      	ldr	r6, [sp, #236]	; 0xec
 800a648:	f8dd c0f8 	ldr.w	ip, [sp, #248]	; 0xf8
 800a64c:	ed9d 7a43 	vldr	s14, [sp, #268]	; 0x10c
 800a650:	eddd 4a44 	vldr	s9, [sp, #272]	; 0x110
 800a654:	eddd 7a46 	vldr	s15, [sp, #280]	; 0x118
 800a658:	ed9d 4a47 	vldr	s8, [sp, #284]	; 0x11c
 800a65c:	eddd 6a40 	vldr	s13, [sp, #256]	; 0x100
 800a660:	eddd 3a41 	vldr	s7, [sp, #260]	; 0x104
 800a664:	993d      	ldr	r1, [sp, #244]	; 0xf4
 800a666:	f8dd 80f0 	ldr.w	r8, [sp, #240]	; 0xf0
 800a66a:	ed9d 5a42 	vldr	s10, [sp, #264]	; 0x108
 800a66e:	eddd 5a45 	vldr	s11, [sp, #276]	; 0x114
 800a672:	ed9d 6a48 	vldr	s12, [sp, #288]	; 0x120
 800a676:	960e      	str	r6, [sp, #56]	; 0x38
 800a678:	469e      	mov	lr, r3
 800a67a:	461f      	mov	r7, r3
 800a67c:	f04f 0900 	mov.w	r9, #0
 800a680:	2f00      	cmp	r7, #0
 800a682:	d146      	bne.n	800a712 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 800a684:	449c      	add	ip, r3
 800a686:	1ad7      	subs	r7, r2, r3
 800a688:	f1b9 0f00 	cmp.w	r9, #0
 800a68c:	d009      	beq.n	800a6a2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 800a68e:	e9cd c73e 	strd	ip, r7, [sp, #248]	; 0xf8
 800a692:	9039      	str	r0, [sp, #228]	; 0xe4
 800a694:	913d      	str	r1, [sp, #244]	; 0xf4
 800a696:	edcd 6a40 	vstr	s13, [sp, #256]	; 0x100
 800a69a:	ed8d 7a43 	vstr	s14, [sp, #268]	; 0x10c
 800a69e:	edcd 7a46 	vstr	s15, [sp, #280]	; 0x118
 800a6a2:	991b      	ldr	r1, [sp, #108]	; 0x6c
 800a6a4:	910e      	str	r1, [sp, #56]	; 0x38
 800a6a6:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	; 0x64
 800a6aa:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	; 0x78
 800a6ae:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	; 0x70
 800a6b2:	eddd 4a24 	vldr	s9, [sp, #144]	; 0x90
 800a6b6:	eddd 6a23 	vldr	s13, [sp, #140]	; 0x8c
 800a6ba:	ed9d 4a27 	vldr	s8, [sp, #156]	; 0x9c
 800a6be:	ed9d 7a26 	vldr	s14, [sp, #152]	; 0x98
 800a6c2:	eddd 3a21 	vldr	s7, [sp, #132]	; 0x84
 800a6c6:	eddd 7a20 	vldr	s15, [sp, #128]	; 0x80
 800a6ca:	ed9d 5a22 	vldr	s10, [sp, #136]	; 0x88
 800a6ce:	eddd 5a25 	vldr	s11, [sp, #148]	; 0x94
 800a6d2:	ed9d 6a28 	vldr	s12, [sp, #160]	; 0xa0
 800a6d6:	f04f 0800 	mov.w	r8, #0
 800a6da:	f1be 0f00 	cmp.w	lr, #0
 800a6de:	d030      	beq.n	800a742 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 800a6e0:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a6e2:	4431      	add	r1, r6
 800a6e4:	4549      	cmp	r1, r9
 800a6e6:	4450      	add	r0, sl
 800a6e8:	ee76 6aa4 	vadd.f32	s13, s13, s9
 800a6ec:	ee37 7a04 	vadd.f32	s14, s14, s8
 800a6f0:	ee77 7aa3 	vadd.f32	s15, s15, s7
 800a6f4:	db08      	blt.n	800a708 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 800a6f6:	ee77 7a85 	vadd.f32	s15, s15, s10
 800a6fa:	ee76 6aa5 	vadd.f32	s13, s13, s11
 800a6fe:	ee37 7a06 	vadd.f32	s14, s14, s12
 800a702:	3001      	adds	r0, #1
 800a704:	eba1 0109 	sub.w	r1, r1, r9
 800a708:	f10e 3eff 	add.w	lr, lr, #4294967295
 800a70c:	f04f 0801 	mov.w	r8, #1
 800a710:	e7e3      	b.n	800a6da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 800a712:	9e0e      	ldr	r6, [sp, #56]	; 0x38
 800a714:	4431      	add	r1, r6
 800a716:	4541      	cmp	r1, r8
 800a718:	4450      	add	r0, sl
 800a71a:	ee37 7a24 	vadd.f32	s14, s14, s9
 800a71e:	ee77 7a84 	vadd.f32	s15, s15, s8
 800a722:	ee76 6aa3 	vadd.f32	s13, s13, s7
 800a726:	db08      	blt.n	800a73a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 800a728:	ee76 6a85 	vadd.f32	s13, s13, s10
 800a72c:	ee37 7a25 	vadd.f32	s14, s14, s11
 800a730:	ee77 7a86 	vadd.f32	s15, s15, s12
 800a734:	3001      	adds	r0, #1
 800a736:	eba1 0108 	sub.w	r1, r1, r8
 800a73a:	3f01      	subs	r7, #1
 800a73c:	f04f 0901 	mov.w	r9, #1
 800a740:	e79e      	b.n	800a680 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 800a742:	449c      	add	ip, r3
 800a744:	1aff      	subs	r7, r7, r3
 800a746:	f1b8 0f00 	cmp.w	r8, #0
 800a74a:	d009      	beq.n	800a760 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 800a74c:	e9cd c71e 	strd	ip, r7, [sp, #120]	; 0x78
 800a750:	9019      	str	r0, [sp, #100]	; 0x64
 800a752:	edcd 6a23 	vstr	s13, [sp, #140]	; 0x8c
 800a756:	ed8d 7a26 	vstr	s14, [sp, #152]	; 0x98
 800a75a:	edcd 7a20 	vstr	s15, [sp, #128]	; 0x80
 800a75e:	911d      	str	r1, [sp, #116]	; 0x74
 800a760:	1ad2      	subs	r2, r2, r3
 800a762:	e6b5      	b.n	800a4d0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 800a764:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800a766:	681b      	ldr	r3, [r3, #0]
 800a768:	b923      	cbnz	r3, 800a774 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 800a76a:	4b04      	ldr	r3, [pc, #16]	; (800a77c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 800a76c:	6818      	ldr	r0, [r3, #0]
 800a76e:	6803      	ldr	r3, [r0, #0]
 800a770:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800a772:	4798      	blx	r3
 800a774:	b05b      	add	sp, #364	; 0x16c
 800a776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a77a:	bf00      	nop
 800a77c:	2000a0ec 	.word	0x2000a0ec

0800a780 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 800a780:	b510      	push	{r4, lr}
 800a782:	2b02      	cmp	r3, #2
 800a784:	f9b0 4000 	ldrsh.w	r4, [r0]
 800a788:	d00b      	beq.n	800a7a2 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x22>
 800a78a:	2b03      	cmp	r3, #3
 800a78c:	d00e      	beq.n	800a7ac <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x2c>
 800a78e:	2b01      	cmp	r3, #1
 800a790:	d001      	beq.n	800a796 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x16>
 800a792:	1860      	adds	r0, r4, r1
 800a794:	bd10      	pop	{r4, pc}
 800a796:	8880      	ldrh	r0, [r0, #4]
 800a798:	4420      	add	r0, r4
 800a79a:	b200      	sxth	r0, r0
 800a79c:	1a80      	subs	r0, r0, r2
 800a79e:	3801      	subs	r0, #1
 800a7a0:	e7f8      	b.n	800a794 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>
 800a7a2:	8880      	ldrh	r0, [r0, #4]
 800a7a4:	4420      	add	r0, r4
 800a7a6:	b200      	sxth	r0, r0
 800a7a8:	1a40      	subs	r0, r0, r1
 800a7aa:	e7f8      	b.n	800a79e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 800a7ac:	18a0      	adds	r0, r4, r2
 800a7ae:	e7f1      	b.n	800a794 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x14>

0800a7b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 800a7b0:	b510      	push	{r4, lr}
 800a7b2:	2b02      	cmp	r3, #2
 800a7b4:	f9b0 4002 	ldrsh.w	r4, [r0, #2]
 800a7b8:	d006      	beq.n	800a7c8 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x18>
 800a7ba:	2b03      	cmp	r3, #3
 800a7bc:	d00a      	beq.n	800a7d4 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 800a7be:	2b01      	cmp	r3, #1
 800a7c0:	bf14      	ite	ne
 800a7c2:	18a0      	addne	r0, r4, r2
 800a7c4:	1860      	addeq	r0, r4, r1
 800a7c6:	bd10      	pop	{r4, pc}
 800a7c8:	88c0      	ldrh	r0, [r0, #6]
 800a7ca:	4420      	add	r0, r4
 800a7cc:	b200      	sxth	r0, r0
 800a7ce:	1a80      	subs	r0, r0, r2
 800a7d0:	3801      	subs	r0, #1
 800a7d2:	e7f8      	b.n	800a7c6 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x16>
 800a7d4:	88c0      	ldrh	r0, [r0, #6]
 800a7d6:	4420      	add	r0, r4
 800a7d8:	b200      	sxth	r0, r0
 800a7da:	1a40      	subs	r0, r0, r1
 800a7dc:	e7f8      	b.n	800a7d0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x20>
	...

0800a7e0 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 800a7e0:	4b01      	ldr	r3, [pc, #4]	; (800a7e8 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 800a7e2:	2200      	movs	r2, #0
 800a7e4:	601a      	str	r2, [r3, #0]
 800a7e6:	4770      	bx	lr
 800a7e8:	2000a0f4 	.word	0x2000a0f4

0800a7ec <_ZN8touchgfx16TouchCalibration4clzuEm>:
 800a7ec:	4603      	mov	r3, r0
 800a7ee:	b1c8      	cbz	r0, 800a824 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 800a7f0:	0c02      	lsrs	r2, r0, #16
 800a7f2:	0412      	lsls	r2, r2, #16
 800a7f4:	b9a2      	cbnz	r2, 800a820 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 800a7f6:	0403      	lsls	r3, r0, #16
 800a7f8:	2010      	movs	r0, #16
 800a7fa:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 800a7fe:	bf04      	itt	eq
 800a800:	021b      	lsleq	r3, r3, #8
 800a802:	3008      	addeq	r0, #8
 800a804:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 800a808:	bf04      	itt	eq
 800a80a:	011b      	lsleq	r3, r3, #4
 800a80c:	3004      	addeq	r0, #4
 800a80e:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 800a812:	bf04      	itt	eq
 800a814:	009b      	lsleq	r3, r3, #2
 800a816:	3002      	addeq	r0, #2
 800a818:	2b00      	cmp	r3, #0
 800a81a:	db04      	blt.n	800a826 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 800a81c:	3001      	adds	r0, #1
 800a81e:	4770      	bx	lr
 800a820:	2000      	movs	r0, #0
 800a822:	e7ea      	b.n	800a7fa <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 800a824:	2020      	movs	r0, #32
 800a826:	4770      	bx	lr

0800a828 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 800a828:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a82c:	b087      	sub	sp, #28
 800a82e:	4681      	mov	r9, r0
 800a830:	4698      	mov	r8, r3
 800a832:	4610      	mov	r0, r2
 800a834:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	; 0x40
 800a838:	460d      	mov	r5, r1
 800a83a:	b981      	cbnz	r1, 800a85e <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x36>
 800a83c:	b14b      	cbz	r3, 800a852 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x2a>
 800a83e:	460b      	mov	r3, r1
 800a840:	e9cd 4700 	strd	r4, r7, [sp]
 800a844:	464a      	mov	r2, r9
 800a846:	4641      	mov	r1, r8
 800a848:	f7ff ffee 	bl	800a828 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800a84c:	b007      	add	sp, #28
 800a84e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a852:	f04f 33ff 	mov.w	r3, #4294967295
 800a856:	603b      	str	r3, [r7, #0]
 800a858:	f06f 4000 	mvn.w	r0, #2147483648	; 0x80000000
 800a85c:	e7f6      	b.n	800a84c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800a85e:	fa32 fa01 	lsrs.w	sl, r2, r1
 800a862:	d107      	bne.n	800a874 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4c>
 800a864:	fb09 f602 	mul.w	r6, r9, r2
 800a868:	fbb6 f0f4 	udiv	r0, r6, r4
 800a86c:	fb04 6610 	mls	r6, r4, r0, r6
 800a870:	603e      	str	r6, [r7, #0]
 800a872:	e7eb      	b.n	800a84c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>
 800a874:	2601      	movs	r6, #1
 800a876:	408e      	lsls	r6, r1
 800a878:	3e01      	subs	r6, #1
 800a87a:	4016      	ands	r6, r2
 800a87c:	fa09 fb01 	lsl.w	fp, r9, r1
 800a880:	4630      	mov	r0, r6
 800a882:	fbbb f3f4 	udiv	r3, fp, r4
 800a886:	9302      	str	r3, [sp, #8]
 800a888:	fb0a f303 	mul.w	r3, sl, r3
 800a88c:	9303      	str	r3, [sp, #12]
 800a88e:	f7ff ffad 	bl	800a7ec <_ZN8touchgfx16TouchCalibration4clzuEm>
 800a892:	464a      	mov	r2, r9
 800a894:	460b      	mov	r3, r1
 800a896:	e9cd 4700 	strd	r4, r7, [sp]
 800a89a:	4601      	mov	r1, r0
 800a89c:	4630      	mov	r0, r6
 800a89e:	f7ff ffc3 	bl	800a828 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800a8a2:	9b02      	ldr	r3, [sp, #8]
 800a8a4:	fb04 bb13 	mls	fp, r4, r3, fp
 800a8a8:	4606      	mov	r6, r0
 800a8aa:	4658      	mov	r0, fp
 800a8ac:	eb05 0108 	add.w	r1, r5, r8
 800a8b0:	f7ff ff9c 	bl	800a7ec <_ZN8touchgfx16TouchCalibration4clzuEm>
 800a8b4:	ab05      	add	r3, sp, #20
 800a8b6:	e9cd 4300 	strd	r4, r3, [sp]
 800a8ba:	465a      	mov	r2, fp
 800a8bc:	4603      	mov	r3, r0
 800a8be:	4650      	mov	r0, sl
 800a8c0:	f7ff ffb2 	bl	800a828 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800a8c4:	6839      	ldr	r1, [r7, #0]
 800a8c6:	9a05      	ldr	r2, [sp, #20]
 800a8c8:	9b03      	ldr	r3, [sp, #12]
 800a8ca:	4411      	add	r1, r2
 800a8cc:	fbb1 f2f4 	udiv	r2, r1, r4
 800a8d0:	18d3      	adds	r3, r2, r3
 800a8d2:	441e      	add	r6, r3
 800a8d4:	fb04 1412 	mls	r4, r4, r2, r1
 800a8d8:	4430      	add	r0, r6
 800a8da:	603c      	str	r4, [r7, #0]
 800a8dc:	e7b6      	b.n	800a84c <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x24>

0800a8de <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 800a8de:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800a8e2:	b085      	sub	sp, #20
 800a8e4:	f1b0 0900 	subs.w	r9, r0, #0
 800a8e8:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800a8ea:	461d      	mov	r5, r3
 800a8ec:	bfbf      	itttt	lt
 800a8ee:	6823      	ldrlt	r3, [r4, #0]
 800a8f0:	425b      	neglt	r3, r3
 800a8f2:	f1c9 0900 	rsblt	r9, r9, #0
 800a8f6:	6023      	strlt	r3, [r4, #0]
 800a8f8:	bfb4      	ite	lt
 800a8fa:	f04f 36ff 	movlt.w	r6, #4294967295
 800a8fe:	2601      	movge	r6, #1
 800a900:	2a00      	cmp	r2, #0
 800a902:	4617      	mov	r7, r2
 800a904:	da04      	bge.n	800a910 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 800a906:	6823      	ldr	r3, [r4, #0]
 800a908:	425b      	negs	r3, r3
 800a90a:	4257      	negs	r7, r2
 800a90c:	4276      	negs	r6, r6
 800a90e:	6023      	str	r3, [r4, #0]
 800a910:	2d00      	cmp	r5, #0
 800a912:	4638      	mov	r0, r7
 800a914:	bfba      	itte	lt
 800a916:	426d      	neglt	r5, r5
 800a918:	f04f 38ff 	movlt.w	r8, #4294967295
 800a91c:	f04f 0801 	movge.w	r8, #1
 800a920:	f7ff ff64 	bl	800a7ec <_ZN8touchgfx16TouchCalibration4clzuEm>
 800a924:	ab03      	add	r3, sp, #12
 800a926:	e9cd 5300 	strd	r5, r3, [sp]
 800a92a:	463a      	mov	r2, r7
 800a92c:	4603      	mov	r3, r0
 800a92e:	4648      	mov	r0, r9
 800a930:	f7ff ff7a 	bl	800a828 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 800a934:	6823      	ldr	r3, [r4, #0]
 800a936:	9a03      	ldr	r2, [sp, #12]
 800a938:	4546      	cmp	r6, r8
 800a93a:	441a      	add	r2, r3
 800a93c:	fb92 f3f5 	sdiv	r3, r2, r5
 800a940:	4418      	add	r0, r3
 800a942:	bf18      	it	ne
 800a944:	4240      	negne	r0, r0
 800a946:	fb05 2313 	mls	r3, r5, r3, r2
 800a94a:	1c72      	adds	r2, r6, #1
 800a94c:	6023      	str	r3, [r4, #0]
 800a94e:	d105      	bne.n	800a95c <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 800a950:	2b00      	cmp	r3, #0
 800a952:	f1c3 0200 	rsb	r2, r3, #0
 800a956:	db0b      	blt.n	800a970 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 800a958:	6022      	str	r2, [r4, #0]
 800a95a:	e006      	b.n	800a96a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800a95c:	2e01      	cmp	r6, #1
 800a95e:	d104      	bne.n	800a96a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800a960:	2b00      	cmp	r3, #0
 800a962:	da02      	bge.n	800a96a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 800a964:	442b      	add	r3, r5
 800a966:	3801      	subs	r0, #1
 800a968:	6023      	str	r3, [r4, #0]
 800a96a:	b005      	add	sp, #20
 800a96c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800a970:	3801      	subs	r0, #1
 800a972:	1b52      	subs	r2, r2, r5
 800a974:	e7f0      	b.n	800a958 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>
	...

0800a978 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 800a978:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 800a97c:	4c1c      	ldr	r4, [pc, #112]	; (800a9f0 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 800a97e:	6807      	ldr	r7, [r0, #0]
 800a980:	69a3      	ldr	r3, [r4, #24]
 800a982:	4605      	mov	r5, r0
 800a984:	b92b      	cbnz	r3, 800a992 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 800a986:	6840      	ldr	r0, [r0, #4]
 800a988:	e9c5 7000 	strd	r7, r0, [r5]
 800a98c:	b004      	add	sp, #16
 800a98e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800a992:	68a2      	ldr	r2, [r4, #8]
 800a994:	6820      	ldr	r0, [r4, #0]
 800a996:	ae04      	add	r6, sp, #16
 800a998:	f04f 0802 	mov.w	r8, #2
 800a99c:	fb93 f1f8 	sdiv	r1, r3, r8
 800a9a0:	440a      	add	r2, r1
 800a9a2:	f846 2d04 	str.w	r2, [r6, #-4]!
 800a9a6:	69e1      	ldr	r1, [r4, #28]
 800a9a8:	9600      	str	r6, [sp, #0]
 800a9aa:	463a      	mov	r2, r7
 800a9ac:	f7ff ff97 	bl	800a8de <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800a9b0:	69a3      	ldr	r3, [r4, #24]
 800a9b2:	686a      	ldr	r2, [r5, #4]
 800a9b4:	6a21      	ldr	r1, [r4, #32]
 800a9b6:	9600      	str	r6, [sp, #0]
 800a9b8:	4607      	mov	r7, r0
 800a9ba:	6860      	ldr	r0, [r4, #4]
 800a9bc:	f7ff ff8f 	bl	800a8de <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800a9c0:	6962      	ldr	r2, [r4, #20]
 800a9c2:	69a3      	ldr	r3, [r4, #24]
 800a9c4:	fb93 f8f8 	sdiv	r8, r3, r8
 800a9c8:	4442      	add	r2, r8
 800a9ca:	9203      	str	r2, [sp, #12]
 800a9cc:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800a9ce:	682a      	ldr	r2, [r5, #0]
 800a9d0:	9600      	str	r6, [sp, #0]
 800a9d2:	4407      	add	r7, r0
 800a9d4:	68e0      	ldr	r0, [r4, #12]
 800a9d6:	f7ff ff82 	bl	800a8de <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800a9da:	9600      	str	r6, [sp, #0]
 800a9dc:	4680      	mov	r8, r0
 800a9de:	69a3      	ldr	r3, [r4, #24]
 800a9e0:	686a      	ldr	r2, [r5, #4]
 800a9e2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800a9e4:	6920      	ldr	r0, [r4, #16]
 800a9e6:	f7ff ff7a 	bl	800a8de <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 800a9ea:	4440      	add	r0, r8
 800a9ec:	e7cc      	b.n	800a988 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 800a9ee:	bf00      	nop
 800a9f0:	2000a0f8 	.word	0x2000a0f8

0800a9f4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 800a9f4:	b510      	push	{r4, lr}
 800a9f6:	4b07      	ldr	r3, [pc, #28]	; (800aa14 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 800a9f8:	781b      	ldrb	r3, [r3, #0]
 800a9fa:	2b01      	cmp	r3, #1
 800a9fc:	d108      	bne.n	800aa10 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 800a9fe:	4b06      	ldr	r3, [pc, #24]	; (800aa18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 800aa00:	880c      	ldrh	r4, [r1, #0]
 800aa02:	881b      	ldrh	r3, [r3, #0]
 800aa04:	f9b0 2000 	ldrsh.w	r2, [r0]
 800aa08:	3b01      	subs	r3, #1
 800aa0a:	1b1b      	subs	r3, r3, r4
 800aa0c:	8003      	strh	r3, [r0, #0]
 800aa0e:	800a      	strh	r2, [r1, #0]
 800aa10:	bd10      	pop	{r4, pc}
 800aa12:	bf00      	nop
 800aa14:	2000a0e4 	.word	0x2000a0e4
 800aa18:	2000a0e8 	.word	0x2000a0e8

0800aa1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 800aa1c:	b510      	push	{r4, lr}
 800aa1e:	4b0a      	ldr	r3, [pc, #40]	; (800aa48 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 800aa20:	781b      	ldrb	r3, [r3, #0]
 800aa22:	2b01      	cmp	r3, #1
 800aa24:	d10e      	bne.n	800aa44 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 800aa26:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 800aa2a:	8843      	ldrh	r3, [r0, #2]
 800aa2c:	f9b0 4000 	ldrsh.w	r4, [r0]
 800aa30:	8044      	strh	r4, [r0, #2]
 800aa32:	18ca      	adds	r2, r1, r3
 800aa34:	4b05      	ldr	r3, [pc, #20]	; (800aa4c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 800aa36:	881b      	ldrh	r3, [r3, #0]
 800aa38:	1a9b      	subs	r3, r3, r2
 800aa3a:	8003      	strh	r3, [r0, #0]
 800aa3c:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800aa40:	80c3      	strh	r3, [r0, #6]
 800aa42:	8081      	strh	r1, [r0, #4]
 800aa44:	bd10      	pop	{r4, pc}
 800aa46:	bf00      	nop
 800aa48:	2000a0e4 	.word	0x2000a0e4
 800aa4c:	2000a0e0 	.word	0x2000a0e0

0800aa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 800aa50:	b510      	push	{r4, lr}
 800aa52:	4b07      	ldr	r3, [pc, #28]	; (800aa70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 800aa54:	781b      	ldrb	r3, [r3, #0]
 800aa56:	2b01      	cmp	r3, #1
 800aa58:	d108      	bne.n	800aa6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 800aa5a:	f9b1 3000 	ldrsh.w	r3, [r1]
 800aa5e:	f9b0 4000 	ldrsh.w	r4, [r0]
 800aa62:	8003      	strh	r3, [r0, #0]
 800aa64:	8893      	ldrh	r3, [r2, #4]
 800aa66:	3b01      	subs	r3, #1
 800aa68:	1b1b      	subs	r3, r3, r4
 800aa6a:	800b      	strh	r3, [r1, #0]
 800aa6c:	bd10      	pop	{r4, pc}
 800aa6e:	bf00      	nop
 800aa70:	2000a0e4 	.word	0x2000a0e4

0800aa74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 800aa74:	b513      	push	{r0, r1, r4, lr}
 800aa76:	4b08      	ldr	r3, [pc, #32]	; (800aa98 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 800aa78:	f9b3 2000 	ldrsh.w	r2, [r3]
 800aa7c:	4b07      	ldr	r3, [pc, #28]	; (800aa9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x28>)
 800aa7e:	f8ad 2004 	strh.w	r2, [sp, #4]
 800aa82:	f9b3 3000 	ldrsh.w	r3, [r3]
 800aa86:	f8ad 3006 	strh.w	r3, [sp, #6]
 800aa8a:	2400      	movs	r4, #0
 800aa8c:	466a      	mov	r2, sp
 800aa8e:	9400      	str	r4, [sp, #0]
 800aa90:	f7ff ffde 	bl	800aa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800aa94:	b002      	add	sp, #8
 800aa96:	bd10      	pop	{r4, pc}
 800aa98:	2000a0e0 	.word	0x2000a0e0
 800aa9c:	2000a0e2 	.word	0x2000a0e2

0800aaa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 800aaa0:	b510      	push	{r4, lr}
 800aaa2:	4b0a      	ldr	r3, [pc, #40]	; (800aacc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 800aaa4:	781b      	ldrb	r3, [r3, #0]
 800aaa6:	2b01      	cmp	r3, #1
 800aaa8:	460a      	mov	r2, r1
 800aaaa:	d10d      	bne.n	800aac8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 800aaac:	8881      	ldrh	r1, [r0, #4]
 800aaae:	8803      	ldrh	r3, [r0, #0]
 800aab0:	440b      	add	r3, r1
 800aab2:	4601      	mov	r1, r0
 800aab4:	3b01      	subs	r3, #1
 800aab6:	f821 3b02 	strh.w	r3, [r1], #2
 800aaba:	f7ff ffc9 	bl	800aa50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 800aabe:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 800aac2:	88c2      	ldrh	r2, [r0, #6]
 800aac4:	8082      	strh	r2, [r0, #4]
 800aac6:	80c3      	strh	r3, [r0, #6]
 800aac8:	bd10      	pop	{r4, pc}
 800aaca:	bf00      	nop
 800aacc:	2000a0e4 	.word	0x2000a0e4

0800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 800aad0:	b507      	push	{r0, r1, r2, lr}
 800aad2:	4b09      	ldr	r3, [pc, #36]	; (800aaf8 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 800aad4:	f9b3 2000 	ldrsh.w	r2, [r3]
 800aad8:	4b08      	ldr	r3, [pc, #32]	; (800aafc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x2c>)
 800aada:	f8ad 2004 	strh.w	r2, [sp, #4]
 800aade:	2100      	movs	r1, #0
 800aae0:	f9b3 3000 	ldrsh.w	r3, [r3]
 800aae4:	9100      	str	r1, [sp, #0]
 800aae6:	4669      	mov	r1, sp
 800aae8:	f8ad 3006 	strh.w	r3, [sp, #6]
 800aaec:	f7ff ffd8 	bl	800aaa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800aaf0:	b003      	add	sp, #12
 800aaf2:	f85d fb04 	ldr.w	pc, [sp], #4
 800aaf6:	bf00      	nop
 800aaf8:	2000a0e0 	.word	0x2000a0e0
 800aafc:	2000a0e2 	.word	0x2000a0e2

0800ab00 <_ZN8touchgfx11Application13requestRedrawEv>:
 800ab00:	4b06      	ldr	r3, [pc, #24]	; (800ab1c <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 800ab02:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ab06:	4b06      	ldr	r3, [pc, #24]	; (800ab20 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 800ab08:	f8a0 2130 	strh.w	r2, [r0, #304]	; 0x130
 800ab0c:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ab10:	f8a0 3132 	strh.w	r3, [r0, #306]	; 0x132
 800ab14:	2100      	movs	r1, #0
 800ab16:	f8c0 112c 	str.w	r1, [r0, #300]	; 0x12c
 800ab1a:	4770      	bx	lr
 800ab1c:	2000a0e0 	.word	0x2000a0e0
 800ab20:	2000a0e2 	.word	0x2000a0e2

0800ab24 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 800ab24:	4b03      	ldr	r3, [pc, #12]	; (800ab34 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 800ab26:	6818      	ldr	r0, [r3, #0]
 800ab28:	b110      	cbz	r0, 800ab30 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 800ab2a:	6803      	ldr	r3, [r0, #0]
 800ab2c:	699b      	ldr	r3, [r3, #24]
 800ab2e:	4718      	bx	r3
 800ab30:	4770      	bx	lr
 800ab32:	bf00      	nop
 800ab34:	2000a128 	.word	0x2000a128

0800ab38 <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 800ab38:	4770      	bx	lr
	...

0800ab3c <_ZN8touchgfx11Application4drawEv>:
 800ab3c:	b507      	push	{r0, r1, r2, lr}
 800ab3e:	4b09      	ldr	r3, [pc, #36]	; (800ab64 <_ZN8touchgfx11Application4drawEv+0x28>)
 800ab40:	f9b3 2000 	ldrsh.w	r2, [r3]
 800ab44:	4b08      	ldr	r3, [pc, #32]	; (800ab68 <_ZN8touchgfx11Application4drawEv+0x2c>)
 800ab46:	f8ad 2004 	strh.w	r2, [sp, #4]
 800ab4a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800ab4e:	f8ad 3006 	strh.w	r3, [sp, #6]
 800ab52:	6803      	ldr	r3, [r0, #0]
 800ab54:	2100      	movs	r1, #0
 800ab56:	9100      	str	r1, [sp, #0]
 800ab58:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ab5a:	4669      	mov	r1, sp
 800ab5c:	4798      	blx	r3
 800ab5e:	b003      	add	sp, #12
 800ab60:	f85d fb04 	ldr.w	pc, [sp], #4
 800ab64:	2000a0e0 	.word	0x2000a0e0
 800ab68:	2000a0e2 	.word	0x2000a0e2

0800ab6c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 800ab6c:	4b03      	ldr	r3, [pc, #12]	; (800ab7c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 800ab6e:	6818      	ldr	r0, [r3, #0]
 800ab70:	b110      	cbz	r0, 800ab78 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 800ab72:	6803      	ldr	r3, [r0, #0]
 800ab74:	69db      	ldr	r3, [r3, #28]
 800ab76:	4718      	bx	r3
 800ab78:	4770      	bx	lr
 800ab7a:	bf00      	nop
 800ab7c:	2000a128 	.word	0x2000a128

0800ab80 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 800ab80:	4b03      	ldr	r3, [pc, #12]	; (800ab90 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 800ab82:	6818      	ldr	r0, [r3, #0]
 800ab84:	b110      	cbz	r0, 800ab8c <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 800ab86:	6803      	ldr	r3, [r0, #0]
 800ab88:	6a1b      	ldr	r3, [r3, #32]
 800ab8a:	4718      	bx	r3
 800ab8c:	4770      	bx	lr
 800ab8e:	bf00      	nop
 800ab90:	2000a128 	.word	0x2000a128

0800ab94 <_ZN8touchgfx11Application14handleKeyEventEh>:
 800ab94:	4b03      	ldr	r3, [pc, #12]	; (800aba4 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 800ab96:	6818      	ldr	r0, [r3, #0]
 800ab98:	b110      	cbz	r0, 800aba0 <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 800ab9a:	6803      	ldr	r3, [r0, #0]
 800ab9c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800ab9e:	4718      	bx	r3
 800aba0:	4770      	bx	lr
 800aba2:	bf00      	nop
 800aba4:	2000a128 	.word	0x2000a128

0800aba8 <_ZN8touchgfx11Application15handleTickEventEv>:
 800aba8:	b570      	push	{r4, r5, r6, lr}
 800abaa:	4d34      	ldr	r5, [pc, #208]	; (800ac7c <_ZN8touchgfx11Application15handleTickEventEv+0xd4>)
 800abac:	4604      	mov	r4, r0
 800abae:	6828      	ldr	r0, [r5, #0]
 800abb0:	b140      	cbz	r0, 800abc4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800abb2:	7a03      	ldrb	r3, [r0, #8]
 800abb4:	b933      	cbnz	r3, 800abc4 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 800abb6:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800abba:	6803      	ldr	r3, [r0, #0]
 800abbc:	689b      	ldr	r3, [r3, #8]
 800abbe:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800abc2:	4718      	bx	r3
 800abc4:	f894 3135 	ldrb.w	r3, [r4, #309]	; 0x135
 800abc8:	b97b      	cbnz	r3, 800abea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800abca:	b170      	cbz	r0, 800abea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800abcc:	7a03      	ldrb	r3, [r0, #8]
 800abce:	b163      	cbz	r3, 800abea <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 800abd0:	4b2b      	ldr	r3, [pc, #172]	; (800ac80 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800abd2:	6818      	ldr	r0, [r3, #0]
 800abd4:	b110      	cbz	r0, 800abdc <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 800abd6:	6803      	ldr	r3, [r0, #0]
 800abd8:	691b      	ldr	r3, [r3, #16]
 800abda:	4798      	blx	r3
 800abdc:	6828      	ldr	r0, [r5, #0]
 800abde:	6803      	ldr	r3, [r0, #0]
 800abe0:	68db      	ldr	r3, [r3, #12]
 800abe2:	4798      	blx	r3
 800abe4:	2301      	movs	r3, #1
 800abe6:	f884 3135 	strb.w	r3, [r4, #309]	; 0x135
 800abea:	2500      	movs	r5, #0
 800abec:	f8b4 0084 	ldrh.w	r0, [r4, #132]	; 0x84
 800abf0:	42a8      	cmp	r0, r5
 800abf2:	dd0c      	ble.n	800ac0e <_ZN8touchgfx11Application15handleTickEventEv+0x66>
 800abf4:	1963      	adds	r3, r4, r5
 800abf6:	f893 2088 	ldrb.w	r2, [r3, #136]	; 0x88
 800abfa:	b132      	cbz	r2, 800ac0a <_ZN8touchgfx11Application15handleTickEventEv+0x62>
 800abfc:	eb05 0245 	add.w	r2, r5, r5, lsl #1
 800ac00:	4413      	add	r3, r2
 800ac02:	6858      	ldr	r0, [r3, #4]
 800ac04:	6803      	ldr	r3, [r0, #0]
 800ac06:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800ac08:	4798      	blx	r3
 800ac0a:	3501      	adds	r5, #1
 800ac0c:	e7ee      	b.n	800abec <_ZN8touchgfx11Application15handleTickEventEv+0x44>
 800ac0e:	2300      	movs	r3, #0
 800ac10:	461a      	mov	r2, r3
 800ac12:	4298      	cmp	r0, r3
 800ac14:	d114      	bne.n	800ac40 <_ZN8touchgfx11Application15handleTickEventEv+0x98>
 800ac16:	1d25      	adds	r5, r4, #4
 800ac18:	f8b4 1084 	ldrh.w	r1, [r4, #132]	; 0x84
 800ac1c:	1e48      	subs	r0, r1, #1
 800ac1e:	b280      	uxth	r0, r0
 800ac20:	4291      	cmp	r1, r2
 800ac22:	dd24      	ble.n	800ac6e <_ZN8touchgfx11Application15handleTickEventEv+0xc6>
 800ac24:	4288      	cmp	r0, r1
 800ac26:	d2fb      	bcs.n	800ac20 <_ZN8touchgfx11Application15handleTickEventEv+0x78>
 800ac28:	eb04 0380 	add.w	r3, r4, r0, lsl #2
 800ac2c:	3304      	adds	r3, #4
 800ac2e:	eb05 0181 	add.w	r1, r5, r1, lsl #2
 800ac32:	428b      	cmp	r3, r1
 800ac34:	d018      	beq.n	800ac68 <_ZN8touchgfx11Application15handleTickEventEv+0xc0>
 800ac36:	f853 6f04 	ldr.w	r6, [r3, #4]!
 800ac3a:	f843 6c04 	str.w	r6, [r3, #-4]
 800ac3e:	e7f8      	b.n	800ac32 <_ZN8touchgfx11Application15handleTickEventEv+0x8a>
 800ac40:	18e1      	adds	r1, r4, r3
 800ac42:	f891 5088 	ldrb.w	r5, [r1, #136]	; 0x88
 800ac46:	b16d      	cbz	r5, 800ac64 <_ZN8touchgfx11Application15handleTickEventEv+0xbc>
 800ac48:	429a      	cmp	r2, r3
 800ac4a:	d00a      	beq.n	800ac62 <_ZN8touchgfx11Application15handleTickEventEv+0xba>
 800ac4c:	eb03 0643 	add.w	r6, r3, r3, lsl #1
 800ac50:	4431      	add	r1, r6
 800ac52:	684e      	ldr	r6, [r1, #4]
 800ac54:	b291      	uxth	r1, r2
 800ac56:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 800ac5a:	604e      	str	r6, [r1, #4]
 800ac5c:	18a1      	adds	r1, r4, r2
 800ac5e:	f881 5088 	strb.w	r5, [r1, #136]	; 0x88
 800ac62:	3201      	adds	r2, #1
 800ac64:	3301      	adds	r3, #1
 800ac66:	e7d4      	b.n	800ac12 <_ZN8touchgfx11Application15handleTickEventEv+0x6a>
 800ac68:	f8a4 0084 	strh.w	r0, [r4, #132]	; 0x84
 800ac6c:	e7d4      	b.n	800ac18 <_ZN8touchgfx11Application15handleTickEventEv+0x70>
 800ac6e:	4b04      	ldr	r3, [pc, #16]	; (800ac80 <_ZN8touchgfx11Application15handleTickEventEv+0xd8>)
 800ac70:	6818      	ldr	r0, [r3, #0]
 800ac72:	b110      	cbz	r0, 800ac7a <_ZN8touchgfx11Application15handleTickEventEv+0xd2>
 800ac74:	6803      	ldr	r3, [r0, #0]
 800ac76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ac78:	e7a1      	b.n	800abbe <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 800ac7a:	bd70      	pop	{r4, r5, r6, pc}
 800ac7c:	2000a12c 	.word	0x2000a12c
 800ac80:	2000a128 	.word	0x2000a128

0800ac84 <_ZN8touchgfx11ApplicationD1Ev>:
 800ac84:	4770      	bx	lr

0800ac86 <_ZN8touchgfx11ApplicationD0Ev>:
 800ac86:	b510      	push	{r4, lr}
 800ac88:	f44f 719c 	mov.w	r1, #312	; 0x138
 800ac8c:	4604      	mov	r4, r0
 800ac8e:	f00e fba8 	bl	80193e2 <_ZdlPvj>
 800ac92:	4620      	mov	r0, r4
 800ac94:	bd10      	pop	{r4, pc}
	...

0800ac98 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 800ac98:	b570      	push	{r4, r5, r6, lr}
 800ac9a:	4606      	mov	r6, r0
 800ac9c:	460c      	mov	r4, r1
 800ac9e:	b929      	cbnz	r1, 800acac <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x14>
 800aca0:	4b0c      	ldr	r3, [pc, #48]	; (800acd4 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x3c>)
 800aca2:	4a0d      	ldr	r2, [pc, #52]	; (800acd8 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x40>)
 800aca4:	480d      	ldr	r0, [pc, #52]	; (800acdc <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x44>)
 800aca6:	2167      	movs	r1, #103	; 0x67
 800aca8:	f00e fbca 	bl	8019440 <__assert_func>
 800acac:	4d0c      	ldr	r5, [pc, #48]	; (800ace0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x48>)
 800acae:	2300      	movs	r3, #0
 800acb0:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800acb4:	6828      	ldr	r0, [r5, #0]
 800acb6:	b110      	cbz	r0, 800acbe <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x26>
 800acb8:	6803      	ldr	r3, [r0, #0]
 800acba:	695b      	ldr	r3, [r3, #20]
 800acbc:	4798      	blx	r3
 800acbe:	602c      	str	r4, [r5, #0]
 800acc0:	6823      	ldr	r3, [r4, #0]
 800acc2:	4620      	mov	r0, r4
 800acc4:	68db      	ldr	r3, [r3, #12]
 800acc6:	4798      	blx	r3
 800acc8:	6833      	ldr	r3, [r6, #0]
 800acca:	4630      	mov	r0, r6
 800accc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800acce:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800acd2:	4718      	bx	r3
 800acd4:	0801c0e4 	.word	0x0801c0e4
 800acd8:	0801c1b4 	.word	0x0801c1b4
 800acdc:	0801c0ee 	.word	0x0801c0ee
 800ace0:	2000a128 	.word	0x2000a128

0800ace4 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 800ace4:	b510      	push	{r4, lr}
 800ace6:	f9b1 4000 	ldrsh.w	r4, [r1]
 800acea:	888a      	ldrh	r2, [r1, #4]
 800acec:	f9b0 3000 	ldrsh.w	r3, [r0]
 800acf0:	4422      	add	r2, r4
 800acf2:	b212      	sxth	r2, r2
 800acf4:	4293      	cmp	r3, r2
 800acf6:	da15      	bge.n	800ad24 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800acf8:	8882      	ldrh	r2, [r0, #4]
 800acfa:	4413      	add	r3, r2
 800acfc:	b21b      	sxth	r3, r3
 800acfe:	429c      	cmp	r4, r3
 800ad00:	da10      	bge.n	800ad24 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ad02:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 800ad06:	88c9      	ldrh	r1, [r1, #6]
 800ad08:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 800ad0c:	4419      	add	r1, r3
 800ad0e:	b209      	sxth	r1, r1
 800ad10:	428a      	cmp	r2, r1
 800ad12:	da07      	bge.n	800ad24 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 800ad14:	88c0      	ldrh	r0, [r0, #6]
 800ad16:	4410      	add	r0, r2
 800ad18:	b200      	sxth	r0, r0
 800ad1a:	4283      	cmp	r3, r0
 800ad1c:	bfac      	ite	ge
 800ad1e:	2000      	movge	r0, #0
 800ad20:	2001      	movlt	r0, #1
 800ad22:	bd10      	pop	{r4, pc}
 800ad24:	2000      	movs	r0, #0
 800ad26:	e7fc      	b.n	800ad22 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

0800ad28 <_ZNK8touchgfx4Rect8includesERKS0_>:
 800ad28:	b570      	push	{r4, r5, r6, lr}
 800ad2a:	f9b1 4000 	ldrsh.w	r4, [r1]
 800ad2e:	f9b0 5000 	ldrsh.w	r5, [r0]
 800ad32:	42ac      	cmp	r4, r5
 800ad34:	db18      	blt.n	800ad68 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800ad36:	f9b1 2002 	ldrsh.w	r2, [r1, #2]
 800ad3a:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800ad3e:	429a      	cmp	r2, r3
 800ad40:	db12      	blt.n	800ad68 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800ad42:	8886      	ldrh	r6, [r0, #4]
 800ad44:	4435      	add	r5, r6
 800ad46:	888e      	ldrh	r6, [r1, #4]
 800ad48:	4434      	add	r4, r6
 800ad4a:	b22d      	sxth	r5, r5
 800ad4c:	b224      	sxth	r4, r4
 800ad4e:	42a5      	cmp	r5, r4
 800ad50:	db0a      	blt.n	800ad68 <_ZNK8touchgfx4Rect8includesERKS0_+0x40>
 800ad52:	88c0      	ldrh	r0, [r0, #6]
 800ad54:	4418      	add	r0, r3
 800ad56:	88cb      	ldrh	r3, [r1, #6]
 800ad58:	441a      	add	r2, r3
 800ad5a:	b200      	sxth	r0, r0
 800ad5c:	b212      	sxth	r2, r2
 800ad5e:	4290      	cmp	r0, r2
 800ad60:	bfb4      	ite	lt
 800ad62:	2000      	movlt	r0, #0
 800ad64:	2001      	movge	r0, #1
 800ad66:	bd70      	pop	{r4, r5, r6, pc}
 800ad68:	2000      	movs	r0, #0
 800ad6a:	e7fc      	b.n	800ad66 <_ZNK8touchgfx4Rect8includesERKS0_+0x3e>

0800ad6c <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 800ad6c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800ad6e:	4604      	mov	r4, r0
 800ad70:	4608      	mov	r0, r1
 800ad72:	460d      	mov	r5, r1
 800ad74:	f7fd ff3f 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad78:	b978      	cbnz	r0, 800ad9a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 800ad7a:	4620      	mov	r0, r4
 800ad7c:	f7fd ff3b 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ad80:	f9b5 6000 	ldrsh.w	r6, [r5]
 800ad84:	b150      	cbz	r0, 800ad9c <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 800ad86:	8026      	strh	r6, [r4, #0]
 800ad88:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 800ad8c:	8063      	strh	r3, [r4, #2]
 800ad8e:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 800ad92:	80a3      	strh	r3, [r4, #4]
 800ad94:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800ad98:	80e3      	strh	r3, [r4, #6]
 800ad9a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800ad9c:	f9b4 1000 	ldrsh.w	r1, [r4]
 800ada0:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 800ada4:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 800ada8:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 800adac:	88ed      	ldrh	r5, [r5, #6]
 800adae:	42b1      	cmp	r1, r6
 800adb0:	460f      	mov	r7, r1
 800adb2:	bfa8      	it	ge
 800adb4:	4637      	movge	r7, r6
 800adb6:	4293      	cmp	r3, r2
 800adb8:	4618      	mov	r0, r3
 800adba:	4466      	add	r6, ip
 800adbc:	bfa8      	it	ge
 800adbe:	4610      	movge	r0, r2
 800adc0:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 800adc4:	8027      	strh	r7, [r4, #0]
 800adc6:	442a      	add	r2, r5
 800adc8:	88e5      	ldrh	r5, [r4, #6]
 800adca:	8060      	strh	r0, [r4, #2]
 800adcc:	4461      	add	r1, ip
 800adce:	442b      	add	r3, r5
 800add0:	b236      	sxth	r6, r6
 800add2:	b209      	sxth	r1, r1
 800add4:	b212      	sxth	r2, r2
 800add6:	b21b      	sxth	r3, r3
 800add8:	428e      	cmp	r6, r1
 800adda:	bfac      	ite	ge
 800addc:	ebc7 0106 	rsbge	r1, r7, r6
 800ade0:	ebc7 0101 	rsblt	r1, r7, r1
 800ade4:	429a      	cmp	r2, r3
 800ade6:	bfac      	ite	ge
 800ade8:	ebc0 0202 	rsbge	r2, r0, r2
 800adec:	ebc0 0203 	rsblt	r2, r0, r3
 800adf0:	80a1      	strh	r1, [r4, #4]
 800adf2:	80e2      	strh	r2, [r4, #6]
 800adf4:	e7d1      	b.n	800ad9a <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

0800adf8 <_ZN8touchgfx11Application11getInstanceEv>:
 800adf8:	4b01      	ldr	r3, [pc, #4]	; (800ae00 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 800adfa:	6818      	ldr	r0, [r3, #0]
 800adfc:	4770      	bx	lr
 800adfe:	bf00      	nop
 800ae00:	2000a138 	.word	0x2000a138

0800ae04 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
 800ae04:	2300      	movs	r3, #0
 800ae06:	f8a0 3084 	strh.w	r3, [r0, #132]	; 0x84
 800ae0a:	f100 0288 	add.w	r2, r0, #136	; 0x88
 800ae0e:	30a8      	adds	r0, #168	; 0xa8
 800ae10:	f802 3b01 	strb.w	r3, [r2], #1
 800ae14:	4282      	cmp	r2, r0
 800ae16:	d1fb      	bne.n	800ae10 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv+0xc>
 800ae18:	4770      	bx	lr

0800ae1a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 800ae1a:	4603      	mov	r3, r0
 800ae1c:	f100 0140 	add.w	r1, r0, #64	; 0x40
 800ae20:	2200      	movs	r2, #0
 800ae22:	801a      	strh	r2, [r3, #0]
 800ae24:	805a      	strh	r2, [r3, #2]
 800ae26:	809a      	strh	r2, [r3, #4]
 800ae28:	80da      	strh	r2, [r3, #6]
 800ae2a:	3308      	adds	r3, #8
 800ae2c:	428b      	cmp	r3, r1
 800ae2e:	d1f8      	bne.n	800ae22 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 800ae30:	f8a0 2040 	strh.w	r2, [r0, #64]	; 0x40
 800ae34:	4770      	bx	lr
	...

0800ae38 <_ZN8touchgfx11ApplicationC1Ev>:
 800ae38:	b570      	push	{r4, r5, r6, lr}
 800ae3a:	4b1a      	ldr	r3, [pc, #104]	; (800aea4 <_ZN8touchgfx11ApplicationC1Ev+0x6c>)
 800ae3c:	6003      	str	r3, [r0, #0]
 800ae3e:	2500      	movs	r5, #0
 800ae40:	4604      	mov	r4, r0
 800ae42:	f8a0 5084 	strh.w	r5, [r0, #132]	; 0x84
 800ae46:	30a8      	adds	r0, #168	; 0xa8
 800ae48:	f7ff ffe7 	bl	800ae1a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ae4c:	f104 00ea 	add.w	r0, r4, #234	; 0xea
 800ae50:	f7ff ffe3 	bl	800ae1a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800ae54:	f8a4 512c 	strh.w	r5, [r4, #300]	; 0x12c
 800ae58:	f8a4 512e 	strh.w	r5, [r4, #302]	; 0x12e
 800ae5c:	f8a4 5130 	strh.w	r5, [r4, #304]	; 0x130
 800ae60:	f8a4 5132 	strh.w	r5, [r4, #306]	; 0x132
 800ae64:	f884 5134 	strb.w	r5, [r4, #308]	; 0x134
 800ae68:	f884 5135 	strb.w	r5, [r4, #309]	; 0x135
 800ae6c:	490e      	ldr	r1, [pc, #56]	; (800aea8 <_ZN8touchgfx11ApplicationC1Ev+0x70>)
 800ae6e:	480f      	ldr	r0, [pc, #60]	; (800aeac <_ZN8touchgfx11ApplicationC1Ev+0x74>)
 800ae70:	4e0f      	ldr	r6, [pc, #60]	; (800aeb0 <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 800ae72:	f00e f9a9 	bl	80191c8 <CRC_Lock>
 800ae76:	4b0f      	ldr	r3, [pc, #60]	; (800aeb4 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 800ae78:	b158      	cbz	r0, 800ae92 <_ZN8touchgfx11ApplicationC1Ev+0x5a>
 800ae7a:	801d      	strh	r5, [r3, #0]
 800ae7c:	4a0e      	ldr	r2, [pc, #56]	; (800aeb8 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 800ae7e:	2300      	movs	r3, #0
 800ae80:	6013      	str	r3, [r2, #0]
 800ae82:	4a0e      	ldr	r2, [pc, #56]	; (800aebc <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 800ae84:	6033      	str	r3, [r6, #0]
 800ae86:	4620      	mov	r0, r4
 800ae88:	6013      	str	r3, [r2, #0]
 800ae8a:	f7ff ffbb 	bl	800ae04 <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
 800ae8e:	4620      	mov	r0, r4
 800ae90:	bd70      	pop	{r4, r5, r6, pc}
 800ae92:	f44f 6280 	mov.w	r2, #1024	; 0x400
 800ae96:	2002      	movs	r0, #2
 800ae98:	801a      	strh	r2, [r3, #0]
 800ae9a:	6030      	str	r0, [r6, #0]
 800ae9c:	f001 fa9c 	bl	800c3d8 <_ZN8touchgfx6Screen4drawEv>
 800aea0:	e7ec      	b.n	800ae7c <_ZN8touchgfx11ApplicationC1Ev+0x44>
 800aea2:	bf00      	nop
 800aea4:	0801c178 	.word	0x0801c178
 800aea8:	b5e8b5cd 	.word	0xb5e8b5cd
 800aeac:	f407a5c2 	.word	0xf407a5c2
 800aeb0:	2000a128 	.word	0x2000a128
 800aeb4:	20000060 	.word	0x20000060
 800aeb8:	2000a138 	.word	0x2000a138
 800aebc:	2000a12c 	.word	0x2000a12c

0800aec0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 800aec0:	f8b0 3040 	ldrh.w	r3, [r0, #64]	; 0x40
 800aec4:	428b      	cmp	r3, r1
 800aec6:	b510      	push	{r4, lr}
 800aec8:	d90e      	bls.n	800aee8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800aeca:	3b01      	subs	r3, #1
 800aecc:	b29b      	uxth	r3, r3
 800aece:	428b      	cmp	r3, r1
 800aed0:	f8a0 3040 	strh.w	r3, [r0, #64]	; 0x40
 800aed4:	d908      	bls.n	800aee8 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x28>
 800aed6:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 800aeda:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 800aede:	681a      	ldr	r2, [r3, #0]
 800aee0:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 800aee4:	685a      	ldr	r2, [r3, #4]
 800aee6:	6062      	str	r2, [r4, #4]
 800aee8:	bd10      	pop	{r4, pc}
	...

0800aeec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>:
 800aeec:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800aeee:	466b      	mov	r3, sp
 800aef0:	e883 0006 	stmia.w	r3, {r1, r2}
 800aef4:	f8b0 2040 	ldrh.w	r2, [r0, #64]	; 0x40
 800aef8:	2a07      	cmp	r2, #7
 800aefa:	4604      	mov	r4, r0
 800aefc:	d906      	bls.n	800af0c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x20>
 800aefe:	4b09      	ldr	r3, [pc, #36]	; (800af24 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x38>)
 800af00:	4a09      	ldr	r2, [pc, #36]	; (800af28 <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x3c>)
 800af02:	480a      	ldr	r0, [pc, #40]	; (800af2c <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_+0x40>)
 800af04:	f44f 71c0 	mov.w	r1, #384	; 0x180
 800af08:	f00e fa9a 	bl	8019440 <__assert_func>
 800af0c:	1c51      	adds	r1, r2, #1
 800af0e:	f8a0 1040 	strh.w	r1, [r0, #64]	; 0x40
 800af12:	eb00 05c2 	add.w	r5, r0, r2, lsl #3
 800af16:	cb03      	ldmia	r3!, {r0, r1}
 800af18:	f844 0032 	str.w	r0, [r4, r2, lsl #3]
 800af1c:	6069      	str	r1, [r5, #4]
 800af1e:	b003      	add	sp, #12
 800af20:	bd30      	pop	{r4, r5, pc}
 800af22:	bf00      	nop
 800af24:	0801c118 	.word	0x0801c118
 800af28:	0801c1f8 	.word	0x0801c1f8
 800af2c:	0801c147 	.word	0x0801c147

0800af30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 800af30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800af34:	b08d      	sub	sp, #52	; 0x34
 800af36:	ac08      	add	r4, sp, #32
 800af38:	4683      	mov	fp, r0
 800af3a:	4620      	mov	r0, r4
 800af3c:	e884 0006 	stmia.w	r4, {r1, r2}
 800af40:	f7fd fe59 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800af44:	2800      	cmp	r0, #0
 800af46:	d16a      	bne.n	800b01e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800af48:	9402      	str	r4, [sp, #8]
 800af4a:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800af4e:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800af52:	eb0b 06c5 	add.w	r6, fp, r5, lsl #3
 800af56:	2400      	movs	r4, #0
 800af58:	9301      	str	r3, [sp, #4]
 800af5a:	36a0      	adds	r6, #160	; 0xa0
 800af5c:	42a5      	cmp	r5, r4
 800af5e:	d00d      	beq.n	800af7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c>
 800af60:	eba6 01c4 	sub.w	r1, r6, r4, lsl #3
 800af64:	9802      	ldr	r0, [sp, #8]
 800af66:	f7ff fedf 	bl	800ad28 <_ZNK8touchgfx4Rect8includesERKS0_>
 800af6a:	b128      	cbz	r0, 800af78 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x48>
 800af6c:	1e69      	subs	r1, r5, #1
 800af6e:	1b09      	subs	r1, r1, r4
 800af70:	b289      	uxth	r1, r1
 800af72:	9801      	ldr	r0, [sp, #4]
 800af74:	f7ff ffa4 	bl	800aec0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800af78:	3401      	adds	r4, #1
 800af7a:	e7ef      	b.n	800af5c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 800af7c:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800af80:	9703      	str	r7, [sp, #12]
 800af82:	1e7b      	subs	r3, r7, #1
 800af84:	9300      	str	r3, [sp, #0]
 800af86:	eb0b 0ac7 	add.w	sl, fp, r7, lsl #3
 800af8a:	2400      	movs	r4, #0
 800af8c:	4655      	mov	r5, sl
 800af8e:	9704      	str	r7, [sp, #16]
 800af90:	4626      	mov	r6, r4
 800af92:	9b04      	ldr	r3, [sp, #16]
 800af94:	2b00      	cmp	r3, #0
 800af96:	d078      	beq.n	800b08a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x15a>
 800af98:	9902      	ldr	r1, [sp, #8]
 800af9a:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800af9e:	f7ff fea1 	bl	800ace4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800afa2:	b360      	cbz	r0, 800affe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800afa4:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 800afa8:	f9b5 c0a0 	ldrsh.w	ip, [r5, #160]	; 0xa0
 800afac:	f9bd 9022 	ldrsh.w	r9, [sp, #34]	; 0x22
 800afb0:	f9b5 80a2 	ldrsh.w	r8, [r5, #162]	; 0xa2
 800afb4:	45e6      	cmp	lr, ip
 800afb6:	db35      	blt.n	800b024 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800afb8:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800afbc:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800afc0:	4472      	add	r2, lr
 800afc2:	4463      	add	r3, ip
 800afc4:	b212      	sxth	r2, r2
 800afc6:	b21b      	sxth	r3, r3
 800afc8:	429a      	cmp	r2, r3
 800afca:	dc2b      	bgt.n	800b024 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xf4>
 800afcc:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800afd0:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800afd4:	fa1f f288 	uxth.w	r2, r8
 800afd8:	4413      	add	r3, r2
 800afda:	b29b      	uxth	r3, r3
 800afdc:	45c1      	cmp	r9, r8
 800afde:	fa0f fe83 	sxth.w	lr, r3
 800afe2:	fa1f fc89 	uxth.w	ip, r9
 800afe6:	db0f      	blt.n	800b008 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xd8>
 800afe8:	eba3 030c 	sub.w	r3, r3, ip
 800afec:	1ac9      	subs	r1, r1, r3
 800afee:	b209      	sxth	r1, r1
 800aff0:	2900      	cmp	r1, #0
 800aff2:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800aff6:	dd12      	ble.n	800b01e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800aff8:	f8ad e022 	strh.w	lr, [sp, #34]	; 0x22
 800affc:	4604      	mov	r4, r0
 800affe:	9b04      	ldr	r3, [sp, #16]
 800b000:	3b01      	subs	r3, #1
 800b002:	9304      	str	r3, [sp, #16]
 800b004:	3d08      	subs	r5, #8
 800b006:	e7c4      	b.n	800af92 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x62>
 800b008:	4461      	add	r1, ip
 800b00a:	b209      	sxth	r1, r1
 800b00c:	4571      	cmp	r1, lr
 800b00e:	dc3a      	bgt.n	800b086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800b010:	eba2 020c 	sub.w	r2, r2, ip
 800b014:	b212      	sxth	r2, r2
 800b016:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800b01a:	2a00      	cmp	r2, #0
 800b01c:	dcee      	bgt.n	800affc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800b01e:	b00d      	add	sp, #52	; 0x34
 800b020:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b024:	45c1      	cmp	r9, r8
 800b026:	db2e      	blt.n	800b086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800b028:	f8bd 3026 	ldrh.w	r3, [sp, #38]	; 0x26
 800b02c:	4499      	add	r9, r3
 800b02e:	f8b5 30a6 	ldrh.w	r3, [r5, #166]	; 0xa6
 800b032:	4498      	add	r8, r3
 800b034:	fa0f f989 	sxth.w	r9, r9
 800b038:	fa0f f888 	sxth.w	r8, r8
 800b03c:	45c1      	cmp	r9, r8
 800b03e:	dc22      	bgt.n	800b086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800b040:	f8b5 30a4 	ldrh.w	r3, [r5, #164]	; 0xa4
 800b044:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 800b048:	fa1f f28c 	uxth.w	r2, ip
 800b04c:	4413      	add	r3, r2
 800b04e:	b29b      	uxth	r3, r3
 800b050:	45e6      	cmp	lr, ip
 800b052:	fa1f f88e 	uxth.w	r8, lr
 800b056:	fa0f f983 	sxth.w	r9, r3
 800b05a:	db0a      	blt.n	800b072 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x142>
 800b05c:	eba3 0308 	sub.w	r3, r3, r8
 800b060:	1ac9      	subs	r1, r1, r3
 800b062:	b209      	sxth	r1, r1
 800b064:	2900      	cmp	r1, #0
 800b066:	f8ad 1024 	strh.w	r1, [sp, #36]	; 0x24
 800b06a:	ddd8      	ble.n	800b01e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800b06c:	f8ad 9020 	strh.w	r9, [sp, #32]
 800b070:	e7c4      	b.n	800affc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xcc>
 800b072:	4441      	add	r1, r8
 800b074:	b209      	sxth	r1, r1
 800b076:	4549      	cmp	r1, r9
 800b078:	dc05      	bgt.n	800b086 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x156>
 800b07a:	eba2 0208 	sub.w	r2, r2, r8
 800b07e:	b212      	sxth	r2, r2
 800b080:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 800b084:	e7c9      	b.n	800b01a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 800b086:	4606      	mov	r6, r0
 800b088:	e7b9      	b.n	800affe <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xce>
 800b08a:	2c00      	cmp	r4, #0
 800b08c:	f47f af7d 	bne.w	800af8a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5a>
 800b090:	2e00      	cmp	r6, #0
 800b092:	f000 81dd 	beq.w	800b450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800b096:	f9bd 7022 	ldrsh.w	r7, [sp, #34]	; 0x22
 800b09a:	f9bd 6020 	ldrsh.w	r6, [sp, #32]
 800b09e:	f8bd 2024 	ldrh.w	r2, [sp, #36]	; 0x24
 800b0a2:	b2b9      	uxth	r1, r7
 800b0a4:	9104      	str	r1, [sp, #16]
 800b0a6:	9804      	ldr	r0, [sp, #16]
 800b0a8:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800b0ac:	4401      	add	r1, r0
 800b0ae:	b2b3      	uxth	r3, r6
 800b0b0:	b289      	uxth	r1, r1
 800b0b2:	441a      	add	r2, r3
 800b0b4:	9105      	str	r1, [sp, #20]
 800b0b6:	b292      	uxth	r2, r2
 800b0b8:	f9bd 9014 	ldrsh.w	r9, [sp, #20]
 800b0bc:	fa0f f882 	sxth.w	r8, r2
 800b0c0:	4655      	mov	r5, sl
 800b0c2:	e9cd 2306 	strd	r2, r3, [sp, #24]
 800b0c6:	9b03      	ldr	r3, [sp, #12]
 800b0c8:	2b00      	cmp	r3, #0
 800b0ca:	d054      	beq.n	800b176 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x246>
 800b0cc:	9902      	ldr	r1, [sp, #8]
 800b0ce:	f105 00a0 	add.w	r0, r5, #160	; 0xa0
 800b0d2:	f7ff fe07 	bl	800ace4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800b0d6:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 800b0da:	b1d8      	cbz	r0, 800b114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800b0dc:	f9b5 e0a0 	ldrsh.w	lr, [r5, #160]	; 0xa0
 800b0e0:	f9b5 10a2 	ldrsh.w	r1, [r5, #162]	; 0xa2
 800b0e4:	4576      	cmp	r6, lr
 800b0e6:	dc26      	bgt.n	800b136 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800b0e8:	f8b5 c0a4 	ldrh.w	ip, [r5, #164]	; 0xa4
 800b0ec:	44f4      	add	ip, lr
 800b0ee:	fa0f fc8c 	sxth.w	ip, ip
 800b0f2:	45e0      	cmp	r8, ip
 800b0f4:	db1f      	blt.n	800b136 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 800b0f6:	428f      	cmp	r7, r1
 800b0f8:	fa1f fc81 	uxth.w	ip, r1
 800b0fc:	f8b5 10a6 	ldrh.w	r1, [r5, #166]	; 0xa6
 800b100:	dc0f      	bgt.n	800b122 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f2>
 800b102:	9805      	ldr	r0, [sp, #20]
 800b104:	f8a5 90a2 	strh.w	r9, [r5, #162]	; 0xa2
 800b108:	eba0 0c0c 	sub.w	ip, r0, ip
 800b10c:	eba1 010c 	sub.w	r1, r1, ip
 800b110:	f8a5 10a6 	strh.w	r1, [r5, #166]	; 0xa6
 800b114:	4620      	mov	r0, r4
 800b116:	9903      	ldr	r1, [sp, #12]
 800b118:	3901      	subs	r1, #1
 800b11a:	9103      	str	r1, [sp, #12]
 800b11c:	3d08      	subs	r5, #8
 800b11e:	4604      	mov	r4, r0
 800b120:	e7cf      	b.n	800b0c2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x192>
 800b122:	4461      	add	r1, ip
 800b124:	b209      	sxth	r1, r1
 800b126:	4549      	cmp	r1, r9
 800b128:	dcf5      	bgt.n	800b116 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800b12a:	9904      	ldr	r1, [sp, #16]
 800b12c:	eba1 0c0c 	sub.w	ip, r1, ip
 800b130:	f8a5 c0a6 	strh.w	ip, [r5, #166]	; 0xa6
 800b134:	e7ee      	b.n	800b114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800b136:	428f      	cmp	r7, r1
 800b138:	dced      	bgt.n	800b116 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800b13a:	f8b5 c0a6 	ldrh.w	ip, [r5, #166]	; 0xa6
 800b13e:	4461      	add	r1, ip
 800b140:	b209      	sxth	r1, r1
 800b142:	4589      	cmp	r9, r1
 800b144:	dbe7      	blt.n	800b116 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800b146:	4576      	cmp	r6, lr
 800b148:	fa1f fc8e 	uxth.w	ip, lr
 800b14c:	f8b5 10a4 	ldrh.w	r1, [r5, #164]	; 0xa4
 800b150:	dc08      	bgt.n	800b164 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x234>
 800b152:	eba2 0c0c 	sub.w	ip, r2, ip
 800b156:	eba1 010c 	sub.w	r1, r1, ip
 800b15a:	f8a5 80a0 	strh.w	r8, [r5, #160]	; 0xa0
 800b15e:	f8a5 10a4 	strh.w	r1, [r5, #164]	; 0xa4
 800b162:	e7d7      	b.n	800b114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800b164:	4461      	add	r1, ip
 800b166:	b209      	sxth	r1, r1
 800b168:	4588      	cmp	r8, r1
 800b16a:	dbd4      	blt.n	800b116 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 800b16c:	eba3 0c0c 	sub.w	ip, r3, ip
 800b170:	f8a5 c0a4 	strh.w	ip, [r5, #164]	; 0xa4
 800b174:	e7ce      	b.n	800b114 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e4>
 800b176:	2c00      	cmp	r4, #0
 800b178:	f000 816a 	beq.w	800b450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800b17c:	9b00      	ldr	r3, [sp, #0]
 800b17e:	3301      	adds	r3, #1
 800b180:	f000 8166 	beq.w	800b450 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x520>
 800b184:	f10a 04a0 	add.w	r4, sl, #160	; 0xa0
 800b188:	4621      	mov	r1, r4
 800b18a:	9802      	ldr	r0, [sp, #8]
 800b18c:	f7ff fdcc 	bl	800ad28 <_ZNK8touchgfx4Rect8includesERKS0_>
 800b190:	b120      	cbz	r0, 800b19c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x26c>
 800b192:	f8bd 1000 	ldrh.w	r1, [sp]
 800b196:	9801      	ldr	r0, [sp, #4]
 800b198:	f7ff fe92 	bl	800aec0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b19c:	9902      	ldr	r1, [sp, #8]
 800b19e:	4620      	mov	r0, r4
 800b1a0:	f7ff fda0 	bl	800ace4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800b1a4:	2800      	cmp	r0, #0
 800b1a6:	f000 809b 	beq.w	800b2e0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3b0>
 800b1aa:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 800b1ae:	f8bd 7024 	ldrh.w	r7, [sp, #36]	; 0x24
 800b1b2:	f9ba 40a0 	ldrsh.w	r4, [sl, #160]	; 0xa0
 800b1b6:	f8ba 30a4 	ldrh.w	r3, [sl, #164]	; 0xa4
 800b1ba:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800b1be:	f9ba 00a2 	ldrsh.w	r0, [sl, #162]	; 0xa2
 800b1c2:	fa1f f288 	uxth.w	r2, r8
 800b1c6:	19d5      	adds	r5, r2, r7
 800b1c8:	fa1f f985 	uxth.w	r9, r5
 800b1cc:	fa0f f589 	sxth.w	r5, r9
 800b1d0:	b2a1      	uxth	r1, r4
 800b1d2:	440b      	add	r3, r1
 800b1d4:	9503      	str	r5, [sp, #12]
 800b1d6:	45a0      	cmp	r8, r4
 800b1d8:	f8bb 50e8 	ldrh.w	r5, [fp, #232]	; 0xe8
 800b1dc:	9507      	str	r5, [sp, #28]
 800b1de:	b29b      	uxth	r3, r3
 800b1e0:	f340 809d 	ble.w	800b31e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 800b1e4:	1a52      	subs	r2, r2, r1
 800b1e6:	b292      	uxth	r2, r2
 800b1e8:	4584      	cmp	ip, r0
 800b1ea:	fa0f fe83 	sxth.w	lr, r3
 800b1ee:	b215      	sxth	r5, r2
 800b1f0:	dd2f      	ble.n	800b252 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x322>
 800b1f2:	9e00      	ldr	r6, [sp, #0]
 800b1f4:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 800b1f8:	eb0b 08c6 	add.w	r8, fp, r6, lsl #3
 800b1fc:	9e03      	ldr	r6, [sp, #12]
 800b1fe:	eba6 060e 	sub.w	r6, r6, lr
 800b202:	f8b8 e0ae 	ldrh.w	lr, [r8, #174]	; 0xae
 800b206:	fa1f fc8c 	uxth.w	ip, ip
 800b20a:	b280      	uxth	r0, r0
 800b20c:	ebac 0300 	sub.w	r3, ip, r0
 800b210:	448c      	add	ip, r1
 800b212:	4470      	add	r0, lr
 800b214:	b29b      	uxth	r3, r3
 800b216:	fa0f fc8c 	sxth.w	ip, ip
 800b21a:	b200      	sxth	r0, r0
 800b21c:	b21c      	sxth	r4, r3
 800b21e:	ebac 0000 	sub.w	r0, ip, r0
 800b222:	4366      	muls	r6, r4
 800b224:	4368      	muls	r0, r5
 800b226:	4286      	cmp	r6, r0
 800b228:	db09      	blt.n	800b23e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x30e>
 800b22a:	f8b8 30a8 	ldrh.w	r3, [r8, #168]	; 0xa8
 800b22e:	f8a8 40ae 	strh.w	r4, [r8, #174]	; 0xae
 800b232:	4417      	add	r7, r2
 800b234:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b238:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800b23c:	e685      	b.n	800af4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800b23e:	440b      	add	r3, r1
 800b240:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b244:	f8b8 30aa 	ldrh.w	r3, [r8, #170]	; 0xaa
 800b248:	f8a8 50ac 	strh.w	r5, [r8, #172]	; 0xac
 800b24c:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b250:	e67b      	b.n	800af4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800b252:	9e03      	ldr	r6, [sp, #12]
 800b254:	45b6      	cmp	lr, r6
 800b256:	da28      	bge.n	800b2aa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37a>
 800b258:	9b00      	ldr	r3, [sp, #0]
 800b25a:	f8bd 4026 	ldrh.w	r4, [sp, #38]	; 0x26
 800b25e:	eb0b 01c3 	add.w	r1, fp, r3, lsl #3
 800b262:	eb04 030c 	add.w	r3, r4, ip
 800b266:	fa1f f883 	uxth.w	r8, r3
 800b26a:	f8b1 30ae 	ldrh.w	r3, [r1, #174]	; 0xae
 800b26e:	4403      	add	r3, r0
 800b270:	eba3 0308 	sub.w	r3, r3, r8
 800b274:	b29b      	uxth	r3, r3
 800b276:	fa0f f988 	sxth.w	r9, r8
 800b27a:	eba0 000c 	sub.w	r0, r0, ip
 800b27e:	fa0f f883 	sxth.w	r8, r3
 800b282:	eba6 060e 	sub.w	r6, r6, lr
 800b286:	4368      	muls	r0, r5
 800b288:	fb08 f606 	mul.w	r6, r8, r6
 800b28c:	42b0      	cmp	r0, r6
 800b28e:	dc06      	bgt.n	800b29e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x36e>
 800b290:	f8a1 90aa 	strh.w	r9, [r1, #170]	; 0xaa
 800b294:	f8a1 80ae 	strh.w	r8, [r1, #174]	; 0xae
 800b298:	f8b1 30a8 	ldrh.w	r3, [r1, #168]	; 0xa8
 800b29c:	e7c9      	b.n	800b232 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x302>
 800b29e:	4423      	add	r3, r4
 800b2a0:	f8a1 50ac 	strh.w	r5, [r1, #172]	; 0xac
 800b2a4:	f8ad 3026 	strh.w	r3, [sp, #38]	; 0x26
 800b2a8:	e64f      	b.n	800af4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800b2aa:	9807      	ldr	r0, [sp, #28]
 800b2ac:	eba3 0309 	sub.w	r3, r3, r9
 800b2b0:	b29b      	uxth	r3, r3
 800b2b2:	2806      	cmp	r0, #6
 800b2b4:	fa0f fc83 	sxth.w	ip, r3
 800b2b8:	d818      	bhi.n	800b2ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3bc>
 800b2ba:	4652      	mov	r2, sl
 800b2bc:	ab0a      	add	r3, sp, #40	; 0x28
 800b2be:	f852 0fa0 	ldr.w	r0, [r2, #160]!
 800b2c2:	6851      	ldr	r1, [r2, #4]
 800b2c4:	f8aa c0a4 	strh.w	ip, [sl, #164]	; 0xa4
 800b2c8:	c303      	stmia	r3!, {r0, r1}
 800b2ca:	9b03      	ldr	r3, [sp, #12]
 800b2cc:	f8aa 30a0 	strh.w	r3, [sl, #160]	; 0xa0
 800b2d0:	f8ad 502c 	strh.w	r5, [sp, #44]	; 0x2c
 800b2d4:	ab0a      	add	r3, sp, #40	; 0x28
 800b2d6:	e893 0006 	ldmia.w	r3, {r1, r2}
 800b2da:	9801      	ldr	r0, [sp, #4]
 800b2dc:	f7ff fe06 	bl	800aeec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800b2e0:	9b00      	ldr	r3, [sp, #0]
 800b2e2:	3b01      	subs	r3, #1
 800b2e4:	9300      	str	r3, [sp, #0]
 800b2e6:	f1aa 0a08 	sub.w	sl, sl, #8
 800b2ea:	e747      	b.n	800b17c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 800b2ec:	9800      	ldr	r0, [sp, #0]
 800b2ee:	45ac      	cmp	ip, r5
 800b2f0:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800b2f4:	db0c      	blt.n	800b310 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e0>
 800b2f6:	4417      	add	r7, r2
 800b2f8:	b2bf      	uxth	r7, r7
 800b2fa:	4458      	add	r0, fp
 800b2fc:	f8ad 7024 	strh.w	r7, [sp, #36]	; 0x24
 800b300:	440f      	add	r7, r1
 800b302:	f8ad 4020 	strh.w	r4, [sp, #32]
 800b306:	f8a0 70a8 	strh.w	r7, [r0, #168]	; 0xa8
 800b30a:	f8a0 c0ac 	strh.w	ip, [r0, #172]	; 0xac
 800b30e:	e61c      	b.n	800af4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800b310:	4458      	add	r0, fp
 800b312:	f8a0 50ac 	strh.w	r5, [r0, #172]	; 0xac
 800b316:	443b      	add	r3, r7
 800b318:	f8ad 3024 	strh.w	r3, [sp, #36]	; 0x24
 800b31c:	e615      	b.n	800af4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800b31e:	f8bd 5026 	ldrh.w	r5, [sp, #38]	; 0x26
 800b322:	fa1f f18c 	uxth.w	r1, ip
 800b326:	eb01 0e05 	add.w	lr, r1, r5
 800b32a:	b282      	uxth	r2, r0
 800b32c:	fa1f fe8e 	uxth.w	lr, lr
 800b330:	9204      	str	r2, [sp, #16]
 800b332:	fa0f f28e 	sxth.w	r2, lr
 800b336:	9205      	str	r2, [sp, #20]
 800b338:	9e04      	ldr	r6, [sp, #16]
 800b33a:	f8ba 20a6 	ldrh.w	r2, [sl, #166]	; 0xa6
 800b33e:	4432      	add	r2, r6
 800b340:	b292      	uxth	r2, r2
 800b342:	4584      	cmp	ip, r0
 800b344:	9206      	str	r2, [sp, #24]
 800b346:	da26      	bge.n	800b396 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x466>
 800b348:	eba3 0309 	sub.w	r3, r3, r9
 800b34c:	eba2 020e 	sub.w	r2, r2, lr
 800b350:	b29b      	uxth	r3, r3
 800b352:	b292      	uxth	r2, r2
 800b354:	fa0f fa83 	sxth.w	sl, r3
 800b358:	b211      	sxth	r1, r2
 800b35a:	eba0 000c 	sub.w	r0, r0, ip
 800b35e:	eba4 0408 	sub.w	r4, r4, r8
 800b362:	fb0a f000 	mul.w	r0, sl, r0
 800b366:	434c      	muls	r4, r1
 800b368:	42a0      	cmp	r0, r4
 800b36a:	9800      	ldr	r0, [sp, #0]
 800b36c:	ea4f 00c0 	mov.w	r0, r0, lsl #3
 800b370:	dc06      	bgt.n	800b380 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x450>
 800b372:	4458      	add	r0, fp
 800b374:	9a05      	ldr	r2, [sp, #20]
 800b376:	f8a0 10ae 	strh.w	r1, [r0, #174]	; 0xae
 800b37a:	f8a0 20aa 	strh.w	r2, [r0, #170]	; 0xaa
 800b37e:	e7ca      	b.n	800b316 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800b380:	eb0b 0300 	add.w	r3, fp, r0
 800b384:	9903      	ldr	r1, [sp, #12]
 800b386:	f8a3 a0ac 	strh.w	sl, [r3, #172]	; 0xac
 800b38a:	f8a3 10a8 	strh.w	r1, [r3, #168]	; 0xa8
 800b38e:	442a      	add	r2, r5
 800b390:	f8ad 2026 	strh.w	r2, [sp, #38]	; 0x26
 800b394:	e5d9      	b.n	800af4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800b396:	9e04      	ldr	r6, [sp, #16]
 800b398:	9a03      	ldr	r2, [sp, #12]
 800b39a:	1b89      	subs	r1, r1, r6
 800b39c:	b21e      	sxth	r6, r3
 800b39e:	b289      	uxth	r1, r1
 800b3a0:	4296      	cmp	r6, r2
 800b3a2:	fa0f fc81 	sxth.w	ip, r1
 800b3a6:	dd26      	ble.n	800b3f6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c6>
 800b3a8:	eba3 0309 	sub.w	r3, r3, r9
 800b3ac:	f9bd 2018 	ldrsh.w	r2, [sp, #24]
 800b3b0:	9e05      	ldr	r6, [sp, #20]
 800b3b2:	b29b      	uxth	r3, r3
 800b3b4:	eba6 0902 	sub.w	r9, r6, r2
 800b3b8:	b218      	sxth	r0, r3
 800b3ba:	eba4 0408 	sub.w	r4, r4, r8
 800b3be:	fb0c f404 	mul.w	r4, ip, r4
 800b3c2:	fb00 f909 	mul.w	r9, r0, r9
 800b3c6:	9a00      	ldr	r2, [sp, #0]
 800b3c8:	454c      	cmp	r4, r9
 800b3ca:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 800b3ce:	db03      	blt.n	800b3d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4a8>
 800b3d0:	445a      	add	r2, fp
 800b3d2:	f8a2 c0ae 	strh.w	ip, [r2, #174]	; 0xae
 800b3d6:	e79e      	b.n	800b316 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3e6>
 800b3d8:	eb0b 0302 	add.w	r3, fp, r2
 800b3dc:	9a03      	ldr	r2, [sp, #12]
 800b3de:	f8a3 20a8 	strh.w	r2, [r3, #168]	; 0xa8
 800b3e2:	f8a3 00ac 	strh.w	r0, [r3, #172]	; 0xac
 800b3e6:	4429      	add	r1, r5
 800b3e8:	f8b3 30aa 	ldrh.w	r3, [r3, #170]	; 0xaa
 800b3ec:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800b3f0:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800b3f4:	e5a9      	b.n	800af4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800b3f6:	9b06      	ldr	r3, [sp, #24]
 800b3f8:	9c07      	ldr	r4, [sp, #28]
 800b3fa:	eba3 020e 	sub.w	r2, r3, lr
 800b3fe:	b292      	uxth	r2, r2
 800b400:	2c06      	cmp	r4, #6
 800b402:	b213      	sxth	r3, r2
 800b404:	d80d      	bhi.n	800b422 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4f2>
 800b406:	4651      	mov	r1, sl
 800b408:	aa0a      	add	r2, sp, #40	; 0x28
 800b40a:	f851 0fa0 	ldr.w	r0, [r1, #160]!
 800b40e:	6849      	ldr	r1, [r1, #4]
 800b410:	f8aa 30a6 	strh.w	r3, [sl, #166]	; 0xa6
 800b414:	9b05      	ldr	r3, [sp, #20]
 800b416:	f8aa 30a2 	strh.w	r3, [sl, #162]	; 0xa2
 800b41a:	c203      	stmia	r2!, {r0, r1}
 800b41c:	f8ad c02e 	strh.w	ip, [sp, #46]	; 0x2e
 800b420:	e758      	b.n	800b2d4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3a4>
 800b422:	9c00      	ldr	r4, [sp, #0]
 800b424:	4563      	cmp	r3, ip
 800b426:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800b42a:	db0d      	blt.n	800b448 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x518>
 800b42c:	4429      	add	r1, r5
 800b42e:	9a04      	ldr	r2, [sp, #16]
 800b430:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800b434:	b289      	uxth	r1, r1
 800b436:	445c      	add	r4, fp
 800b438:	f8ad 1026 	strh.w	r1, [sp, #38]	; 0x26
 800b43c:	4411      	add	r1, r2
 800b43e:	f8a4 10aa 	strh.w	r1, [r4, #170]	; 0xaa
 800b442:	f8a4 30ae 	strh.w	r3, [r4, #174]	; 0xae
 800b446:	e580      	b.n	800af4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800b448:	445c      	add	r4, fp
 800b44a:	f8a4 c0ae 	strh.w	ip, [r4, #174]	; 0xae
 800b44e:	e79e      	b.n	800b38e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45e>
 800b450:	f8bb 70e8 	ldrh.w	r7, [fp, #232]	; 0xe8
 800b454:	2f07      	cmp	r7, #7
 800b456:	d806      	bhi.n	800b466 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x536>
 800b458:	ab08      	add	r3, sp, #32
 800b45a:	e893 0006 	ldmia.w	r3, {r1, r2}
 800b45e:	9801      	ldr	r0, [sp, #4]
 800b460:	f7ff fd44 	bl	800aeec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800b464:	e5db      	b.n	800b01e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xee>
 800b466:	f10b 03a8 	add.w	r3, fp, #168	; 0xa8
 800b46a:	f107 39ff 	add.w	r9, r7, #4294967295
 800b46e:	f06f 4a00 	mvn.w	sl, #2147483648	; 0x80000000
 800b472:	eb0b 07c7 	add.w	r7, fp, r7, lsl #3
 800b476:	f04f 35ff 	mov.w	r5, #4294967295
 800b47a:	2400      	movs	r4, #0
 800b47c:	9304      	str	r3, [sp, #16]
 800b47e:	f9b7 30a4 	ldrsh.w	r3, [r7, #164]	; 0xa4
 800b482:	9300      	str	r3, [sp, #0]
 800b484:	f109 32ff 	add.w	r2, r9, #4294967295
 800b488:	f9b7 30a6 	ldrsh.w	r3, [r7, #166]	; 0xa6
 800b48c:	9303      	str	r3, [sp, #12]
 800b48e:	4690      	mov	r8, r2
 800b490:	f107 03a0 	add.w	r3, r7, #160	; 0xa0
 800b494:	f1b8 3fff 	cmp.w	r8, #4294967295
 800b498:	bf14      	ite	ne
 800b49a:	9904      	ldrne	r1, [sp, #16]
 800b49c:	f8dd e008 	ldreq.w	lr, [sp, #8]
 800b4a0:	6818      	ldr	r0, [r3, #0]
 800b4a2:	9206      	str	r2, [sp, #24]
 800b4a4:	bf18      	it	ne
 800b4a6:	eb01 0ec8 	addne.w	lr, r1, r8, lsl #3
 800b4aa:	f10d 0c28 	add.w	ip, sp, #40	; 0x28
 800b4ae:	f8be 1006 	ldrh.w	r1, [lr, #6]
 800b4b2:	f8be 6004 	ldrh.w	r6, [lr, #4]
 800b4b6:	9305      	str	r3, [sp, #20]
 800b4b8:	fb16 f601 	smulbb	r6, r6, r1
 800b4bc:	6859      	ldr	r1, [r3, #4]
 800b4be:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800b4c2:	4671      	mov	r1, lr
 800b4c4:	a80a      	add	r0, sp, #40	; 0x28
 800b4c6:	f7ff fc51 	bl	800ad6c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800b4ca:	f8bd 002e 	ldrh.w	r0, [sp, #46]	; 0x2e
 800b4ce:	f8bd 102c 	ldrh.w	r1, [sp, #44]	; 0x2c
 800b4d2:	9b03      	ldr	r3, [sp, #12]
 800b4d4:	9a00      	ldr	r2, [sp, #0]
 800b4d6:	fb11 f100 	smulbb	r1, r1, r0
 800b4da:	fb02 6603 	mla	r6, r2, r3, r6
 800b4de:	1b8e      	subs	r6, r1, r6
 800b4e0:	2008      	movs	r0, #8
 800b4e2:	fb91 f1f0 	sdiv	r1, r1, r0
 800b4e6:	42b1      	cmp	r1, r6
 800b4e8:	dc21      	bgt.n	800b52e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800b4ea:	4556      	cmp	r6, sl
 800b4ec:	e9dd 3205 	ldrd	r3, r2, [sp, #20]
 800b4f0:	da03      	bge.n	800b4fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 800b4f2:	b1e6      	cbz	r6, 800b52e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fe>
 800b4f4:	46b2      	mov	sl, r6
 800b4f6:	4645      	mov	r5, r8
 800b4f8:	464c      	mov	r4, r9
 800b4fa:	f108 38ff 	add.w	r8, r8, #4294967295
 800b4fe:	f118 0f02 	cmn.w	r8, #2
 800b502:	d1c7      	bne.n	800b494 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x564>
 800b504:	f1b2 3fff 	cmp.w	r2, #4294967295
 800b508:	f1a7 0708 	sub.w	r7, r7, #8
 800b50c:	4691      	mov	r9, r2
 800b50e:	d1b6      	bne.n	800b47e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x54e>
 800b510:	9b01      	ldr	r3, [sp, #4]
 800b512:	b2a6      	uxth	r6, r4
 800b514:	00e4      	lsls	r4, r4, #3
 800b516:	1918      	adds	r0, r3, r4
 800b518:	1c6b      	adds	r3, r5, #1
 800b51a:	d10b      	bne.n	800b534 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x604>
 800b51c:	4601      	mov	r1, r0
 800b51e:	9802      	ldr	r0, [sp, #8]
 800b520:	f7ff fc24 	bl	800ad6c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800b524:	4631      	mov	r1, r6
 800b526:	9801      	ldr	r0, [sp, #4]
 800b528:	f7ff fcca 	bl	800aec0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b52c:	e50d      	b.n	800af4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1a>
 800b52e:	4645      	mov	r5, r8
 800b530:	464c      	mov	r4, r9
 800b532:	e7ed      	b.n	800b510 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5e0>
 800b534:	9b01      	ldr	r3, [sp, #4]
 800b536:	00ed      	lsls	r5, r5, #3
 800b538:	1959      	adds	r1, r3, r5
 800b53a:	f7ff fc17 	bl	800ad6c <_ZN8touchgfx4Rect11expandToFitERKS0_>
 800b53e:	9b02      	ldr	r3, [sp, #8]
 800b540:	cb03      	ldmia	r3!, {r0, r1}
 800b542:	445d      	add	r5, fp
 800b544:	445c      	add	r4, fp
 800b546:	f8c5 00a8 	str.w	r0, [r5, #168]	; 0xa8
 800b54a:	f8c5 10ac 	str.w	r1, [r5, #172]	; 0xac
 800b54e:	f854 0fa8 	ldr.w	r0, [r4, #168]!
 800b552:	9b02      	ldr	r3, [sp, #8]
 800b554:	6861      	ldr	r1, [r4, #4]
 800b556:	c303      	stmia	r3!, {r0, r1}
 800b558:	e7e4      	b.n	800b524 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5f4>
	...

0800b55c <_ZN8touchgfx11Application4drawERNS_4RectE>:
 800b55c:	b530      	push	{r4, r5, lr}
 800b55e:	4b1d      	ldr	r3, [pc, #116]	; (800b5d4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x78>)
 800b560:	b085      	sub	sp, #20
 800b562:	460c      	mov	r4, r1
 800b564:	f9b3 2000 	ldrsh.w	r2, [r3]
 800b568:	4b1b      	ldr	r3, [pc, #108]	; (800b5d8 <_ZN8touchgfx11Application4drawERNS_4RectE+0x7c>)
 800b56a:	f8ad 2004 	strh.w	r2, [sp, #4]
 800b56e:	2100      	movs	r1, #0
 800b570:	f9b3 3000 	ldrsh.w	r3, [r3]
 800b574:	9100      	str	r1, [sp, #0]
 800b576:	4605      	mov	r5, r0
 800b578:	6861      	ldr	r1, [r4, #4]
 800b57a:	6820      	ldr	r0, [r4, #0]
 800b57c:	f8ad 3006 	strh.w	r3, [sp, #6]
 800b580:	ab02      	add	r3, sp, #8
 800b582:	c303      	stmia	r3!, {r0, r1}
 800b584:	4669      	mov	r1, sp
 800b586:	a802      	add	r0, sp, #8
 800b588:	f7fd faf2 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 800b58c:	ab02      	add	r3, sp, #8
 800b58e:	cb03      	ldmia	r3!, {r0, r1}
 800b590:	4b12      	ldr	r3, [pc, #72]	; (800b5dc <_ZN8touchgfx11Application4drawERNS_4RectE+0x80>)
 800b592:	6020      	str	r0, [r4, #0]
 800b594:	6818      	ldr	r0, [r3, #0]
 800b596:	6061      	str	r1, [r4, #4]
 800b598:	b138      	cbz	r0, 800b5aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800b59a:	f895 3134 	ldrb.w	r3, [r5, #308]	; 0x134
 800b59e:	b133      	cbz	r3, 800b5ae <_ZN8touchgfx11Application4drawERNS_4RectE+0x52>
 800b5a0:	6821      	ldr	r1, [r4, #0]
 800b5a2:	6862      	ldr	r2, [r4, #4]
 800b5a4:	4628      	mov	r0, r5
 800b5a6:	f7ff fcc3 	bl	800af30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800b5aa:	b005      	add	sp, #20
 800b5ac:	bd30      	pop	{r4, r5, pc}
 800b5ae:	6803      	ldr	r3, [r0, #0]
 800b5b0:	4621      	mov	r1, r4
 800b5b2:	689b      	ldr	r3, [r3, #8]
 800b5b4:	4798      	blx	r3
 800b5b6:	4b0a      	ldr	r3, [pc, #40]	; (800b5e0 <_ZN8touchgfx11Application4drawERNS_4RectE+0x84>)
 800b5b8:	6818      	ldr	r0, [r3, #0]
 800b5ba:	b118      	cbz	r0, 800b5c4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x68>
 800b5bc:	6803      	ldr	r3, [r0, #0]
 800b5be:	4621      	mov	r1, r4
 800b5c0:	689b      	ldr	r3, [r3, #8]
 800b5c2:	4798      	blx	r3
 800b5c4:	4b07      	ldr	r3, [pc, #28]	; (800b5e4 <_ZN8touchgfx11Application4drawERNS_4RectE+0x88>)
 800b5c6:	6818      	ldr	r0, [r3, #0]
 800b5c8:	6803      	ldr	r3, [r0, #0]
 800b5ca:	4621      	mov	r1, r4
 800b5cc:	699b      	ldr	r3, [r3, #24]
 800b5ce:	4798      	blx	r3
 800b5d0:	e7eb      	b.n	800b5aa <_ZN8touchgfx11Application4drawERNS_4RectE+0x4e>
 800b5d2:	bf00      	nop
 800b5d4:	2000a0e0 	.word	0x2000a0e0
 800b5d8:	2000a0e2 	.word	0x2000a0e2
 800b5dc:	2000a128 	.word	0x2000a128
 800b5e0:	2000a124 	.word	0x2000a124
 800b5e4:	2000a0ec 	.word	0x2000a0ec

0800b5e8 <_ZN8touchgfx11Application19cacheDrawOperationsEb>:
 800b5e8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800b5ec:	4604      	mov	r4, r0
 800b5ee:	b09b      	sub	sp, #108	; 0x6c
 800b5f0:	f880 1134 	strb.w	r1, [r0, #308]	; 0x134
 800b5f4:	b129      	cbz	r1, 800b602 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a>
 800b5f6:	2300      	movs	r3, #0
 800b5f8:	f8a0 30e8 	strh.w	r3, [r0, #232]	; 0xe8
 800b5fc:	b01b      	add	sp, #108	; 0x6c
 800b5fe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800b602:	f500 7696 	add.w	r6, r0, #300	; 0x12c
 800b606:	4630      	mov	r0, r6
 800b608:	f7fd faf5 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b60c:	4605      	mov	r5, r0
 800b60e:	b940      	cbnz	r0, 800b622 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3a>
 800b610:	e896 0006 	ldmia.w	r6, {r1, r2}
 800b614:	4620      	mov	r0, r4
 800b616:	f7ff fc8b 	bl	800af30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800b61a:	f8c4 512c 	str.w	r5, [r4, #300]	; 0x12c
 800b61e:	f8c4 5130 	str.w	r5, [r4, #304]	; 0x130
 800b622:	4ba7      	ldr	r3, [pc, #668]	; (800b8c0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2d8>)
 800b624:	681b      	ldr	r3, [r3, #0]
 800b626:	b33b      	cbz	r3, 800b678 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800b628:	4da6      	ldr	r5, [pc, #664]	; (800b8c4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2dc>)
 800b62a:	4628      	mov	r0, r5
 800b62c:	f7fd fae3 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b630:	4606      	mov	r6, r0
 800b632:	bb08      	cbnz	r0, 800b678 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x90>
 800b634:	4628      	mov	r0, r5
 800b636:	f7ff f9f1 	bl	800aa1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800b63a:	6829      	ldr	r1, [r5, #0]
 800b63c:	686a      	ldr	r2, [r5, #4]
 800b63e:	4620      	mov	r0, r4
 800b640:	f7ff fc76 	bl	800af30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800b644:	802e      	strh	r6, [r5, #0]
 800b646:	806e      	strh	r6, [r5, #2]
 800b648:	80ae      	strh	r6, [r5, #4]
 800b64a:	80ee      	strh	r6, [r5, #6]
 800b64c:	4f9e      	ldr	r7, [pc, #632]	; (800b8c8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e0>)
 800b64e:	a809      	add	r0, sp, #36	; 0x24
 800b650:	f7ff fbe3 	bl	800ae1a <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 800b654:	883d      	ldrh	r5, [r7, #0]
 800b656:	462e      	mov	r6, r5
 800b658:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800b65c:	42b3      	cmp	r3, r6
 800b65e:	d910      	bls.n	800b682 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9a>
 800b660:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800b664:	a809      	add	r0, sp, #36	; 0x24
 800b666:	f8d3 10a8 	ldr.w	r1, [r3, #168]	; 0xa8
 800b66a:	f8d3 20ac 	ldr.w	r2, [r3, #172]	; 0xac
 800b66e:	3601      	adds	r6, #1
 800b670:	f7ff fc3c 	bl	800aeec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800b674:	b2b6      	uxth	r6, r6
 800b676:	e7ef      	b.n	800b658 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x70>
 800b678:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800b67c:	2b00      	cmp	r3, #0
 800b67e:	d1e5      	bne.n	800b64c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x64>
 800b680:	e7bc      	b.n	800b5fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800b682:	462e      	mov	r6, r5
 800b684:	f8b4 312a 	ldrh.w	r3, [r4, #298]	; 0x12a
 800b688:	42b3      	cmp	r3, r6
 800b68a:	d90b      	bls.n	800b6a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xbc>
 800b68c:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 800b690:	4620      	mov	r0, r4
 800b692:	f8d3 10ea 	ldr.w	r1, [r3, #234]	; 0xea
 800b696:	f8d3 20ee 	ldr.w	r2, [r3, #238]	; 0xee
 800b69a:	3601      	adds	r6, #1
 800b69c:	f7ff fc48 	bl	800af30 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>
 800b6a0:	b2b6      	uxth	r6, r6
 800b6a2:	e7ef      	b.n	800b684 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x9c>
 800b6a4:	4a89      	ldr	r2, [pc, #548]	; (800b8cc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e4>)
 800b6a6:	6813      	ldr	r3, [r2, #0]
 800b6a8:	f893 3048 	ldrb.w	r3, [r3, #72]	; 0x48
 800b6ac:	2b01      	cmp	r3, #1
 800b6ae:	4690      	mov	r8, r2
 800b6b0:	f040 8094 	bne.w	800b7dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1f4>
 800b6b4:	eb04 03c5 	add.w	r3, r4, r5, lsl #3
 800b6b8:	f8b4 00e8 	ldrh.w	r0, [r4, #232]	; 0xe8
 800b6bc:	33aa      	adds	r3, #170	; 0xaa
 800b6be:	f04f 0900 	mov.w	r9, #0
 800b6c2:	42a8      	cmp	r0, r5
 800b6c4:	f103 0308 	add.w	r3, r3, #8
 800b6c8:	dd0a      	ble.n	800b6e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xf8>
 800b6ca:	f833 2c08 	ldrh.w	r2, [r3, #-8]
 800b6ce:	f833 1c04 	ldrh.w	r1, [r3, #-4]
 800b6d2:	440a      	add	r2, r1
 800b6d4:	b212      	sxth	r2, r2
 800b6d6:	4591      	cmp	r9, r2
 800b6d8:	bfb8      	it	lt
 800b6da:	4691      	movlt	r9, r2
 800b6dc:	3501      	adds	r5, #1
 800b6de:	e7f0      	b.n	800b6c2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0xda>
 800b6e0:	4b7b      	ldr	r3, [pc, #492]	; (800b8d0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2e8>)
 800b6e2:	4e7c      	ldr	r6, [pc, #496]	; (800b8d4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ec>)
 800b6e4:	881d      	ldrh	r5, [r3, #0]
 800b6e6:	2300      	movs	r3, #0
 800b6e8:	e9cd 3305 	strd	r3, r3, [sp, #20]
 800b6ec:	2d0f      	cmp	r5, #15
 800b6ee:	bf8c      	ite	hi
 800b6f0:	08ed      	lsrhi	r5, r5, #3
 800b6f2:	2501      	movls	r5, #1
 800b6f4:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800b6f8:	f8bd 101a 	ldrh.w	r1, [sp, #26]
 800b6fc:	f8d8 0000 	ldr.w	r0, [r8]
 800b700:	440b      	add	r3, r1
 800b702:	b21b      	sxth	r3, r3
 800b704:	4599      	cmp	r9, r3
 800b706:	6802      	ldr	r2, [r0, #0]
 800b708:	dd4b      	ble.n	800b7a2 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1ba>
 800b70a:	f8d2 3090 	ldr.w	r3, [r2, #144]	; 0x90
 800b70e:	4798      	blx	r3
 800b710:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800b714:	f8bd 3016 	ldrh.w	r3, [sp, #22]
 800b718:	4413      	add	r3, r2
 800b71a:	b21b      	sxth	r3, r3
 800b71c:	195a      	adds	r2, r3, r5
 800b71e:	4290      	cmp	r0, r2
 800b720:	da07      	bge.n	800b732 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800b722:	4581      	cmp	r9, r0
 800b724:	dd05      	ble.n	800b732 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14a>
 800b726:	4298      	cmp	r0, r3
 800b728:	da33      	bge.n	800b792 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800b72a:	2b00      	cmp	r3, #0
 800b72c:	dd31      	ble.n	800b792 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1aa>
 800b72e:	4648      	mov	r0, r9
 800b730:	e004      	b.n	800b73c <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x154>
 800b732:	4298      	cmp	r0, r3
 800b734:	dbfb      	blt.n	800b72e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x146>
 800b736:	4548      	cmp	r0, r9
 800b738:	bfa8      	it	ge
 800b73a:	4648      	movge	r0, r9
 800b73c:	f9b6 2000 	ldrsh.w	r2, [r6]
 800b740:	f8b7 a000 	ldrh.w	sl, [r7]
 800b744:	f8ad 3016 	strh.w	r3, [sp, #22]
 800b748:	2100      	movs	r1, #0
 800b74a:	1ac0      	subs	r0, r0, r3
 800b74c:	f8ad 1014 	strh.w	r1, [sp, #20]
 800b750:	f8ad 2018 	strh.w	r2, [sp, #24]
 800b754:	f8ad 001a 	strh.w	r0, [sp, #26]
 800b758:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800b75c:	4553      	cmp	r3, sl
 800b75e:	d9c9      	bls.n	800b6f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800b760:	eb04 02ca 	add.w	r2, r4, sl, lsl #3
 800b764:	ab07      	add	r3, sp, #28
 800b766:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800b76a:	6851      	ldr	r1, [r2, #4]
 800b76c:	c303      	stmia	r3!, {r0, r1}
 800b76e:	a807      	add	r0, sp, #28
 800b770:	a905      	add	r1, sp, #20
 800b772:	f7fd f9fd 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 800b776:	a807      	add	r0, sp, #28
 800b778:	f7fd fa3d 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b77c:	b920      	cbnz	r0, 800b788 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1a0>
 800b77e:	6823      	ldr	r3, [r4, #0]
 800b780:	a907      	add	r1, sp, #28
 800b782:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b784:	4620      	mov	r0, r4
 800b786:	4798      	blx	r3
 800b788:	f10a 0a01 	add.w	sl, sl, #1
 800b78c:	fa1f fa8a 	uxth.w	sl, sl
 800b790:	e7e2      	b.n	800b758 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x170>
 800b792:	f8d8 0000 	ldr.w	r0, [r8]
 800b796:	6803      	ldr	r3, [r0, #0]
 800b798:	2101      	movs	r1, #1
 800b79a:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800b79e:	4798      	blx	r3
 800b7a0:	e7a8      	b.n	800b6f4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x10c>
 800b7a2:	6a13      	ldr	r3, [r2, #32]
 800b7a4:	4798      	blx	r3
 800b7a6:	4b4c      	ldr	r3, [pc, #304]	; (800b8d8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f0>)
 800b7a8:	781b      	ldrb	r3, [r3, #0]
 800b7aa:	2b00      	cmp	r3, #0
 800b7ac:	f43f af26 	beq.w	800b5fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800b7b0:	2300      	movs	r3, #0
 800b7b2:	883d      	ldrh	r5, [r7, #0]
 800b7b4:	f8a4 312a 	strh.w	r3, [r4, #298]	; 0x12a
 800b7b8:	34ea      	adds	r4, #234	; 0xea
 800b7ba:	f8bd 3064 	ldrh.w	r3, [sp, #100]	; 0x64
 800b7be:	42ab      	cmp	r3, r5
 800b7c0:	f67f af1c 	bls.w	800b5fc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x14>
 800b7c4:	ab1a      	add	r3, sp, #104	; 0x68
 800b7c6:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 800b7ca:	3b44      	subs	r3, #68	; 0x44
 800b7cc:	e893 0006 	ldmia.w	r3, {r1, r2}
 800b7d0:	4620      	mov	r0, r4
 800b7d2:	3501      	adds	r5, #1
 800b7d4:	f7ff fb8a 	bl	800aeec <_ZN8touchgfx6VectorINS_4RectELt8EE3addES1_>
 800b7d8:	b2ad      	uxth	r5, r5
 800b7da:	e7ee      	b.n	800b7ba <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1d2>
 800b7dc:	2b02      	cmp	r3, #2
 800b7de:	f040 813e 	bne.w	800ba5e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800b7e2:	4b3e      	ldr	r3, [pc, #248]	; (800b8dc <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f4>)
 800b7e4:	781b      	ldrb	r3, [r3, #0]
 800b7e6:	2b01      	cmp	r3, #1
 800b7e8:	d02c      	beq.n	800b844 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x25c>
 800b7ea:	f104 0ba8 	add.w	fp, r4, #168	; 0xa8
 800b7ee:	883a      	ldrh	r2, [r7, #0]
 800b7f0:	f8b4 10e8 	ldrh.w	r1, [r4, #232]	; 0xe8
 800b7f4:	3201      	adds	r2, #1
 800b7f6:	b292      	uxth	r2, r2
 800b7f8:	2900      	cmp	r1, #0
 800b7fa:	d0d4      	beq.n	800b7a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800b7fc:	f8b4 50aa 	ldrh.w	r5, [r4, #170]	; 0xaa
 800b800:	f8b4 30ae 	ldrh.w	r3, [r4, #174]	; 0xae
 800b804:	441d      	add	r5, r3
 800b806:	b22d      	sxth	r5, r5
 800b808:	4610      	mov	r0, r2
 800b80a:	f04f 0a00 	mov.w	sl, #0
 800b80e:	b283      	uxth	r3, r0
 800b810:	4299      	cmp	r1, r3
 800b812:	ea4f 06ca 	mov.w	r6, sl, lsl #3
 800b816:	f240 80c5 	bls.w	800b9a4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3bc>
 800b81a:	4426      	add	r6, r4
 800b81c:	eb04 09c0 	add.w	r9, r4, r0, lsl #3
 800b820:	f9b6 30aa 	ldrsh.w	r3, [r6, #170]	; 0xaa
 800b824:	f9b9 e0aa 	ldrsh.w	lr, [r9, #170]	; 0xaa
 800b828:	4573      	cmp	r3, lr
 800b82a:	4684      	mov	ip, r0
 800b82c:	f340 80a7 	ble.w	800b97e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x396>
 800b830:	f8b9 50ae 	ldrh.w	r5, [r9, #174]	; 0xae
 800b834:	4475      	add	r5, lr
 800b836:	b22d      	sxth	r5, r5
 800b838:	429d      	cmp	r5, r3
 800b83a:	bfa8      	it	ge
 800b83c:	461d      	movge	r5, r3
 800b83e:	3001      	adds	r0, #1
 800b840:	46e2      	mov	sl, ip
 800b842:	e7e4      	b.n	800b80e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x226>
 800b844:	f104 09a8 	add.w	r9, r4, #168	; 0xa8
 800b848:	f8b4 b0e8 	ldrh.w	fp, [r4, #232]	; 0xe8
 800b84c:	f1bb 0f00 	cmp.w	fp, #0
 800b850:	d0a9      	beq.n	800b7a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800b852:	883b      	ldrh	r3, [r7, #0]
 800b854:	f9b4 20a8 	ldrsh.w	r2, [r4, #168]	; 0xa8
 800b858:	3301      	adds	r3, #1
 800b85a:	b29b      	uxth	r3, r3
 800b85c:	2600      	movs	r6, #0
 800b85e:	b299      	uxth	r1, r3
 800b860:	458b      	cmp	fp, r1
 800b862:	ea4f 05c6 	mov.w	r5, r6, lsl #3
 800b866:	d93b      	bls.n	800b8e0 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2f8>
 800b868:	4425      	add	r5, r4
 800b86a:	eb04 0ac3 	add.w	sl, r4, r3, lsl #3
 800b86e:	f8b5 10ac 	ldrh.w	r1, [r5, #172]	; 0xac
 800b872:	f8b5 00a8 	ldrh.w	r0, [r5, #168]	; 0xa8
 800b876:	f9ba e0a8 	ldrsh.w	lr, [sl, #168]	; 0xa8
 800b87a:	4408      	add	r0, r1
 800b87c:	f8ba 10ac 	ldrh.w	r1, [sl, #172]	; 0xac
 800b880:	4471      	add	r1, lr
 800b882:	b200      	sxth	r0, r0
 800b884:	b209      	sxth	r1, r1
 800b886:	4288      	cmp	r0, r1
 800b888:	469c      	mov	ip, r3
 800b88a:	da06      	bge.n	800b89a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2b2>
 800b88c:	4586      	cmp	lr, r0
 800b88e:	4672      	mov	r2, lr
 800b890:	bfb8      	it	lt
 800b892:	4602      	movlt	r2, r0
 800b894:	3301      	adds	r3, #1
 800b896:	4666      	mov	r6, ip
 800b898:	e7e1      	b.n	800b85e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x276>
 800b89a:	d10b      	bne.n	800b8b4 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2cc>
 800b89c:	f9b5 c0ae 	ldrsh.w	ip, [r5, #174]	; 0xae
 800b8a0:	f9ba 10ae 	ldrsh.w	r1, [sl, #174]	; 0xae
 800b8a4:	458c      	cmp	ip, r1
 800b8a6:	bfb4      	ite	lt
 800b8a8:	469c      	movlt	ip, r3
 800b8aa:	46b4      	movge	ip, r6
 800b8ac:	4572      	cmp	r2, lr
 800b8ae:	bfb8      	it	lt
 800b8b0:	4672      	movlt	r2, lr
 800b8b2:	e7ef      	b.n	800b894 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800b8b4:	428a      	cmp	r2, r1
 800b8b6:	bfb8      	it	lt
 800b8b8:	460a      	movlt	r2, r1
 800b8ba:	46b4      	mov	ip, r6
 800b8bc:	e7ea      	b.n	800b894 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x2ac>
 800b8be:	bf00      	nop
 800b8c0:	2000a124 	.word	0x2000a124
 800b8c4:	2000a130 	.word	0x2000a130
 800b8c8:	20000060 	.word	0x20000060
 800b8cc:	2000a0ec 	.word	0x2000a0ec
 800b8d0:	2000a0e2 	.word	0x2000a0e2
 800b8d4:	2000a0e0 	.word	0x2000a0e0
 800b8d8:	2000a0ea 	.word	0x2000a0ea
 800b8dc:	2000a0e4 	.word	0x2000a0e4
 800b8e0:	1961      	adds	r1, r4, r5
 800b8e2:	ab07      	add	r3, sp, #28
 800b8e4:	f851 0fa8 	ldr.w	r0, [r1, #168]!
 800b8e8:	6849      	ldr	r1, [r1, #4]
 800b8ea:	c303      	stmia	r3!, {r0, r1}
 800b8ec:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 800b8f0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800b8f4:	2b13      	cmp	r3, #19
 800b8f6:	bfd8      	it	le
 800b8f8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 800b8fc:	f8ad 201c 	strh.w	r2, [sp, #28]
 800b900:	440b      	add	r3, r1
 800b902:	1a9b      	subs	r3, r3, r2
 800b904:	a807      	add	r0, sp, #28
 800b906:	f8ad 3020 	strh.w	r3, [sp, #32]
 800b90a:	f7ff f8e1 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800b90e:	a807      	add	r0, sp, #28
 800b910:	f7fd f971 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b914:	2800      	cmp	r0, #0
 800b916:	d197      	bne.n	800b848 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800b918:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 800b91c:	f8d8 0000 	ldr.w	r0, [r8]
 800b920:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800b924:	f8d0 e000 	ldr.w	lr, [r0]
 800b928:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 800b92c:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 800b930:	f1bc 0f14 	cmp.w	ip, #20
 800b934:	bfa8      	it	ge
 800b936:	f04f 0c14 	movge.w	ip, #20
 800b93a:	fa1f fc8c 	uxth.w	ip, ip
 800b93e:	f8cd c000 	str.w	ip, [sp]
 800b942:	f8de a084 	ldr.w	sl, [lr, #132]	; 0x84
 800b946:	47d0      	blx	sl
 800b948:	4682      	mov	sl, r0
 800b94a:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800b94e:	a807      	add	r0, sp, #28
 800b950:	f7ff f864 	bl	800aa1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 800b954:	6823      	ldr	r3, [r4, #0]
 800b956:	4425      	add	r5, r4
 800b958:	4620      	mov	r0, r4
 800b95a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800b95c:	a907      	add	r1, sp, #28
 800b95e:	4798      	blx	r3
 800b960:	f8b5 00ac 	ldrh.w	r0, [r5, #172]	; 0xac
 800b964:	eba0 000a 	sub.w	r0, r0, sl
 800b968:	b200      	sxth	r0, r0
 800b96a:	f8a5 00ac 	strh.w	r0, [r5, #172]	; 0xac
 800b96e:	2800      	cmp	r0, #0
 800b970:	f47f af6a 	bne.w	800b848 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800b974:	b2b1      	uxth	r1, r6
 800b976:	4648      	mov	r0, r9
 800b978:	f7ff faa2 	bl	800aec0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800b97c:	e764      	b.n	800b848 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x260>
 800b97e:	d10c      	bne.n	800b99a <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x3b2>
 800b980:	f9b6 c0ac 	ldrsh.w	ip, [r6, #172]	; 0xac
 800b984:	f9b9 60ac 	ldrsh.w	r6, [r9, #172]	; 0xac
 800b988:	45b4      	cmp	ip, r6
 800b98a:	bfb4      	ite	lt
 800b98c:	4684      	movlt	ip, r0
 800b98e:	46d4      	movge	ip, sl
 800b990:	f8b9 60ae 	ldrh.w	r6, [r9, #174]	; 0xae
 800b994:	4433      	add	r3, r6
 800b996:	b21b      	sxth	r3, r3
 800b998:	e74e      	b.n	800b838 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x250>
 800b99a:	4575      	cmp	r5, lr
 800b99c:	bfa8      	it	ge
 800b99e:	4675      	movge	r5, lr
 800b9a0:	46d4      	mov	ip, sl
 800b9a2:	e74c      	b.n	800b83e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x256>
 800b9a4:	eb0b 0006 	add.w	r0, fp, r6
 800b9a8:	4426      	add	r6, r4
 800b9aa:	e9cd 1202 	strd	r1, r2, [sp, #8]
 800b9ae:	f9b6 90ae 	ldrsh.w	r9, [r6, #174]	; 0xae
 800b9b2:	f1b9 0f13 	cmp.w	r9, #19
 800b9b6:	bfde      	ittt	le
 800b9b8:	f8b6 50aa 	ldrhle.w	r5, [r6, #170]	; 0xaa
 800b9bc:	444d      	addle	r5, r9
 800b9be:	b22d      	sxthle	r5, r5
 800b9c0:	f7fd f919 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800b9c4:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 800b9c8:	2800      	cmp	r0, #0
 800b9ca:	f47f af15 	bne.w	800b7f8 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x210>
 800b9ce:	f9b6 c0aa 	ldrsh.w	ip, [r6, #170]	; 0xaa
 800b9d2:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800b9d6:	eba5 050c 	sub.w	r5, r5, ip
 800b9da:	fa1f f28c 	uxth.w	r2, ip
 800b9de:	fa1f f989 	uxth.w	r9, r9
 800b9e2:	eb02 0009 	add.w	r0, r2, r9
 800b9e6:	2d14      	cmp	r5, #20
 800b9e8:	bfa8      	it	ge
 800b9ea:	2514      	movge	r5, #20
 800b9ec:	b200      	sxth	r0, r0
 800b9ee:	fa1f fe85 	uxth.w	lr, r5
 800b9f2:	eba0 000c 	sub.w	r0, r0, ip
 800b9f6:	f9b6 10a8 	ldrsh.w	r1, [r6, #168]	; 0xa8
 800b9fa:	f9b6 30ac 	ldrsh.w	r3, [r6, #172]	; 0xac
 800b9fe:	f8ad 101c 	strh.w	r1, [sp, #28]
 800ba02:	4586      	cmp	lr, r0
 800ba04:	f8d8 0000 	ldr.w	r0, [r8]
 800ba08:	f8ad c01e 	strh.w	ip, [sp, #30]
 800ba0c:	f8ad 3020 	strh.w	r3, [sp, #32]
 800ba10:	bfb8      	it	lt
 800ba12:	46f1      	movlt	r9, lr
 800ba14:	6805      	ldr	r5, [r0, #0]
 800ba16:	f8cd 9000 	str.w	r9, [sp]
 800ba1a:	b29b      	uxth	r3, r3
 800ba1c:	b289      	uxth	r1, r1
 800ba1e:	f8d5 5084 	ldr.w	r5, [r5, #132]	; 0x84
 800ba22:	47a8      	blx	r5
 800ba24:	6823      	ldr	r3, [r4, #0]
 800ba26:	f8ad 0022 	strh.w	r0, [sp, #34]	; 0x22
 800ba2a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ba2c:	a907      	add	r1, sp, #28
 800ba2e:	4620      	mov	r0, r4
 800ba30:	4798      	blx	r3
 800ba32:	f8bd 1022 	ldrh.w	r1, [sp, #34]	; 0x22
 800ba36:	f8b6 30ae 	ldrh.w	r3, [r6, #174]	; 0xae
 800ba3a:	f8b6 20aa 	ldrh.w	r2, [r6, #170]	; 0xaa
 800ba3e:	1a5b      	subs	r3, r3, r1
 800ba40:	440a      	add	r2, r1
 800ba42:	b21b      	sxth	r3, r3
 800ba44:	f8a6 20aa 	strh.w	r2, [r6, #170]	; 0xaa
 800ba48:	f8a6 30ae 	strh.w	r3, [r6, #174]	; 0xae
 800ba4c:	2b00      	cmp	r3, #0
 800ba4e:	f47f aece 	bne.w	800b7ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800ba52:	fa1f f18a 	uxth.w	r1, sl
 800ba56:	4658      	mov	r0, fp
 800ba58:	f7ff fa32 	bl	800aec0 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 800ba5c:	e6c7      	b.n	800b7ee <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x206>
 800ba5e:	f8b4 30e8 	ldrh.w	r3, [r4, #232]	; 0xe8
 800ba62:	42ab      	cmp	r3, r5
 800ba64:	f67f ae9f 	bls.w	800b7a6 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x1be>
 800ba68:	eb04 02c5 	add.w	r2, r4, r5, lsl #3
 800ba6c:	ab07      	add	r3, sp, #28
 800ba6e:	f852 0fa8 	ldr.w	r0, [r2, #168]!
 800ba72:	6851      	ldr	r1, [r2, #4]
 800ba74:	c303      	stmia	r3!, {r0, r1}
 800ba76:	a807      	add	r0, sp, #28
 800ba78:	f7fd f8bd 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 800ba7c:	b920      	cbnz	r0, 800ba88 <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x4a0>
 800ba7e:	6823      	ldr	r3, [r4, #0]
 800ba80:	a907      	add	r1, sp, #28
 800ba82:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ba84:	4620      	mov	r0, r4
 800ba86:	4798      	blx	r3
 800ba88:	3501      	adds	r5, #1
 800ba8a:	b2ad      	uxth	r5, r5
 800ba8c:	e7e7      	b.n	800ba5e <_ZN8touchgfx11Application19cacheDrawOperationsEb+0x476>
 800ba8e:	bf00      	nop

0800ba90 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 800ba90:	4b03      	ldr	r3, [pc, #12]	; (800baa0 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 800ba92:	2200      	movs	r2, #0
 800ba94:	801a      	strh	r2, [r3, #0]
 800ba96:	805a      	strh	r2, [r3, #2]
 800ba98:	809a      	strh	r2, [r3, #4]
 800ba9a:	80da      	strh	r2, [r3, #6]
 800ba9c:	4770      	bx	lr
 800ba9e:	bf00      	nop
 800baa0:	2000a130 	.word	0x2000a130

0800baa4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 800baa4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800baa8:	4606      	mov	r6, r0
 800baaa:	b09b      	sub	sp, #108	; 0x6c
 800baac:	a803      	add	r0, sp, #12
 800baae:	4614      	mov	r4, r2
 800bab0:	468a      	mov	sl, r1
 800bab2:	461d      	mov	r5, r3
 800bab4:	f000 fddb 	bl	800c66e <_ZN8touchgfx12TextProviderC1Ev>
 800bab8:	6833      	ldr	r3, [r6, #0]
 800baba:	4630      	mov	r0, r6
 800babc:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800babe:	4798      	blx	r3
 800bac0:	6833      	ldr	r3, [r6, #0]
 800bac2:	4607      	mov	r7, r0
 800bac4:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bac6:	4630      	mov	r0, r6
 800bac8:	4798      	blx	r3
 800baca:	462a      	mov	r2, r5
 800bacc:	9000      	str	r0, [sp, #0]
 800bace:	4621      	mov	r1, r4
 800bad0:	463b      	mov	r3, r7
 800bad2:	a803      	add	r0, sp, #12
 800bad4:	f000 fe18 	bl	800c708 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800bad8:	2500      	movs	r5, #0
 800bada:	462c      	mov	r4, r5
 800badc:	46a9      	mov	r9, r5
 800bade:	46a8      	mov	r8, r5
 800bae0:	f242 0b0b 	movw	fp, #8203	; 0x200b
 800bae4:	2300      	movs	r3, #0
 800bae6:	9302      	str	r3, [sp, #8]
 800bae8:	f64f 63ff 	movw	r3, #65279	; 0xfeff
 800baec:	429c      	cmp	r4, r3
 800baee:	d002      	beq.n	800baf6 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 800baf0:	455c      	cmp	r4, fp
 800baf2:	bf18      	it	ne
 800baf4:	4625      	movne	r5, r4
 800baf6:	ab02      	add	r3, sp, #8
 800baf8:	4632      	mov	r2, r6
 800bafa:	4651      	mov	r1, sl
 800bafc:	a803      	add	r0, sp, #12
 800bafe:	f001 f8ff 	bl	800cd00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bb02:	4604      	mov	r4, r0
 800bb04:	b108      	cbz	r0, 800bb0a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 800bb06:	280a      	cmp	r0, #10
 800bb08:	d10a      	bne.n	800bb20 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 800bb0a:	45c1      	cmp	r9, r8
 800bb0c:	bf38      	it	cc
 800bb0e:	46c1      	movcc	r9, r8
 800bb10:	f04f 0800 	mov.w	r8, #0
 800bb14:	2c00      	cmp	r4, #0
 800bb16:	d1e5      	bne.n	800bae4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800bb18:	4648      	mov	r0, r9
 800bb1a:	b01b      	add	sp, #108	; 0x6c
 800bb1c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800bb20:	9a02      	ldr	r2, [sp, #8]
 800bb22:	2a00      	cmp	r2, #0
 800bb24:	d0de      	beq.n	800bae4 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 800bb26:	7b57      	ldrb	r7, [r2, #13]
 800bb28:	6833      	ldr	r3, [r6, #0]
 800bb2a:	8894      	ldrh	r4, [r2, #4]
 800bb2c:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800bb2e:	007f      	lsls	r7, r7, #1
 800bb30:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800bb34:	7a97      	ldrb	r7, [r2, #10]
 800bb36:	4629      	mov	r1, r5
 800bb38:	4307      	orrs	r7, r0
 800bb3a:	4630      	mov	r0, r6
 800bb3c:	4798      	blx	r3
 800bb3e:	4438      	add	r0, r7
 800bb40:	4480      	add	r8, r0
 800bb42:	fa1f f888 	uxth.w	r8, r8
 800bb46:	e7e5      	b.n	800bb14 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0800bb48 <_ZNK8touchgfx4Font12getCharWidthEt>:
 800bb48:	b508      	push	{r3, lr}
 800bb4a:	6803      	ldr	r3, [r0, #0]
 800bb4c:	68db      	ldr	r3, [r3, #12]
 800bb4e:	4798      	blx	r3
 800bb50:	b128      	cbz	r0, 800bb5e <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 800bb52:	7b43      	ldrb	r3, [r0, #13]
 800bb54:	7a80      	ldrb	r0, [r0, #10]
 800bb56:	005b      	lsls	r3, r3, #1
 800bb58:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800bb5c:	4318      	orrs	r0, r3
 800bb5e:	bd08      	pop	{r3, pc}

0800bb60 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 800bb60:	b40e      	push	{r1, r2, r3}
 800bb62:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bb64:	b09c      	sub	sp, #112	; 0x70
 800bb66:	ab21      	add	r3, sp, #132	; 0x84
 800bb68:	4605      	mov	r5, r0
 800bb6a:	f853 4b04 	ldr.w	r4, [r3], #4
 800bb6e:	9303      	str	r3, [sp, #12]
 800bb70:	a805      	add	r0, sp, #20
 800bb72:	f000 fd7c 	bl	800c66e <_ZN8touchgfx12TextProviderC1Ev>
 800bb76:	682b      	ldr	r3, [r5, #0]
 800bb78:	4628      	mov	r0, r5
 800bb7a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bb7c:	4798      	blx	r3
 800bb7e:	682b      	ldr	r3, [r5, #0]
 800bb80:	4606      	mov	r6, r0
 800bb82:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bb84:	4628      	mov	r0, r5
 800bb86:	4798      	blx	r3
 800bb88:	4633      	mov	r3, r6
 800bb8a:	ae1c      	add	r6, sp, #112	; 0x70
 800bb8c:	4621      	mov	r1, r4
 800bb8e:	9000      	str	r0, [sp, #0]
 800bb90:	9a03      	ldr	r2, [sp, #12]
 800bb92:	2400      	movs	r4, #0
 800bb94:	a805      	add	r0, sp, #20
 800bb96:	f000 fdb7 	bl	800c708 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800bb9a:	f846 4d60 	str.w	r4, [r6, #-96]!
 800bb9e:	462a      	mov	r2, r5
 800bba0:	4633      	mov	r3, r6
 800bba2:	4621      	mov	r1, r4
 800bba4:	a805      	add	r0, sp, #20
 800bba6:	f001 f8ab 	bl	800cd00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bbaa:	b1f0      	cbz	r0, 800bbea <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 800bbac:	280a      	cmp	r0, #10
 800bbae:	d018      	beq.n	800bbe2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800bbb0:	9f04      	ldr	r7, [sp, #16]
 800bbb2:	b1b7      	cbz	r7, 800bbe2 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 800bbb4:	7b78      	ldrb	r0, [r7, #13]
 800bbb6:	7a3b      	ldrb	r3, [r7, #8]
 800bbb8:	88aa      	ldrh	r2, [r5, #4]
 800bbba:	00c1      	lsls	r1, r0, #3
 800bbbc:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800bbc0:	4319      	orrs	r1, r3
 800bbc2:	0643      	lsls	r3, r0, #25
 800bbc4:	bf44      	itt	mi
 800bbc6:	f5a1 7300 	submi.w	r3, r1, #512	; 0x200
 800bbca:	b219      	sxthmi	r1, r3
 800bbcc:	0100      	lsls	r0, r0, #4
 800bbce:	79fb      	ldrb	r3, [r7, #7]
 800bbd0:	f400 7080 	and.w	r0, r0, #256	; 0x100
 800bbd4:	4303      	orrs	r3, r0
 800bbd6:	4413      	add	r3, r2
 800bbd8:	1a5b      	subs	r3, r3, r1
 800bbda:	b29b      	uxth	r3, r3
 800bbdc:	42a3      	cmp	r3, r4
 800bbde:	bfc8      	it	gt
 800bbe0:	b21c      	sxthgt	r4, r3
 800bbe2:	4633      	mov	r3, r6
 800bbe4:	462a      	mov	r2, r5
 800bbe6:	2100      	movs	r1, #0
 800bbe8:	e7dc      	b.n	800bba4 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 800bbea:	b2a0      	uxth	r0, r4
 800bbec:	b01c      	add	sp, #112	; 0x70
 800bbee:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800bbf2:	b003      	add	sp, #12
 800bbf4:	4770      	bx	lr

0800bbf6 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 800bbf6:	b40e      	push	{r1, r2, r3}
 800bbf8:	b570      	push	{r4, r5, r6, lr}
 800bbfa:	b09b      	sub	sp, #108	; 0x6c
 800bbfc:	ab1f      	add	r3, sp, #124	; 0x7c
 800bbfe:	4604      	mov	r4, r0
 800bc00:	f853 5b04 	ldr.w	r5, [r3], #4
 800bc04:	9302      	str	r3, [sp, #8]
 800bc06:	a803      	add	r0, sp, #12
 800bc08:	f000 fd31 	bl	800c66e <_ZN8touchgfx12TextProviderC1Ev>
 800bc0c:	6823      	ldr	r3, [r4, #0]
 800bc0e:	4620      	mov	r0, r4
 800bc10:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bc12:	4798      	blx	r3
 800bc14:	6823      	ldr	r3, [r4, #0]
 800bc16:	4606      	mov	r6, r0
 800bc18:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bc1a:	4620      	mov	r0, r4
 800bc1c:	4798      	blx	r3
 800bc1e:	4633      	mov	r3, r6
 800bc20:	9000      	str	r0, [sp, #0]
 800bc22:	9a02      	ldr	r2, [sp, #8]
 800bc24:	4629      	mov	r1, r5
 800bc26:	a803      	add	r0, sp, #12
 800bc28:	f000 fd6e 	bl	800c708 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800bc2c:	a803      	add	r0, sp, #12
 800bc2e:	f001 f905 	bl	800ce3c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bc32:	2401      	movs	r4, #1
 800bc34:	b2a3      	uxth	r3, r4
 800bc36:	b140      	cbz	r0, 800bc4a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 800bc38:	280a      	cmp	r0, #10
 800bc3a:	bf08      	it	eq
 800bc3c:	3301      	addeq	r3, #1
 800bc3e:	a803      	add	r0, sp, #12
 800bc40:	bf08      	it	eq
 800bc42:	b21c      	sxtheq	r4, r3
 800bc44:	f001 f8fa 	bl	800ce3c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800bc48:	e7f4      	b.n	800bc34 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 800bc4a:	4618      	mov	r0, r3
 800bc4c:	b01b      	add	sp, #108	; 0x6c
 800bc4e:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800bc52:	b003      	add	sp, #12
 800bc54:	4770      	bx	lr

0800bc56 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 800bc56:	b40e      	push	{r1, r2, r3}
 800bc58:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bc5a:	b09c      	sub	sp, #112	; 0x70
 800bc5c:	ab21      	add	r3, sp, #132	; 0x84
 800bc5e:	4604      	mov	r4, r0
 800bc60:	f853 5b04 	ldr.w	r5, [r3], #4
 800bc64:	9303      	str	r3, [sp, #12]
 800bc66:	a805      	add	r0, sp, #20
 800bc68:	f000 fd01 	bl	800c66e <_ZN8touchgfx12TextProviderC1Ev>
 800bc6c:	6823      	ldr	r3, [r4, #0]
 800bc6e:	4620      	mov	r0, r4
 800bc70:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800bc72:	4798      	blx	r3
 800bc74:	6823      	ldr	r3, [r4, #0]
 800bc76:	4606      	mov	r6, r0
 800bc78:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800bc7a:	4620      	mov	r0, r4
 800bc7c:	4798      	blx	r3
 800bc7e:	4633      	mov	r3, r6
 800bc80:	4629      	mov	r1, r5
 800bc82:	9000      	str	r0, [sp, #0]
 800bc84:	9a03      	ldr	r2, [sp, #12]
 800bc86:	a805      	add	r0, sp, #20
 800bc88:	ad1c      	add	r5, sp, #112	; 0x70
 800bc8a:	f000 fd3d 	bl	800c708 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 800bc8e:	2100      	movs	r1, #0
 800bc90:	f845 1d60 	str.w	r1, [r5, #-96]!
 800bc94:	4622      	mov	r2, r4
 800bc96:	462b      	mov	r3, r5
 800bc98:	a805      	add	r0, sp, #20
 800bc9a:	f001 f831 	bl	800cd00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bc9e:	26ff      	movs	r6, #255	; 0xff
 800bca0:	b1d8      	cbz	r0, 800bcda <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x84>
 800bca2:	280a      	cmp	r0, #10
 800bca4:	d012      	beq.n	800bccc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800bca6:	9804      	ldr	r0, [sp, #16]
 800bca8:	b180      	cbz	r0, 800bccc <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x76>
 800bcaa:	7b47      	ldrb	r7, [r0, #13]
 800bcac:	7922      	ldrb	r2, [r4, #4]
 800bcae:	00fb      	lsls	r3, r7, #3
 800bcb0:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800bcb4:	7a03      	ldrb	r3, [r0, #8]
 800bcb6:	430b      	orrs	r3, r1
 800bcb8:	0679      	lsls	r1, r7, #25
 800bcba:	bf44      	itt	mi
 800bcbc:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800bcc0:	b21b      	sxthmi	r3, r3
 800bcc2:	1ad3      	subs	r3, r2, r3
 800bcc4:	b2db      	uxtb	r3, r3
 800bcc6:	429e      	cmp	r6, r3
 800bcc8:	bf28      	it	cs
 800bcca:	461e      	movcs	r6, r3
 800bccc:	462b      	mov	r3, r5
 800bcce:	4622      	mov	r2, r4
 800bcd0:	2100      	movs	r1, #0
 800bcd2:	a805      	add	r0, sp, #20
 800bcd4:	f001 f814 	bl	800cd00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 800bcd8:	e7e2      	b.n	800bca0 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4a>
 800bcda:	4630      	mov	r0, r6
 800bcdc:	b01c      	add	sp, #112	; 0x70
 800bcde:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 800bce2:	b003      	add	sp, #12
 800bce4:	4770      	bx	lr

0800bce6 <_ZNK8touchgfx8Drawable10invalidateEv>:
 800bce6:	b513      	push	{r0, r1, r4, lr}
 800bce8:	1d01      	adds	r1, r0, #4
 800bcea:	4603      	mov	r3, r0
 800bcec:	c903      	ldmia	r1, {r0, r1}
 800bcee:	466a      	mov	r2, sp
 800bcf0:	e882 0003 	stmia.w	r2, {r0, r1}
 800bcf4:	2100      	movs	r1, #0
 800bcf6:	9100      	str	r1, [sp, #0]
 800bcf8:	6819      	ldr	r1, [r3, #0]
 800bcfa:	4618      	mov	r0, r3
 800bcfc:	690c      	ldr	r4, [r1, #16]
 800bcfe:	4611      	mov	r1, r2
 800bd00:	47a0      	blx	r4
 800bd02:	b002      	add	sp, #8
 800bd04:	bd10      	pop	{r4, pc}

0800bd06 <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 800bd06:	b538      	push	{r3, r4, r5, lr}
 800bd08:	680b      	ldr	r3, [r1, #0]
 800bd0a:	460c      	mov	r4, r1
 800bd0c:	68db      	ldr	r3, [r3, #12]
 800bd0e:	4605      	mov	r5, r0
 800bd10:	4798      	blx	r3
 800bd12:	6823      	ldr	r3, [r4, #0]
 800bd14:	4620      	mov	r0, r4
 800bd16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bd18:	4629      	mov	r1, r5
 800bd1a:	4798      	blx	r3
 800bd1c:	4628      	mov	r0, r5
 800bd1e:	bd38      	pop	{r3, r4, r5, pc}

0800bd20 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 800bd20:	b410      	push	{r4}
 800bd22:	880a      	ldrh	r2, [r1, #0]
 800bd24:	8884      	ldrh	r4, [r0, #4]
 800bd26:	4422      	add	r2, r4
 800bd28:	800a      	strh	r2, [r1, #0]
 800bd2a:	88c4      	ldrh	r4, [r0, #6]
 800bd2c:	884a      	ldrh	r2, [r1, #2]
 800bd2e:	4422      	add	r2, r4
 800bd30:	804a      	strh	r2, [r1, #2]
 800bd32:	6940      	ldr	r0, [r0, #20]
 800bd34:	b120      	cbz	r0, 800bd40 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 800bd36:	6803      	ldr	r3, [r0, #0]
 800bd38:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bd3c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bd3e:	4718      	bx	r3
 800bd40:	f85d 4b04 	ldr.w	r4, [sp], #4
 800bd44:	4770      	bx	lr

0800bd46 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 800bd46:	b5f0      	push	{r4, r5, r6, r7, lr}
 800bd48:	460b      	mov	r3, r1
 800bd4a:	b085      	sub	sp, #20
 800bd4c:	4604      	mov	r4, r0
 800bd4e:	b901      	cbnz	r1, 800bd52 <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 800bd50:	b322      	cbz	r2, 800bd9c <_ZN8touchgfx8Drawable12moveRelativeEss+0x56>
 800bd52:	1d27      	adds	r7, r4, #4
 800bd54:	e897 0003 	ldmia.w	r7, {r0, r1}
 800bd58:	466e      	mov	r6, sp
 800bd5a:	e886 0003 	stmia.w	r6, {r0, r1}
 800bd5e:	88a1      	ldrh	r1, [r4, #4]
 800bd60:	88e5      	ldrh	r5, [r4, #6]
 800bd62:	4419      	add	r1, r3
 800bd64:	6823      	ldr	r3, [r4, #0]
 800bd66:	442a      	add	r2, r5
 800bd68:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bd6a:	b209      	sxth	r1, r1
 800bd6c:	4620      	mov	r0, r4
 800bd6e:	b215      	sxth	r5, r2
 800bd70:	4798      	blx	r3
 800bd72:	6823      	ldr	r3, [r4, #0]
 800bd74:	4629      	mov	r1, r5
 800bd76:	4620      	mov	r0, r4
 800bd78:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800bd7a:	4798      	blx	r3
 800bd7c:	e897 0003 	ldmia.w	r7, {r0, r1}
 800bd80:	ad02      	add	r5, sp, #8
 800bd82:	e885 0003 	stmia.w	r5, {r0, r1}
 800bd86:	6960      	ldr	r0, [r4, #20]
 800bd88:	b150      	cbz	r0, 800bda0 <_ZN8touchgfx8Drawable12moveRelativeEss+0x5a>
 800bd8a:	6803      	ldr	r3, [r0, #0]
 800bd8c:	4631      	mov	r1, r6
 800bd8e:	691b      	ldr	r3, [r3, #16]
 800bd90:	4798      	blx	r3
 800bd92:	6960      	ldr	r0, [r4, #20]
 800bd94:	6803      	ldr	r3, [r0, #0]
 800bd96:	691b      	ldr	r3, [r3, #16]
 800bd98:	4629      	mov	r1, r5
 800bd9a:	4798      	blx	r3
 800bd9c:	b005      	add	sp, #20
 800bd9e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800bda0:	f7ff f82a 	bl	800adf8 <_ZN8touchgfx11Application11getInstanceEv>
 800bda4:	6803      	ldr	r3, [r0, #0]
 800bda6:	4631      	mov	r1, r6
 800bda8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bdaa:	4798      	blx	r3
 800bdac:	f7ff f824 	bl	800adf8 <_ZN8touchgfx11Application11getInstanceEv>
 800bdb0:	6803      	ldr	r3, [r0, #0]
 800bdb2:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bdb4:	e7f0      	b.n	800bd98 <_ZN8touchgfx8Drawable12moveRelativeEss+0x52>

0800bdb6 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 800bdb6:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800bdb8:	8882      	ldrh	r2, [r0, #4]
 800bdba:	880b      	ldrh	r3, [r1, #0]
 800bdbc:	4413      	add	r3, r2
 800bdbe:	800b      	strh	r3, [r1, #0]
 800bdc0:	88c2      	ldrh	r2, [r0, #6]
 800bdc2:	884b      	ldrh	r3, [r1, #2]
 800bdc4:	4413      	add	r3, r2
 800bdc6:	4602      	mov	r2, r0
 800bdc8:	804b      	strh	r3, [r1, #2]
 800bdca:	4605      	mov	r5, r0
 800bdcc:	f852 0f04 	ldr.w	r0, [r2, #4]!
 800bdd0:	460c      	mov	r4, r1
 800bdd2:	6851      	ldr	r1, [r2, #4]
 800bdd4:	466b      	mov	r3, sp
 800bdd6:	c303      	stmia	r3!, {r0, r1}
 800bdd8:	4621      	mov	r1, r4
 800bdda:	4668      	mov	r0, sp
 800bddc:	f7fc fec8 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 800bde0:	466b      	mov	r3, sp
 800bde2:	cb03      	ldmia	r3!, {r0, r1}
 800bde4:	6020      	str	r0, [r4, #0]
 800bde6:	6061      	str	r1, [r4, #4]
 800bde8:	6968      	ldr	r0, [r5, #20]
 800bdea:	b128      	cbz	r0, 800bdf8 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x42>
 800bdec:	6803      	ldr	r3, [r0, #0]
 800bdee:	691b      	ldr	r3, [r3, #16]
 800bdf0:	4621      	mov	r1, r4
 800bdf2:	4798      	blx	r3
 800bdf4:	b003      	add	sp, #12
 800bdf6:	bd30      	pop	{r4, r5, pc}
 800bdf8:	f7fe fffe 	bl	800adf8 <_ZN8touchgfx11Application11getInstanceEv>
 800bdfc:	6803      	ldr	r3, [r0, #0]
 800bdfe:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800be00:	e7f6      	b.n	800bdf0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3a>

0800be02 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 800be02:	b570      	push	{r4, r5, r6, lr}
 800be04:	8882      	ldrh	r2, [r0, #4]
 800be06:	880b      	ldrh	r3, [r1, #0]
 800be08:	4413      	add	r3, r2
 800be0a:	800b      	strh	r3, [r1, #0]
 800be0c:	88c2      	ldrh	r2, [r0, #6]
 800be0e:	884b      	ldrh	r3, [r1, #2]
 800be10:	460c      	mov	r4, r1
 800be12:	4413      	add	r3, r2
 800be14:	804b      	strh	r3, [r1, #2]
 800be16:	4605      	mov	r5, r0
 800be18:	1d01      	adds	r1, r0, #4
 800be1a:	4620      	mov	r0, r4
 800be1c:	f7fc fea8 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 800be20:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 800be24:	2b00      	cmp	r3, #0
 800be26:	dd0b      	ble.n	800be40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800be28:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 800be2c:	2b00      	cmp	r3, #0
 800be2e:	dd07      	ble.n	800be40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800be30:	6968      	ldr	r0, [r5, #20]
 800be32:	b128      	cbz	r0, 800be40 <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 800be34:	6803      	ldr	r3, [r0, #0]
 800be36:	4621      	mov	r1, r4
 800be38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800be3a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 800be3e:	4718      	bx	r3
 800be40:	bd70      	pop	{r4, r5, r6, pc}

0800be42 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 800be42:	b510      	push	{r4, lr}
 800be44:	4604      	mov	r4, r0
 800be46:	4608      	mov	r0, r1
 800be48:	2300      	movs	r3, #0
 800be4a:	8023      	strh	r3, [r4, #0]
 800be4c:	8063      	strh	r3, [r4, #2]
 800be4e:	6803      	ldr	r3, [r0, #0]
 800be50:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800be54:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 800be58:	80a1      	strh	r1, [r4, #4]
 800be5a:	80e2      	strh	r2, [r4, #6]
 800be5c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800be5e:	4621      	mov	r1, r4
 800be60:	4798      	blx	r3
 800be62:	4620      	mov	r0, r4
 800be64:	bd10      	pop	{r4, pc}
	...

0800be68 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt>:
 800be68:	b530      	push	{r4, r5, lr}
 800be6a:	8083      	strh	r3, [r0, #4]
 800be6c:	f89d 300c 	ldrb.w	r3, [sp, #12]
 800be70:	f89d 5010 	ldrb.w	r5, [sp, #16]
 800be74:	7183      	strb	r3, [r0, #6]
 800be76:	79c3      	ldrb	r3, [r0, #7]
 800be78:	6101      	str	r1, [r0, #16]
 800be7a:	f365 0306 	bfi	r3, r5, #0, #7
 800be7e:	f89d 5014 	ldrb.w	r5, [sp, #20]
 800be82:	8282      	strh	r2, [r0, #20]
 800be84:	f365 13c7 	bfi	r3, r5, #7, #1
 800be88:	71c3      	strb	r3, [r0, #7]
 800be8a:	f89d 3018 	ldrb.w	r3, [sp, #24]
 800be8e:	7203      	strb	r3, [r0, #8]
 800be90:	f89d 301c 	ldrb.w	r3, [sp, #28]
 800be94:	7243      	strb	r3, [r0, #9]
 800be96:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 800be9a:	8143      	strh	r3, [r0, #10]
 800be9c:	f8bd 3024 	ldrh.w	r3, [sp, #36]	; 0x24
 800bea0:	8183      	strh	r3, [r0, #12]
 800bea2:	4b01      	ldr	r3, [pc, #4]	; (800bea8 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEtthhhhhtt+0x40>)
 800bea4:	6003      	str	r3, [r0, #0]
 800bea6:	bd30      	pop	{r4, r5, pc}
 800bea8:	0801c268 	.word	0x0801c268

0800beac <_ZNK8touchgfx9ConstFont4findEt>:
 800beac:	b5f0      	push	{r4, r5, r6, r7, lr}
 800beae:	6904      	ldr	r4, [r0, #16]
 800beb0:	b3bc      	cbz	r4, 800bf22 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800beb2:	88a3      	ldrh	r3, [r4, #4]
 800beb4:	8a82      	ldrh	r2, [r0, #20]
 800beb6:	1acb      	subs	r3, r1, r3
 800beb8:	f102 32ff 	add.w	r2, r2, #4294967295
 800bebc:	d431      	bmi.n	800bf22 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800bebe:	4293      	cmp	r3, r2
 800bec0:	dd0c      	ble.n	800bedc <_ZNK8touchgfx9ConstFont4findEt+0x30>
 800bec2:	230e      	movs	r3, #14
 800bec4:	fb03 4302 	mla	r3, r3, r2, r4
 800bec8:	889b      	ldrh	r3, [r3, #4]
 800beca:	1a5b      	subs	r3, r3, r1
 800becc:	1ad3      	subs	r3, r2, r3
 800bece:	429a      	cmp	r2, r3
 800bed0:	db27      	blt.n	800bf22 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800bed2:	2b00      	cmp	r3, #0
 800bed4:	bfbc      	itt	lt
 800bed6:	2302      	movlt	r3, #2
 800bed8:	fb92 f3f3 	sdivlt	r3, r2, r3
 800bedc:	2500      	movs	r5, #0
 800bede:	260e      	movs	r6, #14
 800bee0:	4295      	cmp	r5, r2
 800bee2:	dc1e      	bgt.n	800bf22 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800bee4:	fb06 4003 	mla	r0, r6, r3, r4
 800bee8:	8887      	ldrh	r7, [r0, #4]
 800beea:	42b9      	cmp	r1, r7
 800beec:	d01a      	beq.n	800bf24 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 800beee:	d20d      	bcs.n	800bf0c <_ZNK8touchgfx9ConstFont4findEt+0x60>
 800bef0:	1e5a      	subs	r2, r3, #1
 800bef2:	4295      	cmp	r5, r2
 800bef4:	dc15      	bgt.n	800bf22 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800bef6:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 800befa:	1a5b      	subs	r3, r3, r1
 800befc:	1ad3      	subs	r3, r2, r3
 800befe:	429a      	cmp	r2, r3
 800bf00:	db0f      	blt.n	800bf22 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800bf02:	429d      	cmp	r5, r3
 800bf04:	ddec      	ble.n	800bee0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800bf06:	1953      	adds	r3, r2, r5
 800bf08:	105b      	asrs	r3, r3, #1
 800bf0a:	e7e9      	b.n	800bee0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800bf0c:	1c5d      	adds	r5, r3, #1
 800bf0e:	42aa      	cmp	r2, r5
 800bf10:	db07      	blt.n	800bf22 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800bf12:	8a43      	ldrh	r3, [r0, #18]
 800bf14:	1acb      	subs	r3, r1, r3
 800bf16:	442b      	add	r3, r5
 800bf18:	429d      	cmp	r5, r3
 800bf1a:	dc02      	bgt.n	800bf22 <_ZNK8touchgfx9ConstFont4findEt+0x76>
 800bf1c:	429a      	cmp	r2, r3
 800bf1e:	dadf      	bge.n	800bee0 <_ZNK8touchgfx9ConstFont4findEt+0x34>
 800bf20:	e7f1      	b.n	800bf06 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 800bf22:	2000      	movs	r0, #0
 800bf24:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800bf26 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 800bf26:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800bf28:	4604      	mov	r4, r0
 800bf2a:	4617      	mov	r7, r2
 800bf2c:	461e      	mov	r6, r3
 800bf2e:	b911      	cbnz	r1, 800bf36 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 800bf30:	2500      	movs	r5, #0
 800bf32:	4628      	mov	r0, r5
 800bf34:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800bf36:	290a      	cmp	r1, #10
 800bf38:	d0fa      	beq.n	800bf30 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800bf3a:	f64f 62ff 	movw	r2, #65279	; 0xfeff
 800bf3e:	4291      	cmp	r1, r2
 800bf40:	d0f6      	beq.n	800bf30 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800bf42:	f242 020b 	movw	r2, #8203	; 0x200b
 800bf46:	4291      	cmp	r1, r2
 800bf48:	d0f2      	beq.n	800bf30 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800bf4a:	f7ff ffaf 	bl	800beac <_ZNK8touchgfx9ConstFont4findEt>
 800bf4e:	4605      	mov	r5, r0
 800bf50:	b950      	cbnz	r0, 800bf68 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 800bf52:	6823      	ldr	r3, [r4, #0]
 800bf54:	4620      	mov	r0, r4
 800bf56:	691b      	ldr	r3, [r3, #16]
 800bf58:	4798      	blx	r3
 800bf5a:	4601      	mov	r1, r0
 800bf5c:	4620      	mov	r0, r4
 800bf5e:	f7ff ffa5 	bl	800beac <_ZNK8touchgfx9ConstFont4findEt>
 800bf62:	4605      	mov	r5, r0
 800bf64:	2800      	cmp	r0, #0
 800bf66:	d0e3      	beq.n	800bf30 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 800bf68:	6823      	ldr	r3, [r4, #0]
 800bf6a:	4629      	mov	r1, r5
 800bf6c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800bf6e:	4620      	mov	r0, r4
 800bf70:	4798      	blx	r3
 800bf72:	6038      	str	r0, [r7, #0]
 800bf74:	6823      	ldr	r3, [r4, #0]
 800bf76:	4620      	mov	r0, r4
 800bf78:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800bf7a:	4798      	blx	r3
 800bf7c:	7030      	strb	r0, [r6, #0]
 800bf7e:	e7d8      	b.n	800bf32 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

0800bf80 <_ZN8touchgfx10ClickEvent12getEventTypeEv>:
 800bf80:	2000      	movs	r0, #0
 800bf82:	4770      	bx	lr

0800bf84 <_ZN8touchgfx9DragEvent12getEventTypeEv>:
 800bf84:	2001      	movs	r0, #1
 800bf86:	4770      	bx	lr

0800bf88 <_ZN8touchgfx12GestureEvent12getEventTypeEv>:
 800bf88:	2002      	movs	r0, #2
 800bf8a:	4770      	bx	lr

0800bf8c <_ZN8touchgfx6ScreenD1Ev>:
 800bf8c:	4770      	bx	lr

0800bf8e <_ZN8touchgfx12GestureEventD1Ev>:
 800bf8e:	4770      	bx	lr

0800bf90 <_ZN8touchgfx9DragEventD1Ev>:
 800bf90:	4770      	bx	lr

0800bf92 <_ZN8touchgfx10ClickEventD1Ev>:
 800bf92:	4770      	bx	lr

0800bf94 <_ZN8touchgfx10ClickEventD0Ev>:
 800bf94:	b510      	push	{r4, lr}
 800bf96:	210c      	movs	r1, #12
 800bf98:	4604      	mov	r4, r0
 800bf9a:	f00d fa22 	bl	80193e2 <_ZdlPvj>
 800bf9e:	4620      	mov	r0, r4
 800bfa0:	bd10      	pop	{r4, pc}

0800bfa2 <_ZN8touchgfx9DragEventD0Ev>:
 800bfa2:	b510      	push	{r4, lr}
 800bfa4:	2110      	movs	r1, #16
 800bfa6:	4604      	mov	r4, r0
 800bfa8:	f00d fa1b 	bl	80193e2 <_ZdlPvj>
 800bfac:	4620      	mov	r0, r4
 800bfae:	bd10      	pop	{r4, pc}

0800bfb0 <_ZN8touchgfx12GestureEventD0Ev>:
 800bfb0:	b510      	push	{r4, lr}
 800bfb2:	210c      	movs	r1, #12
 800bfb4:	4604      	mov	r4, r0
 800bfb6:	f00d fa14 	bl	80193e2 <_ZdlPvj>
 800bfba:	4620      	mov	r0, r4
 800bfbc:	bd10      	pop	{r4, pc}

0800bfbe <_ZN8touchgfx6ScreenD0Ev>:
 800bfbe:	b510      	push	{r4, lr}
 800bfc0:	213c      	movs	r1, #60	; 0x3c
 800bfc2:	4604      	mov	r4, r0
 800bfc4:	f00d fa0d 	bl	80193e2 <_ZdlPvj>
 800bfc8:	4620      	mov	r0, r4
 800bfca:	bd10      	pop	{r4, pc}

0800bfcc <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 800bfcc:	b530      	push	{r4, r5, lr}
 800bfce:	460d      	mov	r5, r1
 800bfd0:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800bfd2:	b087      	sub	sp, #28
 800bfd4:	4604      	mov	r4, r0
 800bfd6:	b301      	cbz	r1, 800c01a <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 800bfd8:	a801      	add	r0, sp, #4
 800bfda:	f7ff ff32 	bl	800be42 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800bfde:	892a      	ldrh	r2, [r5, #8]
 800bfe0:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 800bfe4:	7928      	ldrb	r0, [r5, #4]
 800bfe6:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800bfea:	f88d 0010 	strb.w	r0, [sp, #16]
 800bfee:	1ad2      	subs	r2, r2, r3
 800bff0:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800bff2:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800bff4:	f8ad 1012 	strh.w	r1, [sp, #18]
 800bff8:	441a      	add	r2, r3
 800bffa:	896b      	ldrh	r3, [r5, #10]
 800bffc:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 800c000:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c004:	1b5b      	subs	r3, r3, r5
 800c006:	8ee5      	ldrh	r5, [r4, #54]	; 0x36
 800c008:	442b      	add	r3, r5
 800c00a:	4d05      	ldr	r5, [pc, #20]	; (800c020 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 800c00c:	9503      	str	r5, [sp, #12]
 800c00e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c012:	6803      	ldr	r3, [r0, #0]
 800c014:	a903      	add	r1, sp, #12
 800c016:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800c018:	4798      	blx	r3
 800c01a:	b007      	add	sp, #28
 800c01c:	bd30      	pop	{r4, r5, pc}
 800c01e:	bf00      	nop
 800c020:	0801c2e8 	.word	0x0801c2e8

0800c024 <_ZNK8touchgfx4Rect9intersectEss>:
 800c024:	b510      	push	{r4, lr}
 800c026:	f9b0 3000 	ldrsh.w	r3, [r0]
 800c02a:	428b      	cmp	r3, r1
 800c02c:	dc10      	bgt.n	800c050 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c02e:	8884      	ldrh	r4, [r0, #4]
 800c030:	4423      	add	r3, r4
 800c032:	b21b      	sxth	r3, r3
 800c034:	4299      	cmp	r1, r3
 800c036:	da0b      	bge.n	800c050 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c038:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 800c03c:	4293      	cmp	r3, r2
 800c03e:	dc07      	bgt.n	800c050 <_ZNK8touchgfx4Rect9intersectEss+0x2c>
 800c040:	88c0      	ldrh	r0, [r0, #6]
 800c042:	4418      	add	r0, r3
 800c044:	b200      	sxth	r0, r0
 800c046:	4282      	cmp	r2, r0
 800c048:	bfac      	ite	ge
 800c04a:	2000      	movge	r0, #0
 800c04c:	2001      	movlt	r0, #1
 800c04e:	bd10      	pop	{r4, pc}
 800c050:	2000      	movs	r0, #0
 800c052:	e7fc      	b.n	800c04e <_ZNK8touchgfx4Rect9intersectEss+0x2a>

0800c054 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 800c054:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c056:	460c      	mov	r4, r1
 800c058:	6b01      	ldr	r1, [r0, #48]	; 0x30
 800c05a:	b089      	sub	sp, #36	; 0x24
 800c05c:	4605      	mov	r5, r0
 800c05e:	2900      	cmp	r1, #0
 800c060:	d054      	beq.n	800c10c <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xb8>
 800c062:	4668      	mov	r0, sp
 800c064:	f7ff feed 	bl	800be42 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c068:	8eae      	ldrh	r6, [r5, #52]	; 0x34
 800c06a:	8eef      	ldrh	r7, [r5, #54]	; 0x36
 800c06c:	8922      	ldrh	r2, [r4, #8]
 800c06e:	88e1      	ldrh	r1, [r4, #6]
 800c070:	443a      	add	r2, r7
 800c072:	4431      	add	r1, r6
 800c074:	b212      	sxth	r2, r2
 800c076:	b209      	sxth	r1, r1
 800c078:	4668      	mov	r0, sp
 800c07a:	f7ff ffd3 	bl	800c024 <_ZNK8touchgfx4Rect9intersectEss>
 800c07e:	b1d0      	cbz	r0, 800c0b6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800c080:	89a2      	ldrh	r2, [r4, #12]
 800c082:	8961      	ldrh	r1, [r4, #10]
 800c084:	443a      	add	r2, r7
 800c086:	4431      	add	r1, r6
 800c088:	b212      	sxth	r2, r2
 800c08a:	b209      	sxth	r1, r1
 800c08c:	4668      	mov	r0, sp
 800c08e:	f7ff ffc9 	bl	800c024 <_ZNK8touchgfx4Rect9intersectEss>
 800c092:	4603      	mov	r3, r0
 800c094:	b978      	cbnz	r0, 800c0b6 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x62>
 800c096:	4a1e      	ldr	r2, [pc, #120]	; (800c110 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xbc>)
 800c098:	9204      	str	r2, [sp, #16]
 800c09a:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800c09c:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c0a0:	2202      	movs	r2, #2
 800c0a2:	f88d 2014 	strb.w	r2, [sp, #20]
 800c0a6:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c0aa:	f8ad 301a 	strh.w	r3, [sp, #26]
 800c0ae:	6803      	ldr	r3, [r0, #0]
 800c0b0:	a904      	add	r1, sp, #16
 800c0b2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c0b4:	4798      	blx	r3
 800c0b6:	6b29      	ldr	r1, [r5, #48]	; 0x30
 800c0b8:	a802      	add	r0, sp, #8
 800c0ba:	f7ff fec2 	bl	800be42 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c0be:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 800c0c2:	88e0      	ldrh	r0, [r4, #6]
 800c0c4:	8961      	ldrh	r1, [r4, #10]
 800c0c6:	f8b5 c034 	ldrh.w	ip, [r5, #52]	; 0x34
 800c0ca:	f8bd e00a 	ldrh.w	lr, [sp, #10]
 800c0ce:	8923      	ldrh	r3, [r4, #8]
 800c0d0:	8eee      	ldrh	r6, [r5, #54]	; 0x36
 800c0d2:	7927      	ldrb	r7, [r4, #4]
 800c0d4:	f88d 7014 	strb.w	r7, [sp, #20]
 800c0d8:	1a80      	subs	r0, r0, r2
 800c0da:	1a89      	subs	r1, r1, r2
 800c0dc:	89a2      	ldrh	r2, [r4, #12]
 800c0de:	4c0d      	ldr	r4, [pc, #52]	; (800c114 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xc0>)
 800c0e0:	9404      	str	r4, [sp, #16]
 800c0e2:	4460      	add	r0, ip
 800c0e4:	eba3 030e 	sub.w	r3, r3, lr
 800c0e8:	eba2 020e 	sub.w	r2, r2, lr
 800c0ec:	f8ad 0016 	strh.w	r0, [sp, #22]
 800c0f0:	4433      	add	r3, r6
 800c0f2:	4461      	add	r1, ip
 800c0f4:	4432      	add	r2, r6
 800c0f6:	6b28      	ldr	r0, [r5, #48]	; 0x30
 800c0f8:	f8ad 101a 	strh.w	r1, [sp, #26]
 800c0fc:	f8ad 3018 	strh.w	r3, [sp, #24]
 800c100:	f8ad 201c 	strh.w	r2, [sp, #28]
 800c104:	6803      	ldr	r3, [r0, #0]
 800c106:	a904      	add	r1, sp, #16
 800c108:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800c10a:	4798      	blx	r3
 800c10c:	b009      	add	sp, #36	; 0x24
 800c10e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800c110:	0801c2c0 	.word	0x0801c2c0
 800c114:	0801c2d4 	.word	0x0801c2d4

0800c118 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 800c118:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c11c:	f8d0 9030 	ldr.w	r9, [r0, #48]	; 0x30
 800c120:	790b      	ldrb	r3, [r1, #4]
 800c122:	b0a1      	sub	sp, #132	; 0x84
 800c124:	4604      	mov	r4, r0
 800c126:	460d      	mov	r5, r1
 800c128:	f1b9 0f00 	cmp.w	r9, #0
 800c12c:	d00f      	beq.n	800c14e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x36>
 800c12e:	2b00      	cmp	r3, #0
 800c130:	f040 80a0 	bne.w	800c274 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800c134:	b021      	add	sp, #132	; 0x84
 800c136:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c13a:	f104 0330 	add.w	r3, r4, #48	; 0x30
 800c13e:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800c142:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 800c146:	1d20      	adds	r0, r4, #4
 800c148:	f7fc fc58 	bl	80089fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c14c:	e092      	b.n	800c274 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x15c>
 800c14e:	2b00      	cmp	r3, #0
 800c150:	d1f0      	bne.n	800c134 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c152:	4b5e      	ldr	r3, [pc, #376]	; (800c2cc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b4>)
 800c154:	681b      	ldr	r3, [r3, #0]
 800c156:	f893 a049 	ldrb.w	sl, [r3, #73]	; 0x49
 800c15a:	f8c4 9034 	str.w	r9, [r4, #52]	; 0x34
 800c15e:	f1ba 0f03 	cmp.w	sl, #3
 800c162:	ddea      	ble.n	800c13a <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x22>
 800c164:	f1ba 0f0c 	cmp.w	sl, #12
 800c168:	f04f 0303 	mov.w	r3, #3
 800c16c:	bfdc      	itt	le
 800c16e:	f10a 32ff 	addle.w	r2, sl, #4294967295
 800c172:	fb92 f3f3 	sdivle	r3, r2, r3
 800c176:	9301      	str	r3, [sp, #4]
 800c178:	4b55      	ldr	r3, [pc, #340]	; (800c2d0 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1b8>)
 800c17a:	4956      	ldr	r1, [pc, #344]	; (800c2d4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1bc>)
 800c17c:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c180:	4b55      	ldr	r3, [pc, #340]	; (800c2d8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c0>)
 800c182:	f8ad 202c 	strh.w	r2, [sp, #44]	; 0x2c
 800c186:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c18a:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 800c18e:	ab0e      	add	r3, sp, #56	; 0x38
 800c190:	2248      	movs	r2, #72	; 0x48
 800c192:	2600      	movs	r6, #0
 800c194:	4618      	mov	r0, r3
 800c196:	960a      	str	r6, [sp, #40]	; 0x28
 800c198:	f00d faca 	bl	8019730 <memcpy>
 800c19c:	f04f 32ff 	mov.w	r2, #4294967295
 800c1a0:	e9cd 2006 	strd	r2, r0, [sp, #24]
 800c1a4:	f8cd a008 	str.w	sl, [sp, #8]
 800c1a8:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 800c1ac:	fb93 f3f2 	sdiv	r3, r3, r2
 800c1b0:	b29b      	uxth	r3, r3
 800c1b2:	46b3      	mov	fp, r6
 800c1b4:	9303      	str	r3, [sp, #12]
 800c1b6:	2300      	movs	r3, #0
 800c1b8:	9309      	str	r3, [sp, #36]	; 0x24
 800c1ba:	9b07      	ldr	r3, [sp, #28]
 800c1bc:	9a03      	ldr	r2, [sp, #12]
 800c1be:	f853 303b 	ldr.w	r3, [r3, fp, lsl #3]
 800c1c2:	88ef      	ldrh	r7, [r5, #6]
 800c1c4:	f8b5 8008 	ldrh.w	r8, [r5, #8]
 800c1c8:	fb13 f302 	smulbb	r3, r3, r2
 800c1cc:	b29b      	uxth	r3, r3
 800c1ce:	9304      	str	r3, [sp, #16]
 800c1d0:	9b07      	ldr	r3, [sp, #28]
 800c1d2:	eb03 03cb 	add.w	r3, r3, fp, lsl #3
 800c1d6:	a80a      	add	r0, sp, #40	; 0x28
 800c1d8:	685b      	ldr	r3, [r3, #4]
 800c1da:	fb13 f302 	smulbb	r3, r3, r2
 800c1de:	b29b      	uxth	r3, r3
 800c1e0:	9305      	str	r3, [sp, #20]
 800c1e2:	9b04      	ldr	r3, [sp, #16]
 800c1e4:	441f      	add	r7, r3
 800c1e6:	9b05      	ldr	r3, [sp, #20]
 800c1e8:	4498      	add	r8, r3
 800c1ea:	b23f      	sxth	r7, r7
 800c1ec:	fa0f f888 	sxth.w	r8, r8
 800c1f0:	4642      	mov	r2, r8
 800c1f2:	4639      	mov	r1, r7
 800c1f4:	f7ff ff16 	bl	800c024 <_ZNK8touchgfx4Rect9intersectEss>
 800c1f8:	b380      	cbz	r0, 800c25c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c1fa:	4639      	mov	r1, r7
 800c1fc:	ab09      	add	r3, sp, #36	; 0x24
 800c1fe:	4642      	mov	r2, r8
 800c200:	1d20      	adds	r0, r4, #4
 800c202:	f7fc fbfb 	bl	80089fc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 800c206:	9909      	ldr	r1, [sp, #36]	; 0x24
 800c208:	b341      	cbz	r1, 800c25c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c20a:	4549      	cmp	r1, r9
 800c20c:	d026      	beq.n	800c25c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c20e:	a80c      	add	r0, sp, #48	; 0x30
 800c210:	f7ff fe17 	bl	800be42 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c214:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	; 0x30
 800c218:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 800c21c:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	; 0x34
 800c220:	2002      	movs	r0, #2
 800c222:	fb92 f2f0 	sdiv	r2, r2, r0
 800c226:	440a      	add	r2, r1
 800c228:	1a99      	subs	r1, r3, r2
 800c22a:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	; 0x36
 800c22e:	fb93 f3f0 	sdiv	r3, r3, r0
 800c232:	f9bd 0032 	ldrsh.w	r0, [sp, #50]	; 0x32
 800c236:	f9b5 2008 	ldrsh.w	r2, [r5, #8]
 800c23a:	4403      	add	r3, r0
 800c23c:	1ad3      	subs	r3, r2, r3
 800c23e:	435b      	muls	r3, r3
 800c240:	9a06      	ldr	r2, [sp, #24]
 800c242:	fb01 3301 	mla	r3, r1, r1, r3
 800c246:	4293      	cmp	r3, r2
 800c248:	d208      	bcs.n	800c25c <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x144>
 800c24a:	9a04      	ldr	r2, [sp, #16]
 800c24c:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 800c250:	86a2      	strh	r2, [r4, #52]	; 0x34
 800c252:	9a05      	ldr	r2, [sp, #20]
 800c254:	f8c4 9030 	str.w	r9, [r4, #48]	; 0x30
 800c258:	86e2      	strh	r2, [r4, #54]	; 0x36
 800c25a:	9306      	str	r3, [sp, #24]
 800c25c:	f10b 0b02 	add.w	fp, fp, #2
 800c260:	f1bb 0f08 	cmp.w	fp, #8
 800c264:	dda7      	ble.n	800c1b6 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 800c266:	9b02      	ldr	r3, [sp, #8]
 800c268:	4453      	add	r3, sl
 800c26a:	9302      	str	r3, [sp, #8]
 800c26c:	9b01      	ldr	r3, [sp, #4]
 800c26e:	3601      	adds	r6, #1
 800c270:	42b3      	cmp	r3, r6
 800c272:	d199      	bne.n	800c1a8 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x90>
 800c274:	6b21      	ldr	r1, [r4, #48]	; 0x30
 800c276:	2900      	cmp	r1, #0
 800c278:	f43f af5c 	beq.w	800c134 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c27c:	a80c      	add	r0, sp, #48	; 0x30
 800c27e:	f7ff fde0 	bl	800be42 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c282:	f8bd 3030 	ldrh.w	r3, [sp, #48]	; 0x30
 800c286:	88ea      	ldrh	r2, [r5, #6]
 800c288:	f8bd 0032 	ldrh.w	r0, [sp, #50]	; 0x32
 800c28c:	7929      	ldrb	r1, [r5, #4]
 800c28e:	f88d 103c 	strb.w	r1, [sp, #60]	; 0x3c
 800c292:	1ad2      	subs	r2, r2, r3
 800c294:	8ea3      	ldrh	r3, [r4, #52]	; 0x34
 800c296:	441a      	add	r2, r3
 800c298:	892b      	ldrh	r3, [r5, #8]
 800c29a:	f8ad 203e 	strh.w	r2, [sp, #62]	; 0x3e
 800c29e:	1a1b      	subs	r3, r3, r0
 800c2a0:	8ee0      	ldrh	r0, [r4, #54]	; 0x36
 800c2a2:	4403      	add	r3, r0
 800c2a4:	480d      	ldr	r0, [pc, #52]	; (800c2dc <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c4>)
 800c2a6:	900e      	str	r0, [sp, #56]	; 0x38
 800c2a8:	2600      	movs	r6, #0
 800c2aa:	6b20      	ldr	r0, [r4, #48]	; 0x30
 800c2ac:	f8ad 3040 	strh.w	r3, [sp, #64]	; 0x40
 800c2b0:	f8ad 6042 	strh.w	r6, [sp, #66]	; 0x42
 800c2b4:	6803      	ldr	r3, [r0, #0]
 800c2b6:	a90e      	add	r1, sp, #56	; 0x38
 800c2b8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800c2ba:	4798      	blx	r3
 800c2bc:	792b      	ldrb	r3, [r5, #4]
 800c2be:	2b00      	cmp	r3, #0
 800c2c0:	f43f af38 	beq.w	800c134 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c2c4:	e9c4 660c 	strd	r6, r6, [r4, #48]	; 0x30
 800c2c8:	e734      	b.n	800c134 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x1c>
 800c2ca:	bf00      	nop
 800c2cc:	2000a0ec 	.word	0x2000a0ec
 800c2d0:	2000a0e0 	.word	0x2000a0e0
 800c2d4:	0801a620 	.word	0x0801a620
 800c2d8:	2000a0e2 	.word	0x2000a0e2
 800c2dc:	0801c2c0 	.word	0x0801c2c0

0800c2e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 800c2e0:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c2e2:	4604      	mov	r4, r0
 800c2e4:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 800c2e8:	3201      	adds	r2, #1
 800c2ea:	d112      	bne.n	800c312 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 800c2ec:	6803      	ldr	r3, [r0, #0]
 800c2ee:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 800c2f2:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 800c2f6:	f8ad 1004 	strh.w	r1, [sp, #4]
 800c2fa:	2500      	movs	r5, #0
 800c2fc:	9500      	str	r5, [sp, #0]
 800c2fe:	466d      	mov	r5, sp
 800c300:	4629      	mov	r1, r5
 800c302:	f8ad 2006 	strh.w	r2, [sp, #6]
 800c306:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c308:	4798      	blx	r3
 800c30a:	e895 0003 	ldmia.w	r5, {r0, r1}
 800c30e:	e884 0003 	stmia.w	r4, {r0, r1}
 800c312:	4620      	mov	r0, r4
 800c314:	b003      	add	sp, #12
 800c316:	bd30      	pop	{r4, r5, pc}

0800c318 <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 800c318:	b513      	push	{r0, r1, r4, lr}
 800c31a:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 800c31e:	3301      	adds	r3, #1
 800c320:	4604      	mov	r4, r0
 800c322:	d109      	bne.n	800c338 <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 800c324:	4601      	mov	r1, r0
 800c326:	4668      	mov	r0, sp
 800c328:	f7ff fd8b 	bl	800be42 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c32c:	f8bd 3000 	ldrh.w	r3, [sp]
 800c330:	8423      	strh	r3, [r4, #32]
 800c332:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c336:	8463      	strh	r3, [r4, #34]	; 0x22
 800c338:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 800c33c:	b002      	add	sp, #8
 800c33e:	bd10      	pop	{r4, pc}

0800c340 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 800c340:	b513      	push	{r0, r1, r4, lr}
 800c342:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	; 0x22
 800c346:	3301      	adds	r3, #1
 800c348:	4604      	mov	r4, r0
 800c34a:	d109      	bne.n	800c360 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 800c34c:	4601      	mov	r1, r0
 800c34e:	4668      	mov	r0, sp
 800c350:	f7ff fd77 	bl	800be42 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 800c354:	f8bd 3000 	ldrh.w	r3, [sp]
 800c358:	8423      	strh	r3, [r4, #32]
 800c35a:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 800c35e:	8463      	strh	r3, [r4, #34]	; 0x22
 800c360:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	; 0x22
 800c364:	b002      	add	sp, #8
 800c366:	bd10      	pop	{r4, pc}

0800c368 <_ZN8touchgfx6ScreenC1Ev>:
 800c368:	b570      	push	{r4, r5, r6, lr}
 800c36a:	4605      	mov	r5, r0
 800c36c:	4b16      	ldr	r3, [pc, #88]	; (800c3c8 <_ZN8touchgfx6ScreenC1Ev+0x60>)
 800c36e:	f845 3b04 	str.w	r3, [r5], #4
 800c372:	2300      	movs	r3, #0
 800c374:	8103      	strh	r3, [r0, #8]
 800c376:	8143      	strh	r3, [r0, #10]
 800c378:	8183      	strh	r3, [r0, #12]
 800c37a:	81c3      	strh	r3, [r0, #14]
 800c37c:	8203      	strh	r3, [r0, #16]
 800c37e:	8243      	strh	r3, [r0, #18]
 800c380:	8283      	strh	r3, [r0, #20]
 800c382:	82c3      	strh	r3, [r0, #22]
 800c384:	e9c0 3306 	strd	r3, r3, [r0, #24]
 800c388:	6203      	str	r3, [r0, #32]
 800c38a:	8483      	strh	r3, [r0, #36]	; 0x24
 800c38c:	84c3      	strh	r3, [r0, #38]	; 0x26
 800c38e:	f880 3028 	strb.w	r3, [r0, #40]	; 0x28
 800c392:	4a0e      	ldr	r2, [pc, #56]	; (800c3cc <_ZN8touchgfx6ScreenC1Ev+0x64>)
 800c394:	6343      	str	r3, [r0, #52]	; 0x34
 800c396:	e9c0 330b 	strd	r3, r3, [r0, #44]	; 0x2c
 800c39a:	4b0d      	ldr	r3, [pc, #52]	; (800c3d0 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 800c39c:	6042      	str	r2, [r0, #4]
 800c39e:	f9b3 6000 	ldrsh.w	r6, [r3]
 800c3a2:	6b53      	ldr	r3, [r2, #52]	; 0x34
 800c3a4:	4a0b      	ldr	r2, [pc, #44]	; (800c3d4 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 800c3a6:	4604      	mov	r4, r0
 800c3a8:	2101      	movs	r1, #1
 800c3aa:	f880 1029 	strb.w	r1, [r0, #41]	; 0x29
 800c3ae:	f880 1038 	strb.w	r1, [r0, #56]	; 0x38
 800c3b2:	f9b2 1000 	ldrsh.w	r1, [r2]
 800c3b6:	4628      	mov	r0, r5
 800c3b8:	4798      	blx	r3
 800c3ba:	6863      	ldr	r3, [r4, #4]
 800c3bc:	4628      	mov	r0, r5
 800c3be:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800c3c0:	4631      	mov	r1, r6
 800c3c2:	4798      	blx	r3
 800c3c4:	4620      	mov	r0, r4
 800c3c6:	bd70      	pop	{r4, r5, r6, pc}
 800c3c8:	0801c2fc 	.word	0x0801c2fc
 800c3cc:	0801b81c 	.word	0x0801b81c
 800c3d0:	2000a0e2 	.word	0x2000a0e2
 800c3d4:	2000a0e0 	.word	0x2000a0e0

0800c3d8 <_ZN8touchgfx6Screen4drawEv>:
 800c3d8:	b507      	push	{r0, r1, r2, lr}
 800c3da:	4b09      	ldr	r3, [pc, #36]	; (800c400 <_ZN8touchgfx6Screen4drawEv+0x28>)
 800c3dc:	f9b3 2000 	ldrsh.w	r2, [r3]
 800c3e0:	4b08      	ldr	r3, [pc, #32]	; (800c404 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 800c3e2:	f8ad 2004 	strh.w	r2, [sp, #4]
 800c3e6:	f9b3 3000 	ldrsh.w	r3, [r3]
 800c3ea:	f8ad 3006 	strh.w	r3, [sp, #6]
 800c3ee:	6803      	ldr	r3, [r0, #0]
 800c3f0:	2100      	movs	r1, #0
 800c3f2:	9100      	str	r1, [sp, #0]
 800c3f4:	689b      	ldr	r3, [r3, #8]
 800c3f6:	4669      	mov	r1, sp
 800c3f8:	4798      	blx	r3
 800c3fa:	b003      	add	sp, #12
 800c3fc:	f85d fb04 	ldr.w	pc, [sp], #4
 800c400:	2000a0e0 	.word	0x2000a0e0
 800c404:	2000a0e2 	.word	0x2000a0e2

0800c408 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 800c408:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800c40c:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 800c410:	2b00      	cmp	r3, #0
 800c412:	b089      	sub	sp, #36	; 0x24
 800c414:	4680      	mov	r8, r0
 800c416:	460c      	mov	r4, r1
 800c418:	4615      	mov	r5, r2
 800c41a:	dd0e      	ble.n	800c43a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800c41c:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 800c420:	2b00      	cmp	r3, #0
 800c422:	dd0a      	ble.n	800c43a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800c424:	4628      	mov	r0, r5
 800c426:	f7ff ff5b 	bl	800c2e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800c42a:	4621      	mov	r1, r4
 800c42c:	f7fe fc5a 	bl	800ace4 <_ZNK8touchgfx4Rect9intersectERKS0_>
 800c430:	69eb      	ldr	r3, [r5, #28]
 800c432:	b928      	cbnz	r0, 800c440 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 800c434:	461d      	mov	r5, r3
 800c436:	2b00      	cmp	r3, #0
 800c438:	d1f4      	bne.n	800c424 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 800c43a:	b009      	add	sp, #36	; 0x24
 800c43c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800c440:	ae04      	add	r6, sp, #16
 800c442:	2b00      	cmp	r3, #0
 800c444:	f000 80b5 	beq.w	800c5b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800c448:	682b      	ldr	r3, [r5, #0]
 800c44a:	4629      	mov	r1, r5
 800c44c:	68db      	ldr	r3, [r3, #12]
 800c44e:	a802      	add	r0, sp, #8
 800c450:	4798      	blx	r3
 800c452:	4628      	mov	r0, r5
 800c454:	f7ff ff60 	bl	800c318 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800c458:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 800c45c:	4407      	add	r7, r0
 800c45e:	4628      	mov	r0, r5
 800c460:	f7ff ff6e 	bl	800c340 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800c464:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 800c468:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 800c46c:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c470:	4418      	add	r0, r3
 800c472:	4621      	mov	r1, r4
 800c474:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 800c478:	f8ad 0012 	strh.w	r0, [sp, #18]
 800c47c:	b23f      	sxth	r7, r7
 800c47e:	4630      	mov	r0, r6
 800c480:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c484:	f8ad 7010 	strh.w	r7, [sp, #16]
 800c488:	f7fc fb72 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 800c48c:	4628      	mov	r0, r5
 800c48e:	f7ff ff27 	bl	800c2e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800c492:	4602      	mov	r2, r0
 800c494:	e896 0003 	ldmia.w	r6, {r0, r1}
 800c498:	ab06      	add	r3, sp, #24
 800c49a:	e883 0003 	stmia.w	r3, {r0, r1}
 800c49e:	4611      	mov	r1, r2
 800c4a0:	4618      	mov	r0, r3
 800c4a2:	f7fc fb65 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 800c4a6:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 800c4aa:	f9b4 1000 	ldrsh.w	r1, [r4]
 800c4ae:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 800c4b2:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 800c4b6:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 800c4ba:	4299      	cmp	r1, r3
 800c4bc:	d10b      	bne.n	800c4d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800c4be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800c4c2:	4552      	cmp	r2, sl
 800c4c4:	d107      	bne.n	800c4d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800c4c6:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 800c4ca:	455a      	cmp	r2, fp
 800c4cc:	d103      	bne.n	800c4d6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 800c4ce:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 800c4d2:	454a      	cmp	r2, r9
 800c4d4:	d06d      	beq.n	800c5b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800c4d6:	f1bb 0f00 	cmp.w	fp, #0
 800c4da:	dd65      	ble.n	800c5a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800c4dc:	f1b9 0f00 	cmp.w	r9, #0
 800c4e0:	dd62      	ble.n	800c5a8 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 800c4e2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 800c4e6:	fa1f f08a 	uxth.w	r0, sl
 800c4ea:	4552      	cmp	r2, sl
 800c4ec:	9000      	str	r0, [sp, #0]
 800c4ee:	da12      	bge.n	800c516 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 800c4f0:	9301      	str	r3, [sp, #4]
 800c4f2:	9b00      	ldr	r3, [sp, #0]
 800c4f4:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 800c4f8:	f8ad 2012 	strh.w	r2, [sp, #18]
 800c4fc:	1a9a      	subs	r2, r3, r2
 800c4fe:	f8ad 1010 	strh.w	r1, [sp, #16]
 800c502:	f8ad 0014 	strh.w	r0, [sp, #20]
 800c506:	f8ad 2016 	strh.w	r2, [sp, #22]
 800c50a:	69ea      	ldr	r2, [r5, #28]
 800c50c:	4631      	mov	r1, r6
 800c50e:	4640      	mov	r0, r8
 800c510:	f7ff ff7a 	bl	800c408 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c514:	9b01      	ldr	r3, [sp, #4]
 800c516:	f9b4 2000 	ldrsh.w	r2, [r4]
 800c51a:	429a      	cmp	r2, r3
 800c51c:	b29f      	uxth	r7, r3
 800c51e:	da0d      	bge.n	800c53c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 800c520:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c524:	1aba      	subs	r2, r7, r2
 800c526:	f8ad a012 	strh.w	sl, [sp, #18]
 800c52a:	f8ad 2014 	strh.w	r2, [sp, #20]
 800c52e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800c532:	69ea      	ldr	r2, [r5, #28]
 800c534:	4631      	mov	r1, r6
 800c536:	4640      	mov	r0, r8
 800c538:	f7ff ff66 	bl	800c408 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c53c:	8822      	ldrh	r2, [r4, #0]
 800c53e:	88a3      	ldrh	r3, [r4, #4]
 800c540:	445f      	add	r7, fp
 800c542:	4413      	add	r3, r2
 800c544:	b29b      	uxth	r3, r3
 800c546:	b2bf      	uxth	r7, r7
 800c548:	b23a      	sxth	r2, r7
 800c54a:	b219      	sxth	r1, r3
 800c54c:	4291      	cmp	r1, r2
 800c54e:	dd0d      	ble.n	800c56c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 800c550:	1bdb      	subs	r3, r3, r7
 800c552:	f8ad 2010 	strh.w	r2, [sp, #16]
 800c556:	f8ad a012 	strh.w	sl, [sp, #18]
 800c55a:	f8ad 3014 	strh.w	r3, [sp, #20]
 800c55e:	f8ad 9016 	strh.w	r9, [sp, #22]
 800c562:	69ea      	ldr	r2, [r5, #28]
 800c564:	4631      	mov	r1, r6
 800c566:	4640      	mov	r0, r8
 800c568:	f7ff ff4e 	bl	800c408 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c56c:	88e2      	ldrh	r2, [r4, #6]
 800c56e:	8863      	ldrh	r3, [r4, #2]
 800c570:	4413      	add	r3, r2
 800c572:	9a00      	ldr	r2, [sp, #0]
 800c574:	444a      	add	r2, r9
 800c576:	b29b      	uxth	r3, r3
 800c578:	fa1f f982 	uxth.w	r9, r2
 800c57c:	fa0f f289 	sxth.w	r2, r9
 800c580:	b219      	sxth	r1, r3
 800c582:	428a      	cmp	r2, r1
 800c584:	da15      	bge.n	800c5b2 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 800c586:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 800c58a:	f9b4 0000 	ldrsh.w	r0, [r4]
 800c58e:	f8ad 1014 	strh.w	r1, [sp, #20]
 800c592:	eba3 0309 	sub.w	r3, r3, r9
 800c596:	f8ad 0010 	strh.w	r0, [sp, #16]
 800c59a:	f8ad 2012 	strh.w	r2, [sp, #18]
 800c59e:	f8ad 3016 	strh.w	r3, [sp, #22]
 800c5a2:	69ea      	ldr	r2, [r5, #28]
 800c5a4:	4631      	mov	r1, r6
 800c5a6:	e001      	b.n	800c5ac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 800c5a8:	69ea      	ldr	r2, [r5, #28]
 800c5aa:	4621      	mov	r1, r4
 800c5ac:	4640      	mov	r0, r8
 800c5ae:	f7ff ff2b 	bl	800c408 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c5b2:	4628      	mov	r0, r5
 800c5b4:	f7ff fe94 	bl	800c2e0 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 800c5b8:	6861      	ldr	r1, [r4, #4]
 800c5ba:	4602      	mov	r2, r0
 800c5bc:	6820      	ldr	r0, [r4, #0]
 800c5be:	4633      	mov	r3, r6
 800c5c0:	c303      	stmia	r3!, {r0, r1}
 800c5c2:	4611      	mov	r1, r2
 800c5c4:	4630      	mov	r0, r6
 800c5c6:	f7fc fad3 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 800c5ca:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 800c5ce:	2b00      	cmp	r3, #0
 800c5d0:	f77f af33 	ble.w	800c43a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800c5d4:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 800c5d8:	2b00      	cmp	r3, #0
 800c5da:	f77f af2e 	ble.w	800c43a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 800c5de:	4628      	mov	r0, r5
 800c5e0:	f7ff fe9a 	bl	800c318 <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 800c5e4:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 800c5e8:	1a18      	subs	r0, r3, r0
 800c5ea:	f8ad 0010 	strh.w	r0, [sp, #16]
 800c5ee:	4628      	mov	r0, r5
 800c5f0:	f7ff fea6 	bl	800c340 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 800c5f4:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 800c5f8:	1a18      	subs	r0, r3, r0
 800c5fa:	f8ad 0012 	strh.w	r0, [sp, #18]
 800c5fe:	682b      	ldr	r3, [r5, #0]
 800c600:	4631      	mov	r1, r6
 800c602:	689b      	ldr	r3, [r3, #8]
 800c604:	4628      	mov	r0, r5
 800c606:	4798      	blx	r3
 800c608:	e717      	b.n	800c43a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

0800c60a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 800c60a:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c60c:	aa02      	add	r2, sp, #8
 800c60e:	2300      	movs	r3, #0
 800c610:	f842 3d04 	str.w	r3, [r2, #-4]!
 800c614:	4604      	mov	r4, r0
 800c616:	3004      	adds	r0, #4
 800c618:	460d      	mov	r5, r1
 800c61a:	f7fc fb81 	bl	8008d20 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 800c61e:	9a01      	ldr	r2, [sp, #4]
 800c620:	b11a      	cbz	r2, 800c62a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x20>
 800c622:	4629      	mov	r1, r5
 800c624:	4620      	mov	r0, r4
 800c626:	f7ff feef 	bl	800c408 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 800c62a:	b003      	add	sp, #12
 800c62c:	bd30      	pop	{r4, r5, pc}

0800c62e <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 800c62e:	b537      	push	{r0, r1, r2, r4, r5, lr}
 800c630:	4602      	mov	r2, r0
 800c632:	4604      	mov	r4, r0
 800c634:	f852 0f08 	ldr.w	r0, [r2, #8]!
 800c638:	460d      	mov	r5, r1
 800c63a:	6851      	ldr	r1, [r2, #4]
 800c63c:	466b      	mov	r3, sp
 800c63e:	c303      	stmia	r3!, {r0, r1}
 800c640:	4629      	mov	r1, r5
 800c642:	4668      	mov	r0, sp
 800c644:	f7fc fa94 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 800c648:	f894 3038 	ldrb.w	r3, [r4, #56]	; 0x38
 800c64c:	4669      	mov	r1, sp
 800c64e:	b123      	cbz	r3, 800c65a <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2c>
 800c650:	4620      	mov	r0, r4
 800c652:	f7ff ffda 	bl	800c60a <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 800c656:	b003      	add	sp, #12
 800c658:	bd30      	pop	{r4, r5, pc}
 800c65a:	1d20      	adds	r0, r4, #4
 800c65c:	f7fc fb27 	bl	8008cae <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 800c660:	e7f9      	b.n	800c656 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x28>

0800c662 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 800c662:	680a      	ldr	r2, [r1, #0]
 800c664:	460b      	mov	r3, r1
 800c666:	6992      	ldr	r2, [r2, #24]
 800c668:	1d01      	adds	r1, r0, #4
 800c66a:	4618      	mov	r0, r3
 800c66c:	4710      	bx	r2

0800c66e <_ZN8touchgfx12TextProviderC1Ev>:
 800c66e:	b538      	push	{r3, r4, r5, lr}
 800c670:	2500      	movs	r5, #0
 800c672:	4604      	mov	r4, r0
 800c674:	e9c0 5500 	strd	r5, r5, [r0]
 800c678:	e9c0 5502 	strd	r5, r5, [r0, #8]
 800c67c:	7405      	strb	r5, [r0, #16]
 800c67e:	82c5      	strh	r5, [r0, #22]
 800c680:	8305      	strh	r5, [r0, #24]
 800c682:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800c684:	8605      	strh	r5, [r0, #48]	; 0x30
 800c686:	86c5      	strh	r5, [r0, #54]	; 0x36
 800c688:	8705      	strh	r5, [r0, #56]	; 0x38
 800c68a:	e9c0 550f 	strd	r5, r5, [r0, #60]	; 0x3c
 800c68e:	220e      	movs	r2, #14
 800c690:	4629      	mov	r1, r5
 800c692:	3044      	adds	r0, #68	; 0x44
 800c694:	f00d f85a 	bl	801974c <memset>
 800c698:	2301      	movs	r3, #1
 800c69a:	4620      	mov	r0, r4
 800c69c:	f8a4 5052 	strh.w	r5, [r4, #82]	; 0x52
 800c6a0:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800c6a4:	f8a4 5056 	strh.w	r5, [r4, #86]	; 0x56
 800c6a8:	f884 3058 	strb.w	r3, [r4, #88]	; 0x58
 800c6ac:	f884 5059 	strb.w	r5, [r4, #89]	; 0x59
 800c6b0:	f7f5 ffd0 	bl	8002654 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 800c6b4:	4620      	mov	r0, r4
 800c6b6:	bd38      	pop	{r3, r4, r5, pc}

0800c6b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 800c6b8:	b530      	push	{r4, r5, lr}
 800c6ba:	2500      	movs	r5, #0
 800c6bc:	2401      	movs	r4, #1
 800c6be:	6843      	ldr	r3, [r0, #4]
 800c6c0:	b913      	cbnz	r3, 800c6c8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 800c6c2:	6803      	ldr	r3, [r0, #0]
 800c6c4:	b1f3      	cbz	r3, 800c704 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800c6c6:	6043      	str	r3, [r0, #4]
 800c6c8:	7c03      	ldrb	r3, [r0, #16]
 800c6ca:	b143      	cbz	r3, 800c6de <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 800c6cc:	68c3      	ldr	r3, [r0, #12]
 800c6ce:	b12b      	cbz	r3, 800c6dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800c6d0:	881a      	ldrh	r2, [r3, #0]
 800c6d2:	b11a      	cbz	r2, 800c6dc <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 800c6d4:	1c9a      	adds	r2, r3, #2
 800c6d6:	60c2      	str	r2, [r0, #12]
 800c6d8:	8818      	ldrh	r0, [r3, #0]
 800c6da:	bd30      	pop	{r4, r5, pc}
 800c6dc:	7405      	strb	r5, [r0, #16]
 800c6de:	6843      	ldr	r3, [r0, #4]
 800c6e0:	8819      	ldrh	r1, [r3, #0]
 800c6e2:	b179      	cbz	r1, 800c704 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x4c>
 800c6e4:	1c9a      	adds	r2, r3, #2
 800c6e6:	2902      	cmp	r1, #2
 800c6e8:	6042      	str	r2, [r0, #4]
 800c6ea:	d1f5      	bne.n	800c6d8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 800c6ec:	6883      	ldr	r3, [r0, #8]
 800c6ee:	1d1a      	adds	r2, r3, #4
 800c6f0:	6082      	str	r2, [r0, #8]
 800c6f2:	681b      	ldr	r3, [r3, #0]
 800c6f4:	60c3      	str	r3, [r0, #12]
 800c6f6:	2b00      	cmp	r3, #0
 800c6f8:	d0e1      	beq.n	800c6be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800c6fa:	881b      	ldrh	r3, [r3, #0]
 800c6fc:	2b00      	cmp	r3, #0
 800c6fe:	d0de      	beq.n	800c6be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800c700:	7404      	strb	r4, [r0, #16]
 800c702:	e7dc      	b.n	800c6be <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 800c704:	2000      	movs	r0, #0
 800c706:	e7e8      	b.n	800c6da <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

0800c708 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 800c708:	b410      	push	{r4}
 800c70a:	63c3      	str	r3, [r0, #60]	; 0x3c
 800c70c:	9b01      	ldr	r3, [sp, #4]
 800c70e:	6403      	str	r3, [r0, #64]	; 0x40
 800c710:	2300      	movs	r3, #0
 800c712:	6082      	str	r2, [r0, #8]
 800c714:	6001      	str	r1, [r0, #0]
 800c716:	6043      	str	r3, [r0, #4]
 800c718:	60c3      	str	r3, [r0, #12]
 800c71a:	7403      	strb	r3, [r0, #16]
 800c71c:	8603      	strh	r3, [r0, #48]	; 0x30
 800c71e:	8303      	strh	r3, [r0, #24]
 800c720:	8703      	strh	r3, [r0, #56]	; 0x38
 800c722:	f85d 4b04 	ldr.w	r4, [sp], #4
 800c726:	f7f5 bf95 	b.w	8002654 <_ZN8touchgfx12TextProvider18initializeInternalEv>

0800c72a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 800c72a:	b5f0      	push	{r4, r5, r6, r7, lr}
 800c72c:	4605      	mov	r5, r0
 800c72e:	4608      	mov	r0, r1
 800c730:	b1e9      	cbz	r1, 800c76e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 800c732:	f105 0444 	add.w	r4, r5, #68	; 0x44
 800c736:	460b      	mov	r3, r1
 800c738:	f101 0708 	add.w	r7, r1, #8
 800c73c:	4622      	mov	r2, r4
 800c73e:	6818      	ldr	r0, [r3, #0]
 800c740:	6859      	ldr	r1, [r3, #4]
 800c742:	4626      	mov	r6, r4
 800c744:	c603      	stmia	r6!, {r0, r1}
 800c746:	3308      	adds	r3, #8
 800c748:	42bb      	cmp	r3, r7
 800c74a:	4634      	mov	r4, r6
 800c74c:	d1f7      	bne.n	800c73e <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 800c74e:	6818      	ldr	r0, [r3, #0]
 800c750:	6030      	str	r0, [r6, #0]
 800c752:	889b      	ldrh	r3, [r3, #4]
 800c754:	80b3      	strh	r3, [r6, #4]
 800c756:	f895 3051 	ldrb.w	r3, [r5, #81]	; 0x51
 800c75a:	015b      	lsls	r3, r3, #5
 800c75c:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800c760:	f895 304a 	ldrb.w	r3, [r5, #74]	; 0x4a
 800c764:	430b      	orrs	r3, r1
 800c766:	425b      	negs	r3, r3
 800c768:	f885 304d 	strb.w	r3, [r5, #77]	; 0x4d
 800c76c:	4610      	mov	r0, r2
 800c76e:	bdf0      	pop	{r4, r5, r6, r7, pc}

0800c770 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 800c770:	b538      	push	{r3, r4, r5, lr}
 800c772:	460c      	mov	r4, r1
 800c774:	6811      	ldr	r1, [r2, #0]
 800c776:	4610      	mov	r0, r2
 800c778:	68cd      	ldr	r5, [r1, #12]
 800c77a:	4619      	mov	r1, r3
 800c77c:	47a8      	blx	r5
 800c77e:	2800      	cmp	r0, #0
 800c780:	bf08      	it	eq
 800c782:	4620      	moveq	r0, r4
 800c784:	bd38      	pop	{r3, r4, r5, pc}
	...

0800c788 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 800c788:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800c78a:	4604      	mov	r4, r0
 800c78c:	4615      	mov	r5, r2
 800c78e:	4608      	mov	r0, r1
 800c790:	b93a      	cbnz	r2, 800c7a2 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1a>
 800c792:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800c796:	f8a4 2054 	strh.w	r2, [r4, #84]	; 0x54
 800c79a:	f8a4 2056 	strh.w	r2, [r4, #86]	; 0x56
 800c79e:	4628      	mov	r0, r5
 800c7a0:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800c7a2:	f892 c00d 	ldrb.w	ip, [r2, #13]
 800c7a6:	8893      	ldrh	r3, [r2, #4]
 800c7a8:	ea4f 160c 	mov.w	r6, ip, lsl #4
 800c7ac:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800c7b0:	79ee      	ldrb	r6, [r5, #7]
 800c7b2:	4316      	orrs	r6, r2
 800c7b4:	f46f 6263 	mvn.w	r2, #3632	; 0xe30
 800c7b8:	189a      	adds	r2, r3, r2
 800c7ba:	b291      	uxth	r1, r2
 800c7bc:	291d      	cmp	r1, #29
 800c7be:	b2b7      	uxth	r7, r6
 800c7c0:	f200 8083 	bhi.w	800c8ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800c7c4:	2201      	movs	r2, #1
 800c7c6:	408a      	lsls	r2, r1
 800c7c8:	4978      	ldr	r1, [pc, #480]	; (800c9ac <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x224>)
 800c7ca:	420a      	tst	r2, r1
 800c7cc:	ea4f 06e6 	mov.w	r6, r6, asr #3
 800c7d0:	d12d      	bne.n	800c82e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa6>
 800c7d2:	f412 7f60 	tst.w	r2, #896	; 0x380
 800c7d6:	d078      	beq.n	800c8ca <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x142>
 800c7d8:	f104 0244 	add.w	r2, r4, #68	; 0x44
 800c7dc:	462b      	mov	r3, r5
 800c7de:	f105 0e08 	add.w	lr, r5, #8
 800c7e2:	4615      	mov	r5, r2
 800c7e4:	6818      	ldr	r0, [r3, #0]
 800c7e6:	6859      	ldr	r1, [r3, #4]
 800c7e8:	4694      	mov	ip, r2
 800c7ea:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 800c7ee:	3308      	adds	r3, #8
 800c7f0:	4573      	cmp	r3, lr
 800c7f2:	4662      	mov	r2, ip
 800c7f4:	d1f6      	bne.n	800c7e4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5c>
 800c7f6:	6818      	ldr	r0, [r3, #0]
 800c7f8:	f8cc 0000 	str.w	r0, [ip]
 800c7fc:	889b      	ldrh	r3, [r3, #4]
 800c7fe:	f8ac 3004 	strh.w	r3, [ip, #4]
 800c802:	f8b4 1054 	ldrh.w	r1, [r4, #84]	; 0x54
 800c806:	f894 0051 	ldrb.w	r0, [r4, #81]	; 0x51
 800c80a:	b2b3      	uxth	r3, r6
 800c80c:	1aca      	subs	r2, r1, r3
 800c80e:	b292      	uxth	r2, r2
 800c810:	f884 204c 	strb.w	r2, [r4, #76]	; 0x4c
 800c814:	10d2      	asrs	r2, r2, #3
 800c816:	f020 0060 	bic.w	r0, r0, #96	; 0x60
 800c81a:	f002 0260 	and.w	r2, r2, #96	; 0x60
 800c81e:	4302      	orrs	r2, r0
 800c820:	1bcf      	subs	r7, r1, r7
 800c822:	f884 2051 	strb.w	r2, [r4, #81]	; 0x51
 800c826:	1afb      	subs	r3, r7, r3
 800c828:	f8a4 3054 	strh.w	r3, [r4, #84]	; 0x54
 800c82c:	e7b7      	b.n	800c79e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800c82e:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800c830:	b92b      	cbnz	r3, 800c83e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb6>
 800c832:	4b5f      	ldr	r3, [pc, #380]	; (800c9b0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x228>)
 800c834:	4a5f      	ldr	r2, [pc, #380]	; (800c9b4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x22c>)
 800c836:	4860      	ldr	r0, [pc, #384]	; (800c9b8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x230>)
 800c838:	21bf      	movs	r1, #191	; 0xbf
 800c83a:	f00c fe01 	bl	8019440 <__assert_func>
 800c83e:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800c840:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800c844:	8b59      	ldrh	r1, [r3, #26]
 800c846:	f640 6333 	movw	r3, #3635	; 0xe33
 800c84a:	4299      	cmp	r1, r3
 800c84c:	d110      	bne.n	800c870 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xe8>
 800c84e:	6803      	ldr	r3, [r0, #0]
 800c850:	68db      	ldr	r3, [r3, #12]
 800c852:	4798      	blx	r3
 800c854:	7b41      	ldrb	r1, [r0, #13]
 800c856:	00cb      	lsls	r3, r1, #3
 800c858:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c85c:	7a03      	ldrb	r3, [r0, #8]
 800c85e:	0648      	lsls	r0, r1, #25
 800c860:	ea43 0302 	orr.w	r3, r3, r2
 800c864:	bf44      	itt	mi
 800c866:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c86a:	b21b      	sxthmi	r3, r3
 800c86c:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800c870:	f8b4 3052 	ldrh.w	r3, [r4, #82]	; 0x52
 800c874:	443b      	add	r3, r7
 800c876:	4433      	add	r3, r6
 800c878:	b29b      	uxth	r3, r3
 800c87a:	f104 0644 	add.w	r6, r4, #68	; 0x44
 800c87e:	462a      	mov	r2, r5
 800c880:	f105 0c08 	add.w	ip, r5, #8
 800c884:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800c888:	4635      	mov	r5, r6
 800c88a:	6810      	ldr	r0, [r2, #0]
 800c88c:	6851      	ldr	r1, [r2, #4]
 800c88e:	4637      	mov	r7, r6
 800c890:	c703      	stmia	r7!, {r0, r1}
 800c892:	3208      	adds	r2, #8
 800c894:	4562      	cmp	r2, ip
 800c896:	463e      	mov	r6, r7
 800c898:	d1f7      	bne.n	800c88a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 800c89a:	6810      	ldr	r0, [r2, #0]
 800c89c:	6038      	str	r0, [r7, #0]
 800c89e:	8892      	ldrh	r2, [r2, #4]
 800c8a0:	80ba      	strh	r2, [r7, #4]
 800c8a2:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800c8a6:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800c8aa:	10db      	asrs	r3, r3, #3
 800c8ac:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800c8b0:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800c8b4:	4313      	orrs	r3, r2
 800c8b6:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800c8ba:	f894 2056 	ldrb.w	r2, [r4, #86]	; 0x56
 800c8be:	f894 304d 	ldrb.w	r3, [r4, #77]	; 0x4d
 800c8c2:	1a9b      	subs	r3, r3, r2
 800c8c4:	f884 304d 	strb.w	r3, [r4, #77]	; 0x4d
 800c8c8:	e769      	b.n	800c79e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x16>
 800c8ca:	f023 0204 	bic.w	r2, r3, #4
 800c8ce:	f640 611b 	movw	r1, #3611	; 0xe1b
 800c8d2:	428a      	cmp	r2, r1
 800c8d4:	d003      	beq.n	800c8de <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x156>
 800c8d6:	f640 621d 	movw	r2, #3613	; 0xe1d
 800c8da:	4293      	cmp	r3, r2
 800c8dc:	d120      	bne.n	800c920 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x198>
 800c8de:	3b01      	subs	r3, #1
 800c8e0:	4602      	mov	r2, r0
 800c8e2:	b29b      	uxth	r3, r3
 800c8e4:	4629      	mov	r1, r5
 800c8e6:	4620      	mov	r0, r4
 800c8e8:	f7ff ff42 	bl	800c770 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800c8ec:	7b41      	ldrb	r1, [r0, #13]
 800c8ee:	00cb      	lsls	r3, r1, #3
 800c8f0:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c8f4:	7a03      	ldrb	r3, [r0, #8]
 800c8f6:	0649      	lsls	r1, r1, #25
 800c8f8:	ea43 0302 	orr.w	r3, r3, r2
 800c8fc:	bf44      	itt	mi
 800c8fe:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c902:	b21b      	sxthmi	r3, r3
 800c904:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800c908:	7b6b      	ldrb	r3, [r5, #13]
 800c90a:	7aaa      	ldrb	r2, [r5, #10]
 800c90c:	005b      	lsls	r3, r3, #1
 800c90e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c912:	4313      	orrs	r3, r2
 800c914:	115a      	asrs	r2, r3, #5
 800c916:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 800c91a:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800c91e:	e036      	b.n	800c98e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x206>
 800c920:	ea4f 02cc 	mov.w	r2, ip, lsl #3
 800c924:	f402 7180 	and.w	r1, r2, #256	; 0x100
 800c928:	7a2a      	ldrb	r2, [r5, #8]
 800c92a:	f01c 0f40 	tst.w	ip, #64	; 0x40
 800c92e:	ea42 0201 	orr.w	r2, r2, r1
 800c932:	bf1c      	itt	ne
 800c934:	f5a2 7200 	subne.w	r2, r2, #512	; 0x200
 800c938:	b212      	sxthne	r2, r2
 800c93a:	f8a4 2052 	strh.w	r2, [r4, #82]	; 0x52
 800c93e:	f640 6109 	movw	r1, #3593	; 0xe09
 800c942:	f023 0210 	bic.w	r2, r3, #16
 800c946:	428a      	cmp	r2, r1
 800c948:	d003      	beq.n	800c952 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1ca>
 800c94a:	f640 6213 	movw	r2, #3603	; 0xe13
 800c94e:	4293      	cmp	r3, r2
 800c950:	d12a      	bne.n	800c9a8 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x220>
 800c952:	7b6e      	ldrb	r6, [r5, #13]
 800c954:	0076      	lsls	r6, r6, #1
 800c956:	f406 7280 	and.w	r2, r6, #256	; 0x100
 800c95a:	7aae      	ldrb	r6, [r5, #10]
 800c95c:	4316      	orrs	r6, r2
 800c95e:	f640 6213 	movw	r2, #3603	; 0xe13
 800c962:	4293      	cmp	r3, r2
 800c964:	bf18      	it	ne
 800c966:	f103 33ff 	addne.w	r3, r3, #4294967295
 800c96a:	4602      	mov	r2, r0
 800c96c:	bf14      	ite	ne
 800c96e:	b29b      	uxthne	r3, r3
 800c970:	f640 630c 	movweq	r3, #3596	; 0xe0c
 800c974:	4629      	mov	r1, r5
 800c976:	4620      	mov	r0, r4
 800c978:	f7ff fefa 	bl	800c770 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 800c97c:	7b43      	ldrb	r3, [r0, #13]
 800c97e:	7a82      	ldrb	r2, [r0, #10]
 800c980:	005b      	lsls	r3, r3, #1
 800c982:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800c986:	4313      	orrs	r3, r2
 800c988:	1af6      	subs	r6, r6, r3
 800c98a:	f8a4 6056 	strh.w	r6, [r4, #86]	; 0x56
 800c98e:	7b69      	ldrb	r1, [r5, #13]
 800c990:	00cb      	lsls	r3, r1, #3
 800c992:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800c996:	7a2b      	ldrb	r3, [r5, #8]
 800c998:	4313      	orrs	r3, r2
 800c99a:	064a      	lsls	r2, r1, #25
 800c99c:	bf44      	itt	mi
 800c99e:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800c9a2:	b21b      	sxthmi	r3, r3
 800c9a4:	1bdb      	subs	r3, r3, r7
 800c9a6:	e73f      	b.n	800c828 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa0>
 800c9a8:	2300      	movs	r3, #0
 800c9aa:	e7b6      	b.n	800c91a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x192>
 800c9ac:	3fc00079 	.word	0x3fc00079
 800c9b0:	0801b118 	.word	0x0801b118
 800c9b4:	0801c557 	.word	0x0801c557
 800c9b8:	0801b1ea 	.word	0x0801b1ea

0800c9bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 800c9bc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800c9c0:	4604      	mov	r4, r0
 800c9c2:	b942      	cbnz	r2, 800c9d6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 800c9c4:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800c9c8:	f8a0 3052 	strh.w	r3, [r0, #82]	; 0x52
 800c9cc:	f8a0 3054 	strh.w	r3, [r0, #84]	; 0x54
 800c9d0:	f8a4 3056 	strh.w	r3, [r4, #86]	; 0x56
 800c9d4:	e046      	b.n	800ca64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800c9d6:	7b51      	ldrb	r1, [r2, #13]
 800c9d8:	8893      	ldrh	r3, [r2, #4]
 800c9da:	010f      	lsls	r7, r1, #4
 800c9dc:	f407 7080 	and.w	r0, r7, #256	; 0x100
 800c9e0:	79d7      	ldrb	r7, [r2, #7]
 800c9e2:	4307      	orrs	r7, r0
 800c9e4:	2f04      	cmp	r7, #4
 800c9e6:	b2bd      	uxth	r5, r7
 800c9e8:	bfcc      	ite	gt
 800c9ea:	08bf      	lsrgt	r7, r7, #2
 800c9ec:	2701      	movle	r7, #1
 800c9ee:	f5b3 6fdd 	cmp.w	r3, #1768	; 0x6e8
 800c9f2:	f200 80ab 	bhi.w	800cb4c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x190>
 800c9f6:	f240 60e7 	movw	r0, #1767	; 0x6e7
 800c9fa:	4283      	cmp	r3, r0
 800c9fc:	d216      	bcs.n	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800c9fe:	f240 605b 	movw	r0, #1627	; 0x65b
 800ca02:	4283      	cmp	r3, r0
 800ca04:	d859      	bhi.n	800caba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xfe>
 800ca06:	f240 6057 	movw	r0, #1623	; 0x657
 800ca0a:	4283      	cmp	r3, r0
 800ca0c:	d20e      	bcs.n	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ca0e:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800ca12:	d24a      	bcs.n	800caaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xee>
 800ca14:	f240 604e 	movw	r0, #1614	; 0x64e
 800ca18:	4283      	cmp	r3, r0
 800ca1a:	d207      	bcs.n	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ca1c:	f240 601a 	movw	r0, #1562	; 0x61a
 800ca20:	4283      	cmp	r3, r0
 800ca22:	d02a      	beq.n	800ca7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800ca24:	d821      	bhi.n	800ca6a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xae>
 800ca26:	f5b3 6fc2 	cmp.w	r3, #1552	; 0x610
 800ca2a:	d35b      	bcc.n	800cae4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ca2c:	f9b4 3052 	ldrsh.w	r3, [r4, #82]	; 0x52
 800ca30:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ca34:	f040 80d0 	bne.w	800cbd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800ca38:	f9b4 0054 	ldrsh.w	r0, [r4, #84]	; 0x54
 800ca3c:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ca40:	f040 80ca 	bne.w	800cbd8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21c>
 800ca44:	00cb      	lsls	r3, r1, #3
 800ca46:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ca4a:	7a13      	ldrb	r3, [r2, #8]
 800ca4c:	0649      	lsls	r1, r1, #25
 800ca4e:	ea43 0300 	orr.w	r3, r3, r0
 800ca52:	bf44      	itt	mi
 800ca54:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ca58:	b21b      	sxthmi	r3, r3
 800ca5a:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800ca5e:	1b5d      	subs	r5, r3, r5
 800ca60:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800ca64:	4610      	mov	r0, r2
 800ca66:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800ca6a:	f240 604b 	movw	r0, #1611	; 0x64b
 800ca6e:	4283      	cmp	r3, r0
 800ca70:	d338      	bcc.n	800cae4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800ca72:	f240 604c 	movw	r0, #1612	; 0x64c
 800ca76:	4283      	cmp	r3, r0
 800ca78:	d9d8      	bls.n	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800ca7a:	f9b4 0052 	ldrsh.w	r0, [r4, #82]	; 0x52
 800ca7e:	f9b4 3054 	ldrsh.w	r3, [r4, #84]	; 0x54
 800ca82:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800ca86:	f040 80f1 	bne.w	800cc6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800ca8a:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ca8e:	f040 80ed 	bne.w	800cc6c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>
 800ca92:	00cb      	lsls	r3, r1, #3
 800ca94:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800ca98:	7a13      	ldrb	r3, [r2, #8]
 800ca9a:	064e      	lsls	r6, r1, #25
 800ca9c:	ea43 0300 	orr.w	r3, r3, r0
 800caa0:	bf44      	itt	mi
 800caa2:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800caa6:	b21b      	sxthmi	r3, r3
 800caa8:	e7d9      	b.n	800ca5e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa2>
 800caaa:	f240 6054 	movw	r0, #1620	; 0x654
 800caae:	4283      	cmp	r3, r0
 800cab0:	d8e3      	bhi.n	800ca7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cab2:	f5b3 6fca 	cmp.w	r3, #1616	; 0x650
 800cab6:	d9e0      	bls.n	800ca7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cab8:	e7b8      	b.n	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800caba:	f240 6074 	movw	r0, #1652	; 0x674
 800cabe:	4283      	cmp	r3, r0
 800cac0:	d0b4      	beq.n	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cac2:	d82d      	bhi.n	800cb20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x164>
 800cac4:	f240 605e 	movw	r0, #1630	; 0x65e
 800cac8:	4283      	cmp	r3, r0
 800caca:	d804      	bhi.n	800cad6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11a>
 800cacc:	f240 605d 	movw	r0, #1629	; 0x65d
 800cad0:	4283      	cmp	r3, r0
 800cad2:	d3d2      	bcc.n	800ca7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cad4:	e7aa      	b.n	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cad6:	f240 605f 	movw	r0, #1631	; 0x65f
 800cada:	4283      	cmp	r3, r0
 800cadc:	d0cd      	beq.n	800ca7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cade:	f5b3 6fce 	cmp.w	r3, #1648	; 0x670
 800cae2:	d0a3      	beq.n	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cae4:	00cb      	lsls	r3, r1, #3
 800cae6:	f403 7080 	and.w	r0, r3, #256	; 0x100
 800caea:	7a13      	ldrb	r3, [r2, #8]
 800caec:	0649      	lsls	r1, r1, #25
 800caee:	ea43 0300 	orr.w	r3, r3, r0
 800caf2:	bf44      	itt	mi
 800caf4:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800caf8:	b21b      	sxthmi	r3, r3
 800cafa:	1b5d      	subs	r5, r3, r5
 800cafc:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800cb00:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800cb04:	7b53      	ldrb	r3, [r2, #13]
 800cb06:	015b      	lsls	r3, r3, #5
 800cb08:	f403 7180 	and.w	r1, r3, #256	; 0x100
 800cb0c:	7993      	ldrb	r3, [r2, #6]
 800cb0e:	430b      	orrs	r3, r1
 800cb10:	005b      	lsls	r3, r3, #1
 800cb12:	2105      	movs	r1, #5
 800cb14:	fb93 f3f1 	sdiv	r3, r3, r1
 800cb18:	f992 1009 	ldrsb.w	r1, [r2, #9]
 800cb1c:	440b      	add	r3, r1
 800cb1e:	e757      	b.n	800c9d0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 800cb20:	f240 60e2 	movw	r0, #1762	; 0x6e2
 800cb24:	4283      	cmp	r3, r0
 800cb26:	d809      	bhi.n	800cb3c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x180>
 800cb28:	f240 60df 	movw	r0, #1759	; 0x6df
 800cb2c:	4283      	cmp	r3, r0
 800cb2e:	f4bf af7d 	bcs.w	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cb32:	f2a3 63d6 	subw	r3, r3, #1750	; 0x6d6
 800cb36:	2b05      	cmp	r3, #5
 800cb38:	d8d4      	bhi.n	800cae4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800cb3a:	e777      	b.n	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cb3c:	f240 60e3 	movw	r0, #1763	; 0x6e3
 800cb40:	4283      	cmp	r3, r0
 800cb42:	d09a      	beq.n	800ca7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cb44:	f240 60e4 	movw	r0, #1764	; 0x6e4
 800cb48:	4283      	cmp	r3, r0
 800cb4a:	e7ca      	b.n	800cae2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x126>
 800cb4c:	f5b3 6f0f 	cmp.w	r3, #2288	; 0x8f0
 800cb50:	d22b      	bcs.n	800cbaa <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ee>
 800cb52:	f640 00ed 	movw	r0, #2285	; 0x8ed
 800cb56:	4283      	cmp	r3, r0
 800cb58:	d28f      	bcs.n	800ca7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cb5a:	f640 00e5 	movw	r0, #2277	; 0x8e5
 800cb5e:	4283      	cmp	r3, r0
 800cb60:	d816      	bhi.n	800cb90 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d4>
 800cb62:	f640 00e4 	movw	r0, #2276	; 0x8e4
 800cb66:	4283      	cmp	r3, r0
 800cb68:	f4bf af60 	bcs.w	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cb6c:	f240 60ec 	movw	r0, #1772	; 0x6ec
 800cb70:	4283      	cmp	r3, r0
 800cb72:	d80a      	bhi.n	800cb8a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1ce>
 800cb74:	f240 60eb 	movw	r0, #1771	; 0x6eb
 800cb78:	4283      	cmp	r3, r0
 800cb7a:	f4bf af57 	bcs.w	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cb7e:	f240 60ea 	movw	r0, #1770	; 0x6ea
 800cb82:	4283      	cmp	r3, r0
 800cb84:	f43f af79 	beq.w	800ca7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cb88:	e7ac      	b.n	800cae4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 800cb8a:	f240 60ed 	movw	r0, #1773	; 0x6ed
 800cb8e:	e7f8      	b.n	800cb82 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c6>
 800cb90:	f640 00e8 	movw	r0, #2280	; 0x8e8
 800cb94:	4283      	cmp	r3, r0
 800cb96:	d802      	bhi.n	800cb9e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e2>
 800cb98:	f640 00e7 	movw	r0, #2279	; 0x8e7
 800cb9c:	e798      	b.n	800cad0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x114>
 800cb9e:	f640 00e9 	movw	r0, #2281	; 0x8e9
 800cba2:	4283      	cmp	r3, r0
 800cba4:	f47f af42 	bne.w	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cba8:	e767      	b.n	800ca7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cbaa:	f640 00f6 	movw	r0, #2294	; 0x8f6
 800cbae:	4283      	cmp	r3, r0
 800cbb0:	f43f af63 	beq.w	800ca7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cbb4:	d802      	bhi.n	800cbbc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x200>
 800cbb6:	f640 00f2 	movw	r0, #2290	; 0x8f2
 800cbba:	e7f2      	b.n	800cba2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e6>
 800cbbc:	f640 00fa 	movw	r0, #2298	; 0x8fa
 800cbc0:	4283      	cmp	r3, r0
 800cbc2:	d805      	bhi.n	800cbd0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x214>
 800cbc4:	f640 00f9 	movw	r0, #2297	; 0x8f9
 800cbc8:	4283      	cmp	r3, r0
 800cbca:	f4ff af2f 	bcc.w	800ca2c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x70>
 800cbce:	e754      	b.n	800ca7a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xbe>
 800cbd0:	f640 00fe 	movw	r0, #2302	; 0x8fe
 800cbd4:	4283      	cmp	r3, r0
 800cbd6:	e7af      	b.n	800cb38 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17c>
 800cbd8:	f104 0c44 	add.w	ip, r4, #68	; 0x44
 800cbdc:	4617      	mov	r7, r2
 800cbde:	f102 0808 	add.w	r8, r2, #8
 800cbe2:	4666      	mov	r6, ip
 800cbe4:	6838      	ldr	r0, [r7, #0]
 800cbe6:	6879      	ldr	r1, [r7, #4]
 800cbe8:	46e6      	mov	lr, ip
 800cbea:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 800cbee:	3708      	adds	r7, #8
 800cbf0:	4547      	cmp	r7, r8
 800cbf2:	46f4      	mov	ip, lr
 800cbf4:	d1f6      	bne.n	800cbe4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x228>
 800cbf6:	6838      	ldr	r0, [r7, #0]
 800cbf8:	f8ce 0000 	str.w	r0, [lr]
 800cbfc:	88b9      	ldrh	r1, [r7, #4]
 800cbfe:	f8ae 1004 	strh.w	r1, [lr, #4]
 800cc02:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 800cc06:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800cc0a:	d009      	beq.n	800cc20 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x264>
 800cc0c:	7b51      	ldrb	r1, [r2, #13]
 800cc0e:	7992      	ldrb	r2, [r2, #6]
 800cc10:	0149      	lsls	r1, r1, #5
 800cc12:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800cc16:	4311      	orrs	r1, r2
 800cc18:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800cc1c:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 800cc20:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800cc24:	d00d      	beq.n	800cc42 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x286>
 800cc26:	442b      	add	r3, r5
 800cc28:	b29b      	uxth	r3, r3
 800cc2a:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800cc2e:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800cc32:	10db      	asrs	r3, r3, #3
 800cc34:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800cc38:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800cc3c:	4313      	orrs	r3, r2
 800cc3e:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800cc42:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 800cc46:	00cb      	lsls	r3, r1, #3
 800cc48:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800cc4c:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 800cc50:	064f      	lsls	r7, r1, #25
 800cc52:	ea43 0302 	orr.w	r3, r3, r2
 800cc56:	bf44      	itt	mi
 800cc58:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800cc5c:	b21b      	sxthmi	r3, r3
 800cc5e:	f8a4 3052 	strh.w	r3, [r4, #82]	; 0x52
 800cc62:	1b5d      	subs	r5, r3, r5
 800cc64:	f8a4 5054 	strh.w	r5, [r4, #84]	; 0x54
 800cc68:	4632      	mov	r2, r6
 800cc6a:	e6fb      	b.n	800ca64 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa8>
 800cc6c:	f104 0e44 	add.w	lr, r4, #68	; 0x44
 800cc70:	4694      	mov	ip, r2
 800cc72:	f102 0908 	add.w	r9, r2, #8
 800cc76:	4676      	mov	r6, lr
 800cc78:	f8dc 0000 	ldr.w	r0, [ip]
 800cc7c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 800cc80:	46f0      	mov	r8, lr
 800cc82:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 800cc86:	f10c 0c08 	add.w	ip, ip, #8
 800cc8a:	45cc      	cmp	ip, r9
 800cc8c:	46c6      	mov	lr, r8
 800cc8e:	d1f3      	bne.n	800cc78 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2bc>
 800cc90:	f8dc 0000 	ldr.w	r0, [ip]
 800cc94:	f8c8 0000 	str.w	r0, [r8]
 800cc98:	f8bc 1004 	ldrh.w	r1, [ip, #4]
 800cc9c:	f8a8 1004 	strh.w	r1, [r8, #4]
 800cca0:	f9b4 0056 	ldrsh.w	r0, [r4, #86]	; 0x56
 800cca4:	f510 4f00 	cmn.w	r0, #32768	; 0x8000
 800cca8:	d009      	beq.n	800ccbe <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x302>
 800ccaa:	7b51      	ldrb	r1, [r2, #13]
 800ccac:	7992      	ldrb	r2, [r2, #6]
 800ccae:	0149      	lsls	r1, r1, #5
 800ccb0:	f401 7180 	and.w	r1, r1, #256	; 0x100
 800ccb4:	4311      	orrs	r1, r2
 800ccb6:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 800ccba:	f884 004d 	strb.w	r0, [r4, #77]	; 0x4d
 800ccbe:	f513 4f00 	cmn.w	r3, #32768	; 0x8000
 800ccc2:	d00d      	beq.n	800cce0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x324>
 800ccc4:	1bdb      	subs	r3, r3, r7
 800ccc6:	f894 2051 	ldrb.w	r2, [r4, #81]	; 0x51
 800ccca:	b29b      	uxth	r3, r3
 800cccc:	f884 304c 	strb.w	r3, [r4, #76]	; 0x4c
 800ccd0:	10db      	asrs	r3, r3, #3
 800ccd2:	f003 0360 	and.w	r3, r3, #96	; 0x60
 800ccd6:	f022 0260 	bic.w	r2, r2, #96	; 0x60
 800ccda:	4313      	orrs	r3, r2
 800ccdc:	f884 3051 	strb.w	r3, [r4, #81]	; 0x51
 800cce0:	f894 1051 	ldrb.w	r1, [r4, #81]	; 0x51
 800cce4:	00cb      	lsls	r3, r1, #3
 800cce6:	f403 7280 	and.w	r2, r3, #256	; 0x100
 800ccea:	f894 304c 	ldrb.w	r3, [r4, #76]	; 0x4c
 800ccee:	0648      	lsls	r0, r1, #25
 800ccf0:	ea43 0302 	orr.w	r3, r3, r2
 800ccf4:	bf44      	itt	mi
 800ccf6:	f5a3 7300 	submi.w	r3, r3, #512	; 0x200
 800ccfa:	b21b      	sxthmi	r3, r3
 800ccfc:	e7b1      	b.n	800cc62 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2a6>
	...

0800cd00 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 800cd00:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cd04:	461e      	mov	r6, r3
 800cd06:	8e03      	ldrh	r3, [r0, #48]	; 0x30
 800cd08:	4604      	mov	r4, r0
 800cd0a:	4617      	mov	r7, r2
 800cd0c:	b92b      	cbnz	r3, 800cd1a <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1a>
 800cd0e:	4b25      	ldr	r3, [pc, #148]	; (800cda4 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa4>)
 800cd10:	4a25      	ldr	r2, [pc, #148]	; (800cda8 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xa8>)
 800cd12:	4826      	ldr	r0, [pc, #152]	; (800cdac <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0xac>)
 800cd14:	21bf      	movs	r1, #191	; 0xbf
 800cd16:	f00c fb93 	bl	8019440 <__assert_func>
 800cd1a:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800cd1c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 800cd20:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800cd24:	f7f5 fc54 	bl	80025d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 800cd28:	4605      	mov	r5, r0
 800cd2a:	b918      	cbnz	r0, 800cd34 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x34>
 800cd2c:	6030      	str	r0, [r6, #0]
 800cd2e:	4628      	mov	r0, r5
 800cd30:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800cd34:	683b      	ldr	r3, [r7, #0]
 800cd36:	4601      	mov	r1, r0
 800cd38:	68db      	ldr	r3, [r3, #12]
 800cd3a:	4638      	mov	r0, r7
 800cd3c:	4798      	blx	r3
 800cd3e:	f5a8 63c0 	sub.w	r3, r8, #1536	; 0x600
 800cd42:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800cd46:	4602      	mov	r2, r0
 800cd48:	6030      	str	r0, [r6, #0]
 800cd4a:	d213      	bcs.n	800cd74 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x74>
 800cd4c:	4643      	mov	r3, r8
 800cd4e:	4639      	mov	r1, r7
 800cd50:	4620      	mov	r0, r4
 800cd52:	f7ff fe33 	bl	800c9bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 800cd56:	6030      	str	r0, [r6, #0]
 800cd58:	6833      	ldr	r3, [r6, #0]
 800cd5a:	b143      	cbz	r3, 800cd6e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x6e>
 800cd5c:	7b5a      	ldrb	r2, [r3, #13]
 800cd5e:	7a9b      	ldrb	r3, [r3, #10]
 800cd60:	0052      	lsls	r2, r2, #1
 800cd62:	f402 7280 	and.w	r2, r2, #256	; 0x100
 800cd66:	4313      	orrs	r3, r2
 800cd68:	bf0c      	ite	eq
 800cd6a:	2301      	moveq	r3, #1
 800cd6c:	2300      	movne	r3, #0
 800cd6e:	f884 3059 	strb.w	r3, [r4, #89]	; 0x59
 800cd72:	e7dc      	b.n	800cd2e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x2e>
 800cd74:	f5a5 6360 	sub.w	r3, r5, #3584	; 0xe00
 800cd78:	b29b      	uxth	r3, r3
 800cd7a:	2b7f      	cmp	r3, #127	; 0x7f
 800cd7c:	d804      	bhi.n	800cd88 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x88>
 800cd7e:	4639      	mov	r1, r7
 800cd80:	4620      	mov	r0, r4
 800cd82:	f7ff fd01 	bl	800c788 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 800cd86:	e7e6      	b.n	800cd56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800cd88:	f894 3059 	ldrb.w	r3, [r4, #89]	; 0x59
 800cd8c:	2b00      	cmp	r3, #0
 800cd8e:	d0e3      	beq.n	800cd58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800cd90:	f640 1302 	movw	r3, #2306	; 0x902
 800cd94:	429d      	cmp	r5, r3
 800cd96:	d1df      	bne.n	800cd58 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x58>
 800cd98:	4601      	mov	r1, r0
 800cd9a:	4620      	mov	r0, r4
 800cd9c:	f7ff fcc5 	bl	800c72a <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 800cda0:	e7d9      	b.n	800cd56 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x56>
 800cda2:	bf00      	nop
 800cda4:	0801b118 	.word	0x0801b118
 800cda8:	0801c557 	.word	0x0801c557
 800cdac:	0801b1ea 	.word	0x0801b1ea

0800cdb0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 800cdb0:	b510      	push	{r4, lr}
 800cdb2:	4604      	mov	r4, r0
 800cdb4:	8f21      	ldrh	r1, [r4, #56]	; 0x38
 800cdb6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800cdb8:	b9d9      	cbnz	r1, 800cdf2 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x42>
 800cdba:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800cdbc:	2b0a      	cmp	r3, #10
 800cdbe:	d036      	beq.n	800ce2e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800cdc0:	4620      	mov	r0, r4
 800cdc2:	f7ff fc79 	bl	800c6b8 <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 800cdc6:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800cdc8:	2b09      	cmp	r3, #9
 800cdca:	d906      	bls.n	800cdda <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x2a>
 800cdcc:	4b18      	ldr	r3, [pc, #96]	; (800ce30 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x80>)
 800cdce:	4a19      	ldr	r2, [pc, #100]	; (800ce34 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x84>)
 800cdd0:	4819      	ldr	r0, [pc, #100]	; (800ce38 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x88>)
 800cdd2:	f240 1103 	movw	r1, #259	; 0x103
 800cdd6:	f00c fb33 	bl	8019440 <__assert_func>
 800cdda:	1c5a      	adds	r2, r3, #1
 800cddc:	8622      	strh	r2, [r4, #48]	; 0x30
 800cdde:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800cde0:	4413      	add	r3, r2
 800cde2:	b29b      	uxth	r3, r3
 800cde4:	2b09      	cmp	r3, #9
 800cde6:	bf88      	it	hi
 800cde8:	3b0a      	subhi	r3, #10
 800cdea:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800cdee:	8358      	strh	r0, [r3, #26]
 800cdf0:	e7e3      	b.n	800cdba <_ZN8touchgfx12TextProvider15fillInputBufferEv+0xa>
 800cdf2:	2b0a      	cmp	r3, #10
 800cdf4:	d01b      	beq.n	800ce2e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x7e>
 800cdf6:	8ee2      	ldrh	r2, [r4, #54]	; 0x36
 800cdf8:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 800cdfc:	3901      	subs	r1, #1
 800cdfe:	8e40      	ldrh	r0, [r0, #50]	; 0x32
 800ce00:	8721      	strh	r1, [r4, #56]	; 0x38
 800ce02:	1c51      	adds	r1, r2, #1
 800ce04:	b289      	uxth	r1, r1
 800ce06:	2901      	cmp	r1, #1
 800ce08:	bf8a      	itet	hi
 800ce0a:	f102 32ff 	addhi.w	r2, r2, #4294967295
 800ce0e:	86e1      	strhls	r1, [r4, #54]	; 0x36
 800ce10:	86e2      	strhhi	r2, [r4, #54]	; 0x36
 800ce12:	2b09      	cmp	r3, #9
 800ce14:	d8da      	bhi.n	800cdcc <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x1c>
 800ce16:	1c5a      	adds	r2, r3, #1
 800ce18:	8622      	strh	r2, [r4, #48]	; 0x30
 800ce1a:	8de2      	ldrh	r2, [r4, #46]	; 0x2e
 800ce1c:	4413      	add	r3, r2
 800ce1e:	b29b      	uxth	r3, r3
 800ce20:	2b09      	cmp	r3, #9
 800ce22:	bf88      	it	hi
 800ce24:	3b0a      	subhi	r3, #10
 800ce26:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800ce2a:	8358      	strh	r0, [r3, #26]
 800ce2c:	e7c2      	b.n	800cdb4 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 800ce2e:	bd10      	pop	{r4, pc}
 800ce30:	0801c328 	.word	0x0801c328
 800ce34:	0801c6ad 	.word	0x0801c6ad
 800ce38:	0801b1ea 	.word	0x0801b1ea

0800ce3c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 800ce3c:	b538      	push	{r3, r4, r5, lr}
 800ce3e:	8e02      	ldrh	r2, [r0, #48]	; 0x30
 800ce40:	4604      	mov	r4, r0
 800ce42:	b92a      	cbnz	r2, 800ce50 <_ZN8touchgfx12TextProvider11getNextCharEv+0x14>
 800ce44:	4b13      	ldr	r3, [pc, #76]	; (800ce94 <_ZN8touchgfx12TextProvider11getNextCharEv+0x58>)
 800ce46:	4a14      	ldr	r2, [pc, #80]	; (800ce98 <_ZN8touchgfx12TextProvider11getNextCharEv+0x5c>)
 800ce48:	4814      	ldr	r0, [pc, #80]	; (800ce9c <_ZN8touchgfx12TextProvider11getNextCharEv+0x60>)
 800ce4a:	21d4      	movs	r1, #212	; 0xd4
 800ce4c:	f00c faf8 	bl	8019440 <__assert_func>
 800ce50:	8dc3      	ldrh	r3, [r0, #46]	; 0x2e
 800ce52:	eb00 0143 	add.w	r1, r0, r3, lsl #1
 800ce56:	3a01      	subs	r2, #1
 800ce58:	8b4d      	ldrh	r5, [r1, #26]
 800ce5a:	8602      	strh	r2, [r0, #48]	; 0x30
 800ce5c:	1c5a      	adds	r2, r3, #1
 800ce5e:	b292      	uxth	r2, r2
 800ce60:	2a09      	cmp	r2, #9
 800ce62:	bf86      	itte	hi
 800ce64:	3b09      	subhi	r3, #9
 800ce66:	85c3      	strhhi	r3, [r0, #46]	; 0x2e
 800ce68:	85c2      	strhls	r2, [r0, #46]	; 0x2e
 800ce6a:	f7ff ffa1 	bl	800cdb0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800ce6e:	8b23      	ldrh	r3, [r4, #24]
 800ce70:	2b01      	cmp	r3, #1
 800ce72:	bf9c      	itt	ls
 800ce74:	3301      	addls	r3, #1
 800ce76:	8323      	strhls	r3, [r4, #24]
 800ce78:	8ae3      	ldrh	r3, [r4, #22]
 800ce7a:	b90b      	cbnz	r3, 800ce80 <_ZN8touchgfx12TextProvider11getNextCharEv+0x44>
 800ce7c:	2302      	movs	r3, #2
 800ce7e:	82e3      	strh	r3, [r4, #22]
 800ce80:	8ae3      	ldrh	r3, [r4, #22]
 800ce82:	3b01      	subs	r3, #1
 800ce84:	b29b      	uxth	r3, r3
 800ce86:	82e3      	strh	r3, [r4, #22]
 800ce88:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800ce8c:	4628      	mov	r0, r5
 800ce8e:	8265      	strh	r5, [r4, #18]
 800ce90:	bd38      	pop	{r3, r4, r5, pc}
 800ce92:	bf00      	nop
 800ce94:	0801b118 	.word	0x0801b118
 800ce98:	0801c602 	.word	0x0801c602
 800ce9c:	0801b1ea 	.word	0x0801b1ea

0800cea0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 800cea0:	b538      	push	{r3, r4, r5, lr}
 800cea2:	428a      	cmp	r2, r1
 800cea4:	8e04      	ldrh	r4, [r0, #48]	; 0x30
 800cea6:	d90c      	bls.n	800cec2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x22>
 800cea8:	b92c      	cbnz	r4, 800ceb6 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x16>
 800ceaa:	4b1c      	ldr	r3, [pc, #112]	; (800cf1c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x7c>)
 800ceac:	4a1c      	ldr	r2, [pc, #112]	; (800cf20 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x80>)
 800ceae:	21e0      	movs	r1, #224	; 0xe0
 800ceb0:	481c      	ldr	r0, [pc, #112]	; (800cf24 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x84>)
 800ceb2:	f00c fac5 	bl	8019440 <__assert_func>
 800ceb6:	3c01      	subs	r4, #1
 800ceb8:	8604      	strh	r4, [r0, #48]	; 0x30
 800ceba:	4b1b      	ldr	r3, [pc, #108]	; (800cf28 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x88>)
 800cebc:	4a1b      	ldr	r2, [pc, #108]	; (800cf2c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x8c>)
 800cebe:	21c4      	movs	r1, #196	; 0xc4
 800cec0:	e7f6      	b.n	800ceb0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800cec2:	428c      	cmp	r4, r1
 800cec4:	d203      	bcs.n	800cece <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x2e>
 800cec6:	4b1a      	ldr	r3, [pc, #104]	; (800cf30 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x90>)
 800cec8:	4a1a      	ldr	r2, [pc, #104]	; (800cf34 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x94>)
 800ceca:	21ca      	movs	r1, #202	; 0xca
 800cecc:	e7f0      	b.n	800ceb0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800cece:	1a64      	subs	r4, r4, r1
 800ced0:	8604      	strh	r4, [r0, #48]	; 0x30
 800ced2:	8dc4      	ldrh	r4, [r0, #46]	; 0x2e
 800ced4:	4421      	add	r1, r4
 800ced6:	b289      	uxth	r1, r1
 800ced8:	2909      	cmp	r1, #9
 800ceda:	bf88      	it	hi
 800cedc:	390a      	subhi	r1, #10
 800cede:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800cee0:	250a      	movs	r5, #10
 800cee2:	b1ba      	cbz	r2, 800cf14 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x74>
 800cee4:	3a01      	subs	r2, #1
 800cee6:	8e01      	ldrh	r1, [r0, #48]	; 0x30
 800cee8:	b292      	uxth	r2, r2
 800ceea:	2909      	cmp	r1, #9
 800ceec:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 800cef0:	d903      	bls.n	800cefa <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x5a>
 800cef2:	4b11      	ldr	r3, [pc, #68]	; (800cf38 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>)
 800cef4:	4a11      	ldr	r2, [pc, #68]	; (800cf3c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x9c>)
 800cef6:	21e5      	movs	r1, #229	; 0xe5
 800cef8:	e7da      	b.n	800ceb0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x10>
 800cefa:	3101      	adds	r1, #1
 800cefc:	8601      	strh	r1, [r0, #48]	; 0x30
 800cefe:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800cf00:	b901      	cbnz	r1, 800cf04 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x64>
 800cf02:	85c5      	strh	r5, [r0, #46]	; 0x2e
 800cf04:	8dc1      	ldrh	r1, [r0, #46]	; 0x2e
 800cf06:	3901      	subs	r1, #1
 800cf08:	b289      	uxth	r1, r1
 800cf0a:	85c1      	strh	r1, [r0, #46]	; 0x2e
 800cf0c:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 800cf10:	834c      	strh	r4, [r1, #26]
 800cf12:	e7e6      	b.n	800cee2 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x42>
 800cf14:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 800cf18:	f7ff bf4a 	b.w	800cdb0 <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 800cf1c:	0801b118 	.word	0x0801b118
 800cf20:	0801c3db 	.word	0x0801c3db
 800cf24:	0801b1ea 	.word	0x0801b1ea
 800cf28:	0801b216 	.word	0x0801b216
 800cf2c:	0801c485 	.word	0x0801c485
 800cf30:	0801c334 	.word	0x0801c334
 800cf34:	0801c75c 	.word	0x0801c75c
 800cf38:	0801c340 	.word	0x0801c340
 800cf3c:	0801c353 	.word	0x0801c353

0800cf40 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 800cf40:	3a01      	subs	r2, #1
 800cf42:	b570      	push	{r4, r5, r6, lr}
 800cf44:	b292      	uxth	r2, r2
 800cf46:	f64f 76ff 	movw	r6, #65535	; 0xffff
 800cf4a:	42b2      	cmp	r2, r6
 800cf4c:	d019      	beq.n	800cf82 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x42>
 800cf4e:	8b04      	ldrh	r4, [r0, #24]
 800cf50:	f831 5b02 	ldrh.w	r5, [r1], #2
 800cf54:	4294      	cmp	r4, r2
 800cf56:	d805      	bhi.n	800cf64 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x24>
 800cf58:	4b19      	ldr	r3, [pc, #100]	; (800cfc0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800cf5a:	4a1a      	ldr	r2, [pc, #104]	; (800cfc4 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x84>)
 800cf5c:	481a      	ldr	r0, [pc, #104]	; (800cfc8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x88>)
 800cf5e:	21c4      	movs	r1, #196	; 0xc4
 800cf60:	f00c fa6e 	bl	8019440 <__assert_func>
 800cf64:	8ac4      	ldrh	r4, [r0, #22]
 800cf66:	4414      	add	r4, r2
 800cf68:	b2a4      	uxth	r4, r4
 800cf6a:	2c01      	cmp	r4, #1
 800cf6c:	bf88      	it	hi
 800cf6e:	3c02      	subhi	r4, #2
 800cf70:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 800cf74:	3a01      	subs	r2, #1
 800cf76:	8a64      	ldrh	r4, [r4, #18]
 800cf78:	42ac      	cmp	r4, r5
 800cf7a:	b292      	uxth	r2, r2
 800cf7c:	d0e5      	beq.n	800cf4a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0xa>
 800cf7e:	2000      	movs	r0, #0
 800cf80:	bd70      	pop	{r4, r5, r6, pc}
 800cf82:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 800cf86:	2400      	movs	r4, #0
 800cf88:	4413      	add	r3, r2
 800cf8a:	b2a2      	uxth	r2, r4
 800cf8c:	429a      	cmp	r2, r3
 800cf8e:	da14      	bge.n	800cfba <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x7a>
 800cf90:	8e06      	ldrh	r6, [r0, #48]	; 0x30
 800cf92:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 800cf96:	4296      	cmp	r6, r2
 800cf98:	d802      	bhi.n	800cfa0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x60>
 800cf9a:	4b09      	ldr	r3, [pc, #36]	; (800cfc0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x80>)
 800cf9c:	4a0b      	ldr	r2, [pc, #44]	; (800cfcc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x8c>)
 800cf9e:	e7dd      	b.n	800cf5c <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x1c>
 800cfa0:	8dc6      	ldrh	r6, [r0, #46]	; 0x2e
 800cfa2:	4432      	add	r2, r6
 800cfa4:	b292      	uxth	r2, r2
 800cfa6:	2a09      	cmp	r2, #9
 800cfa8:	bf88      	it	hi
 800cfaa:	3a0a      	subhi	r2, #10
 800cfac:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 800cfb0:	3401      	adds	r4, #1
 800cfb2:	8b52      	ldrh	r2, [r2, #26]
 800cfb4:	42aa      	cmp	r2, r5
 800cfb6:	d0e8      	beq.n	800cf8a <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4a>
 800cfb8:	e7e1      	b.n	800cf7e <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x3e>
 800cfba:	2001      	movs	r0, #1
 800cfbc:	e7e0      	b.n	800cf80 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x40>
 800cfbe:	bf00      	nop
 800cfc0:	0801b216 	.word	0x0801b216
 800cfc4:	0801c7e0 	.word	0x0801c7e0
 800cfc8:	0801b1ea 	.word	0x0801b1ea
 800cfcc:	0801c485 	.word	0x0801c485

0800cfd0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 800cfd0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800cfd4:	4605      	mov	r5, r0
 800cfd6:	4616      	mov	r6, r2
 800cfd8:	1c8c      	adds	r4, r1, #2
 800cfda:	8809      	ldrh	r1, [r1, #0]
 800cfdc:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 800cfe0:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 800cfe4:	42b3      	cmp	r3, r6
 800cfe6:	d124      	bne.n	800d032 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 800cfe8:	f3c1 2903 	ubfx	r9, r1, #8, #4
 800cfec:	f3c1 1803 	ubfx	r8, r1, #4, #4
 800cff0:	f001 070f 	and.w	r7, r1, #15
 800cff4:	f8cd 8000 	str.w	r8, [sp]
 800cff8:	464b      	mov	r3, r9
 800cffa:	4652      	mov	r2, sl
 800cffc:	4621      	mov	r1, r4
 800cffe:	4628      	mov	r0, r5
 800d000:	f7ff ff9e 	bl	800cf40 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 800d004:	4683      	mov	fp, r0
 800d006:	b168      	cbz	r0, 800d024 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 800d008:	eb0a 0109 	add.w	r1, sl, r9
 800d00c:	4441      	add	r1, r8
 800d00e:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 800d012:	463a      	mov	r2, r7
 800d014:	4649      	mov	r1, r9
 800d016:	4628      	mov	r0, r5
 800d018:	f7ff ff42 	bl	800cea0 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 800d01c:	4658      	mov	r0, fp
 800d01e:	b003      	add	sp, #12
 800d020:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d024:	eb07 010a 	add.w	r1, r7, sl
 800d028:	4449      	add	r1, r9
 800d02a:	4441      	add	r1, r8
 800d02c:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 800d030:	e7d2      	b.n	800cfd8 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 800d032:	f04f 0b00 	mov.w	fp, #0
 800d036:	e7f1      	b.n	800d01c <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0800d038 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 800d038:	b570      	push	{r4, r5, r6, lr}
 800d03a:	8810      	ldrh	r0, [r2, #0]
 800d03c:	4298      	cmp	r0, r3
 800d03e:	d817      	bhi.n	800d070 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d040:	1e48      	subs	r0, r1, #1
 800d042:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 800d046:	4298      	cmp	r0, r3
 800d048:	d312      	bcc.n	800d070 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d04a:	2400      	movs	r4, #0
 800d04c:	428c      	cmp	r4, r1
 800d04e:	d20f      	bcs.n	800d070 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 800d050:	1860      	adds	r0, r4, r1
 800d052:	1040      	asrs	r0, r0, #1
 800d054:	0085      	lsls	r5, r0, #2
 800d056:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 800d05a:	42b3      	cmp	r3, r6
 800d05c:	d902      	bls.n	800d064 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 800d05e:	3001      	adds	r0, #1
 800d060:	b284      	uxth	r4, r0
 800d062:	e7f3      	b.n	800d04c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d064:	d201      	bcs.n	800d06a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 800d066:	b281      	uxth	r1, r0
 800d068:	e7f0      	b.n	800d04c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 800d06a:	442a      	add	r2, r5
 800d06c:	8850      	ldrh	r0, [r2, #2]
 800d06e:	bd70      	pop	{r4, r5, r6, pc}
 800d070:	2000      	movs	r0, #0
 800d072:	e7fc      	b.n	800d06e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

0800d074 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 800d074:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d078:	6bc5      	ldr	r5, [r0, #60]	; 0x3c
 800d07a:	886f      	ldrh	r7, [r5, #2]
 800d07c:	4604      	mov	r4, r0
 800d07e:	087f      	lsrs	r7, r7, #1
 800d080:	260b      	movs	r6, #11
 800d082:	3e01      	subs	r6, #1
 800d084:	d01b      	beq.n	800d0be <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800d086:	8e23      	ldrh	r3, [r4, #48]	; 0x30
 800d088:	b92b      	cbnz	r3, 800d096 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x22>
 800d08a:	4b0e      	ldr	r3, [pc, #56]	; (800d0c4 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x50>)
 800d08c:	4a0e      	ldr	r2, [pc, #56]	; (800d0c8 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x54>)
 800d08e:	480f      	ldr	r0, [pc, #60]	; (800d0cc <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x58>)
 800d090:	21bf      	movs	r1, #191	; 0xbf
 800d092:	f00c f9d5 	bl	8019440 <__assert_func>
 800d096:	8de3      	ldrh	r3, [r4, #46]	; 0x2e
 800d098:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 800d09c:	462a      	mov	r2, r5
 800d09e:	f8b3 801a 	ldrh.w	r8, [r3, #26]
 800d0a2:	4639      	mov	r1, r7
 800d0a4:	4643      	mov	r3, r8
 800d0a6:	4620      	mov	r0, r4
 800d0a8:	f7ff ffc6 	bl	800d038 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 800d0ac:	b138      	cbz	r0, 800d0be <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x4a>
 800d0ae:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 800d0b2:	4642      	mov	r2, r8
 800d0b4:	4620      	mov	r0, r4
 800d0b6:	f7ff ff8b 	bl	800cfd0 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 800d0ba:	2800      	cmp	r0, #0
 800d0bc:	d1e1      	bne.n	800d082 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 800d0be:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d0c2:	bf00      	nop
 800d0c4:	0801b118 	.word	0x0801b118
 800d0c8:	0801c557 	.word	0x0801c557
 800d0cc:	0801b1ea 	.word	0x0801b1ea

0800d0d0 <_ZN8touchgfx8ceil28_4El>:
 800d0d0:	f110 030f 	adds.w	r3, r0, #15
 800d0d4:	d401      	bmi.n	800d0da <_ZN8touchgfx8ceil28_4El+0xa>
 800d0d6:	1118      	asrs	r0, r3, #4
 800d0d8:	4770      	bx	lr
 800d0da:	f1c0 0001 	rsb	r0, r0, #1
 800d0de:	f010 000f 	ands.w	r0, r0, #15
 800d0e2:	bf18      	it	ne
 800d0e4:	2001      	movne	r0, #1
 800d0e6:	2210      	movs	r2, #16
 800d0e8:	fb93 f3f2 	sdiv	r3, r3, r2
 800d0ec:	1a18      	subs	r0, r3, r0
 800d0ee:	4770      	bx	lr

0800d0f0 <_ZN8touchgfx11floorDivModEllRlS0_>:
 800d0f0:	2900      	cmp	r1, #0
 800d0f2:	b538      	push	{r3, r4, r5, lr}
 800d0f4:	dc05      	bgt.n	800d102 <_ZN8touchgfx11floorDivModEllRlS0_+0x12>
 800d0f6:	4b0f      	ldr	r3, [pc, #60]	; (800d134 <_ZN8touchgfx11floorDivModEllRlS0_+0x44>)
 800d0f8:	4a0f      	ldr	r2, [pc, #60]	; (800d138 <_ZN8touchgfx11floorDivModEllRlS0_+0x48>)
 800d0fa:	4810      	ldr	r0, [pc, #64]	; (800d13c <_ZN8touchgfx11floorDivModEllRlS0_+0x4c>)
 800d0fc:	21f7      	movs	r1, #247	; 0xf7
 800d0fe:	f00c f99f 	bl	8019440 <__assert_func>
 800d102:	2800      	cmp	r0, #0
 800d104:	db06      	blt.n	800d114 <_ZN8touchgfx11floorDivModEllRlS0_+0x24>
 800d106:	fb90 f4f1 	sdiv	r4, r0, r1
 800d10a:	6014      	str	r4, [r2, #0]
 800d10c:	fb01 0114 	mls	r1, r1, r4, r0
 800d110:	6019      	str	r1, [r3, #0]
 800d112:	bd38      	pop	{r3, r4, r5, pc}
 800d114:	4240      	negs	r0, r0
 800d116:	fb90 f4f1 	sdiv	r4, r0, r1
 800d11a:	4265      	negs	r5, r4
 800d11c:	fb01 0014 	mls	r0, r1, r4, r0
 800d120:	6015      	str	r5, [r2, #0]
 800d122:	6018      	str	r0, [r3, #0]
 800d124:	2800      	cmp	r0, #0
 800d126:	d0f4      	beq.n	800d112 <_ZN8touchgfx11floorDivModEllRlS0_+0x22>
 800d128:	6810      	ldr	r0, [r2, #0]
 800d12a:	3801      	subs	r0, #1
 800d12c:	6010      	str	r0, [r2, #0]
 800d12e:	6818      	ldr	r0, [r3, #0]
 800d130:	1a09      	subs	r1, r1, r0
 800d132:	e7ed      	b.n	800d110 <_ZN8touchgfx11floorDivModEllRlS0_+0x20>
 800d134:	0801c8b1 	.word	0x0801c8b1
 800d138:	0801c8f0 	.word	0x0801c8f0
 800d13c:	0801c8c1 	.word	0x0801c8c1

0800d140 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 800d140:	b570      	push	{r4, r5, r6, lr}
 800d142:	694a      	ldr	r2, [r1, #20]
 800d144:	6a8d      	ldr	r5, [r1, #40]	; 0x28
 800d146:	684b      	ldr	r3, [r1, #4]
 800d148:	6ace      	ldr	r6, [r1, #44]	; 0x2c
 800d14a:	1b54      	subs	r4, r2, r5
 800d14c:	f000 8106 	beq.w	800d35c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 800d150:	1b9b      	subs	r3, r3, r6
 800d152:	d003      	beq.n	800d15c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800d154:	4363      	muls	r3, r4
 800d156:	2210      	movs	r2, #16
 800d158:	fb93 f3f2 	sdiv	r3, r3, r2
 800d15c:	680c      	ldr	r4, [r1, #0]
 800d15e:	698a      	ldr	r2, [r1, #24]
 800d160:	1b65      	subs	r5, r4, r5
 800d162:	f000 80fd 	beq.w	800d360 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 800d166:	1b92      	subs	r2, r2, r6
 800d168:	d003      	beq.n	800d172 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800d16a:	436a      	muls	r2, r5
 800d16c:	2410      	movs	r4, #16
 800d16e:	fb92 f2f4 	sdiv	r2, r2, r4
 800d172:	1a9b      	subs	r3, r3, r2
 800d174:	ee07 3a90 	vmov	s15, r3
 800d178:	ed9f 4a88 	vldr	s8, [pc, #544]	; 800d39c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 800d17c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d180:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800d184:	ee67 7a84 	vmul.f32	s15, s15, s8
 800d188:	460a      	mov	r2, r1
 800d18a:	ee87 3a27 	vdiv.f32	s6, s14, s15
 800d18e:	4603      	mov	r3, r0
 800d190:	f100 040c 	add.w	r4, r0, #12
 800d194:	eeb1 6a43 	vneg.f32	s12, s6
 800d198:	edd2 7a02 	vldr	s15, [r2, #8]
 800d19c:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800d1a0:	3214      	adds	r2, #20
 800d1a2:	ece3 6a01 	vstmia	r3!, {s13}
 800d1a6:	ed52 7a02 	vldr	s15, [r2, #-8]
 800d1aa:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800d1ae:	429c      	cmp	r4, r3
 800d1b0:	edc3 7a02 	vstr	s15, [r3, #8]
 800d1b4:	ed52 7a01 	vldr	s15, [r2, #-4]
 800d1b8:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800d1bc:	edc3 7a05 	vstr	s15, [r3, #20]
 800d1c0:	d1ea      	bne.n	800d198 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 800d1c2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800d1c4:	698b      	ldr	r3, [r1, #24]
 800d1c6:	edd0 4a02 	vldr	s9, [r0, #8]
 800d1ca:	edd0 3a00 	vldr	s7, [r0]
 800d1ce:	edd0 6a01 	vldr	s13, [r0, #4]
 800d1d2:	ed90 5a05 	vldr	s10, [r0, #20]
 800d1d6:	ed90 2a03 	vldr	s4, [r0, #12]
 800d1da:	edd0 5a04 	vldr	s11, [r0, #16]
 800d1de:	ed90 1a07 	vldr	s2, [r0, #28]
 800d1e2:	edd0 2a06 	vldr	s5, [r0, #24]
 800d1e6:	1a9b      	subs	r3, r3, r2
 800d1e8:	ee07 3a90 	vmov	s15, r3
 800d1ec:	684b      	ldr	r3, [r1, #4]
 800d1ee:	1a9b      	subs	r3, r3, r2
 800d1f0:	ee07 3a10 	vmov	s14, r3
 800d1f4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d1f8:	ee76 6ae4 	vsub.f32	s13, s13, s9
 800d1fc:	ee67 7a84 	vmul.f32	s15, s15, s8
 800d200:	ee73 4ae4 	vsub.f32	s9, s7, s9
 800d204:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d208:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 800d20c:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d210:	ee75 5ac5 	vsub.f32	s11, s11, s10
 800d214:	eee6 7a87 	vfma.f32	s15, s13, s14
 800d218:	ee32 5a45 	vsub.f32	s10, s4, s10
 800d21c:	ee67 7a83 	vmul.f32	s15, s15, s6
 800d220:	edc0 7a09 	vstr	s15, [r0, #36]	; 0x24
 800d224:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800d226:	694a      	ldr	r2, [r1, #20]
 800d228:	1b13      	subs	r3, r2, r4
 800d22a:	ee07 3a10 	vmov	s14, r3
 800d22e:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d232:	680b      	ldr	r3, [r1, #0]
 800d234:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d238:	1b1b      	subs	r3, r3, r4
 800d23a:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 800d23e:	ee07 3a10 	vmov	s14, r3
 800d242:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d246:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d24a:	eee6 4a87 	vfma.f32	s9, s13, s14
 800d24e:	ee64 4a86 	vmul.f32	s9, s9, s12
 800d252:	edc0 4a0a 	vstr	s9, [r0, #40]	; 0x28
 800d256:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800d258:	698b      	ldr	r3, [r1, #24]
 800d25a:	1a9b      	subs	r3, r3, r2
 800d25c:	ee06 3a90 	vmov	s13, r3
 800d260:	684b      	ldr	r3, [r1, #4]
 800d262:	1a9b      	subs	r3, r3, r2
 800d264:	ee07 3a10 	vmov	s14, r3
 800d268:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800d26c:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d270:	ee66 6a84 	vmul.f32	s13, s13, s8
 800d274:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d278:	ee65 6a66 	vnmul.f32	s13, s10, s13
 800d27c:	eee5 6a87 	vfma.f32	s13, s11, s14
 800d280:	ee66 6a83 	vmul.f32	s13, s13, s6
 800d284:	edc0 6a0b 	vstr	s13, [r0, #44]	; 0x2c
 800d288:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800d28a:	694a      	ldr	r2, [r1, #20]
 800d28c:	1b13      	subs	r3, r2, r4
 800d28e:	ee07 3a10 	vmov	s14, r3
 800d292:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d296:	680b      	ldr	r3, [r1, #0]
 800d298:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d29c:	1b1b      	subs	r3, r3, r4
 800d29e:	ee25 5a47 	vnmul.f32	s10, s10, s14
 800d2a2:	ee07 3a10 	vmov	s14, r3
 800d2a6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d2aa:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d2ae:	eea5 5a87 	vfma.f32	s10, s11, s14
 800d2b2:	edd0 5a08 	vldr	s11, [r0, #32]
 800d2b6:	ee25 5a06 	vmul.f32	s10, s10, s12
 800d2ba:	ee31 1a65 	vsub.f32	s2, s2, s11
 800d2be:	ed80 5a0c 	vstr	s10, [r0, #48]	; 0x30
 800d2c2:	6aca      	ldr	r2, [r1, #44]	; 0x2c
 800d2c4:	698b      	ldr	r3, [r1, #24]
 800d2c6:	1a9b      	subs	r3, r3, r2
 800d2c8:	ee07 3a10 	vmov	s14, r3
 800d2cc:	684b      	ldr	r3, [r1, #4]
 800d2ce:	1a9b      	subs	r3, r3, r2
 800d2d0:	ee01 3a90 	vmov	s3, r3
 800d2d4:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d2d8:	ee72 5ae5 	vsub.f32	s11, s5, s11
 800d2dc:	ee27 7a04 	vmul.f32	s14, s14, s8
 800d2e0:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 800d2e4:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 800d2e8:	ee61 1a84 	vmul.f32	s3, s3, s8
 800d2ec:	eea1 7a21 	vfma.f32	s14, s2, s3
 800d2f0:	ee27 7a03 	vmul.f32	s14, s14, s6
 800d2f4:	ed80 7a0d 	vstr	s14, [r0, #52]	; 0x34
 800d2f8:	6a8c      	ldr	r4, [r1, #40]	; 0x28
 800d2fa:	694a      	ldr	r2, [r1, #20]
 800d2fc:	1b13      	subs	r3, r2, r4
 800d2fe:	ee03 3a10 	vmov	s6, r3
 800d302:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800d306:	680b      	ldr	r3, [r1, #0]
 800d308:	ee23 3a04 	vmul.f32	s6, s6, s8
 800d30c:	1b1b      	subs	r3, r3, r4
 800d30e:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 800d312:	ee03 3a10 	vmov	s6, r3
 800d316:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 800d31a:	ee23 4a04 	vmul.f32	s8, s6, s8
 800d31e:	eee1 5a04 	vfma.f32	s11, s2, s8
 800d322:	ee25 6a86 	vmul.f32	s12, s11, s12
 800d326:	ee62 5a67 	vnmul.f32	s11, s4, s15
 800d32a:	ed80 6a0e 	vstr	s12, [r0, #56]	; 0x38
 800d32e:	eee3 5aa6 	vfma.f32	s11, s7, s13
 800d332:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 800d336:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d33a:	dd13      	ble.n	800d364 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 800d33c:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d340:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 800d344:	63c3      	str	r3, [r0, #60]	; 0x3c
 800d346:	eee3 7a87 	vfma.f32	s15, s7, s14
 800d34a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800d34e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d352:	dd15      	ble.n	800d380 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 800d354:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d358:	6403      	str	r3, [r0, #64]	; 0x40
 800d35a:	bd70      	pop	{r4, r5, r6, pc}
 800d35c:	4623      	mov	r3, r4
 800d35e:	e6fd      	b.n	800d15c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 800d360:	462a      	mov	r2, r5
 800d362:	e706      	b.n	800d172 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 800d364:	d502      	bpl.n	800d36c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 800d366:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800d36a:	e7e9      	b.n	800d340 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 800d36c:	ee22 2a64 	vnmul.f32	s4, s4, s9
 800d370:	eea3 2a85 	vfma.f32	s4, s7, s10
 800d374:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 800d378:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d37c:	dade      	bge.n	800d33c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 800d37e:	e7f2      	b.n	800d366 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 800d380:	d502      	bpl.n	800d388 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 800d382:	f647 73ff 	movw	r3, #32767	; 0x7fff
 800d386:	e7e7      	b.n	800d358 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 800d388:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 800d38c:	eee3 4a86 	vfma.f32	s9, s7, s12
 800d390:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 800d394:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800d398:	dadc      	bge.n	800d354 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 800d39a:	e7f2      	b.n	800d382 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 800d39c:	3d800000 	.word	0x3d800000

0800d3a0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 800d3a0:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800d3a4:	f04f 0814 	mov.w	r8, #20
 800d3a8:	fb08 f903 	mul.w	r9, r8, r3
 800d3ac:	eb02 0a09 	add.w	sl, r2, r9
 800d3b0:	4604      	mov	r4, r0
 800d3b2:	f8da 0004 	ldr.w	r0, [sl, #4]
 800d3b6:	4617      	mov	r7, r2
 800d3b8:	460d      	mov	r5, r1
 800d3ba:	461e      	mov	r6, r3
 800d3bc:	f7ff fe88 	bl	800d0d0 <_ZN8touchgfx8ceil28_4El>
 800d3c0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800d3c2:	6160      	str	r0, [r4, #20]
 800d3c4:	fb08 f803 	mul.w	r8, r8, r3
 800d3c8:	eb07 0b08 	add.w	fp, r7, r8
 800d3cc:	9001      	str	r0, [sp, #4]
 800d3ce:	f8db 0004 	ldr.w	r0, [fp, #4]
 800d3d2:	f7ff fe7d 	bl	800d0d0 <_ZN8touchgfx8ceil28_4El>
 800d3d6:	9a01      	ldr	r2, [sp, #4]
 800d3d8:	1a80      	subs	r0, r0, r2
 800d3da:	61a0      	str	r0, [r4, #24]
 800d3dc:	2800      	cmp	r0, #0
 800d3de:	f000 8088 	beq.w	800d4f2 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x152>
 800d3e2:	f857 3009 	ldr.w	r3, [r7, r9]
 800d3e6:	f857 c008 	ldr.w	ip, [r7, r8]
 800d3ea:	f8da 1004 	ldr.w	r1, [sl, #4]
 800d3ee:	f8db 0004 	ldr.w	r0, [fp, #4]
 800d3f2:	ebac 0c03 	sub.w	ip, ip, r3
 800d3f6:	ea4f 1b0c 	mov.w	fp, ip, lsl #4
 800d3fa:	fb0b f202 	mul.w	r2, fp, r2
 800d3fe:	fb0c 2211 	mls	r2, ip, r1, r2
 800d402:	1a40      	subs	r0, r0, r1
 800d404:	ea4f 1800 	mov.w	r8, r0, lsl #4
 800d408:	fb00 2003 	mla	r0, r0, r3, r2
 800d40c:	3801      	subs	r0, #1
 800d40e:	f104 0310 	add.w	r3, r4, #16
 800d412:	4622      	mov	r2, r4
 800d414:	4641      	mov	r1, r8
 800d416:	4440      	add	r0, r8
 800d418:	f7ff fe6a 	bl	800d0f0 <_ZN8touchgfx11floorDivModEllRlS0_>
 800d41c:	f104 0308 	add.w	r3, r4, #8
 800d420:	1d22      	adds	r2, r4, #4
 800d422:	4641      	mov	r1, r8
 800d424:	4658      	mov	r0, fp
 800d426:	f7ff fe63 	bl	800d0f0 <_ZN8touchgfx11floorDivModEllRlS0_>
 800d42a:	f8c4 800c 	str.w	r8, [r4, #12]
 800d42e:	f8da 3004 	ldr.w	r3, [sl, #4]
 800d432:	6962      	ldr	r2, [r4, #20]
 800d434:	eddf 6a31 	vldr	s13, [pc, #196]	; 800d4fc <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 800d438:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800d43c:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800d440:	ee07 3a10 	vmov	s14, r3
 800d444:	6822      	ldr	r2, [r4, #0]
 800d446:	f857 3009 	ldr.w	r3, [r7, r9]
 800d44a:	ebc3 1302 	rsb	r3, r3, r2, lsl #4
 800d44e:	ee07 3a90 	vmov	s15, r3
 800d452:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 800d456:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800d45a:	eb05 0386 	add.w	r3, r5, r6, lsl #2
 800d45e:	ee27 7a26 	vmul.f32	s14, s14, s13
 800d462:	ee67 7aa6 	vmul.f32	s15, s15, s13
 800d466:	edd3 6a00 	vldr	s13, [r3]
 800d46a:	eee6 6a07 	vfma.f32	s13, s12, s14
 800d46e:	ed95 6a09 	vldr	s12, [r5, #36]	; 0x24
 800d472:	eee6 6a27 	vfma.f32	s13, s12, s15
 800d476:	edc4 6a07 	vstr	s13, [r4, #28]
 800d47a:	edd4 6a01 	vldr	s13, [r4, #4]
 800d47e:	edd5 5a09 	vldr	s11, [r5, #36]	; 0x24
 800d482:	ed95 6a0a 	vldr	s12, [r5, #40]	; 0x28
 800d486:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 800d48a:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800d48e:	ed84 6a08 	vstr	s12, [r4, #32]
 800d492:	6a6a      	ldr	r2, [r5, #36]	; 0x24
 800d494:	6262      	str	r2, [r4, #36]	; 0x24
 800d496:	edd5 5a0c 	vldr	s11, [r5, #48]	; 0x30
 800d49a:	ed93 6a03 	vldr	s12, [r3, #12]
 800d49e:	eea5 6a87 	vfma.f32	s12, s11, s14
 800d4a2:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800d4a6:	eea5 6aa7 	vfma.f32	s12, s11, s15
 800d4aa:	ed84 6a0a 	vstr	s12, [r4, #40]	; 0x28
 800d4ae:	edd5 5a0b 	vldr	s11, [r5, #44]	; 0x2c
 800d4b2:	ed95 6a0c 	vldr	s12, [r5, #48]	; 0x30
 800d4b6:	eea6 6aa5 	vfma.f32	s12, s13, s11
 800d4ba:	ed84 6a0b 	vstr	s12, [r4, #44]	; 0x2c
 800d4be:	6aea      	ldr	r2, [r5, #44]	; 0x2c
 800d4c0:	6322      	str	r2, [r4, #48]	; 0x30
 800d4c2:	ed93 6a06 	vldr	s12, [r3, #24]
 800d4c6:	edd5 5a0e 	vldr	s11, [r5, #56]	; 0x38
 800d4ca:	eea5 6a87 	vfma.f32	s12, s11, s14
 800d4ce:	eeb0 7a46 	vmov.f32	s14, s12
 800d4d2:	ed95 6a0d 	vldr	s12, [r5, #52]	; 0x34
 800d4d6:	eea6 7a27 	vfma.f32	s14, s12, s15
 800d4da:	ed84 7a0d 	vstr	s14, [r4, #52]	; 0x34
 800d4de:	ed95 7a0d 	vldr	s14, [r5, #52]	; 0x34
 800d4e2:	edd5 7a0e 	vldr	s15, [r5, #56]	; 0x38
 800d4e6:	eee6 7a87 	vfma.f32	s15, s13, s14
 800d4ea:	edc4 7a0e 	vstr	s15, [r4, #56]	; 0x38
 800d4ee:	6b6b      	ldr	r3, [r5, #52]	; 0x34
 800d4f0:	63e3      	str	r3, [r4, #60]	; 0x3c
 800d4f2:	4620      	mov	r0, r4
 800d4f4:	b003      	add	sp, #12
 800d4f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800d4fa:	bf00      	nop
 800d4fc:	3d800000 	.word	0x3d800000

0800d500 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 800d500:	4b01      	ldr	r3, [pc, #4]	; (800d508 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 800d502:	6018      	str	r0, [r3, #0]
 800d504:	4770      	bx	lr
 800d506:	bf00      	nop
 800d508:	2000a14c 	.word	0x2000a14c

0800d50c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 800d50c:	4b06      	ldr	r3, [pc, #24]	; (800d528 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 800d50e:	881a      	ldrh	r2, [r3, #0]
 800d510:	4282      	cmp	r2, r0
 800d512:	d807      	bhi.n	800d524 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 800d514:	4b05      	ldr	r3, [pc, #20]	; (800d52c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 800d516:	881b      	ldrh	r3, [r3, #0]
 800d518:	4413      	add	r3, r2
 800d51a:	4298      	cmp	r0, r3
 800d51c:	bfac      	ite	ge
 800d51e:	2000      	movge	r0, #0
 800d520:	2001      	movlt	r0, #1
 800d522:	4770      	bx	lr
 800d524:	2000      	movs	r0, #0
 800d526:	4770      	bx	lr
 800d528:	2000a16c 	.word	0x2000a16c
 800d52c:	2000a170 	.word	0x2000a170

0800d530 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 800d530:	b508      	push	{r3, lr}
 800d532:	4601      	mov	r1, r0
 800d534:	f7ff ffea 	bl	800d50c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 800d538:	b118      	cbz	r0, 800d542 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 800d53a:	4b02      	ldr	r3, [pc, #8]	; (800d544 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 800d53c:	681b      	ldr	r3, [r3, #0]
 800d53e:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 800d542:	bd08      	pop	{r3, pc}
 800d544:	2000a150 	.word	0x2000a150

0800d548 <_ZN8touchgfx6Bitmap10clearCacheEv>:
 800d548:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800d54c:	4d28      	ldr	r5, [pc, #160]	; (800d5f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 800d54e:	682b      	ldr	r3, [r5, #0]
 800d550:	2b00      	cmp	r3, #0
 800d552:	d04a      	beq.n	800d5ea <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800d554:	4a27      	ldr	r2, [pc, #156]	; (800d5f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 800d556:	4e28      	ldr	r6, [pc, #160]	; (800d5f8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 800d558:	8810      	ldrh	r0, [r2, #0]
 800d55a:	f8b6 8000 	ldrh.w	r8, [r6]
 800d55e:	4c27      	ldr	r4, [pc, #156]	; (800d5fc <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 800d560:	4f27      	ldr	r7, [pc, #156]	; (800d600 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 800d562:	4440      	add	r0, r8
 800d564:	1c41      	adds	r1, r0, #1
 800d566:	f021 0101 	bic.w	r1, r1, #1
 800d56a:	0409      	lsls	r1, r1, #16
 800d56c:	0c09      	lsrs	r1, r1, #16
 800d56e:	ea4f 0e80 	mov.w	lr, r0, lsl #2
 800d572:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 800d576:	eb03 020e 	add.w	r2, r3, lr
 800d57a:	eb0e 010c 	add.w	r1, lr, ip
 800d57e:	6022      	str	r2, [r4, #0]
 800d580:	185a      	adds	r2, r3, r1
 800d582:	603a      	str	r2, [r7, #0]
 800d584:	220e      	movs	r2, #14
 800d586:	fb02 f208 	mul.w	r2, r2, r8
 800d58a:	3203      	adds	r2, #3
 800d58c:	f022 0203 	bic.w	r2, r2, #3
 800d590:	4411      	add	r1, r2
 800d592:	440b      	add	r3, r1
 800d594:	491b      	ldr	r1, [pc, #108]	; (800d604 <_ZN8touchgfx6Bitmap10clearCacheEv+0xbc>)
 800d596:	600b      	str	r3, [r1, #0]
 800d598:	491b      	ldr	r1, [pc, #108]	; (800d608 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc0>)
 800d59a:	2300      	movs	r3, #0
 800d59c:	800b      	strh	r3, [r1, #0]
 800d59e:	491b      	ldr	r1, [pc, #108]	; (800d60c <_ZN8touchgfx6Bitmap10clearCacheEv+0xc4>)
 800d5a0:	6809      	ldr	r1, [r1, #0]
 800d5a2:	eba1 010e 	sub.w	r1, r1, lr
 800d5a6:	eba1 010c 	sub.w	r1, r1, ip
 800d5aa:	1a8a      	subs	r2, r1, r2
 800d5ac:	4918      	ldr	r1, [pc, #96]	; (800d610 <_ZN8touchgfx6Bitmap10clearCacheEv+0xc8>)
 800d5ae:	600a      	str	r2, [r1, #0]
 800d5b0:	4a18      	ldr	r2, [pc, #96]	; (800d614 <_ZN8touchgfx6Bitmap10clearCacheEv+0xcc>)
 800d5b2:	469c      	mov	ip, r3
 800d5b4:	8013      	strh	r3, [r2, #0]
 800d5b6:	f64f 71ff 	movw	r1, #65535	; 0xffff
 800d5ba:	4283      	cmp	r3, r0
 800d5bc:	d10d      	bne.n	800d5da <_ZN8touchgfx6Bitmap10clearCacheEv+0x92>
 800d5be:	8835      	ldrh	r5, [r6, #0]
 800d5c0:	6838      	ldr	r0, [r7, #0]
 800d5c2:	2300      	movs	r3, #0
 800d5c4:	240e      	movs	r4, #14
 800d5c6:	429d      	cmp	r5, r3
 800d5c8:	d90f      	bls.n	800d5ea <_ZN8touchgfx6Bitmap10clearCacheEv+0xa2>
 800d5ca:	fb04 0203 	mla	r2, r4, r3, r0
 800d5ce:	3301      	adds	r3, #1
 800d5d0:	7b11      	ldrb	r1, [r2, #12]
 800d5d2:	f36f 1145 	bfc	r1, #5, #1
 800d5d6:	7311      	strb	r1, [r2, #12]
 800d5d8:	e7f5      	b.n	800d5c6 <_ZN8touchgfx6Bitmap10clearCacheEv+0x7e>
 800d5da:	682a      	ldr	r2, [r5, #0]
 800d5dc:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 800d5e0:	6822      	ldr	r2, [r4, #0]
 800d5e2:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
 800d5e6:	3301      	adds	r3, #1
 800d5e8:	e7e7      	b.n	800d5ba <_ZN8touchgfx6Bitmap10clearCacheEv+0x72>
 800d5ea:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 800d5ee:	bf00      	nop
 800d5f0:	2000a150 	.word	0x2000a150
 800d5f4:	2000a16c 	.word	0x2000a16c
 800d5f8:	2000a170 	.word	0x2000a170
 800d5fc:	2000a164 	.word	0x2000a164
 800d600:	2000a154 	.word	0x2000a154
 800d604:	2000a15c 	.word	0x2000a15c
 800d608:	2000a16e 	.word	0x2000a16e
 800d60c:	2000a158 	.word	0x2000a158
 800d610:	2000a168 	.word	0x2000a168
 800d614:	2000a160 	.word	0x2000a160

0800d618 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 800d618:	b510      	push	{r4, lr}
 800d61a:	4b10      	ldr	r3, [pc, #64]	; (800d65c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x44>)
 800d61c:	681b      	ldr	r3, [r3, #0]
 800d61e:	b9db      	cbnz	r3, 800d658 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800d620:	b1d1      	cbz	r1, 800d658 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x40>
 800d622:	4b0f      	ldr	r3, [pc, #60]	; (800d660 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x48>)
 800d624:	801a      	strh	r2, [r3, #0]
 800d626:	4b0f      	ldr	r3, [pc, #60]	; (800d664 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x4c>)
 800d628:	881b      	ldrh	r3, [r3, #0]
 800d62a:	b292      	uxth	r2, r2
 800d62c:	240e      	movs	r4, #14
 800d62e:	4413      	add	r3, r2
 800d630:	4362      	muls	r2, r4
 800d632:	2406      	movs	r4, #6
 800d634:	fb04 2203 	mla	r2, r4, r3, r2
 800d638:	428a      	cmp	r2, r1
 800d63a:	d305      	bcc.n	800d648 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x30>
 800d63c:	4b0a      	ldr	r3, [pc, #40]	; (800d668 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x50>)
 800d63e:	4a0b      	ldr	r2, [pc, #44]	; (800d66c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x54>)
 800d640:	480b      	ldr	r0, [pc, #44]	; (800d670 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x58>)
 800d642:	2135      	movs	r1, #53	; 0x35
 800d644:	f00b fefc 	bl	8019440 <__assert_func>
 800d648:	4b0a      	ldr	r3, [pc, #40]	; (800d674 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x5c>)
 800d64a:	6019      	str	r1, [r3, #0]
 800d64c:	4b0a      	ldr	r3, [pc, #40]	; (800d678 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x60>)
 800d64e:	6018      	str	r0, [r3, #0]
 800d650:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800d654:	f7ff bf78 	b.w	800d548 <_ZN8touchgfx6Bitmap10clearCacheEv>
 800d658:	bd10      	pop	{r4, pc}
 800d65a:	bf00      	nop
 800d65c:	2000a15c 	.word	0x2000a15c
 800d660:	2000a170 	.word	0x2000a170
 800d664:	2000a16c 	.word	0x2000a16c
 800d668:	0801c98e 	.word	0x0801c98e
 800d66c:	0801ca23 	.word	0x0801ca23
 800d670:	0801c969 	.word	0x0801c969
 800d674:	2000a158 	.word	0x2000a158
 800d678:	2000a150 	.word	0x2000a150

0800d67c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 800d67c:	b470      	push	{r4, r5, r6}
 800d67e:	4c07      	ldr	r4, [pc, #28]	; (800d69c <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 800d680:	6826      	ldr	r6, [r4, #0]
 800d682:	4605      	mov	r5, r0
 800d684:	4610      	mov	r0, r2
 800d686:	9a03      	ldr	r2, [sp, #12]
 800d688:	b936      	cbnz	r6, 800d698 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 800d68a:	6025      	str	r5, [r4, #0]
 800d68c:	4c04      	ldr	r4, [pc, #16]	; (800d6a0 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 800d68e:	8021      	strh	r1, [r4, #0]
 800d690:	bc70      	pop	{r4, r5, r6}
 800d692:	4619      	mov	r1, r3
 800d694:	f7ff bfc0 	b.w	800d618 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 800d698:	bc70      	pop	{r4, r5, r6}
 800d69a:	4770      	bx	lr
 800d69c:	2000a174 	.word	0x2000a174
 800d6a0:	2000a16c 	.word	0x2000a16c

0800d6a4 <_ZNK8touchgfx6Bitmap8getWidthEv>:
 800d6a4:	b508      	push	{r3, lr}
 800d6a6:	4b14      	ldr	r3, [pc, #80]	; (800d6f8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 800d6a8:	6819      	ldr	r1, [r3, #0]
 800d6aa:	b931      	cbnz	r1, 800d6ba <_ZNK8touchgfx6Bitmap8getWidthEv+0x16>
 800d6ac:	4b13      	ldr	r3, [pc, #76]	; (800d6fc <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 800d6ae:	4a14      	ldr	r2, [pc, #80]	; (800d700 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 800d6b0:	4814      	ldr	r0, [pc, #80]	; (800d704 <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 800d6b2:	f240 4186 	movw	r1, #1158	; 0x486
 800d6b6:	f00b fec3 	bl	8019440 <__assert_func>
 800d6ba:	4a13      	ldr	r2, [pc, #76]	; (800d708 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 800d6bc:	8803      	ldrh	r3, [r0, #0]
 800d6be:	8812      	ldrh	r2, [r2, #0]
 800d6c0:	4293      	cmp	r3, r2
 800d6c2:	d204      	bcs.n	800d6ce <_ZNK8touchgfx6Bitmap8getWidthEv+0x2a>
 800d6c4:	2214      	movs	r2, #20
 800d6c6:	fb02 1303 	mla	r3, r2, r3, r1
 800d6ca:	8918      	ldrh	r0, [r3, #8]
 800d6cc:	bd08      	pop	{r3, pc}
 800d6ce:	490f      	ldr	r1, [pc, #60]	; (800d70c <_ZNK8touchgfx6Bitmap8getWidthEv+0x68>)
 800d6d0:	8809      	ldrh	r1, [r1, #0]
 800d6d2:	4411      	add	r1, r2
 800d6d4:	428b      	cmp	r3, r1
 800d6d6:	da06      	bge.n	800d6e6 <_ZNK8touchgfx6Bitmap8getWidthEv+0x42>
 800d6d8:	1a9b      	subs	r3, r3, r2
 800d6da:	4a0d      	ldr	r2, [pc, #52]	; (800d710 <_ZNK8touchgfx6Bitmap8getWidthEv+0x6c>)
 800d6dc:	6812      	ldr	r2, [r2, #0]
 800d6de:	210e      	movs	r1, #14
 800d6e0:	fb01 2303 	mla	r3, r1, r3, r2
 800d6e4:	e7f1      	b.n	800d6ca <_ZNK8touchgfx6Bitmap8getWidthEv+0x26>
 800d6e6:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800d6ea:	4293      	cmp	r3, r2
 800d6ec:	bf0a      	itet	eq
 800d6ee:	4b09      	ldreq	r3, [pc, #36]	; (800d714 <_ZNK8touchgfx6Bitmap8getWidthEv+0x70>)
 800d6f0:	2000      	movne	r0, #0
 800d6f2:	8818      	ldrheq	r0, [r3, #0]
 800d6f4:	e7ea      	b.n	800d6cc <_ZNK8touchgfx6Bitmap8getWidthEv+0x28>
 800d6f6:	bf00      	nop
 800d6f8:	2000a174 	.word	0x2000a174
 800d6fc:	0801c9e7 	.word	0x0801c9e7
 800d700:	0801cad0 	.word	0x0801cad0
 800d704:	0801c969 	.word	0x0801c969
 800d708:	2000a16c 	.word	0x2000a16c
 800d70c:	2000a170 	.word	0x2000a170
 800d710:	2000a154 	.word	0x2000a154
 800d714:	2000a0e0 	.word	0x2000a0e0

0800d718 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 800d718:	b508      	push	{r3, lr}
 800d71a:	4b14      	ldr	r3, [pc, #80]	; (800d76c <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 800d71c:	6819      	ldr	r1, [r3, #0]
 800d71e:	b931      	cbnz	r1, 800d72e <_ZNK8touchgfx6Bitmap9getHeightEv+0x16>
 800d720:	4b13      	ldr	r3, [pc, #76]	; (800d770 <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 800d722:	4a14      	ldr	r2, [pc, #80]	; (800d774 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 800d724:	4814      	ldr	r0, [pc, #80]	; (800d778 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 800d726:	f240 419a 	movw	r1, #1178	; 0x49a
 800d72a:	f00b fe89 	bl	8019440 <__assert_func>
 800d72e:	4a13      	ldr	r2, [pc, #76]	; (800d77c <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 800d730:	8803      	ldrh	r3, [r0, #0]
 800d732:	8812      	ldrh	r2, [r2, #0]
 800d734:	4293      	cmp	r3, r2
 800d736:	d204      	bcs.n	800d742 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2a>
 800d738:	2214      	movs	r2, #20
 800d73a:	fb02 1303 	mla	r3, r2, r3, r1
 800d73e:	8958      	ldrh	r0, [r3, #10]
 800d740:	bd08      	pop	{r3, pc}
 800d742:	490f      	ldr	r1, [pc, #60]	; (800d780 <_ZNK8touchgfx6Bitmap9getHeightEv+0x68>)
 800d744:	8809      	ldrh	r1, [r1, #0]
 800d746:	4411      	add	r1, r2
 800d748:	428b      	cmp	r3, r1
 800d74a:	da06      	bge.n	800d75a <_ZNK8touchgfx6Bitmap9getHeightEv+0x42>
 800d74c:	1a9b      	subs	r3, r3, r2
 800d74e:	4a0d      	ldr	r2, [pc, #52]	; (800d784 <_ZNK8touchgfx6Bitmap9getHeightEv+0x6c>)
 800d750:	6812      	ldr	r2, [r2, #0]
 800d752:	210e      	movs	r1, #14
 800d754:	fb01 2303 	mla	r3, r1, r3, r2
 800d758:	e7f1      	b.n	800d73e <_ZNK8touchgfx6Bitmap9getHeightEv+0x26>
 800d75a:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800d75e:	4293      	cmp	r3, r2
 800d760:	bf0a      	itet	eq
 800d762:	4b09      	ldreq	r3, [pc, #36]	; (800d788 <_ZNK8touchgfx6Bitmap9getHeightEv+0x70>)
 800d764:	2000      	movne	r0, #0
 800d766:	8818      	ldrheq	r0, [r3, #0]
 800d768:	e7ea      	b.n	800d740 <_ZNK8touchgfx6Bitmap9getHeightEv+0x28>
 800d76a:	bf00      	nop
 800d76c:	2000a174 	.word	0x2000a174
 800d770:	0801c9e7 	.word	0x0801c9e7
 800d774:	0801cafc 	.word	0x0801cafc
 800d778:	0801c969 	.word	0x0801c969
 800d77c:	2000a16c 	.word	0x2000a16c
 800d780:	2000a170 	.word	0x2000a170
 800d784:	2000a154 	.word	0x2000a154
 800d788:	2000a0e2 	.word	0x2000a0e2

0800d78c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 800d78c:	b510      	push	{r4, lr}
 800d78e:	4b23      	ldr	r3, [pc, #140]	; (800d81c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 800d790:	681c      	ldr	r4, [r3, #0]
 800d792:	b934      	cbnz	r4, 800d7a2 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x16>
 800d794:	4b22      	ldr	r3, [pc, #136]	; (800d820 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 800d796:	4a23      	ldr	r2, [pc, #140]	; (800d824 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 800d798:	4823      	ldr	r0, [pc, #140]	; (800d828 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 800d79a:	f240 41ae 	movw	r1, #1198	; 0x4ae
 800d79e:	f00b fe4f 	bl	8019440 <__assert_func>
 800d7a2:	4a22      	ldr	r2, [pc, #136]	; (800d82c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 800d7a4:	880b      	ldrh	r3, [r1, #0]
 800d7a6:	8812      	ldrh	r2, [r2, #0]
 800d7a8:	4293      	cmp	r3, r2
 800d7aa:	d211      	bcs.n	800d7d0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x44>
 800d7ac:	2214      	movs	r2, #20
 800d7ae:	fb02 4303 	mla	r3, r2, r3, r4
 800d7b2:	8a1a      	ldrh	r2, [r3, #16]
 800d7b4:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 800d7b8:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 800d7bc:	8a5b      	ldrh	r3, [r3, #18]
 800d7be:	8004      	strh	r4, [r0, #0]
 800d7c0:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800d7c4:	f3c3 030c 	ubfx	r3, r3, #0, #13
 800d7c8:	8041      	strh	r1, [r0, #2]
 800d7ca:	8082      	strh	r2, [r0, #4]
 800d7cc:	80c3      	strh	r3, [r0, #6]
 800d7ce:	e00e      	b.n	800d7ee <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800d7d0:	4917      	ldr	r1, [pc, #92]	; (800d830 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa4>)
 800d7d2:	8809      	ldrh	r1, [r1, #0]
 800d7d4:	4411      	add	r1, r2
 800d7d6:	428b      	cmp	r3, r1
 800d7d8:	da0a      	bge.n	800d7f0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x64>
 800d7da:	1a9b      	subs	r3, r3, r2
 800d7dc:	4a15      	ldr	r2, [pc, #84]	; (800d834 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa8>)
 800d7de:	6812      	ldr	r2, [r2, #0]
 800d7e0:	210e      	movs	r1, #14
 800d7e2:	fb01 2303 	mla	r3, r1, r3, r2
 800d7e6:	681a      	ldr	r2, [r3, #0]
 800d7e8:	6002      	str	r2, [r0, #0]
 800d7ea:	685a      	ldr	r2, [r3, #4]
 800d7ec:	6042      	str	r2, [r0, #4]
 800d7ee:	bd10      	pop	{r4, pc}
 800d7f0:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800d7f4:	4293      	cmp	r3, r2
 800d7f6:	d10b      	bne.n	800d810 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x84>
 800d7f8:	4b0f      	ldr	r3, [pc, #60]	; (800d838 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xac>)
 800d7fa:	f9b3 1000 	ldrsh.w	r1, [r3]
 800d7fe:	4b0f      	ldr	r3, [pc, #60]	; (800d83c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xb0>)
 800d800:	8081      	strh	r1, [r0, #4]
 800d802:	f9b3 2000 	ldrsh.w	r2, [r3]
 800d806:	80c2      	strh	r2, [r0, #6]
 800d808:	2300      	movs	r3, #0
 800d80a:	8003      	strh	r3, [r0, #0]
 800d80c:	8043      	strh	r3, [r0, #2]
 800d80e:	e7ee      	b.n	800d7ee <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x62>
 800d810:	2300      	movs	r3, #0
 800d812:	8003      	strh	r3, [r0, #0]
 800d814:	8043      	strh	r3, [r0, #2]
 800d816:	8083      	strh	r3, [r0, #4]
 800d818:	e7d8      	b.n	800d7cc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x40>
 800d81a:	bf00      	nop
 800d81c:	2000a174 	.word	0x2000a174
 800d820:	0801c9e7 	.word	0x0801c9e7
 800d824:	0801ca69 	.word	0x0801ca69
 800d828:	0801c969 	.word	0x0801c969
 800d82c:	2000a16c 	.word	0x2000a16c
 800d830:	2000a170 	.word	0x2000a170
 800d834:	2000a154 	.word	0x2000a154
 800d838:	2000a0e0 	.word	0x2000a0e0
 800d83c:	2000a0e2 	.word	0x2000a0e2

0800d840 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 800d840:	4b18      	ldr	r3, [pc, #96]	; (800d8a4 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 800d842:	681b      	ldr	r3, [r3, #0]
 800d844:	b34b      	cbz	r3, 800d89a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800d846:	4a18      	ldr	r2, [pc, #96]	; (800d8a8 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 800d848:	8800      	ldrh	r0, [r0, #0]
 800d84a:	8812      	ldrh	r2, [r2, #0]
 800d84c:	4290      	cmp	r0, r2
 800d84e:	d211      	bcs.n	800d874 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x34>
 800d850:	2214      	movs	r2, #20
 800d852:	fb02 3300 	mla	r3, r2, r0, r3
 800d856:	8a1a      	ldrh	r2, [r3, #16]
 800d858:	8919      	ldrh	r1, [r3, #8]
 800d85a:	f3c2 020c 	ubfx	r2, r2, #0, #13
 800d85e:	428a      	cmp	r2, r1
 800d860:	db1d      	blt.n	800d89e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800d862:	8a58      	ldrh	r0, [r3, #18]
 800d864:	f3c0 000c 	ubfx	r0, r0, #0, #13
 800d868:	895b      	ldrh	r3, [r3, #10]
 800d86a:	4298      	cmp	r0, r3
 800d86c:	bfac      	ite	ge
 800d86e:	2000      	movge	r0, #0
 800d870:	2001      	movlt	r0, #1
 800d872:	4770      	bx	lr
 800d874:	4b0d      	ldr	r3, [pc, #52]	; (800d8ac <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 800d876:	881b      	ldrh	r3, [r3, #0]
 800d878:	4413      	add	r3, r2
 800d87a:	4298      	cmp	r0, r3
 800d87c:	da0d      	bge.n	800d89a <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5a>
 800d87e:	4b0c      	ldr	r3, [pc, #48]	; (800d8b0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x70>)
 800d880:	681b      	ldr	r3, [r3, #0]
 800d882:	1a80      	subs	r0, r0, r2
 800d884:	220e      	movs	r2, #14
 800d886:	fb02 3300 	mla	r3, r2, r0, r3
 800d88a:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 800d88e:	891a      	ldrh	r2, [r3, #8]
 800d890:	4291      	cmp	r1, r2
 800d892:	db04      	blt.n	800d89e <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5e>
 800d894:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 800d898:	e7e6      	b.n	800d868 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x28>
 800d89a:	2000      	movs	r0, #0
 800d89c:	4770      	bx	lr
 800d89e:	2001      	movs	r0, #1
 800d8a0:	4770      	bx	lr
 800d8a2:	bf00      	nop
 800d8a4:	2000a174 	.word	0x2000a174
 800d8a8:	2000a16c 	.word	0x2000a16c
 800d8ac:	2000a170 	.word	0x2000a170
 800d8b0:	2000a154 	.word	0x2000a154

0800d8b4 <_ZNK8touchgfx6Bitmap7getDataEv>:
 800d8b4:	b508      	push	{r3, lr}
 800d8b6:	4b12      	ldr	r3, [pc, #72]	; (800d900 <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 800d8b8:	6819      	ldr	r1, [r3, #0]
 800d8ba:	b931      	cbnz	r1, 800d8ca <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 800d8bc:	4b11      	ldr	r3, [pc, #68]	; (800d904 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 800d8be:	4a12      	ldr	r2, [pc, #72]	; (800d908 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 800d8c0:	4812      	ldr	r0, [pc, #72]	; (800d90c <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 800d8c2:	f240 41d2 	movw	r1, #1234	; 0x4d2
 800d8c6:	f00b fdbb 	bl	8019440 <__assert_func>
 800d8ca:	8803      	ldrh	r3, [r0, #0]
 800d8cc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 800d8d0:	4293      	cmp	r3, r2
 800d8d2:	d012      	beq.n	800d8fa <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 800d8d4:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800d8d8:	4293      	cmp	r3, r2
 800d8da:	d103      	bne.n	800d8e4 <_ZNK8touchgfx6Bitmap7getDataEv+0x30>
 800d8dc:	4b0c      	ldr	r3, [pc, #48]	; (800d910 <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 800d8de:	681b      	ldr	r3, [r3, #0]
 800d8e0:	6c58      	ldr	r0, [r3, #68]	; 0x44
 800d8e2:	bd08      	pop	{r3, pc}
 800d8e4:	4a0b      	ldr	r2, [pc, #44]	; (800d914 <_ZNK8touchgfx6Bitmap7getDataEv+0x60>)
 800d8e6:	6812      	ldr	r2, [r2, #0]
 800d8e8:	b11a      	cbz	r2, 800d8f2 <_ZNK8touchgfx6Bitmap7getDataEv+0x3e>
 800d8ea:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 800d8ee:	2800      	cmp	r0, #0
 800d8f0:	d1f7      	bne.n	800d8e2 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800d8f2:	2214      	movs	r2, #20
 800d8f4:	4353      	muls	r3, r2
 800d8f6:	58c8      	ldr	r0, [r1, r3]
 800d8f8:	e7f3      	b.n	800d8e2 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800d8fa:	2000      	movs	r0, #0
 800d8fc:	e7f1      	b.n	800d8e2 <_ZNK8touchgfx6Bitmap7getDataEv+0x2e>
 800d8fe:	bf00      	nop
 800d900:	2000a174 	.word	0x2000a174
 800d904:	0801c9e7 	.word	0x0801c9e7
 800d908:	0801ca9f 	.word	0x0801ca9f
 800d90c:	0801c969 	.word	0x0801c969
 800d910:	2000a0ec 	.word	0x2000a0ec
 800d914:	2000a150 	.word	0x2000a150

0800d918 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 800d918:	8802      	ldrh	r2, [r0, #0]
 800d91a:	f64f 73fd 	movw	r3, #65533	; 0xfffd
 800d91e:	429a      	cmp	r2, r3
 800d920:	d845      	bhi.n	800d9ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800d922:	4b24      	ldr	r3, [pc, #144]	; (800d9b4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 800d924:	8818      	ldrh	r0, [r3, #0]
 800d926:	4282      	cmp	r2, r0
 800d928:	d221      	bcs.n	800d96e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x56>
 800d92a:	4b23      	ldr	r3, [pc, #140]	; (800d9b8 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 800d92c:	6819      	ldr	r1, [r3, #0]
 800d92e:	2314      	movs	r3, #20
 800d930:	fb03 1302 	mla	r3, r3, r2, r1
 800d934:	6858      	ldr	r0, [r3, #4]
 800d936:	2800      	cmp	r0, #0
 800d938:	d03a      	beq.n	800d9b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800d93a:	4920      	ldr	r1, [pc, #128]	; (800d9bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800d93c:	6809      	ldr	r1, [r1, #0]
 800d93e:	2900      	cmp	r1, #0
 800d940:	d036      	beq.n	800d9b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800d942:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 800d946:	2900      	cmp	r1, #0
 800d948:	d032      	beq.n	800d9b0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>
 800d94a:	891a      	ldrh	r2, [r3, #8]
 800d94c:	8958      	ldrh	r0, [r3, #10]
 800d94e:	4350      	muls	r0, r2
 800d950:	7c5a      	ldrb	r2, [r3, #17]
 800d952:	7cdb      	ldrb	r3, [r3, #19]
 800d954:	0952      	lsrs	r2, r2, #5
 800d956:	f3c3 1342 	ubfx	r3, r3, #5, #3
 800d95a:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 800d95e:	2b0b      	cmp	r3, #11
 800d960:	bf18      	it	ne
 800d962:	0040      	lslne	r0, r0, #1
 800d964:	3003      	adds	r0, #3
 800d966:	f020 0003 	bic.w	r0, r0, #3
 800d96a:	4408      	add	r0, r1
 800d96c:	4770      	bx	lr
 800d96e:	4b14      	ldr	r3, [pc, #80]	; (800d9c0 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa8>)
 800d970:	881b      	ldrh	r3, [r3, #0]
 800d972:	4403      	add	r3, r0
 800d974:	429a      	cmp	r2, r3
 800d976:	da1a      	bge.n	800d9ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800d978:	4b12      	ldr	r3, [pc, #72]	; (800d9c4 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xac>)
 800d97a:	681b      	ldr	r3, [r3, #0]
 800d97c:	1a10      	subs	r0, r2, r0
 800d97e:	210e      	movs	r1, #14
 800d980:	fb01 3000 	mla	r0, r1, r0, r3
 800d984:	7b03      	ldrb	r3, [r0, #12]
 800d986:	f003 031f 	and.w	r3, r3, #31
 800d98a:	2b0b      	cmp	r3, #11
 800d98c:	d10b      	bne.n	800d9a6 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 800d98e:	8903      	ldrh	r3, [r0, #8]
 800d990:	8940      	ldrh	r0, [r0, #10]
 800d992:	4358      	muls	r0, r3
 800d994:	4b09      	ldr	r3, [pc, #36]	; (800d9bc <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 800d996:	6819      	ldr	r1, [r3, #0]
 800d998:	3003      	adds	r0, #3
 800d99a:	f020 0303 	bic.w	r3, r0, #3
 800d99e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 800d9a2:	4418      	add	r0, r3
 800d9a4:	4770      	bx	lr
 800d9a6:	2b0d      	cmp	r3, #13
 800d9a8:	d101      	bne.n	800d9ae <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x96>
 800d9aa:	300d      	adds	r0, #13
 800d9ac:	4770      	bx	lr
 800d9ae:	2000      	movs	r0, #0
 800d9b0:	4770      	bx	lr
 800d9b2:	bf00      	nop
 800d9b4:	2000a16c 	.word	0x2000a16c
 800d9b8:	2000a174 	.word	0x2000a174
 800d9bc:	2000a150 	.word	0x2000a150
 800d9c0:	2000a170 	.word	0x2000a170
 800d9c4:	2000a154 	.word	0x2000a154

0800d9c8 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 800d9c8:	b510      	push	{r4, lr}
 800d9ca:	4b17      	ldr	r3, [pc, #92]	; (800da28 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>)
 800d9cc:	6819      	ldr	r1, [r3, #0]
 800d9ce:	8803      	ldrh	r3, [r0, #0]
 800d9d0:	b1e9      	cbz	r1, 800da0e <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800d9d2:	4a16      	ldr	r2, [pc, #88]	; (800da2c <_ZNK8touchgfx6Bitmap9getFormatEv+0x64>)
 800d9d4:	8812      	ldrh	r2, [r2, #0]
 800d9d6:	429a      	cmp	r2, r3
 800d9d8:	d90a      	bls.n	800d9f0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x28>
 800d9da:	2214      	movs	r2, #20
 800d9dc:	fb02 1303 	mla	r3, r2, r3, r1
 800d9e0:	7c58      	ldrb	r0, [r3, #17]
 800d9e2:	0942      	lsrs	r2, r0, #5
 800d9e4:	7cd8      	ldrb	r0, [r3, #19]
 800d9e6:	f3c0 1042 	ubfx	r0, r0, #5, #3
 800d9ea:	ea40 00c2 	orr.w	r0, r0, r2, lsl #3
 800d9ee:	bd10      	pop	{r4, pc}
 800d9f0:	490f      	ldr	r1, [pc, #60]	; (800da30 <_ZNK8touchgfx6Bitmap9getFormatEv+0x68>)
 800d9f2:	8809      	ldrh	r1, [r1, #0]
 800d9f4:	4411      	add	r1, r2
 800d9f6:	428b      	cmp	r3, r1
 800d9f8:	da09      	bge.n	800da0e <_ZNK8touchgfx6Bitmap9getFormatEv+0x46>
 800d9fa:	1a9b      	subs	r3, r3, r2
 800d9fc:	4a0d      	ldr	r2, [pc, #52]	; (800da34 <_ZNK8touchgfx6Bitmap9getFormatEv+0x6c>)
 800d9fe:	6812      	ldr	r2, [r2, #0]
 800da00:	210e      	movs	r1, #14
 800da02:	fb01 2303 	mla	r3, r1, r3, r2
 800da06:	7b18      	ldrb	r0, [r3, #12]
 800da08:	f000 001f 	and.w	r0, r0, #31
 800da0c:	e7ef      	b.n	800d9ee <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800da0e:	f64f 72fe 	movw	r2, #65534	; 0xfffe
 800da12:	4293      	cmp	r3, r2
 800da14:	d106      	bne.n	800da24 <_ZNK8touchgfx6Bitmap9getFormatEv+0x5c>
 800da16:	f7fb fb91 	bl	800913c <_ZN8touchgfx3HAL3lcdEv>
 800da1a:	6803      	ldr	r3, [r0, #0]
 800da1c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 800da20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800da22:	4718      	bx	r3
 800da24:	2000      	movs	r0, #0
 800da26:	e7e2      	b.n	800d9ee <_ZNK8touchgfx6Bitmap9getFormatEv+0x26>
 800da28:	2000a174 	.word	0x2000a174
 800da2c:	2000a16c 	.word	0x2000a16c
 800da30:	2000a170 	.word	0x2000a170
 800da34:	2000a154 	.word	0x2000a154

0800da38 <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 800da38:	2010      	movs	r0, #16
 800da3a:	4770      	bx	lr

0800da3c <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 800da3c:	2000      	movs	r0, #0
 800da3e:	4770      	bx	lr

0800da40 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 800da40:	2bff      	cmp	r3, #255	; 0xff
 800da42:	d050      	beq.n	800dae6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 800da44:	2a0b      	cmp	r2, #11
 800da46:	d04a      	beq.n	800dade <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800da48:	d80e      	bhi.n	800da68 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 800da4a:	2a03      	cmp	r2, #3
 800da4c:	d03f      	beq.n	800dace <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8e>
 800da4e:	d804      	bhi.n	800da5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 800da50:	2a01      	cmp	r2, #1
 800da52:	d03e      	beq.n	800dad2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x92>
 800da54:	d93f      	bls.n	800dad6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x96>
 800da56:	6b80      	ldr	r0, [r0, #56]	; 0x38
 800da58:	4770      	bx	lr
 800da5a:	2a09      	cmp	r2, #9
 800da5c:	d03f      	beq.n	800dade <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9e>
 800da5e:	d83c      	bhi.n	800dada <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800da60:	2a08      	cmp	r2, #8
 800da62:	d03a      	beq.n	800dada <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x9a>
 800da64:	2000      	movs	r0, #0
 800da66:	4770      	bx	lr
 800da68:	2a2f      	cmp	r2, #47	; 0x2f
 800da6a:	d024      	beq.n	800dab6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x76>
 800da6c:	d80d      	bhi.n	800da8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x4a>
 800da6e:	2a2d      	cmp	r2, #45	; 0x2d
 800da70:	d014      	beq.n	800da9c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x5c>
 800da72:	d826      	bhi.n	800dac2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 800da74:	2a2c      	cmp	r2, #44	; 0x2c
 800da76:	d1f5      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800da78:	684b      	ldr	r3, [r1, #4]
 800da7a:	781b      	ldrb	r3, [r3, #0]
 800da7c:	2b01      	cmp	r3, #1
 800da7e:	d018      	beq.n	800dab2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x72>
 800da80:	d323      	bcc.n	800daca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x8a>
 800da82:	2b02      	cmp	r3, #2
 800da84:	d1ee      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800da86:	6880      	ldr	r0, [r0, #8]
 800da88:	4770      	bx	lr
 800da8a:	2a31      	cmp	r2, #49	; 0x31
 800da8c:	d004      	beq.n	800da98 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x58>
 800da8e:	d328      	bcc.n	800dae2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800da90:	2a32      	cmp	r2, #50	; 0x32
 800da92:	d026      	beq.n	800dae2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa2>
 800da94:	2a33      	cmp	r2, #51	; 0x33
 800da96:	d1e5      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800da98:	6f00      	ldr	r0, [r0, #112]	; 0x70
 800da9a:	4770      	bx	lr
 800da9c:	684b      	ldr	r3, [r1, #4]
 800da9e:	781b      	ldrb	r3, [r3, #0]
 800daa0:	2b01      	cmp	r3, #1
 800daa2:	d004      	beq.n	800daae <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x6e>
 800daa4:	d30b      	bcc.n	800dabe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 800daa6:	2b02      	cmp	r3, #2
 800daa8:	d1dc      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800daaa:	6900      	ldr	r0, [r0, #16]
 800daac:	4770      	bx	lr
 800daae:	6a00      	ldr	r0, [r0, #32]
 800dab0:	4770      	bx	lr
 800dab2:	6980      	ldr	r0, [r0, #24]
 800dab4:	4770      	bx	lr
 800dab6:	684b      	ldr	r3, [r1, #4]
 800dab8:	781b      	ldrb	r3, [r3, #0]
 800daba:	2b00      	cmp	r3, #0
 800dabc:	d1d2      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800dabe:	6b00      	ldr	r0, [r0, #48]	; 0x30
 800dac0:	4770      	bx	lr
 800dac2:	684b      	ldr	r3, [r1, #4]
 800dac4:	781b      	ldrb	r3, [r3, #0]
 800dac6:	2b00      	cmp	r3, #0
 800dac8:	d1cc      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800daca:	6a80      	ldr	r0, [r0, #40]	; 0x28
 800dacc:	4770      	bx	lr
 800dace:	6c80      	ldr	r0, [r0, #72]	; 0x48
 800dad0:	4770      	bx	lr
 800dad2:	6d00      	ldr	r0, [r0, #80]	; 0x50
 800dad4:	4770      	bx	lr
 800dad6:	6c00      	ldr	r0, [r0, #64]	; 0x40
 800dad8:	4770      	bx	lr
 800dada:	6d80      	ldr	r0, [r0, #88]	; 0x58
 800dadc:	4770      	bx	lr
 800dade:	6e00      	ldr	r0, [r0, #96]	; 0x60
 800dae0:	4770      	bx	lr
 800dae2:	6e80      	ldr	r0, [r0, #104]	; 0x68
 800dae4:	4770      	bx	lr
 800dae6:	2a0b      	cmp	r2, #11
 800dae8:	d049      	beq.n	800db7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800daea:	d80e      	bhi.n	800db0a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xca>
 800daec:	2a03      	cmp	r2, #3
 800daee:	d040      	beq.n	800db72 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x132>
 800daf0:	d804      	bhi.n	800dafc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbc>
 800daf2:	2a01      	cmp	r2, #1
 800daf4:	d03f      	beq.n	800db76 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x136>
 800daf6:	d940      	bls.n	800db7a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13a>
 800daf8:	6bc0      	ldr	r0, [r0, #60]	; 0x3c
 800dafa:	4770      	bx	lr
 800dafc:	2a09      	cmp	r2, #9
 800dafe:	d03e      	beq.n	800db7e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 800db00:	d801      	bhi.n	800db06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc6>
 800db02:	2a08      	cmp	r2, #8
 800db04:	d1ae      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800db06:	6dc0      	ldr	r0, [r0, #92]	; 0x5c
 800db08:	4770      	bx	lr
 800db0a:	2a2f      	cmp	r2, #47	; 0x2f
 800db0c:	d024      	beq.n	800db58 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x118>
 800db0e:	d80d      	bhi.n	800db2c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xec>
 800db10:	2a2d      	cmp	r2, #45	; 0x2d
 800db12:	d014      	beq.n	800db3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfe>
 800db14:	d826      	bhi.n	800db64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x124>
 800db16:	2a2c      	cmp	r2, #44	; 0x2c
 800db18:	d1a4      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800db1a:	684b      	ldr	r3, [r1, #4]
 800db1c:	781b      	ldrb	r3, [r3, #0]
 800db1e:	2b01      	cmp	r3, #1
 800db20:	d018      	beq.n	800db54 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x114>
 800db22:	d324      	bcc.n	800db6e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x12e>
 800db24:	2b02      	cmp	r3, #2
 800db26:	d19d      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800db28:	68c0      	ldr	r0, [r0, #12]
 800db2a:	4770      	bx	lr
 800db2c:	2a31      	cmp	r2, #49	; 0x31
 800db2e:	d004      	beq.n	800db3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xfa>
 800db30:	d327      	bcc.n	800db82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800db32:	2a32      	cmp	r2, #50	; 0x32
 800db34:	d025      	beq.n	800db82 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 800db36:	2a33      	cmp	r2, #51	; 0x33
 800db38:	d194      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800db3a:	6f40      	ldr	r0, [r0, #116]	; 0x74
 800db3c:	4770      	bx	lr
 800db3e:	684b      	ldr	r3, [r1, #4]
 800db40:	781b      	ldrb	r3, [r3, #0]
 800db42:	2b01      	cmp	r3, #1
 800db44:	d004      	beq.n	800db50 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 800db46:	d30b      	bcc.n	800db60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x120>
 800db48:	2b02      	cmp	r3, #2
 800db4a:	d18b      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800db4c:	6940      	ldr	r0, [r0, #20]
 800db4e:	4770      	bx	lr
 800db50:	6a40      	ldr	r0, [r0, #36]	; 0x24
 800db52:	4770      	bx	lr
 800db54:	69c0      	ldr	r0, [r0, #28]
 800db56:	4770      	bx	lr
 800db58:	684b      	ldr	r3, [r1, #4]
 800db5a:	781b      	ldrb	r3, [r3, #0]
 800db5c:	2b00      	cmp	r3, #0
 800db5e:	d181      	bne.n	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800db60:	6b40      	ldr	r0, [r0, #52]	; 0x34
 800db62:	4770      	bx	lr
 800db64:	684b      	ldr	r3, [r1, #4]
 800db66:	781b      	ldrb	r3, [r3, #0]
 800db68:	2b00      	cmp	r3, #0
 800db6a:	f47f af7b 	bne.w	800da64 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 800db6e:	6ac0      	ldr	r0, [r0, #44]	; 0x2c
 800db70:	4770      	bx	lr
 800db72:	6cc0      	ldr	r0, [r0, #76]	; 0x4c
 800db74:	4770      	bx	lr
 800db76:	6d40      	ldr	r0, [r0, #84]	; 0x54
 800db78:	4770      	bx	lr
 800db7a:	6c40      	ldr	r0, [r0, #68]	; 0x44
 800db7c:	4770      	bx	lr
 800db7e:	6e40      	ldr	r0, [r0, #100]	; 0x64
 800db80:	4770      	bx	lr
 800db82:	6ec0      	ldr	r0, [r0, #108]	; 0x6c
 800db84:	4770      	bx	lr

0800db86 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800db86:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800db8a:	b087      	sub	sp, #28
 800db8c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800db8e:	9205      	str	r2, [sp, #20]
 800db90:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800db94:	9202      	str	r2, [sp, #8]
 800db96:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800db9a:	9101      	str	r1, [sp, #4]
 800db9c:	6841      	ldr	r1, [r0, #4]
 800db9e:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800dba2:	fb01 2404 	mla	r4, r1, r4, r2
 800dba6:	6802      	ldr	r2, [r0, #0]
 800dba8:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800dbac:	f8de 2000 	ldr.w	r2, [lr]
 800dbb0:	9203      	str	r2, [sp, #12]
 800dbb2:	f8de 2004 	ldr.w	r2, [lr, #4]
 800dbb6:	3204      	adds	r2, #4
 800dbb8:	9204      	str	r2, [sp, #16]
 800dbba:	9a02      	ldr	r2, [sp, #8]
 800dbbc:	43d6      	mvns	r6, r2
 800dbbe:	b2f6      	uxtb	r6, r6
 800dbc0:	9a01      	ldr	r2, [sp, #4]
 800dbc2:	2a00      	cmp	r2, #0
 800dbc4:	dc03      	bgt.n	800dbce <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 800dbc6:	9a05      	ldr	r2, [sp, #20]
 800dbc8:	2a00      	cmp	r2, #0
 800dbca:	f340 8129 	ble.w	800de20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800dbce:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800dbd0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800dbd4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800dbd8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800dbdc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800dbde:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800dbe2:	2b00      	cmp	r3, #0
 800dbe4:	dd0e      	ble.n	800dc04 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800dbe6:	1408      	asrs	r0, r1, #16
 800dbe8:	d405      	bmi.n	800dbf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800dbea:	4560      	cmp	r0, ip
 800dbec:	da03      	bge.n	800dbf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800dbee:	1410      	asrs	r0, r2, #16
 800dbf0:	d401      	bmi.n	800dbf6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800dbf2:	42b8      	cmp	r0, r7
 800dbf4:	db07      	blt.n	800dc06 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800dbf6:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800dbf8:	4401      	add	r1, r0
 800dbfa:	9814      	ldr	r0, [sp, #80]	; 0x50
 800dbfc:	3b01      	subs	r3, #1
 800dbfe:	4402      	add	r2, r0
 800dc00:	3402      	adds	r4, #2
 800dc02:	e7ee      	b.n	800dbe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 800dc04:	d071      	beq.n	800dcea <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 800dc06:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800dc08:	1e58      	subs	r0, r3, #1
 800dc0a:	fb05 1500 	mla	r5, r5, r0, r1
 800dc0e:	142d      	asrs	r5, r5, #16
 800dc10:	d45f      	bmi.n	800dcd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800dc12:	4565      	cmp	r5, ip
 800dc14:	da5d      	bge.n	800dcd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800dc16:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800dc18:	fb05 2000 	mla	r0, r5, r0, r2
 800dc1c:	1400      	asrs	r0, r0, #16
 800dc1e:	d458      	bmi.n	800dcd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800dc20:	42b8      	cmp	r0, r7
 800dc22:	da56      	bge.n	800dcd2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 800dc24:	f8bd b008 	ldrh.w	fp, [sp, #8]
 800dc28:	4699      	mov	r9, r3
 800dc2a:	46a2      	mov	sl, r4
 800dc2c:	f1b9 0f00 	cmp.w	r9, #0
 800dc30:	dd57      	ble.n	800dce2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 800dc32:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800dc36:	9803      	ldr	r0, [sp, #12]
 800dc38:	ea4f 4c22 	mov.w	ip, r2, asr #16
 800dc3c:	140d      	asrs	r5, r1, #16
 800dc3e:	fb07 000c 	mla	r0, r7, ip, r0
 800dc42:	f109 39ff 	add.w	r9, r9, #4294967295
 800dc46:	5d40      	ldrb	r0, [r0, r5]
 800dc48:	9d04      	ldr	r5, [sp, #16]
 800dc4a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800dc4e:	f8ba 5000 	ldrh.w	r5, [sl]
 800dc52:	122f      	asrs	r7, r5, #8
 800dc54:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800dc58:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800dc5c:	fb17 f706 	smulbb	r7, r7, r6
 800dc60:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800dc64:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800dc68:	00ed      	lsls	r5, r5, #3
 800dc6a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800dc6e:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800dc72:	10c7      	asrs	r7, r0, #3
 800dc74:	b2ed      	uxtb	r5, r5
 800dc76:	00c0      	lsls	r0, r0, #3
 800dc78:	fb18 f806 	smulbb	r8, r8, r6
 800dc7c:	fb15 f506 	smulbb	r5, r5, r6
 800dc80:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800dc84:	b2c0      	uxtb	r0, r0
 800dc86:	fa1f fc8c 	uxth.w	ip, ip
 800dc8a:	fb07 870b 	mla	r7, r7, fp, r8
 800dc8e:	fb00 500b 	mla	r0, r0, fp, r5
 800dc92:	b280      	uxth	r0, r0
 800dc94:	b2bf      	uxth	r7, r7
 800dc96:	f10c 0501 	add.w	r5, ip, #1
 800dc9a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800dc9e:	f107 0801 	add.w	r8, r7, #1
 800dca2:	1c45      	adds	r5, r0, #1
 800dca4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800dca8:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800dcac:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800dcae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800dcb2:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800dcb6:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800dcba:	ea45 0c0c 	orr.w	ip, r5, ip
 800dcbe:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800dcc2:	4401      	add	r1, r0
 800dcc4:	9814      	ldr	r0, [sp, #80]	; 0x50
 800dcc6:	ea4c 0c08 	orr.w	ip, ip, r8
 800dcca:	f82a cb02 	strh.w	ip, [sl], #2
 800dcce:	4402      	add	r2, r0
 800dcd0:	e7ac      	b.n	800dc2c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800dcd2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 800dcd6:	f04f 0800 	mov.w	r8, #0
 800dcda:	eb03 0008 	add.w	r0, r3, r8
 800dcde:	2800      	cmp	r0, #0
 800dce0:	dc41      	bgt.n	800dd66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800dce2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800dce6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800dcea:	9b01      	ldr	r3, [sp, #4]
 800dcec:	2b00      	cmp	r3, #0
 800dcee:	f340 8097 	ble.w	800de20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 800dcf2:	ee30 0a04 	vadd.f32	s0, s0, s8
 800dcf6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800dcfa:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800dcfe:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dd00:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800dd04:	ee31 1a05 	vadd.f32	s2, s2, s10
 800dd08:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800dd0c:	eef0 6a62 	vmov.f32	s13, s5
 800dd10:	ee61 7a27 	vmul.f32	s15, s2, s15
 800dd14:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800dd18:	ee77 2a62 	vsub.f32	s5, s14, s5
 800dd1c:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800dd20:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800dd24:	eef0 6a43 	vmov.f32	s13, s6
 800dd28:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800dd2c:	ee12 2a90 	vmov	r2, s5
 800dd30:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800dd34:	fb92 f3f3 	sdiv	r3, r2, r3
 800dd38:	ee13 2a10 	vmov	r2, s6
 800dd3c:	9313      	str	r3, [sp, #76]	; 0x4c
 800dd3e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dd40:	fb92 f3f3 	sdiv	r3, r2, r3
 800dd44:	9314      	str	r3, [sp, #80]	; 0x50
 800dd46:	9b01      	ldr	r3, [sp, #4]
 800dd48:	9a05      	ldr	r2, [sp, #20]
 800dd4a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800dd4e:	3b01      	subs	r3, #1
 800dd50:	9301      	str	r3, [sp, #4]
 800dd52:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800dd56:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800dd58:	eeb0 3a67 	vmov.f32	s6, s15
 800dd5c:	bf08      	it	eq
 800dd5e:	4613      	moveq	r3, r2
 800dd60:	eef0 2a47 	vmov.f32	s5, s14
 800dd64:	e72c      	b.n	800dbc0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 800dd66:	140f      	asrs	r7, r1, #16
 800dd68:	d453      	bmi.n	800de12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800dd6a:	f8de 5008 	ldr.w	r5, [lr, #8]
 800dd6e:	42bd      	cmp	r5, r7
 800dd70:	dd4f      	ble.n	800de12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800dd72:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800dd76:	d44c      	bmi.n	800de12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800dd78:	f8de 000c 	ldr.w	r0, [lr, #12]
 800dd7c:	4560      	cmp	r0, ip
 800dd7e:	dd48      	ble.n	800de12 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 800dd80:	9803      	ldr	r0, [sp, #12]
 800dd82:	b22d      	sxth	r5, r5
 800dd84:	fb0c 0505 	mla	r5, ip, r5, r0
 800dd88:	5de8      	ldrb	r0, [r5, r7]
 800dd8a:	9d04      	ldr	r5, [sp, #16]
 800dd8c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800dd90:	f06f 0501 	mvn.w	r5, #1
 800dd94:	fb05 fb08 	mul.w	fp, r5, r8
 800dd98:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800dd9c:	f834 500b 	ldrh.w	r5, [r4, fp]
 800dda0:	122f      	asrs	r7, r5, #8
 800dda2:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800dda6:	fb17 f706 	smulbb	r7, r7, r6
 800ddaa:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800ddae:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ddb2:	00ed      	lsls	r5, r5, #3
 800ddb4:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800ddb8:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800ddbc:	10c7      	asrs	r7, r0, #3
 800ddbe:	b2ed      	uxtb	r5, r5
 800ddc0:	00c0      	lsls	r0, r0, #3
 800ddc2:	fb19 f906 	smulbb	r9, r9, r6
 800ddc6:	fb15 f506 	smulbb	r5, r5, r6
 800ddca:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ddce:	b2c0      	uxtb	r0, r0
 800ddd0:	fa1f fc8c 	uxth.w	ip, ip
 800ddd4:	fb07 970a 	mla	r7, r7, sl, r9
 800ddd8:	fb00 500a 	mla	r0, r0, sl, r5
 800dddc:	b2bf      	uxth	r7, r7
 800ddde:	b280      	uxth	r0, r0
 800dde0:	f10c 0501 	add.w	r5, ip, #1
 800dde4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800dde8:	f107 0901 	add.w	r9, r7, #1
 800ddec:	1c45      	adds	r5, r0, #1
 800ddee:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800ddf2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800ddf6:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ddfa:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800ddfe:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800de02:	ea45 0c0c 	orr.w	ip, r5, ip
 800de06:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800de0a:	ea4c 0c09 	orr.w	ip, ip, r9
 800de0e:	f824 c00b 	strh.w	ip, [r4, fp]
 800de12:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800de14:	4401      	add	r1, r0
 800de16:	9814      	ldr	r0, [sp, #80]	; 0x50
 800de18:	f108 38ff 	add.w	r8, r8, #4294967295
 800de1c:	4402      	add	r2, r0
 800de1e:	e75c      	b.n	800dcda <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 800de20:	b007      	add	sp, #28
 800de22:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800de26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800de26:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800de2a:	b085      	sub	sp, #20
 800de2c:	4693      	mov	fp, r2
 800de2e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800de30:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800de32:	6870      	ldr	r0, [r6, #4]
 800de34:	9100      	str	r1, [sp, #0]
 800de36:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800de3a:	fb00 2404 	mla	r4, r0, r4, r2
 800de3e:	6832      	ldr	r2, [r6, #0]
 800de40:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800de44:	682a      	ldr	r2, [r5, #0]
 800de46:	9201      	str	r2, [sp, #4]
 800de48:	686a      	ldr	r2, [r5, #4]
 800de4a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 800de4e:	3204      	adds	r2, #4
 800de50:	9202      	str	r2, [sp, #8]
 800de52:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800de56:	9a00      	ldr	r2, [sp, #0]
 800de58:	2a00      	cmp	r2, #0
 800de5a:	dc03      	bgt.n	800de64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800de5c:	f1bb 0f00 	cmp.w	fp, #0
 800de60:	f340 80a0 	ble.w	800dfa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800de64:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800de66:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800de6a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800de6e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800de72:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800de74:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800de78:	2b00      	cmp	r3, #0
 800de7a:	dd0c      	ble.n	800de96 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800de7c:	1406      	asrs	r6, r0, #16
 800de7e:	d405      	bmi.n	800de8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800de80:	454e      	cmp	r6, r9
 800de82:	da03      	bge.n	800de8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800de84:	1416      	asrs	r6, r2, #16
 800de86:	d401      	bmi.n	800de8c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800de88:	4546      	cmp	r6, r8
 800de8a:	db05      	blt.n	800de98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800de8c:	4470      	add	r0, lr
 800de8e:	4462      	add	r2, ip
 800de90:	3b01      	subs	r3, #1
 800de92:	3402      	adds	r4, #2
 800de94:	e7f0      	b.n	800de78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800de96:	d00f      	beq.n	800deb8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800de98:	1e5e      	subs	r6, r3, #1
 800de9a:	fb0e 0706 	mla	r7, lr, r6, r0
 800de9e:	143f      	asrs	r7, r7, #16
 800dea0:	d541      	bpl.n	800df26 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 800dea2:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800dea6:	4698      	mov	r8, r3
 800dea8:	9603      	str	r6, [sp, #12]
 800deaa:	f1b8 0f00 	cmp.w	r8, #0
 800deae:	dc59      	bgt.n	800df64 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800deb0:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800deb4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800deb8:	9b00      	ldr	r3, [sp, #0]
 800deba:	2b00      	cmp	r3, #0
 800debc:	dd72      	ble.n	800dfa4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 800debe:	ee30 0a04 	vadd.f32	s0, s0, s8
 800dec2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800dec6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800deca:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800decc:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ded0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ded4:	eeb0 6a62 	vmov.f32	s12, s5
 800ded8:	ee61 7a27 	vmul.f32	s15, s2, s15
 800dedc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800dee0:	ee77 2a62 	vsub.f32	s5, s14, s5
 800dee4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800dee8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800deec:	eeb0 6a43 	vmov.f32	s12, s6
 800def0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800def4:	ee12 2a90 	vmov	r2, s5
 800def8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800defc:	fb92 fef3 	sdiv	lr, r2, r3
 800df00:	ee13 2a10 	vmov	r2, s6
 800df04:	fb92 fcf3 	sdiv	ip, r2, r3
 800df08:	9b00      	ldr	r3, [sp, #0]
 800df0a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800df0e:	3b01      	subs	r3, #1
 800df10:	9300      	str	r3, [sp, #0]
 800df12:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800df16:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800df18:	eeb0 3a67 	vmov.f32	s6, s15
 800df1c:	bf08      	it	eq
 800df1e:	465b      	moveq	r3, fp
 800df20:	eef0 2a47 	vmov.f32	s5, s14
 800df24:	e797      	b.n	800de56 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800df26:	454f      	cmp	r7, r9
 800df28:	dabb      	bge.n	800dea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800df2a:	fb0c 2606 	mla	r6, ip, r6, r2
 800df2e:	1436      	asrs	r6, r6, #16
 800df30:	d4b7      	bmi.n	800dea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800df32:	4546      	cmp	r6, r8
 800df34:	dab5      	bge.n	800dea2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800df36:	461e      	mov	r6, r3
 800df38:	46a0      	mov	r8, r4
 800df3a:	2e00      	cmp	r6, #0
 800df3c:	ddb8      	ble.n	800deb0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800df3e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800df42:	9901      	ldr	r1, [sp, #4]
 800df44:	1417      	asrs	r7, r2, #16
 800df46:	ea4f 4920 	mov.w	r9, r0, asr #16
 800df4a:	fb0a 1707 	mla	r7, sl, r7, r1
 800df4e:	9902      	ldr	r1, [sp, #8]
 800df50:	f817 7009 	ldrb.w	r7, [r7, r9]
 800df54:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800df58:	f828 7b02 	strh.w	r7, [r8], #2
 800df5c:	4470      	add	r0, lr
 800df5e:	4462      	add	r2, ip
 800df60:	3e01      	subs	r6, #1
 800df62:	e7ea      	b.n	800df3a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 800df64:	ea5f 4920 	movs.w	r9, r0, asr #16
 800df68:	d417      	bmi.n	800df9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800df6a:	68ae      	ldr	r6, [r5, #8]
 800df6c:	454e      	cmp	r6, r9
 800df6e:	dd14      	ble.n	800df9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800df70:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800df74:	d411      	bmi.n	800df9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800df76:	68ef      	ldr	r7, [r5, #12]
 800df78:	4557      	cmp	r7, sl
 800df7a:	dd0e      	ble.n	800df9a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 800df7c:	9f01      	ldr	r7, [sp, #4]
 800df7e:	b236      	sxth	r6, r6
 800df80:	fb0a 7606 	mla	r6, sl, r6, r7
 800df84:	9f02      	ldr	r7, [sp, #8]
 800df86:	f816 6009 	ldrb.w	r6, [r6, r9]
 800df8a:	f06f 0101 	mvn.w	r1, #1
 800df8e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800df92:	fb01 f608 	mul.w	r6, r1, r8
 800df96:	9903      	ldr	r1, [sp, #12]
 800df98:	538f      	strh	r7, [r1, r6]
 800df9a:	4470      	add	r0, lr
 800df9c:	4462      	add	r2, ip
 800df9e:	f108 38ff 	add.w	r8, r8, #4294967295
 800dfa2:	e782      	b.n	800deaa <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800dfa4:	b005      	add	sp, #20
 800dfa6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800dfaa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800dfaa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800dfae:	b087      	sub	sp, #28
 800dfb0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800dfb2:	9205      	str	r2, [sp, #20]
 800dfb4:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800dfb8:	9203      	str	r2, [sp, #12]
 800dfba:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800dfbe:	9102      	str	r1, [sp, #8]
 800dfc0:	6861      	ldr	r1, [r4, #4]
 800dfc2:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 800dfc6:	fb01 2000 	mla	r0, r1, r0, r2
 800dfca:	6822      	ldr	r2, [r4, #0]
 800dfcc:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 800dfd0:	9200      	str	r2, [sp, #0]
 800dfd2:	f8dc 2000 	ldr.w	r2, [ip]
 800dfd6:	9204      	str	r2, [sp, #16]
 800dfd8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800dfdc:	3204      	adds	r2, #4
 800dfde:	9201      	str	r2, [sp, #4]
 800dfe0:	9a03      	ldr	r2, [sp, #12]
 800dfe2:	43d5      	mvns	r5, r2
 800dfe4:	b2ed      	uxtb	r5, r5
 800dfe6:	9a02      	ldr	r2, [sp, #8]
 800dfe8:	2a00      	cmp	r2, #0
 800dfea:	dc03      	bgt.n	800dff4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 800dfec:	9a05      	ldr	r2, [sp, #20]
 800dfee:	2a00      	cmp	r2, #0
 800dff0:	f340 812c 	ble.w	800e24c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800dff4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800dff6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 800dffa:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 800dffe:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e002:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e004:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e008:	2b00      	cmp	r3, #0
 800e00a:	dd10      	ble.n	800e02e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800e00c:	140c      	asrs	r4, r1, #16
 800e00e:	d405      	bmi.n	800e01c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e010:	4574      	cmp	r4, lr
 800e012:	da03      	bge.n	800e01c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e014:	1414      	asrs	r4, r2, #16
 800e016:	d401      	bmi.n	800e01c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e018:	42bc      	cmp	r4, r7
 800e01a:	db09      	blt.n	800e030 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 800e01c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800e01e:	9800      	ldr	r0, [sp, #0]
 800e020:	4421      	add	r1, r4
 800e022:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800e024:	3002      	adds	r0, #2
 800e026:	4422      	add	r2, r4
 800e028:	3b01      	subs	r3, #1
 800e02a:	9000      	str	r0, [sp, #0]
 800e02c:	e7ec      	b.n	800e008 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 800e02e:	d071      	beq.n	800e114 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 800e030:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e032:	1e5c      	subs	r4, r3, #1
 800e034:	fb06 1604 	mla	r6, r6, r4, r1
 800e038:	1436      	asrs	r6, r6, #16
 800e03a:	d45d      	bmi.n	800e0f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e03c:	4576      	cmp	r6, lr
 800e03e:	da5b      	bge.n	800e0f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e040:	9e14      	ldr	r6, [sp, #80]	; 0x50
 800e042:	fb06 2404 	mla	r4, r6, r4, r2
 800e046:	1424      	asrs	r4, r4, #16
 800e048:	d456      	bmi.n	800e0f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e04a:	42bc      	cmp	r4, r7
 800e04c:	da54      	bge.n	800e0f8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800e04e:	f8dd 9000 	ldr.w	r9, [sp]
 800e052:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 800e056:	4698      	mov	r8, r3
 800e058:	f1b8 0f00 	cmp.w	r8, #0
 800e05c:	dd54      	ble.n	800e108 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 800e05e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800e062:	9804      	ldr	r0, [sp, #16]
 800e064:	1414      	asrs	r4, r2, #16
 800e066:	fb07 0404 	mla	r4, r7, r4, r0
 800e06a:	140e      	asrs	r6, r1, #16
 800e06c:	9801      	ldr	r0, [sp, #4]
 800e06e:	f814 e006 	ldrb.w	lr, [r4, r6]
 800e072:	f8b9 4000 	ldrh.w	r4, [r9]
 800e076:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800e07a:	eb00 0b0e 	add.w	fp, r0, lr
 800e07e:	1227      	asrs	r7, r4, #8
 800e080:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800e084:	f89b b001 	ldrb.w	fp, [fp, #1]
 800e088:	f810 e00e 	ldrb.w	lr, [r0, lr]
 800e08c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e08e:	fb16 f60a 	smulbb	r6, r6, sl
 800e092:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e096:	fb07 6705 	mla	r7, r7, r5, r6
 800e09a:	10e6      	asrs	r6, r4, #3
 800e09c:	00e4      	lsls	r4, r4, #3
 800e09e:	b2e4      	uxtb	r4, r4
 800e0a0:	fb1b fb0a 	smulbb	fp, fp, sl
 800e0a4:	fb14 f405 	smulbb	r4, r4, r5
 800e0a8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e0ac:	b2bf      	uxth	r7, r7
 800e0ae:	fb06 b605 	mla	r6, r6, r5, fp
 800e0b2:	fb0e 4e0a 	mla	lr, lr, sl, r4
 800e0b6:	b2b6      	uxth	r6, r6
 800e0b8:	fa1f fe8e 	uxth.w	lr, lr
 800e0bc:	1c7c      	adds	r4, r7, #1
 800e0be:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800e0c2:	f106 0b01 	add.w	fp, r6, #1
 800e0c6:	f10e 0401 	add.w	r4, lr, #1
 800e0ca:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 800e0ce:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800e0d2:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e0d6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800e0da:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800e0de:	4327      	orrs	r7, r4
 800e0e0:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800e0e4:	4401      	add	r1, r0
 800e0e6:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e0e8:	ea47 070b 	orr.w	r7, r7, fp
 800e0ec:	f829 7b02 	strh.w	r7, [r9], #2
 800e0f0:	4402      	add	r2, r0
 800e0f2:	f108 38ff 	add.w	r8, r8, #4294967295
 800e0f6:	e7af      	b.n	800e058 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 800e0f8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 800e0fc:	f04f 0e00 	mov.w	lr, #0
 800e100:	eb03 040e 	add.w	r4, r3, lr
 800e104:	2c00      	cmp	r4, #0
 800e106:	dc43      	bgt.n	800e190 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 800e108:	9a00      	ldr	r2, [sp, #0]
 800e10a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e10e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 800e112:	9300      	str	r3, [sp, #0]
 800e114:	9b02      	ldr	r3, [sp, #8]
 800e116:	2b00      	cmp	r3, #0
 800e118:	f340 8098 	ble.w	800e24c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 800e11c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e120:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800e124:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800e128:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e12a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e12e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e132:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e136:	eef0 6a62 	vmov.f32	s13, s5
 800e13a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e13e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e142:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e146:	edcd 6a11 	vstr	s13, [sp, #68]	; 0x44
 800e14a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e14e:	eef0 6a43 	vmov.f32	s13, s6
 800e152:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e156:	ee12 2a90 	vmov	r2, s5
 800e15a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e15e:	fb92 f3f3 	sdiv	r3, r2, r3
 800e162:	ee13 2a10 	vmov	r2, s6
 800e166:	9313      	str	r3, [sp, #76]	; 0x4c
 800e168:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e16a:	fb92 f3f3 	sdiv	r3, r2, r3
 800e16e:	9314      	str	r3, [sp, #80]	; 0x50
 800e170:	9b02      	ldr	r3, [sp, #8]
 800e172:	9a05      	ldr	r2, [sp, #20]
 800e174:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800e178:	3b01      	subs	r3, #1
 800e17a:	9302      	str	r3, [sp, #8]
 800e17c:	edcd 6a12 	vstr	s13, [sp, #72]	; 0x48
 800e180:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e182:	eeb0 3a67 	vmov.f32	s6, s15
 800e186:	bf08      	it	eq
 800e188:	4613      	moveq	r3, r2
 800e18a:	eef0 2a47 	vmov.f32	s5, s14
 800e18e:	e72a      	b.n	800dfe6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800e190:	140f      	asrs	r7, r1, #16
 800e192:	d454      	bmi.n	800e23e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e194:	f8dc 6008 	ldr.w	r6, [ip, #8]
 800e198:	42be      	cmp	r6, r7
 800e19a:	dd50      	ble.n	800e23e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e19c:	ea5f 4822 	movs.w	r8, r2, asr #16
 800e1a0:	d44d      	bmi.n	800e23e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e1a2:	f8dc 400c 	ldr.w	r4, [ip, #12]
 800e1a6:	4544      	cmp	r4, r8
 800e1a8:	dd49      	ble.n	800e23e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 800e1aa:	9c04      	ldr	r4, [sp, #16]
 800e1ac:	b236      	sxth	r6, r6
 800e1ae:	fb08 4606 	mla	r6, r8, r6, r4
 800e1b2:	f06f 0001 	mvn.w	r0, #1
 800e1b6:	f816 8007 	ldrb.w	r8, [r6, r7]
 800e1ba:	9c01      	ldr	r4, [sp, #4]
 800e1bc:	fb00 fa0e 	mul.w	sl, r0, lr
 800e1c0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 800e1c4:	9800      	ldr	r0, [sp, #0]
 800e1c6:	eb04 0b08 	add.w	fp, r4, r8
 800e1ca:	f830 400a 	ldrh.w	r4, [r0, sl]
 800e1ce:	f89b 6002 	ldrb.w	r6, [fp, #2]
 800e1d2:	9801      	ldr	r0, [sp, #4]
 800e1d4:	f89b b001 	ldrb.w	fp, [fp, #1]
 800e1d8:	f810 8008 	ldrb.w	r8, [r0, r8]
 800e1dc:	9800      	ldr	r0, [sp, #0]
 800e1de:	1227      	asrs	r7, r4, #8
 800e1e0:	fb16 f609 	smulbb	r6, r6, r9
 800e1e4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e1e8:	fb07 6705 	mla	r7, r7, r5, r6
 800e1ec:	10e6      	asrs	r6, r4, #3
 800e1ee:	00e4      	lsls	r4, r4, #3
 800e1f0:	b2e4      	uxtb	r4, r4
 800e1f2:	fb1b fb09 	smulbb	fp, fp, r9
 800e1f6:	fb14 f405 	smulbb	r4, r4, r5
 800e1fa:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e1fe:	b2bf      	uxth	r7, r7
 800e200:	fb06 b605 	mla	r6, r6, r5, fp
 800e204:	fb08 4809 	mla	r8, r8, r9, r4
 800e208:	b2b6      	uxth	r6, r6
 800e20a:	fa1f f888 	uxth.w	r8, r8
 800e20e:	1c7c      	adds	r4, r7, #1
 800e210:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 800e214:	f106 0b01 	add.w	fp, r6, #1
 800e218:	f108 0401 	add.w	r4, r8, #1
 800e21c:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 800e220:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 800e224:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e228:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 800e22c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 800e230:	4327      	orrs	r7, r4
 800e232:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 800e236:	ea47 070b 	orr.w	r7, r7, fp
 800e23a:	f820 700a 	strh.w	r7, [r0, sl]
 800e23e:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e240:	4401      	add	r1, r0
 800e242:	9814      	ldr	r0, [sp, #80]	; 0x50
 800e244:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e248:	4402      	add	r2, r0
 800e24a:	e759      	b.n	800e100 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 800e24c:	b007      	add	sp, #28
 800e24e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800e254 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e254:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e258:	b085      	sub	sp, #20
 800e25a:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e25e:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800e260:	9203      	str	r2, [sp, #12]
 800e262:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800e266:	6870      	ldr	r0, [r6, #4]
 800e268:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800e26a:	f8dd c044 	ldr.w	ip, [sp, #68]	; 0x44
 800e26e:	686f      	ldr	r7, [r5, #4]
 800e270:	9101      	str	r1, [sp, #4]
 800e272:	fb00 2404 	mla	r4, r0, r4, r2
 800e276:	6832      	ldr	r2, [r6, #0]
 800e278:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e27c:	682a      	ldr	r2, [r5, #0]
 800e27e:	9202      	str	r2, [sp, #8]
 800e280:	3704      	adds	r7, #4
 800e282:	9a01      	ldr	r2, [sp, #4]
 800e284:	2a00      	cmp	r2, #0
 800e286:	dc03      	bgt.n	800e290 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800e288:	9a03      	ldr	r2, [sp, #12]
 800e28a:	2a00      	cmp	r2, #0
 800e28c:	f340 80cc 	ble.w	800e428 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800e290:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e292:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800e296:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800e29a:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e29e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e2a0:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e2a4:	2b00      	cmp	r3, #0
 800e2a6:	dd0d      	ble.n	800e2c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800e2a8:	1406      	asrs	r6, r0, #16
 800e2aa:	d405      	bmi.n	800e2b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800e2ac:	454e      	cmp	r6, r9
 800e2ae:	da03      	bge.n	800e2b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800e2b0:	1416      	asrs	r6, r2, #16
 800e2b2:	d401      	bmi.n	800e2b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 800e2b4:	4546      	cmp	r6, r8
 800e2b6:	db06      	blt.n	800e2c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800e2b8:	9e12      	ldr	r6, [sp, #72]	; 0x48
 800e2ba:	4460      	add	r0, ip
 800e2bc:	4432      	add	r2, r6
 800e2be:	3b01      	subs	r3, #1
 800e2c0:	3402      	adds	r4, #2
 800e2c2:	e7ef      	b.n	800e2a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 800e2c4:	d00f      	beq.n	800e2e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800e2c6:	1e5e      	subs	r6, r3, #1
 800e2c8:	fb0c 0e06 	mla	lr, ip, r6, r0
 800e2cc:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 800e2d0:	d543      	bpl.n	800e35a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 800e2d2:	4698      	mov	r8, r3
 800e2d4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 800e2d8:	f1b8 0f00 	cmp.w	r8, #0
 800e2dc:	dc71      	bgt.n	800e3c2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 800e2de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e2e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e2e6:	9b01      	ldr	r3, [sp, #4]
 800e2e8:	2b00      	cmp	r3, #0
 800e2ea:	f340 809d 	ble.w	800e428 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 800e2ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e2f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e2f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e2fa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e2fc:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e300:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e304:	eeb0 6a62 	vmov.f32	s12, s5
 800e308:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e30c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e310:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e314:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800e318:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e31c:	eeb0 6a43 	vmov.f32	s12, s6
 800e320:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e324:	ee12 2a90 	vmov	r2, s5
 800e328:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e32c:	fb92 fcf3 	sdiv	ip, r2, r3
 800e330:	ee13 2a10 	vmov	r2, s6
 800e334:	fb92 f3f3 	sdiv	r3, r2, r3
 800e338:	9312      	str	r3, [sp, #72]	; 0x48
 800e33a:	9b01      	ldr	r3, [sp, #4]
 800e33c:	9a03      	ldr	r2, [sp, #12]
 800e33e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e342:	3b01      	subs	r3, #1
 800e344:	9301      	str	r3, [sp, #4]
 800e346:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800e34a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e34c:	eeb0 3a67 	vmov.f32	s6, s15
 800e350:	bf08      	it	eq
 800e352:	4613      	moveq	r3, r2
 800e354:	eef0 2a47 	vmov.f32	s5, s14
 800e358:	e793      	b.n	800e282 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 800e35a:	45ce      	cmp	lr, r9
 800e35c:	dab9      	bge.n	800e2d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800e35e:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e360:	fb01 2606 	mla	r6, r1, r6, r2
 800e364:	1436      	asrs	r6, r6, #16
 800e366:	d4b4      	bmi.n	800e2d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800e368:	4546      	cmp	r6, r8
 800e36a:	dab2      	bge.n	800e2d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800e36c:	4698      	mov	r8, r3
 800e36e:	46a2      	mov	sl, r4
 800e370:	f1b8 0f00 	cmp.w	r8, #0
 800e374:	ddb3      	ble.n	800e2de <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 800e376:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800e37a:	9902      	ldr	r1, [sp, #8]
 800e37c:	1416      	asrs	r6, r2, #16
 800e37e:	fb09 1606 	mla	r6, r9, r6, r1
 800e382:	ea4f 4e20 	mov.w	lr, r0, asr #16
 800e386:	492a      	ldr	r1, [pc, #168]	; (800e430 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 800e388:	f816 e00e 	ldrb.w	lr, [r6, lr]
 800e38c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800e390:	eb07 0b0e 	add.w	fp, r7, lr
 800e394:	4460      	add	r0, ip
 800e396:	f89b 6001 	ldrb.w	r6, [fp, #1]
 800e39a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 800e39e:	00f6      	lsls	r6, r6, #3
 800e3a0:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 800e3a4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800e3a8:	ea49 0606 	orr.w	r6, r9, r6
 800e3ac:	f817 900e 	ldrb.w	r9, [r7, lr]
 800e3b0:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e3b2:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 800e3b6:	f82a 6b02 	strh.w	r6, [sl], #2
 800e3ba:	440a      	add	r2, r1
 800e3bc:	f108 38ff 	add.w	r8, r8, #4294967295
 800e3c0:	e7d6      	b.n	800e370 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800e3c2:	ea5f 4920 	movs.w	r9, r0, asr #16
 800e3c6:	d429      	bmi.n	800e41c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800e3c8:	68ae      	ldr	r6, [r5, #8]
 800e3ca:	454e      	cmp	r6, r9
 800e3cc:	dd26      	ble.n	800e41c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800e3ce:	ea5f 4b22 	movs.w	fp, r2, asr #16
 800e3d2:	d423      	bmi.n	800e41c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800e3d4:	68e9      	ldr	r1, [r5, #12]
 800e3d6:	4559      	cmp	r1, fp
 800e3d8:	dd20      	ble.n	800e41c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 800e3da:	9902      	ldr	r1, [sp, #8]
 800e3dc:	fa0f fe86 	sxth.w	lr, r6
 800e3e0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 800e3e4:	f06f 0101 	mvn.w	r1, #1
 800e3e8:	f81e e009 	ldrb.w	lr, [lr, r9]
 800e3ec:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 800e3f0:	eb07 060e 	add.w	r6, r7, lr
 800e3f4:	fb01 f908 	mul.w	r9, r1, r8
 800e3f8:	f896 b002 	ldrb.w	fp, [r6, #2]
 800e3fc:	7876      	ldrb	r6, [r6, #1]
 800e3fe:	f2a1 71fe 	subw	r1, r1, #2046	; 0x7fe
 800e402:	00f6      	lsls	r6, r6, #3
 800e404:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 800e408:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800e40c:	ea4b 0606 	orr.w	r6, fp, r6
 800e410:	f817 b00e 	ldrb.w	fp, [r7, lr]
 800e414:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 800e418:	f82a 6009 	strh.w	r6, [sl, r9]
 800e41c:	9912      	ldr	r1, [sp, #72]	; 0x48
 800e41e:	4460      	add	r0, ip
 800e420:	440a      	add	r2, r1
 800e422:	f108 38ff 	add.w	r8, r8, #4294967295
 800e426:	e757      	b.n	800e2d8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800e428:	b005      	add	sp, #20
 800e42a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e42e:	bf00      	nop
 800e430:	fffff800 	.word	0xfffff800

0800e434 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e434:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e438:	b087      	sub	sp, #28
 800e43a:	468b      	mov	fp, r1
 800e43c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800e43e:	9204      	str	r2, [sp, #16]
 800e440:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800e444:	9205      	str	r2, [sp, #20]
 800e446:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800e44a:	6841      	ldr	r1, [r0, #4]
 800e44c:	f8dd c060 	ldr.w	ip, [sp, #96]	; 0x60
 800e450:	fb01 2404 	mla	r4, r1, r4, r2
 800e454:	6802      	ldr	r2, [r0, #0]
 800e456:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e45a:	f8dc 2000 	ldr.w	r2, [ip]
 800e45e:	9201      	str	r2, [sp, #4]
 800e460:	f8dc 2004 	ldr.w	r2, [ip, #4]
 800e464:	3204      	adds	r2, #4
 800e466:	9202      	str	r2, [sp, #8]
 800e468:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e46c:	f1bb 0f00 	cmp.w	fp, #0
 800e470:	dc03      	bgt.n	800e47a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 800e472:	9a04      	ldr	r2, [sp, #16]
 800e474:	2a00      	cmp	r2, #0
 800e476:	f340 8138 	ble.w	800e6ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800e47a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800e47c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 800e480:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 800e484:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800e488:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800e48a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e48e:	2b00      	cmp	r3, #0
 800e490:	dd0e      	ble.n	800e4b0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800e492:	1402      	asrs	r2, r0, #16
 800e494:	d405      	bmi.n	800e4a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800e496:	42ba      	cmp	r2, r7
 800e498:	da03      	bge.n	800e4a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800e49a:	140a      	asrs	r2, r1, #16
 800e49c:	d401      	bmi.n	800e4a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800e49e:	42b2      	cmp	r2, r6
 800e4a0:	db07      	blt.n	800e4b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800e4a2:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e4a4:	4410      	add	r0, r2
 800e4a6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e4a8:	3b01      	subs	r3, #1
 800e4aa:	4411      	add	r1, r2
 800e4ac:	3402      	adds	r4, #2
 800e4ae:	e7ee      	b.n	800e48e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 800e4b0:	d019      	beq.n	800e4e6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 800e4b2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800e4b4:	1e5a      	subs	r2, r3, #1
 800e4b6:	fb05 0502 	mla	r5, r5, r2, r0
 800e4ba:	142d      	asrs	r5, r5, #16
 800e4bc:	d409      	bmi.n	800e4d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800e4be:	42bd      	cmp	r5, r7
 800e4c0:	da07      	bge.n	800e4d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800e4c2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800e4c4:	fb05 1202 	mla	r2, r5, r2, r1
 800e4c8:	1412      	asrs	r2, r2, #16
 800e4ca:	d402      	bmi.n	800e4d2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800e4cc:	42b2      	cmp	r2, r6
 800e4ce:	f2c0 80ac 	blt.w	800e62a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 800e4d2:	f04f 0e00 	mov.w	lr, #0
 800e4d6:	eb03 020e 	add.w	r2, r3, lr
 800e4da:	2a00      	cmp	r2, #0
 800e4dc:	dc3e      	bgt.n	800e55c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 800e4de:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e4e2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e4e6:	f1bb 0f00 	cmp.w	fp, #0
 800e4ea:	f340 80fe 	ble.w	800e6ea <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 800e4ee:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e4f2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e4f6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e4fa:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e4fc:	f1bb 0b01 	subs.w	fp, fp, #1
 800e500:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e504:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e508:	eeb0 6a62 	vmov.f32	s12, s5
 800e50c:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e510:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e514:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e518:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800e51c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e520:	eeb0 6a43 	vmov.f32	s12, s6
 800e524:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e528:	ee12 2a90 	vmov	r2, s5
 800e52c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e530:	fb92 f3f3 	sdiv	r3, r2, r3
 800e534:	ee13 2a10 	vmov	r2, s6
 800e538:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e53c:	9313      	str	r3, [sp, #76]	; 0x4c
 800e53e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e540:	fb92 f3f3 	sdiv	r3, r2, r3
 800e544:	9a04      	ldr	r2, [sp, #16]
 800e546:	9314      	str	r3, [sp, #80]	; 0x50
 800e548:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800e54c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800e54e:	eeb0 3a67 	vmov.f32	s6, s15
 800e552:	bf08      	it	eq
 800e554:	4613      	moveq	r3, r2
 800e556:	eef0 2a47 	vmov.f32	s5, s14
 800e55a:	e787      	b.n	800e46c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800e55c:	1406      	asrs	r6, r0, #16
 800e55e:	d45d      	bmi.n	800e61c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800e560:	f8dc 5008 	ldr.w	r5, [ip, #8]
 800e564:	42b5      	cmp	r5, r6
 800e566:	dd59      	ble.n	800e61c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800e568:	140f      	asrs	r7, r1, #16
 800e56a:	d457      	bmi.n	800e61c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800e56c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 800e570:	42ba      	cmp	r2, r7
 800e572:	dd53      	ble.n	800e61c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800e574:	9a01      	ldr	r2, [sp, #4]
 800e576:	b22d      	sxth	r5, r5
 800e578:	fb07 2505 	mla	r5, r7, r5, r2
 800e57c:	5daa      	ldrb	r2, [r5, r6]
 800e57e:	9d02      	ldr	r5, [sp, #8]
 800e580:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800e584:	0e2e      	lsrs	r6, r5, #24
 800e586:	d049      	beq.n	800e61c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 800e588:	f06f 0201 	mvn.w	r2, #1
 800e58c:	fb02 f20e 	mul.w	r2, r2, lr
 800e590:	9203      	str	r2, [sp, #12]
 800e592:	f834 8002 	ldrh.w	r8, [r4, r2]
 800e596:	9a05      	ldr	r2, [sp, #20]
 800e598:	4356      	muls	r6, r2
 800e59a:	1c72      	adds	r2, r6, #1
 800e59c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800e5a0:	1212      	asrs	r2, r2, #8
 800e5a2:	fa1f f982 	uxth.w	r9, r2
 800e5a6:	ea4f 2728 	mov.w	r7, r8, asr #8
 800e5aa:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800e5ae:	43d2      	mvns	r2, r2
 800e5b0:	b2d2      	uxtb	r2, r2
 800e5b2:	fb16 f609 	smulbb	r6, r6, r9
 800e5b6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e5ba:	fb07 6702 	mla	r7, r7, r2, r6
 800e5be:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800e5c2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800e5c6:	b2ed      	uxtb	r5, r5
 800e5c8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800e5cc:	fa5f f888 	uxtb.w	r8, r8
 800e5d0:	fb15 f509 	smulbb	r5, r5, r9
 800e5d4:	fb08 5502 	mla	r5, r8, r2, r5
 800e5d8:	b2bf      	uxth	r7, r7
 800e5da:	fb1a fa09 	smulbb	sl, sl, r9
 800e5de:	b2ad      	uxth	r5, r5
 800e5e0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e5e4:	fb06 a602 	mla	r6, r6, r2, sl
 800e5e8:	1c7a      	adds	r2, r7, #1
 800e5ea:	f105 0a01 	add.w	sl, r5, #1
 800e5ee:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800e5f2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800e5f6:	b2b6      	uxth	r6, r6
 800e5f8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e5fc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e600:	ea4a 0707 	orr.w	r7, sl, r7
 800e604:	f106 0a01 	add.w	sl, r6, #1
 800e608:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800e60c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e610:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e614:	9a03      	ldr	r2, [sp, #12]
 800e616:	ea47 070a 	orr.w	r7, r7, sl
 800e61a:	52a7      	strh	r7, [r4, r2]
 800e61c:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e61e:	4410      	add	r0, r2
 800e620:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e622:	f10e 3eff 	add.w	lr, lr, #4294967295
 800e626:	4411      	add	r1, r2
 800e628:	e755      	b.n	800e4d6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800e62a:	f04f 0800 	mov.w	r8, #0
 800e62e:	eba3 0208 	sub.w	r2, r3, r8
 800e632:	2a00      	cmp	r2, #0
 800e634:	f77f af53 	ble.w	800e4de <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 800e638:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 800e63c:	9f01      	ldr	r7, [sp, #4]
 800e63e:	140a      	asrs	r2, r1, #16
 800e640:	1405      	asrs	r5, r0, #16
 800e642:	fb06 7202 	mla	r2, r6, r2, r7
 800e646:	5d52      	ldrb	r2, [r2, r5]
 800e648:	9d02      	ldr	r5, [sp, #8]
 800e64a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800e64e:	0e2e      	lsrs	r6, r5, #24
 800e650:	d044      	beq.n	800e6dc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 800e652:	9a05      	ldr	r2, [sp, #20]
 800e654:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 800e658:	4356      	muls	r6, r2
 800e65a:	1c72      	adds	r2, r6, #1
 800e65c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800e660:	1212      	asrs	r2, r2, #8
 800e662:	fa1f f982 	uxth.w	r9, r2
 800e666:	ea4f 272e 	mov.w	r7, lr, asr #8
 800e66a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800e66e:	43d2      	mvns	r2, r2
 800e670:	b2d2      	uxtb	r2, r2
 800e672:	fb16 f609 	smulbb	r6, r6, r9
 800e676:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e67a:	fb07 6702 	mla	r7, r7, r2, r6
 800e67e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800e682:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800e686:	b2ed      	uxtb	r5, r5
 800e688:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800e68c:	fa5f fe8e 	uxtb.w	lr, lr
 800e690:	fb15 f509 	smulbb	r5, r5, r9
 800e694:	fb0e 5502 	mla	r5, lr, r2, r5
 800e698:	b2bf      	uxth	r7, r7
 800e69a:	fb1a fa09 	smulbb	sl, sl, r9
 800e69e:	b2ad      	uxth	r5, r5
 800e6a0:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e6a4:	fb06 a602 	mla	r6, r6, r2, sl
 800e6a8:	1c7a      	adds	r2, r7, #1
 800e6aa:	f105 0a01 	add.w	sl, r5, #1
 800e6ae:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800e6b2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800e6b6:	b2b6      	uxth	r6, r6
 800e6b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e6bc:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e6c0:	ea4a 0707 	orr.w	r7, sl, r7
 800e6c4:	f106 0a01 	add.w	sl, r6, #1
 800e6c8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800e6cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e6d0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e6d4:	ea47 070a 	orr.w	r7, r7, sl
 800e6d8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800e6dc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800e6de:	4410      	add	r0, r2
 800e6e0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800e6e2:	f108 0801 	add.w	r8, r8, #1
 800e6e6:	4411      	add	r1, r2
 800e6e8:	e7a1      	b.n	800e62e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 800e6ea:	b007      	add	sp, #28
 800e6ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800e6f0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e6f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e6f4:	b085      	sub	sp, #20
 800e6f6:	468b      	mov	fp, r1
 800e6f8:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800e6fa:	9203      	str	r2, [sp, #12]
 800e6fc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800e700:	6841      	ldr	r1, [r0, #4]
 800e702:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 800e706:	fb01 2404 	mla	r4, r1, r4, r2
 800e70a:	6802      	ldr	r2, [r0, #0]
 800e70c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800e710:	f8de 2000 	ldr.w	r2, [lr]
 800e714:	9200      	str	r2, [sp, #0]
 800e716:	f8de 2004 	ldr.w	r2, [lr, #4]
 800e71a:	3204      	adds	r2, #4
 800e71c:	9201      	str	r2, [sp, #4]
 800e71e:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800e722:	f1bb 0f00 	cmp.w	fp, #0
 800e726:	dc03      	bgt.n	800e730 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 800e728:	9a03      	ldr	r2, [sp, #12]
 800e72a:	2a00      	cmp	r2, #0
 800e72c:	f340 8153 	ble.w	800e9d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800e730:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800e732:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800e736:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800e73a:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800e73e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800e740:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800e744:	2b00      	cmp	r3, #0
 800e746:	dd0e      	ble.n	800e766 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800e748:	1408      	asrs	r0, r1, #16
 800e74a:	d405      	bmi.n	800e758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800e74c:	42b8      	cmp	r0, r7
 800e74e:	da03      	bge.n	800e758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800e750:	1410      	asrs	r0, r2, #16
 800e752:	d401      	bmi.n	800e758 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800e754:	42b0      	cmp	r0, r6
 800e756:	db07      	blt.n	800e768 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 800e758:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e75a:	4401      	add	r1, r0
 800e75c:	9812      	ldr	r0, [sp, #72]	; 0x48
 800e75e:	3b01      	subs	r3, #1
 800e760:	4402      	add	r2, r0
 800e762:	3402      	adds	r4, #2
 800e764:	e7ee      	b.n	800e744 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 800e766:	d017      	beq.n	800e798 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800e768:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800e76a:	1e58      	subs	r0, r3, #1
 800e76c:	fb05 1500 	mla	r5, r5, r0, r1
 800e770:	142d      	asrs	r5, r5, #16
 800e772:	d409      	bmi.n	800e788 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800e774:	42bd      	cmp	r5, r7
 800e776:	da07      	bge.n	800e788 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800e778:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800e77a:	fb05 2000 	mla	r0, r5, r0, r2
 800e77e:	1400      	asrs	r0, r0, #16
 800e780:	d402      	bmi.n	800e788 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800e782:	42b0      	cmp	r0, r6
 800e784:	f2c0 80bc 	blt.w	800e900 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 800e788:	2600      	movs	r6, #0
 800e78a:	1998      	adds	r0, r3, r6
 800e78c:	2800      	cmp	r0, #0
 800e78e:	dc3e      	bgt.n	800e80e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 800e790:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800e794:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800e798:	f1bb 0f00 	cmp.w	fp, #0
 800e79c:	f340 811b 	ble.w	800e9d6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 800e7a0:	ee30 0a04 	vadd.f32	s0, s0, s8
 800e7a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800e7a8:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800e7ac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e7ae:	f1bb 0b01 	subs.w	fp, fp, #1
 800e7b2:	ee31 1a05 	vadd.f32	s2, s2, s10
 800e7b6:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800e7ba:	eeb0 6a62 	vmov.f32	s12, s5
 800e7be:	ee61 7a27 	vmul.f32	s15, s2, s15
 800e7c2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e7c6:	ee77 2a62 	vsub.f32	s5, s14, s5
 800e7ca:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800e7ce:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800e7d2:	eeb0 6a43 	vmov.f32	s12, s6
 800e7d6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800e7da:	ee12 2a90 	vmov	r2, s5
 800e7de:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800e7e2:	fb92 f3f3 	sdiv	r3, r2, r3
 800e7e6:	ee13 2a10 	vmov	r2, s6
 800e7ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800e7ee:	9311      	str	r3, [sp, #68]	; 0x44
 800e7f0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e7f2:	fb92 f3f3 	sdiv	r3, r2, r3
 800e7f6:	9a03      	ldr	r2, [sp, #12]
 800e7f8:	9312      	str	r3, [sp, #72]	; 0x48
 800e7fa:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800e7fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800e800:	eeb0 3a67 	vmov.f32	s6, s15
 800e804:	bf08      	it	eq
 800e806:	4613      	moveq	r3, r2
 800e808:	eef0 2a47 	vmov.f32	s5, s14
 800e80c:	e789      	b.n	800e722 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 800e80e:	140f      	asrs	r7, r1, #16
 800e810:	d45e      	bmi.n	800e8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800e812:	f8de 5008 	ldr.w	r5, [lr, #8]
 800e816:	42bd      	cmp	r5, r7
 800e818:	dd5a      	ble.n	800e8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800e81a:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800e81e:	d457      	bmi.n	800e8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800e820:	f8de 000c 	ldr.w	r0, [lr, #12]
 800e824:	4560      	cmp	r0, ip
 800e826:	dd53      	ble.n	800e8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800e828:	9800      	ldr	r0, [sp, #0]
 800e82a:	b22d      	sxth	r5, r5
 800e82c:	fb0c 0505 	mla	r5, ip, r5, r0
 800e830:	5de8      	ldrb	r0, [r5, r7]
 800e832:	9d01      	ldr	r5, [sp, #4]
 800e834:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800e838:	0e07      	lsrs	r7, r0, #24
 800e83a:	2fff      	cmp	r7, #255	; 0xff
 800e83c:	d04e      	beq.n	800e8dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 800e83e:	b2fd      	uxtb	r5, r7
 800e840:	2f00      	cmp	r7, #0
 800e842:	d045      	beq.n	800e8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800e844:	f06f 0701 	mvn.w	r7, #1
 800e848:	4377      	muls	r7, r6
 800e84a:	fa1f f985 	uxth.w	r9, r5
 800e84e:	f834 8007 	ldrh.w	r8, [r4, r7]
 800e852:	9702      	str	r7, [sp, #8]
 800e854:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800e858:	f3c0 4707 	ubfx	r7, r0, #16, #8
 800e85c:	43ed      	mvns	r5, r5
 800e85e:	b2ed      	uxtb	r5, r5
 800e860:	fb17 f709 	smulbb	r7, r7, r9
 800e864:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800e868:	fb0c 7c05 	mla	ip, ip, r5, r7
 800e86c:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800e870:	ea4f 07e8 	mov.w	r7, r8, asr #3
 800e874:	b2c0      	uxtb	r0, r0
 800e876:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800e87a:	fa5f f888 	uxtb.w	r8, r8
 800e87e:	fb10 f009 	smulbb	r0, r0, r9
 800e882:	fb08 0005 	mla	r0, r8, r5, r0
 800e886:	b280      	uxth	r0, r0
 800e888:	fa1f fc8c 	uxth.w	ip, ip
 800e88c:	fb1a fa09 	smulbb	sl, sl, r9
 800e890:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800e894:	fb07 a705 	mla	r7, r7, r5, sl
 800e898:	f100 0a01 	add.w	sl, r0, #1
 800e89c:	f10c 0501 	add.w	r5, ip, #1
 800e8a0:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800e8a4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800e8a8:	b2bf      	uxth	r7, r7
 800e8aa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e8ae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800e8b2:	ea4a 0c0c 	orr.w	ip, sl, ip
 800e8b6:	f107 0a01 	add.w	sl, r7, #1
 800e8ba:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800e8be:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e8c2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e8c6:	9802      	ldr	r0, [sp, #8]
 800e8c8:	ea4c 0c0a 	orr.w	ip, ip, sl
 800e8cc:	f824 c000 	strh.w	ip, [r4, r0]
 800e8d0:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e8d2:	4401      	add	r1, r0
 800e8d4:	9812      	ldr	r0, [sp, #72]	; 0x48
 800e8d6:	3e01      	subs	r6, #1
 800e8d8:	4402      	add	r2, r0
 800e8da:	e756      	b.n	800e78a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 800e8dc:	f06f 0501 	mvn.w	r5, #1
 800e8e0:	fb05 f706 	mul.w	r7, r5, r6
 800e8e4:	f2a5 75fe 	subw	r5, r5, #2046	; 0x7fe
 800e8e8:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 800e8ec:	0945      	lsrs	r5, r0, #5
 800e8ee:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800e8f2:	ea4c 0505 	orr.w	r5, ip, r5
 800e8f6:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800e8fa:	4305      	orrs	r5, r0
 800e8fc:	53e5      	strh	r5, [r4, r7]
 800e8fe:	e7e7      	b.n	800e8d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800e900:	f04f 0800 	mov.w	r8, #0
 800e904:	eba3 0008 	sub.w	r0, r3, r8
 800e908:	2800      	cmp	r0, #0
 800e90a:	f77f af41 	ble.w	800e790 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800e90e:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800e912:	9f00      	ldr	r7, [sp, #0]
 800e914:	1410      	asrs	r0, r2, #16
 800e916:	140d      	asrs	r5, r1, #16
 800e918:	fb06 7000 	mla	r0, r6, r0, r7
 800e91c:	5d40      	ldrb	r0, [r0, r5]
 800e91e:	9d01      	ldr	r5, [sp, #4]
 800e920:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 800e924:	0e06      	lsrs	r6, r0, #24
 800e926:	2eff      	cmp	r6, #255	; 0xff
 800e928:	d048      	beq.n	800e9bc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 800e92a:	b2f5      	uxtb	r5, r6
 800e92c:	2e00      	cmp	r6, #0
 800e92e:	d03e      	beq.n	800e9ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 800e930:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 800e934:	fa1f f985 	uxth.w	r9, r5
 800e938:	ea4f 272c 	mov.w	r7, ip, asr #8
 800e93c:	f3c0 4607 	ubfx	r6, r0, #16, #8
 800e940:	43ed      	mvns	r5, r5
 800e942:	b2ed      	uxtb	r5, r5
 800e944:	fb16 f609 	smulbb	r6, r6, r9
 800e948:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800e94c:	fb07 6705 	mla	r7, r7, r5, r6
 800e950:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 800e954:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800e958:	b2c0      	uxtb	r0, r0
 800e95a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800e95e:	fa5f fc8c 	uxtb.w	ip, ip
 800e962:	fb10 f009 	smulbb	r0, r0, r9
 800e966:	fb0c 0005 	mla	r0, ip, r5, r0
 800e96a:	b2bf      	uxth	r7, r7
 800e96c:	fb1a fa09 	smulbb	sl, sl, r9
 800e970:	b280      	uxth	r0, r0
 800e972:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800e976:	fb06 a605 	mla	r6, r6, r5, sl
 800e97a:	1c7d      	adds	r5, r7, #1
 800e97c:	f100 0a01 	add.w	sl, r0, #1
 800e980:	eb05 2717 	add.w	r7, r5, r7, lsr #8
 800e984:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 800e988:	b2b6      	uxth	r6, r6
 800e98a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800e98e:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800e992:	ea4a 0707 	orr.w	r7, sl, r7
 800e996:	f106 0a01 	add.w	sl, r6, #1
 800e99a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800e99e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800e9a2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800e9a6:	ea47 070a 	orr.w	r7, r7, sl
 800e9aa:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 800e9ae:	9811      	ldr	r0, [sp, #68]	; 0x44
 800e9b0:	4401      	add	r1, r0
 800e9b2:	9812      	ldr	r0, [sp, #72]	; 0x48
 800e9b4:	f108 0801 	add.w	r8, r8, #1
 800e9b8:	4402      	add	r2, r0
 800e9ba:	e7a3      	b.n	800e904 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 800e9bc:	4d07      	ldr	r5, [pc, #28]	; (800e9dc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 800e9be:	ea05 2610 	and.w	r6, r5, r0, lsr #8
 800e9c2:	0945      	lsrs	r5, r0, #5
 800e9c4:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800e9c8:	4335      	orrs	r5, r6
 800e9ca:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 800e9ce:	4305      	orrs	r5, r0
 800e9d0:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 800e9d4:	e7eb      	b.n	800e9ae <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 800e9d6:	b005      	add	sp, #20
 800e9d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800e9dc:	fffff800 	.word	0xfffff800

0800e9e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800e9e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800e9e4:	b087      	sub	sp, #28
 800e9e6:	468b      	mov	fp, r1
 800e9e8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 800e9ea:	9204      	str	r2, [sp, #16]
 800e9ec:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800e9f0:	9205      	str	r2, [sp, #20]
 800e9f2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	; 0x58
 800e9f6:	6861      	ldr	r1, [r4, #4]
 800e9f8:	f8dd e060 	ldr.w	lr, [sp, #96]	; 0x60
 800e9fc:	fb01 2000 	mla	r0, r1, r0, r2
 800ea00:	6822      	ldr	r2, [r4, #0]
 800ea02:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800ea06:	f8de 2000 	ldr.w	r2, [lr]
 800ea0a:	9201      	str	r2, [sp, #4]
 800ea0c:	f8de 2004 	ldr.w	r2, [lr, #4]
 800ea10:	9202      	str	r2, [sp, #8]
 800ea12:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ea16:	f1bb 0f00 	cmp.w	fp, #0
 800ea1a:	dc03      	bgt.n	800ea24 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 800ea1c:	9a04      	ldr	r2, [sp, #16]
 800ea1e:	2a00      	cmp	r2, #0
 800ea20:	f340 8142 	ble.w	800eca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800ea24:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800ea26:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800ea2a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 800ea2e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ea32:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800ea34:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ea38:	2b00      	cmp	r3, #0
 800ea3a:	dd0e      	ble.n	800ea5a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 800ea3c:	140c      	asrs	r4, r1, #16
 800ea3e:	d405      	bmi.n	800ea4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800ea40:	42bc      	cmp	r4, r7
 800ea42:	da03      	bge.n	800ea4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800ea44:	1414      	asrs	r4, r2, #16
 800ea46:	d401      	bmi.n	800ea4c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800ea48:	42b4      	cmp	r4, r6
 800ea4a:	db07      	blt.n	800ea5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800ea4c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800ea4e:	4421      	add	r1, r4
 800ea50:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800ea52:	3b01      	subs	r3, #1
 800ea54:	4422      	add	r2, r4
 800ea56:	3002      	adds	r0, #2
 800ea58:	e7ee      	b.n	800ea38 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 800ea5a:	d019      	beq.n	800ea90 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 800ea5c:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800ea5e:	1e5c      	subs	r4, r3, #1
 800ea60:	fb05 1504 	mla	r5, r5, r4, r1
 800ea64:	142d      	asrs	r5, r5, #16
 800ea66:	d409      	bmi.n	800ea7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800ea68:	42bd      	cmp	r5, r7
 800ea6a:	da07      	bge.n	800ea7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800ea6c:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800ea6e:	fb05 2404 	mla	r4, r5, r4, r2
 800ea72:	1424      	asrs	r4, r4, #16
 800ea74:	d402      	bmi.n	800ea7c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800ea76:	42b4      	cmp	r4, r6
 800ea78:	f2c0 80b1 	blt.w	800ebde <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 800ea7c:	f04f 0800 	mov.w	r8, #0
 800ea80:	eb03 0408 	add.w	r4, r3, r8
 800ea84:	2c00      	cmp	r4, #0
 800ea86:	dc3e      	bgt.n	800eb06 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 800ea88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ea8c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800ea90:	f1bb 0f00 	cmp.w	fp, #0
 800ea94:	f340 8108 	ble.w	800eca8 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800ea98:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ea9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800eaa0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800eaa4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eaa6:	f1bb 0b01 	subs.w	fp, fp, #1
 800eaaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 800eaae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800eab2:	eeb0 6a62 	vmov.f32	s12, s5
 800eab6:	ee61 7a27 	vmul.f32	s15, s2, s15
 800eaba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800eabe:	ee77 2a62 	vsub.f32	s5, s14, s5
 800eac2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800eac6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800eaca:	eeb0 6a43 	vmov.f32	s12, s6
 800eace:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ead2:	ee12 2a90 	vmov	r2, s5
 800ead6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800eada:	fb92 f3f3 	sdiv	r3, r2, r3
 800eade:	ee13 2a10 	vmov	r2, s6
 800eae2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800eae6:	9313      	str	r3, [sp, #76]	; 0x4c
 800eae8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eaea:	fb92 f3f3 	sdiv	r3, r2, r3
 800eaee:	9a04      	ldr	r2, [sp, #16]
 800eaf0:	9314      	str	r3, [sp, #80]	; 0x50
 800eaf2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800eaf6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800eaf8:	eeb0 3a67 	vmov.f32	s6, s15
 800eafc:	bf08      	it	eq
 800eafe:	4613      	moveq	r3, r2
 800eb00:	eef0 2a47 	vmov.f32	s5, s14
 800eb04:	e787      	b.n	800ea16 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 800eb06:	140e      	asrs	r6, r1, #16
 800eb08:	d462      	bmi.n	800ebd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800eb0a:	f8de 5008 	ldr.w	r5, [lr, #8]
 800eb0e:	42b5      	cmp	r5, r6
 800eb10:	dd5e      	ble.n	800ebd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800eb12:	1417      	asrs	r7, r2, #16
 800eb14:	d45c      	bmi.n	800ebd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800eb16:	f8de 400c 	ldr.w	r4, [lr, #12]
 800eb1a:	42bc      	cmp	r4, r7
 800eb1c:	dd58      	ble.n	800ebd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800eb1e:	b22d      	sxth	r5, r5
 800eb20:	fb07 6505 	mla	r5, r7, r5, r6
 800eb24:	9c02      	ldr	r4, [sp, #8]
 800eb26:	5d66      	ldrb	r6, [r4, r5]
 800eb28:	2e00      	cmp	r6, #0
 800eb2a:	d051      	beq.n	800ebd0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 800eb2c:	9c01      	ldr	r4, [sp, #4]
 800eb2e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 800eb32:	f06f 0401 	mvn.w	r4, #1
 800eb36:	fb04 f408 	mul.w	r4, r4, r8
 800eb3a:	9403      	str	r4, [sp, #12]
 800eb3c:	5b05      	ldrh	r5, [r0, r4]
 800eb3e:	9c05      	ldr	r4, [sp, #20]
 800eb40:	4366      	muls	r6, r4
 800eb42:	1c74      	adds	r4, r6, #1
 800eb44:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800eb48:	1224      	asrs	r4, r4, #8
 800eb4a:	b2a7      	uxth	r7, r4
 800eb4c:	122e      	asrs	r6, r5, #8
 800eb4e:	43e4      	mvns	r4, r4
 800eb50:	b2e4      	uxtb	r4, r4
 800eb52:	ea4f 2c29 	mov.w	ip, r9, asr #8
 800eb56:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800eb5a:	fb16 f604 	smulbb	r6, r6, r4
 800eb5e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800eb62:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800eb66:	00ed      	lsls	r5, r5, #3
 800eb68:	fb0c 6c07 	mla	ip, ip, r7, r6
 800eb6c:	b2ed      	uxtb	r5, r5
 800eb6e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 800eb72:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 800eb76:	fb15 f504 	smulbb	r5, r5, r4
 800eb7a:	fa5f f989 	uxtb.w	r9, r9
 800eb7e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800eb82:	fb09 5507 	mla	r5, r9, r7, r5
 800eb86:	fb1a fa04 	smulbb	sl, sl, r4
 800eb8a:	fa1f fc8c 	uxth.w	ip, ip
 800eb8e:	b2ad      	uxth	r5, r5
 800eb90:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800eb94:	fb06 a607 	mla	r6, r6, r7, sl
 800eb98:	f10c 0401 	add.w	r4, ip, #1
 800eb9c:	f105 0a01 	add.w	sl, r5, #1
 800eba0:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800eba4:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800eba8:	b2b6      	uxth	r6, r6
 800ebaa:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ebae:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ebb2:	ea4a 0c0c 	orr.w	ip, sl, ip
 800ebb6:	f106 0a01 	add.w	sl, r6, #1
 800ebba:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ebbe:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ebc2:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ebc6:	9c03      	ldr	r4, [sp, #12]
 800ebc8:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ebcc:	f820 c004 	strh.w	ip, [r0, r4]
 800ebd0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800ebd2:	4421      	add	r1, r4
 800ebd4:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800ebd6:	f108 38ff 	add.w	r8, r8, #4294967295
 800ebda:	4422      	add	r2, r4
 800ebdc:	e750      	b.n	800ea80 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800ebde:	f04f 0900 	mov.w	r9, #0
 800ebe2:	eba3 0409 	sub.w	r4, r3, r9
 800ebe6:	2c00      	cmp	r4, #0
 800ebe8:	f77f af4e 	ble.w	800ea88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 800ebec:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 800ebf0:	140d      	asrs	r5, r1, #16
 800ebf2:	1414      	asrs	r4, r2, #16
 800ebf4:	fb06 5404 	mla	r4, r6, r4, r5
 800ebf8:	9d02      	ldr	r5, [sp, #8]
 800ebfa:	5d2e      	ldrb	r6, [r5, r4]
 800ebfc:	2e00      	cmp	r6, #0
 800ebfe:	d04c      	beq.n	800ec9a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 800ec00:	9d01      	ldr	r5, [sp, #4]
 800ec02:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 800ec06:	9c05      	ldr	r4, [sp, #20]
 800ec08:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 800ec0c:	4366      	muls	r6, r4
 800ec0e:	1c74      	adds	r4, r6, #1
 800ec10:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 800ec14:	1224      	asrs	r4, r4, #8
 800ec16:	b2a7      	uxth	r7, r4
 800ec18:	122e      	asrs	r6, r5, #8
 800ec1a:	43e4      	mvns	r4, r4
 800ec1c:	b2e4      	uxtb	r4, r4
 800ec1e:	ea4f 2c28 	mov.w	ip, r8, asr #8
 800ec22:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800ec26:	fb16 f604 	smulbb	r6, r6, r4
 800ec2a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800ec2e:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800ec32:	00ed      	lsls	r5, r5, #3
 800ec34:	fb0c 6c07 	mla	ip, ip, r7, r6
 800ec38:	b2ed      	uxtb	r5, r5
 800ec3a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 800ec3e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800ec42:	fb15 f504 	smulbb	r5, r5, r4
 800ec46:	fa5f f888 	uxtb.w	r8, r8
 800ec4a:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800ec4e:	fb08 5507 	mla	r5, r8, r7, r5
 800ec52:	fb1a fa04 	smulbb	sl, sl, r4
 800ec56:	fa1f fc8c 	uxth.w	ip, ip
 800ec5a:	b2ad      	uxth	r5, r5
 800ec5c:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ec60:	fb06 a607 	mla	r6, r6, r7, sl
 800ec64:	f10c 0401 	add.w	r4, ip, #1
 800ec68:	f105 0a01 	add.w	sl, r5, #1
 800ec6c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800ec70:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ec74:	b2b6      	uxth	r6, r6
 800ec76:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ec7a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ec7e:	ea4a 0c0c 	orr.w	ip, sl, ip
 800ec82:	f106 0a01 	add.w	sl, r6, #1
 800ec86:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ec8a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ec8e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ec92:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ec96:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 800ec9a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800ec9c:	4421      	add	r1, r4
 800ec9e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800eca0:	f109 0901 	add.w	r9, r9, #1
 800eca4:	4422      	add	r2, r4
 800eca6:	e79c      	b.n	800ebe2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 800eca8:	b007      	add	sp, #28
 800ecaa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ecae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ecae:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ecb2:	b085      	sub	sp, #20
 800ecb4:	468b      	mov	fp, r1
 800ecb6:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800ecb8:	9203      	str	r2, [sp, #12]
 800ecba:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 800ecbe:	6861      	ldr	r1, [r4, #4]
 800ecc0:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 800ecc4:	fb01 2000 	mla	r0, r1, r0, r2
 800ecc8:	6822      	ldr	r2, [r4, #0]
 800ecca:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800ecce:	f8d8 2000 	ldr.w	r2, [r8]
 800ecd2:	9200      	str	r2, [sp, #0]
 800ecd4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 800ecd8:	9201      	str	r2, [sp, #4]
 800ecda:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800ecde:	f1bb 0f00 	cmp.w	fp, #0
 800ece2:	dc03      	bgt.n	800ecec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800ece4:	9a03      	ldr	r2, [sp, #12]
 800ece6:	2a00      	cmp	r2, #0
 800ece8:	f340 8146 	ble.w	800ef78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 800ecec:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800ecee:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 800ecf2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 800ecf6:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800ecfa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800ecfc:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800ed00:	2b00      	cmp	r3, #0
 800ed02:	dd0e      	ble.n	800ed22 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 800ed04:	140c      	asrs	r4, r1, #16
 800ed06:	d405      	bmi.n	800ed14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ed08:	42bc      	cmp	r4, r7
 800ed0a:	da03      	bge.n	800ed14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ed0c:	1414      	asrs	r4, r2, #16
 800ed0e:	d401      	bmi.n	800ed14 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800ed10:	42b4      	cmp	r4, r6
 800ed12:	db07      	blt.n	800ed24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800ed14:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800ed16:	4421      	add	r1, r4
 800ed18:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800ed1a:	3b01      	subs	r3, #1
 800ed1c:	4422      	add	r2, r4
 800ed1e:	3002      	adds	r0, #2
 800ed20:	e7ee      	b.n	800ed00 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800ed22:	d017      	beq.n	800ed54 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 800ed24:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800ed26:	1e5c      	subs	r4, r3, #1
 800ed28:	fb05 1504 	mla	r5, r5, r4, r1
 800ed2c:	142d      	asrs	r5, r5, #16
 800ed2e:	d409      	bmi.n	800ed44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800ed30:	42bd      	cmp	r5, r7
 800ed32:	da07      	bge.n	800ed44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800ed34:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800ed36:	fb05 2404 	mla	r4, r5, r4, r2
 800ed3a:	1424      	asrs	r4, r4, #16
 800ed3c:	d402      	bmi.n	800ed44 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800ed3e:	42b4      	cmp	r4, r6
 800ed40:	f2c0 80b3 	blt.w	800eeaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 800ed44:	2600      	movs	r6, #0
 800ed46:	199c      	adds	r4, r3, r6
 800ed48:	2c00      	cmp	r4, #0
 800ed4a:	dc3e      	bgt.n	800edca <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 800ed4c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800ed50:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800ed54:	f1bb 0f00 	cmp.w	fp, #0
 800ed58:	f340 810e 	ble.w	800ef78 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 800ed5c:	ee30 0a04 	vadd.f32	s0, s0, s8
 800ed60:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800ed64:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800ed68:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800ed6a:	f1bb 0b01 	subs.w	fp, fp, #1
 800ed6e:	ee31 1a05 	vadd.f32	s2, s2, s10
 800ed72:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800ed76:	eeb0 6a62 	vmov.f32	s12, s5
 800ed7a:	ee61 7a27 	vmul.f32	s15, s2, s15
 800ed7e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800ed82:	ee77 2a62 	vsub.f32	s5, s14, s5
 800ed86:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800ed8a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800ed8e:	eeb0 6a43 	vmov.f32	s12, s6
 800ed92:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800ed96:	ee12 2a90 	vmov	r2, s5
 800ed9a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800ed9e:	fb92 f3f3 	sdiv	r3, r2, r3
 800eda2:	ee13 2a10 	vmov	r2, s6
 800eda6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800edaa:	9311      	str	r3, [sp, #68]	; 0x44
 800edac:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800edae:	fb92 f3f3 	sdiv	r3, r2, r3
 800edb2:	9a03      	ldr	r2, [sp, #12]
 800edb4:	9312      	str	r3, [sp, #72]	; 0x48
 800edb6:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800edba:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800edbc:	eeb0 3a67 	vmov.f32	s6, s15
 800edc0:	bf08      	it	eq
 800edc2:	4613      	moveq	r3, r2
 800edc4:	eef0 2a47 	vmov.f32	s5, s14
 800edc8:	e789      	b.n	800ecde <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800edca:	140f      	asrs	r7, r1, #16
 800edcc:	d45f      	bmi.n	800ee8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800edce:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800edd2:	42bd      	cmp	r5, r7
 800edd4:	dd5b      	ble.n	800ee8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800edd6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800edda:	d458      	bmi.n	800ee8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800eddc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 800ede0:	4564      	cmp	r4, ip
 800ede2:	dd54      	ble.n	800ee8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800ede4:	b22d      	sxth	r5, r5
 800ede6:	fb0c 7505 	mla	r5, ip, r5, r7
 800edea:	9c01      	ldr	r4, [sp, #4]
 800edec:	5d64      	ldrb	r4, [r4, r5]
 800edee:	2cff      	cmp	r4, #255	; 0xff
 800edf0:	d053      	beq.n	800ee9a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ec>
 800edf2:	2c00      	cmp	r4, #0
 800edf4:	d04b      	beq.n	800ee8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800edf6:	9f00      	ldr	r7, [sp, #0]
 800edf8:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 800edfc:	f06f 0501 	mvn.w	r5, #1
 800ee00:	4375      	muls	r5, r6
 800ee02:	9502      	str	r5, [sp, #8]
 800ee04:	5b45      	ldrh	r5, [r0, r5]
 800ee06:	fa1f fc84 	uxth.w	ip, r4
 800ee0a:	122f      	asrs	r7, r5, #8
 800ee0c:	43e4      	mvns	r4, r4
 800ee0e:	b2e4      	uxtb	r4, r4
 800ee10:	ea4f 2e29 	mov.w	lr, r9, asr #8
 800ee14:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800ee18:	fb17 f704 	smulbb	r7, r7, r4
 800ee1c:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800ee20:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800ee24:	00ed      	lsls	r5, r5, #3
 800ee26:	fb0e 7e0c 	mla	lr, lr, ip, r7
 800ee2a:	b2ed      	uxtb	r5, r5
 800ee2c:	ea4f 07e9 	mov.w	r7, r9, asr #3
 800ee30:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 800ee34:	fb15 f504 	smulbb	r5, r5, r4
 800ee38:	fa5f f989 	uxtb.w	r9, r9
 800ee3c:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800ee40:	fb09 550c 	mla	r5, r9, ip, r5
 800ee44:	fb1a fa04 	smulbb	sl, sl, r4
 800ee48:	fa1f fe8e 	uxth.w	lr, lr
 800ee4c:	b2ad      	uxth	r5, r5
 800ee4e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800ee52:	fb07 a70c 	mla	r7, r7, ip, sl
 800ee56:	f10e 0401 	add.w	r4, lr, #1
 800ee5a:	f105 0a01 	add.w	sl, r5, #1
 800ee5e:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 800ee62:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ee66:	b2bf      	uxth	r7, r7
 800ee68:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ee6c:	f40e 4e78 	and.w	lr, lr, #63488	; 0xf800
 800ee70:	ea4a 0e0e 	orr.w	lr, sl, lr
 800ee74:	f107 0a01 	add.w	sl, r7, #1
 800ee78:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800ee7c:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ee80:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ee84:	9c02      	ldr	r4, [sp, #8]
 800ee86:	ea4e 0e0a 	orr.w	lr, lr, sl
 800ee8a:	f820 e004 	strh.w	lr, [r0, r4]
 800ee8e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800ee90:	4421      	add	r1, r4
 800ee92:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800ee94:	3e01      	subs	r6, #1
 800ee96:	4422      	add	r2, r4
 800ee98:	e755      	b.n	800ed46 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800ee9a:	9c00      	ldr	r4, [sp, #0]
 800ee9c:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 800eea0:	f06f 0401 	mvn.w	r4, #1
 800eea4:	4374      	muls	r4, r6
 800eea6:	5305      	strh	r5, [r0, r4]
 800eea8:	e7f1      	b.n	800ee8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 800eeaa:	f04f 0900 	mov.w	r9, #0
 800eeae:	eba3 0409 	sub.w	r4, r3, r9
 800eeb2:	2c00      	cmp	r4, #0
 800eeb4:	f77f af4a 	ble.w	800ed4c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800eeb8:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 800eebc:	1414      	asrs	r4, r2, #16
 800eebe:	140d      	asrs	r5, r1, #16
 800eec0:	fb06 5504 	mla	r5, r6, r4, r5
 800eec4:	9c01      	ldr	r4, [sp, #4]
 800eec6:	5d64      	ldrb	r4, [r4, r5]
 800eec8:	2cff      	cmp	r4, #255	; 0xff
 800eeca:	d04f      	beq.n	800ef6c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 800eecc:	2c00      	cmp	r4, #0
 800eece:	d046      	beq.n	800ef5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 800eed0:	9e00      	ldr	r6, [sp, #0]
 800eed2:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 800eed6:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 800eeda:	b2a7      	uxth	r7, r4
 800eedc:	122e      	asrs	r6, r5, #8
 800eede:	43e4      	mvns	r4, r4
 800eee0:	b2e4      	uxtb	r4, r4
 800eee2:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800eee6:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800eeea:	fb16 f604 	smulbb	r6, r6, r4
 800eeee:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 800eef2:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800eef6:	00ed      	lsls	r5, r5, #3
 800eef8:	fb0c 6c07 	mla	ip, ip, r7, r6
 800eefc:	b2ed      	uxtb	r5, r5
 800eefe:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800ef02:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800ef06:	fb15 f504 	smulbb	r5, r5, r4
 800ef0a:	fa5f fe8e 	uxtb.w	lr, lr
 800ef0e:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 800ef12:	fb0e 5507 	mla	r5, lr, r7, r5
 800ef16:	fb1a fa04 	smulbb	sl, sl, r4
 800ef1a:	fa1f fc8c 	uxth.w	ip, ip
 800ef1e:	b2ad      	uxth	r5, r5
 800ef20:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800ef24:	fb06 a607 	mla	r6, r6, r7, sl
 800ef28:	f10c 0401 	add.w	r4, ip, #1
 800ef2c:	f105 0a01 	add.w	sl, r5, #1
 800ef30:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 800ef34:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800ef38:	b2b6      	uxth	r6, r6
 800ef3a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800ef3e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800ef42:	ea4a 0c0c 	orr.w	ip, sl, ip
 800ef46:	f106 0a01 	add.w	sl, r6, #1
 800ef4a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800ef4e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800ef52:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800ef56:	ea4c 0c0a 	orr.w	ip, ip, sl
 800ef5a:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 800ef5e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800ef60:	4421      	add	r1, r4
 800ef62:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800ef64:	f109 0901 	add.w	r9, r9, #1
 800ef68:	4422      	add	r2, r4
 800ef6a:	e7a0      	b.n	800eeae <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 800ef6c:	9c00      	ldr	r4, [sp, #0]
 800ef6e:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 800ef72:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 800ef76:	e7f2      	b.n	800ef5e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 800ef78:	b005      	add	sp, #20
 800ef7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800ef7e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800ef7e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ef82:	b085      	sub	sp, #20
 800ef84:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800ef86:	9203      	str	r2, [sp, #12]
 800ef88:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 800ef8c:	9201      	str	r2, [sp, #4]
 800ef8e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800ef92:	9100      	str	r1, [sp, #0]
 800ef94:	6841      	ldr	r1, [r0, #4]
 800ef96:	f8dd e058 	ldr.w	lr, [sp, #88]	; 0x58
 800ef9a:	fb01 2404 	mla	r4, r1, r4, r2
 800ef9e:	6802      	ldr	r2, [r0, #0]
 800efa0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800efa4:	f8de 2000 	ldr.w	r2, [lr]
 800efa8:	9202      	str	r2, [sp, #8]
 800efaa:	9a01      	ldr	r2, [sp, #4]
 800efac:	43d6      	mvns	r6, r2
 800efae:	b2f6      	uxtb	r6, r6
 800efb0:	9a00      	ldr	r2, [sp, #0]
 800efb2:	2a00      	cmp	r2, #0
 800efb4:	dc03      	bgt.n	800efbe <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 800efb6:	9a03      	ldr	r2, [sp, #12]
 800efb8:	2a00      	cmp	r2, #0
 800efba:	f340 8124 	ble.w	800f206 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 800efbe:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800efc0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 800efc4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 800efc8:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800efcc:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800efce:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800efd2:	2b00      	cmp	r3, #0
 800efd4:	dd0e      	ble.n	800eff4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800efd6:	1408      	asrs	r0, r1, #16
 800efd8:	d405      	bmi.n	800efe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800efda:	4560      	cmp	r0, ip
 800efdc:	da03      	bge.n	800efe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800efde:	1410      	asrs	r0, r2, #16
 800efe0:	d401      	bmi.n	800efe6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 800efe2:	42b8      	cmp	r0, r7
 800efe4:	db07      	blt.n	800eff6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 800efe6:	9811      	ldr	r0, [sp, #68]	; 0x44
 800efe8:	4401      	add	r1, r0
 800efea:	9812      	ldr	r0, [sp, #72]	; 0x48
 800efec:	3b01      	subs	r3, #1
 800efee:	4402      	add	r2, r0
 800eff0:	3402      	adds	r4, #2
 800eff2:	e7ee      	b.n	800efd2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 800eff4:	d06e      	beq.n	800f0d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 800eff6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800eff8:	1e58      	subs	r0, r3, #1
 800effa:	fb05 1500 	mla	r5, r5, r0, r1
 800effe:	142d      	asrs	r5, r5, #16
 800f000:	d45c      	bmi.n	800f0bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f002:	4565      	cmp	r5, ip
 800f004:	da5a      	bge.n	800f0bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f006:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800f008:	fb05 2000 	mla	r0, r5, r0, r2
 800f00c:	1400      	asrs	r0, r0, #16
 800f00e:	d455      	bmi.n	800f0bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f010:	42b8      	cmp	r0, r7
 800f012:	da53      	bge.n	800f0bc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 800f014:	f8bd b004 	ldrh.w	fp, [sp, #4]
 800f018:	4699      	mov	r9, r3
 800f01a:	46a2      	mov	sl, r4
 800f01c:	f1b9 0f00 	cmp.w	r9, #0
 800f020:	dd54      	ble.n	800f0cc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 800f022:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 800f026:	140d      	asrs	r5, r1, #16
 800f028:	1410      	asrs	r0, r2, #16
 800f02a:	fb07 5000 	mla	r0, r7, r0, r5
 800f02e:	9d02      	ldr	r5, [sp, #8]
 800f030:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 800f034:	f8ba 5000 	ldrh.w	r5, [sl]
 800f038:	122f      	asrs	r7, r5, #8
 800f03a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f03e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f042:	fb17 f706 	smulbb	r7, r7, r6
 800f046:	ea4f 08e5 	mov.w	r8, r5, asr #3
 800f04a:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f04e:	00ed      	lsls	r5, r5, #3
 800f050:	fb0c 7c0b 	mla	ip, ip, fp, r7
 800f054:	f008 08fc 	and.w	r8, r8, #252	; 0xfc
 800f058:	10c7      	asrs	r7, r0, #3
 800f05a:	b2ed      	uxtb	r5, r5
 800f05c:	00c0      	lsls	r0, r0, #3
 800f05e:	fb18 f806 	smulbb	r8, r8, r6
 800f062:	fb15 f506 	smulbb	r5, r5, r6
 800f066:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f06a:	b2c0      	uxtb	r0, r0
 800f06c:	fa1f fc8c 	uxth.w	ip, ip
 800f070:	fb07 870b 	mla	r7, r7, fp, r8
 800f074:	fb00 500b 	mla	r0, r0, fp, r5
 800f078:	b280      	uxth	r0, r0
 800f07a:	b2bf      	uxth	r7, r7
 800f07c:	f10c 0501 	add.w	r5, ip, #1
 800f080:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800f084:	f107 0801 	add.w	r8, r7, #1
 800f088:	1c45      	adds	r5, r0, #1
 800f08a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800f08e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 800f092:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f094:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f098:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f09c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 800f0a0:	ea45 0c0c 	orr.w	ip, r5, ip
 800f0a4:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 800f0a8:	4401      	add	r1, r0
 800f0aa:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f0ac:	ea4c 0c08 	orr.w	ip, ip, r8
 800f0b0:	f82a cb02 	strh.w	ip, [sl], #2
 800f0b4:	4402      	add	r2, r0
 800f0b6:	f109 39ff 	add.w	r9, r9, #4294967295
 800f0ba:	e7af      	b.n	800f01c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800f0bc:	f8bd a004 	ldrh.w	sl, [sp, #4]
 800f0c0:	f04f 0800 	mov.w	r8, #0
 800f0c4:	eb03 0008 	add.w	r0, r3, r8
 800f0c8:	2800      	cmp	r0, #0
 800f0ca:	dc41      	bgt.n	800f150 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 800f0cc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f0d0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f0d4:	9b00      	ldr	r3, [sp, #0]
 800f0d6:	2b00      	cmp	r3, #0
 800f0d8:	f340 8095 	ble.w	800f206 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 800f0dc:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f0e0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 800f0e4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 800f0e8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f0ea:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f0ee:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f0f2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f0f6:	eef0 6a62 	vmov.f32	s13, s5
 800f0fa:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f0fe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f102:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f106:	edcd 6a0f 	vstr	s13, [sp, #60]	; 0x3c
 800f10a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f10e:	eef0 6a43 	vmov.f32	s13, s6
 800f112:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f116:	ee12 2a90 	vmov	r2, s5
 800f11a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f11e:	fb92 f3f3 	sdiv	r3, r2, r3
 800f122:	ee13 2a10 	vmov	r2, s6
 800f126:	9311      	str	r3, [sp, #68]	; 0x44
 800f128:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f12a:	fb92 f3f3 	sdiv	r3, r2, r3
 800f12e:	9312      	str	r3, [sp, #72]	; 0x48
 800f130:	9b00      	ldr	r3, [sp, #0]
 800f132:	9a03      	ldr	r2, [sp, #12]
 800f134:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 800f138:	3b01      	subs	r3, #1
 800f13a:	9300      	str	r3, [sp, #0]
 800f13c:	edcd 6a10 	vstr	s13, [sp, #64]	; 0x40
 800f140:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f142:	eeb0 3a67 	vmov.f32	s6, s15
 800f146:	bf08      	it	eq
 800f148:	4613      	moveq	r3, r2
 800f14a:	eef0 2a47 	vmov.f32	s5, s14
 800f14e:	e72f      	b.n	800efb0 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 800f150:	140f      	asrs	r7, r1, #16
 800f152:	d451      	bmi.n	800f1f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f154:	f8de 5008 	ldr.w	r5, [lr, #8]
 800f158:	42bd      	cmp	r5, r7
 800f15a:	dd4d      	ble.n	800f1f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f15c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800f160:	d44a      	bmi.n	800f1f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f162:	f8de 000c 	ldr.w	r0, [lr, #12]
 800f166:	4560      	cmp	r0, ip
 800f168:	dd46      	ble.n	800f1f8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 800f16a:	b22d      	sxth	r5, r5
 800f16c:	fb0c 7505 	mla	r5, ip, r5, r7
 800f170:	9802      	ldr	r0, [sp, #8]
 800f172:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 800f176:	f06f 0501 	mvn.w	r5, #1
 800f17a:	fb05 fb08 	mul.w	fp, r5, r8
 800f17e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 800f182:	f834 500b 	ldrh.w	r5, [r4, fp]
 800f186:	122f      	asrs	r7, r5, #8
 800f188:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f18c:	fb17 f706 	smulbb	r7, r7, r6
 800f190:	ea4f 09e5 	mov.w	r9, r5, asr #3
 800f194:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f198:	00ed      	lsls	r5, r5, #3
 800f19a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 800f19e:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 800f1a2:	10c7      	asrs	r7, r0, #3
 800f1a4:	b2ed      	uxtb	r5, r5
 800f1a6:	00c0      	lsls	r0, r0, #3
 800f1a8:	fb19 f906 	smulbb	r9, r9, r6
 800f1ac:	fb15 f506 	smulbb	r5, r5, r6
 800f1b0:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800f1b4:	b2c0      	uxtb	r0, r0
 800f1b6:	fa1f fc8c 	uxth.w	ip, ip
 800f1ba:	fb07 970a 	mla	r7, r7, sl, r9
 800f1be:	fb00 500a 	mla	r0, r0, sl, r5
 800f1c2:	b2bf      	uxth	r7, r7
 800f1c4:	b280      	uxth	r0, r0
 800f1c6:	f10c 0501 	add.w	r5, ip, #1
 800f1ca:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 800f1ce:	f107 0901 	add.w	r9, r7, #1
 800f1d2:	1c45      	adds	r5, r0, #1
 800f1d4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 800f1d8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 800f1dc:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 800f1e0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f1e4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 800f1e8:	ea45 0c0c 	orr.w	ip, r5, ip
 800f1ec:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 800f1f0:	ea4c 0c09 	orr.w	ip, ip, r9
 800f1f4:	f824 c00b 	strh.w	ip, [r4, fp]
 800f1f8:	9811      	ldr	r0, [sp, #68]	; 0x44
 800f1fa:	4401      	add	r1, r0
 800f1fc:	9812      	ldr	r0, [sp, #72]	; 0x48
 800f1fe:	f108 38ff 	add.w	r8, r8, #4294967295
 800f202:	4402      	add	r2, r0
 800f204:	e75e      	b.n	800f0c4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 800f206:	b005      	add	sp, #20
 800f208:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f20c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f20c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f210:	b085      	sub	sp, #20
 800f212:	4693      	mov	fp, r2
 800f214:	9e13      	ldr	r6, [sp, #76]	; 0x4c
 800f216:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800f218:	6870      	ldr	r0, [r6, #4]
 800f21a:	9101      	str	r1, [sp, #4]
 800f21c:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f220:	fb00 2404 	mla	r4, r0, r4, r2
 800f224:	6832      	ldr	r2, [r6, #0]
 800f226:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	; 0x44
 800f22a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f22e:	682a      	ldr	r2, [r5, #0]
 800f230:	9202      	str	r2, [sp, #8]
 800f232:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f236:	9a01      	ldr	r2, [sp, #4]
 800f238:	2a00      	cmp	r2, #0
 800f23a:	dc03      	bgt.n	800f244 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800f23c:	f1bb 0f00 	cmp.w	fp, #0
 800f240:	f340 809a 	ble.w	800f378 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 800f244:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f246:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 800f24a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 800f24e:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f252:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f254:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f258:	2b00      	cmp	r3, #0
 800f25a:	dd0c      	ble.n	800f276 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 800f25c:	1406      	asrs	r6, r0, #16
 800f25e:	d405      	bmi.n	800f26c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800f260:	454e      	cmp	r6, r9
 800f262:	da03      	bge.n	800f26c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800f264:	1416      	asrs	r6, r2, #16
 800f266:	d401      	bmi.n	800f26c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800f268:	4546      	cmp	r6, r8
 800f26a:	db05      	blt.n	800f278 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800f26c:	4470      	add	r0, lr
 800f26e:	4462      	add	r2, ip
 800f270:	3b01      	subs	r3, #1
 800f272:	3402      	adds	r4, #2
 800f274:	e7f0      	b.n	800f258 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 800f276:	d00f      	beq.n	800f298 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 800f278:	1e5e      	subs	r6, r3, #1
 800f27a:	fb0e 0706 	mla	r7, lr, r6, r0
 800f27e:	143f      	asrs	r7, r7, #16
 800f280:	d541      	bpl.n	800f306 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 800f282:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 800f286:	4698      	mov	r8, r3
 800f288:	9603      	str	r6, [sp, #12]
 800f28a:	f1b8 0f00 	cmp.w	r8, #0
 800f28e:	dc56      	bgt.n	800f33e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 800f290:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f294:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f298:	9b01      	ldr	r3, [sp, #4]
 800f29a:	2b00      	cmp	r3, #0
 800f29c:	dd6c      	ble.n	800f378 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 800f29e:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f2a2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f2a6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f2aa:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f2ac:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f2b0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f2b4:	eeb0 6a62 	vmov.f32	s12, s5
 800f2b8:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f2bc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f2c0:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f2c4:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f2c8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f2cc:	eeb0 6a43 	vmov.f32	s12, s6
 800f2d0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f2d4:	ee12 2a90 	vmov	r2, s5
 800f2d8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f2dc:	fb92 fef3 	sdiv	lr, r2, r3
 800f2e0:	ee13 2a10 	vmov	r2, s6
 800f2e4:	fb92 fcf3 	sdiv	ip, r2, r3
 800f2e8:	9b01      	ldr	r3, [sp, #4]
 800f2ea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f2ee:	3b01      	subs	r3, #1
 800f2f0:	9301      	str	r3, [sp, #4]
 800f2f2:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f2f6:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f2f8:	eeb0 3a67 	vmov.f32	s6, s15
 800f2fc:	bf08      	it	eq
 800f2fe:	465b      	moveq	r3, fp
 800f300:	eef0 2a47 	vmov.f32	s5, s14
 800f304:	e797      	b.n	800f236 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 800f306:	454f      	cmp	r7, r9
 800f308:	dabb      	bge.n	800f282 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f30a:	fb0c 2606 	mla	r6, ip, r6, r2
 800f30e:	1436      	asrs	r6, r6, #16
 800f310:	d4b7      	bmi.n	800f282 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f312:	4546      	cmp	r6, r8
 800f314:	dab5      	bge.n	800f282 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f316:	461e      	mov	r6, r3
 800f318:	46a0      	mov	r8, r4
 800f31a:	2e00      	cmp	r6, #0
 800f31c:	ddb8      	ble.n	800f290 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 800f31e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 800f322:	9902      	ldr	r1, [sp, #8]
 800f324:	1417      	asrs	r7, r2, #16
 800f326:	ea4f 4920 	mov.w	r9, r0, asr #16
 800f32a:	fb0a 9707 	mla	r7, sl, r7, r9
 800f32e:	4470      	add	r0, lr
 800f330:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 800f334:	f828 7b02 	strh.w	r7, [r8], #2
 800f338:	4462      	add	r2, ip
 800f33a:	3e01      	subs	r6, #1
 800f33c:	e7ed      	b.n	800f31a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 800f33e:	ea5f 4920 	movs.w	r9, r0, asr #16
 800f342:	d414      	bmi.n	800f36e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800f344:	68ae      	ldr	r6, [r5, #8]
 800f346:	454e      	cmp	r6, r9
 800f348:	dd11      	ble.n	800f36e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800f34a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 800f34e:	d40e      	bmi.n	800f36e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800f350:	68ef      	ldr	r7, [r5, #12]
 800f352:	4557      	cmp	r7, sl
 800f354:	dd0b      	ble.n	800f36e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 800f356:	b236      	sxth	r6, r6
 800f358:	fb0a 9606 	mla	r6, sl, r6, r9
 800f35c:	9f02      	ldr	r7, [sp, #8]
 800f35e:	f06f 0101 	mvn.w	r1, #1
 800f362:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 800f366:	fb01 f608 	mul.w	r6, r1, r8
 800f36a:	9903      	ldr	r1, [sp, #12]
 800f36c:	538f      	strh	r7, [r1, r6]
 800f36e:	4470      	add	r0, lr
 800f370:	4462      	add	r2, ip
 800f372:	f108 38ff 	add.w	r8, r8, #4294967295
 800f376:	e788      	b.n	800f28a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 800f378:	b005      	add	sp, #20
 800f37a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0800f37e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f37e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f382:	b085      	sub	sp, #20
 800f384:	468b      	mov	fp, r1
 800f386:	9813      	ldr	r0, [sp, #76]	; 0x4c
 800f388:	9202      	str	r2, [sp, #8]
 800f38a:	f89d 205c 	ldrb.w	r2, [sp, #92]	; 0x5c
 800f38e:	9203      	str	r2, [sp, #12]
 800f390:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	; 0x50
 800f394:	6841      	ldr	r1, [r0, #4]
 800f396:	f8dd 8058 	ldr.w	r8, [sp, #88]	; 0x58
 800f39a:	fb01 2404 	mla	r4, r1, r4, r2
 800f39e:	6802      	ldr	r2, [r0, #0]
 800f3a0:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f3a4:	f8d8 2000 	ldr.w	r2, [r8]
 800f3a8:	9200      	str	r2, [sp, #0]
 800f3aa:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f3ae:	f1bb 0f00 	cmp.w	fp, #0
 800f3b2:	dc03      	bgt.n	800f3bc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 800f3b4:	9a02      	ldr	r2, [sp, #8]
 800f3b6:	2a00      	cmp	r2, #0
 800f3b8:	f340 8134 	ble.w	800f624 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 800f3bc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f3be:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 800f3c2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 800f3c6:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f3ca:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f3cc:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f3d0:	2b00      	cmp	r3, #0
 800f3d2:	dd0e      	ble.n	800f3f2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 800f3d4:	1402      	asrs	r2, r0, #16
 800f3d6:	d405      	bmi.n	800f3e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f3d8:	42ba      	cmp	r2, r7
 800f3da:	da03      	bge.n	800f3e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f3dc:	140a      	asrs	r2, r1, #16
 800f3de:	d401      	bmi.n	800f3e4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 800f3e0:	42b2      	cmp	r2, r6
 800f3e2:	db07      	blt.n	800f3f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 800f3e4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f3e6:	4410      	add	r0, r2
 800f3e8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f3ea:	3b01      	subs	r3, #1
 800f3ec:	4411      	add	r1, r2
 800f3ee:	3402      	adds	r4, #2
 800f3f0:	e7ee      	b.n	800f3d0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 800f3f2:	d019      	beq.n	800f428 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 800f3f4:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800f3f6:	1e5a      	subs	r2, r3, #1
 800f3f8:	fb05 0502 	mla	r5, r5, r2, r0
 800f3fc:	142d      	asrs	r5, r5, #16
 800f3fe:	d409      	bmi.n	800f414 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f400:	42bd      	cmp	r5, r7
 800f402:	da07      	bge.n	800f414 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f404:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800f406:	fb05 1202 	mla	r2, r5, r2, r1
 800f40a:	1412      	asrs	r2, r2, #16
 800f40c:	d402      	bmi.n	800f414 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 800f40e:	42b2      	cmp	r2, r6
 800f410:	f2c0 80aa 	blt.w	800f568 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 800f414:	f04f 0c00 	mov.w	ip, #0
 800f418:	eb03 020c 	add.w	r2, r3, ip
 800f41c:	2a00      	cmp	r2, #0
 800f41e:	dc3e      	bgt.n	800f49e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 800f420:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f424:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f428:	f1bb 0f00 	cmp.w	fp, #0
 800f42c:	f340 80fa 	ble.w	800f624 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 800f430:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f434:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f438:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f43c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f43e:	f1bb 0b01 	subs.w	fp, fp, #1
 800f442:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f446:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f44a:	eeb0 6a62 	vmov.f32	s12, s5
 800f44e:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f452:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f456:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f45a:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f45e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f462:	eeb0 6a43 	vmov.f32	s12, s6
 800f466:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f46a:	ee12 2a90 	vmov	r2, s5
 800f46e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f472:	fb92 f3f3 	sdiv	r3, r2, r3
 800f476:	ee13 2a10 	vmov	r2, s6
 800f47a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f47e:	9311      	str	r3, [sp, #68]	; 0x44
 800f480:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f482:	fb92 f3f3 	sdiv	r3, r2, r3
 800f486:	9a02      	ldr	r2, [sp, #8]
 800f488:	9312      	str	r3, [sp, #72]	; 0x48
 800f48a:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f48e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f490:	eeb0 3a67 	vmov.f32	s6, s15
 800f494:	bf08      	it	eq
 800f496:	4613      	moveq	r3, r2
 800f498:	eef0 2a47 	vmov.f32	s5, s14
 800f49c:	e787      	b.n	800f3ae <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 800f49e:	1406      	asrs	r6, r0, #16
 800f4a0:	d45b      	bmi.n	800f55a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 800f4a2:	f8d8 5008 	ldr.w	r5, [r8, #8]
 800f4a6:	42b5      	cmp	r5, r6
 800f4a8:	dd57      	ble.n	800f55a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 800f4aa:	140f      	asrs	r7, r1, #16
 800f4ac:	d455      	bmi.n	800f55a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 800f4ae:	f8d8 200c 	ldr.w	r2, [r8, #12]
 800f4b2:	42ba      	cmp	r2, r7
 800f4b4:	dd51      	ble.n	800f55a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 800f4b6:	b22d      	sxth	r5, r5
 800f4b8:	fb07 6505 	mla	r5, r7, r5, r6
 800f4bc:	9a00      	ldr	r2, [sp, #0]
 800f4be:	f852 5025 	ldr.w	r5, [r2, r5, lsl #2]
 800f4c2:	0e2e      	lsrs	r6, r5, #24
 800f4c4:	d049      	beq.n	800f55a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>
 800f4c6:	f06f 0201 	mvn.w	r2, #1
 800f4ca:	fb02 f20c 	mul.w	r2, r2, ip
 800f4ce:	9201      	str	r2, [sp, #4]
 800f4d0:	f834 e002 	ldrh.w	lr, [r4, r2]
 800f4d4:	9a03      	ldr	r2, [sp, #12]
 800f4d6:	4356      	muls	r6, r2
 800f4d8:	1c72      	adds	r2, r6, #1
 800f4da:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f4de:	1212      	asrs	r2, r2, #8
 800f4e0:	fa1f f982 	uxth.w	r9, r2
 800f4e4:	ea4f 272e 	mov.w	r7, lr, asr #8
 800f4e8:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f4ec:	43d2      	mvns	r2, r2
 800f4ee:	b2d2      	uxtb	r2, r2
 800f4f0:	fb16 f609 	smulbb	r6, r6, r9
 800f4f4:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f4f8:	fb07 6702 	mla	r7, r7, r2, r6
 800f4fc:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f500:	ea4f 06ee 	mov.w	r6, lr, asr #3
 800f504:	b2ed      	uxtb	r5, r5
 800f506:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f50a:	fa5f fe8e 	uxtb.w	lr, lr
 800f50e:	fb15 f509 	smulbb	r5, r5, r9
 800f512:	fb0e 5502 	mla	r5, lr, r2, r5
 800f516:	b2bf      	uxth	r7, r7
 800f518:	fb1a fa09 	smulbb	sl, sl, r9
 800f51c:	b2ad      	uxth	r5, r5
 800f51e:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f522:	fb06 a602 	mla	r6, r6, r2, sl
 800f526:	1c7a      	adds	r2, r7, #1
 800f528:	f105 0a01 	add.w	sl, r5, #1
 800f52c:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f530:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f534:	b2b6      	uxth	r6, r6
 800f536:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f53a:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f53e:	ea4a 0707 	orr.w	r7, sl, r7
 800f542:	f106 0a01 	add.w	sl, r6, #1
 800f546:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f54a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f54e:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f552:	9a01      	ldr	r2, [sp, #4]
 800f554:	ea47 070a 	orr.w	r7, r7, sl
 800f558:	52a7      	strh	r7, [r4, r2]
 800f55a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f55c:	4410      	add	r0, r2
 800f55e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f560:	f10c 3cff 	add.w	ip, ip, #4294967295
 800f564:	4411      	add	r1, r2
 800f566:	e757      	b.n	800f418 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 800f568:	f04f 0e00 	mov.w	lr, #0
 800f56c:	eba3 020e 	sub.w	r2, r3, lr
 800f570:	2a00      	cmp	r2, #0
 800f572:	f77f af55 	ble.w	800f420 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800f576:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 800f57a:	1405      	asrs	r5, r0, #16
 800f57c:	140a      	asrs	r2, r1, #16
 800f57e:	fb06 5202 	mla	r2, r6, r2, r5
 800f582:	9d00      	ldr	r5, [sp, #0]
 800f584:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 800f588:	0e2e      	lsrs	r6, r5, #24
 800f58a:	d044      	beq.n	800f616 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 800f58c:	9a03      	ldr	r2, [sp, #12]
 800f58e:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800f592:	4356      	muls	r6, r2
 800f594:	1c72      	adds	r2, r6, #1
 800f596:	eb02 2226 	add.w	r2, r2, r6, asr #8
 800f59a:	1212      	asrs	r2, r2, #8
 800f59c:	fa1f f982 	uxth.w	r9, r2
 800f5a0:	ea4f 272c 	mov.w	r7, ip, asr #8
 800f5a4:	f3c5 4607 	ubfx	r6, r5, #16, #8
 800f5a8:	43d2      	mvns	r2, r2
 800f5aa:	b2d2      	uxtb	r2, r2
 800f5ac:	fb16 f609 	smulbb	r6, r6, r9
 800f5b0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800f5b4:	fb07 6702 	mla	r7, r7, r2, r6
 800f5b8:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 800f5bc:	ea4f 06ec 	mov.w	r6, ip, asr #3
 800f5c0:	b2ed      	uxtb	r5, r5
 800f5c2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800f5c6:	fa5f fc8c 	uxtb.w	ip, ip
 800f5ca:	fb15 f509 	smulbb	r5, r5, r9
 800f5ce:	fb0c 5502 	mla	r5, ip, r2, r5
 800f5d2:	b2bf      	uxth	r7, r7
 800f5d4:	fb1a fa09 	smulbb	sl, sl, r9
 800f5d8:	b2ad      	uxth	r5, r5
 800f5da:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 800f5de:	fb06 a602 	mla	r6, r6, r2, sl
 800f5e2:	1c7a      	adds	r2, r7, #1
 800f5e4:	f105 0a01 	add.w	sl, r5, #1
 800f5e8:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 800f5ec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800f5f0:	b2b6      	uxth	r6, r6
 800f5f2:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800f5f6:	f407 4778 	and.w	r7, r7, #63488	; 0xf800
 800f5fa:	ea4a 0707 	orr.w	r7, sl, r7
 800f5fe:	f106 0a01 	add.w	sl, r6, #1
 800f602:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 800f606:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800f60a:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800f60e:	ea47 070a 	orr.w	r7, r7, sl
 800f612:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 800f616:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f618:	4410      	add	r0, r2
 800f61a:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f61c:	f10e 0e01 	add.w	lr, lr, #1
 800f620:	4411      	add	r1, r2
 800f622:	e7a3      	b.n	800f56c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 800f624:	b005      	add	sp, #20
 800f626:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0800f62c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f62c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f630:	b085      	sub	sp, #20
 800f632:	468b      	mov	fp, r1
 800f634:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 800f636:	9203      	str	r2, [sp, #12]
 800f638:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	; 0x50
 800f63c:	6861      	ldr	r1, [r4, #4]
 800f63e:	f8dd 9058 	ldr.w	r9, [sp, #88]	; 0x58
 800f642:	fb01 2000 	mla	r0, r1, r0, r2
 800f646:	6822      	ldr	r2, [r4, #0]
 800f648:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800f64c:	f8d9 2000 	ldr.w	r2, [r9]
 800f650:	9200      	str	r2, [sp, #0]
 800f652:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f656:	f1bb 0f00 	cmp.w	fp, #0
 800f65a:	dc03      	bgt.n	800f664 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 800f65c:	9a03      	ldr	r2, [sp, #12]
 800f65e:	2a00      	cmp	r2, #0
 800f660:	f340 814a 	ble.w	800f8f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 800f664:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 800f666:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 800f66a:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 800f66e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f672:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800f674:	f502 4200 	add.w	r2, r2, #32768	; 0x8000
 800f678:	2b00      	cmp	r3, #0
 800f67a:	dd0e      	ble.n	800f69a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 800f67c:	140c      	asrs	r4, r1, #16
 800f67e:	d405      	bmi.n	800f68c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800f680:	42bc      	cmp	r4, r7
 800f682:	da03      	bge.n	800f68c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800f684:	1414      	asrs	r4, r2, #16
 800f686:	d401      	bmi.n	800f68c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 800f688:	42b4      	cmp	r4, r6
 800f68a:	db07      	blt.n	800f69c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 800f68c:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800f68e:	4421      	add	r1, r4
 800f690:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800f692:	3b01      	subs	r3, #1
 800f694:	4422      	add	r2, r4
 800f696:	3002      	adds	r0, #2
 800f698:	e7ee      	b.n	800f678 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 800f69a:	d017      	beq.n	800f6cc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 800f69c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800f69e:	1e5c      	subs	r4, r3, #1
 800f6a0:	fb05 1504 	mla	r5, r5, r4, r1
 800f6a4:	142d      	asrs	r5, r5, #16
 800f6a6:	d409      	bmi.n	800f6bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 800f6a8:	42bd      	cmp	r5, r7
 800f6aa:	da07      	bge.n	800f6bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 800f6ac:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800f6ae:	fb05 2404 	mla	r4, r5, r4, r2
 800f6b2:	1424      	asrs	r4, r4, #16
 800f6b4:	d402      	bmi.n	800f6bc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 800f6b6:	42b4      	cmp	r4, r6
 800f6b8:	f2c0 80ba 	blt.w	800f830 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 800f6bc:	2700      	movs	r7, #0
 800f6be:	19dc      	adds	r4, r3, r7
 800f6c0:	2c00      	cmp	r4, #0
 800f6c2:	dc3e      	bgt.n	800f742 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 800f6c4:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f6c8:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 800f6cc:	f1bb 0f00 	cmp.w	fp, #0
 800f6d0:	f340 8112 	ble.w	800f8f8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 800f6d4:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f6d8:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f6dc:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f6e0:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f6e2:	f1bb 0b01 	subs.w	fp, fp, #1
 800f6e6:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f6ea:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f6ee:	eeb0 6a62 	vmov.f32	s12, s5
 800f6f2:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f6f6:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f6fa:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f6fe:	ed8d 6a0f 	vstr	s12, [sp, #60]	; 0x3c
 800f702:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f706:	eeb0 6a43 	vmov.f32	s12, s6
 800f70a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f70e:	ee12 2a90 	vmov	r2, s5
 800f712:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800f716:	fb92 f3f3 	sdiv	r3, r2, r3
 800f71a:	ee13 2a10 	vmov	r2, s6
 800f71e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f722:	9311      	str	r3, [sp, #68]	; 0x44
 800f724:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f726:	fb92 f3f3 	sdiv	r3, r2, r3
 800f72a:	9a03      	ldr	r2, [sp, #12]
 800f72c:	9312      	str	r3, [sp, #72]	; 0x48
 800f72e:	ed8d 6a10 	vstr	s12, [sp, #64]	; 0x40
 800f732:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800f734:	eeb0 3a67 	vmov.f32	s6, s15
 800f738:	bf08      	it	eq
 800f73a:	4613      	moveq	r3, r2
 800f73c:	eef0 2a47 	vmov.f32	s5, s14
 800f740:	e789      	b.n	800f656 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 800f742:	140e      	asrs	r6, r1, #16
 800f744:	d45f      	bmi.n	800f806 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 800f746:	f8d9 5008 	ldr.w	r5, [r9, #8]
 800f74a:	42b5      	cmp	r5, r6
 800f74c:	dd5b      	ble.n	800f806 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 800f74e:	ea5f 4c22 	movs.w	ip, r2, asr #16
 800f752:	d458      	bmi.n	800f806 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 800f754:	f8d9 400c 	ldr.w	r4, [r9, #12]
 800f758:	4564      	cmp	r4, ip
 800f75a:	dd54      	ble.n	800f806 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 800f75c:	b22d      	sxth	r5, r5
 800f75e:	fb0c 6505 	mla	r5, ip, r5, r6
 800f762:	9c00      	ldr	r4, [sp, #0]
 800f764:	f854 c025 	ldr.w	ip, [r4, r5, lsl #2]
 800f768:	ea5f 6e1c 	movs.w	lr, ip, lsr #24
 800f76c:	d04b      	beq.n	800f806 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 800f76e:	fa5f f48e 	uxtb.w	r4, lr
 800f772:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 800f776:	9401      	str	r4, [sp, #4]
 800f778:	ea4f 461c 	mov.w	r6, ip, lsr #16
 800f77c:	ea4f 251c 	mov.w	r5, ip, lsr #8
 800f780:	f06f 0401 	mvn.w	r4, #1
 800f784:	fa5f fc8c 	uxtb.w	ip, ip
 800f788:	d043      	beq.n	800f812 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 800f78a:	437c      	muls	r4, r7
 800f78c:	9402      	str	r4, [sp, #8]
 800f78e:	f830 8004 	ldrh.w	r8, [r0, r4]
 800f792:	9c01      	ldr	r4, [sp, #4]
 800f794:	f8bd a004 	ldrh.w	sl, [sp, #4]
 800f798:	ea4f 2e28 	mov.w	lr, r8, asr #8
 800f79c:	43e4      	mvns	r4, r4
 800f79e:	b2f6      	uxtb	r6, r6
 800f7a0:	b2e4      	uxtb	r4, r4
 800f7a2:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 800f7a6:	fb16 f60a 	smulbb	r6, r6, sl
 800f7aa:	fb0e 6604 	mla	r6, lr, r4, r6
 800f7ae:	ea4f 0ee8 	mov.w	lr, r8, asr #3
 800f7b2:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 800f7b6:	fa5f f888 	uxtb.w	r8, r8
 800f7ba:	fb1c fc0a 	smulbb	ip, ip, sl
 800f7be:	fb08 cc04 	mla	ip, r8, r4, ip
 800f7c2:	b2ed      	uxtb	r5, r5
 800f7c4:	b2b6      	uxth	r6, r6
 800f7c6:	fb15 f50a 	smulbb	r5, r5, sl
 800f7ca:	fa1f fc8c 	uxth.w	ip, ip
 800f7ce:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 800f7d2:	fb0e 5e04 	mla	lr, lr, r4, r5
 800f7d6:	1c74      	adds	r4, r6, #1
 800f7d8:	f10c 0501 	add.w	r5, ip, #1
 800f7dc:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 800f7e0:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 800f7e4:	fa1f fe8e 	uxth.w	lr, lr
 800f7e8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800f7ec:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 800f7f0:	432e      	orrs	r6, r5
 800f7f2:	f10e 0501 	add.w	r5, lr, #1
 800f7f6:	eb05 251e 	add.w	r5, r5, lr, lsr #8
 800f7fa:	096d      	lsrs	r5, r5, #5
 800f7fc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800f800:	9c02      	ldr	r4, [sp, #8]
 800f802:	432e      	orrs	r6, r5
 800f804:	5306      	strh	r6, [r0, r4]
 800f806:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800f808:	4421      	add	r1, r4
 800f80a:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800f80c:	3f01      	subs	r7, #1
 800f80e:	4422      	add	r2, r4
 800f810:	e755      	b.n	800f6be <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 800f812:	fb04 fe07 	mul.w	lr, r4, r7
 800f816:	f2a4 74fe 	subw	r4, r4, #2046	; 0x7fe
 800f81a:	ea04 2606 	and.w	r6, r4, r6, lsl #8
 800f81e:	00ed      	lsls	r5, r5, #3
 800f820:	ea46 06dc 	orr.w	r6, r6, ip, lsr #3
 800f824:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800f828:	432e      	orrs	r6, r5
 800f82a:	f820 600e 	strh.w	r6, [r0, lr]
 800f82e:	e7ea      	b.n	800f806 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1da>
 800f830:	f04f 0800 	mov.w	r8, #0
 800f834:	eba3 0408 	sub.w	r4, r3, r8
 800f838:	2c00      	cmp	r4, #0
 800f83a:	f77f af43 	ble.w	800f6c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 800f83e:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 800f842:	140d      	asrs	r5, r1, #16
 800f844:	1414      	asrs	r4, r2, #16
 800f846:	fb06 5404 	mla	r4, r6, r4, r5
 800f84a:	9d00      	ldr	r5, [sp, #0]
 800f84c:	f855 7024 	ldr.w	r7, [r5, r4, lsl #2]
 800f850:	ea5f 6c17 	movs.w	ip, r7, lsr #24
 800f854:	d042      	beq.n	800f8dc <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 800f856:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 800f85a:	ea4f 4517 	mov.w	r5, r7, lsr #16
 800f85e:	ea4f 2617 	mov.w	r6, r7, lsr #8
 800f862:	fa5f f48c 	uxtb.w	r4, ip
 800f866:	b2ff      	uxtb	r7, r7
 800f868:	d03f      	beq.n	800f8ea <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2be>
 800f86a:	f830 e018 	ldrh.w	lr, [r0, r8, lsl #1]
 800f86e:	fa1f fa84 	uxth.w	sl, r4
 800f872:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800f876:	43e4      	mvns	r4, r4
 800f878:	b2ed      	uxtb	r5, r5
 800f87a:	b2e4      	uxtb	r4, r4
 800f87c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800f880:	fb15 f50a 	smulbb	r5, r5, sl
 800f884:	fb0c 5504 	mla	r5, ip, r4, r5
 800f888:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800f88c:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800f890:	fa5f fe8e 	uxtb.w	lr, lr
 800f894:	fb17 f70a 	smulbb	r7, r7, sl
 800f898:	fb0e 7704 	mla	r7, lr, r4, r7
 800f89c:	b2f6      	uxtb	r6, r6
 800f89e:	b2ad      	uxth	r5, r5
 800f8a0:	fb16 f60a 	smulbb	r6, r6, sl
 800f8a4:	b2bf      	uxth	r7, r7
 800f8a6:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800f8aa:	fb0c 6c04 	mla	ip, ip, r4, r6
 800f8ae:	1c6c      	adds	r4, r5, #1
 800f8b0:	1c7e      	adds	r6, r7, #1
 800f8b2:	eb04 2515 	add.w	r5, r4, r5, lsr #8
 800f8b6:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 800f8ba:	fa1f fc8c 	uxth.w	ip, ip
 800f8be:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800f8c2:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 800f8c6:	4335      	orrs	r5, r6
 800f8c8:	f10c 0601 	add.w	r6, ip, #1
 800f8cc:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 800f8d0:	0976      	lsrs	r6, r6, #5
 800f8d2:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800f8d6:	4335      	orrs	r5, r6
 800f8d8:	f820 5018 	strh.w	r5, [r0, r8, lsl #1]
 800f8dc:	9c11      	ldr	r4, [sp, #68]	; 0x44
 800f8de:	4421      	add	r1, r4
 800f8e0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 800f8e2:	f108 0801 	add.w	r8, r8, #1
 800f8e6:	4422      	add	r2, r4
 800f8e8:	e7a4      	b.n	800f834 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 800f8ea:	4c05      	ldr	r4, [pc, #20]	; (800f900 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>)
 800f8ec:	ea04 2505 	and.w	r5, r4, r5, lsl #8
 800f8f0:	ea45 05d7 	orr.w	r5, r5, r7, lsr #3
 800f8f4:	00f6      	lsls	r6, r6, #3
 800f8f6:	e7ec      	b.n	800f8d2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 800f8f8:	b005      	add	sp, #20
 800f8fa:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800f8fe:	bf00      	nop
 800f900:	fffff800 	.word	0xfffff800

0800f904 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800f904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800f908:	b087      	sub	sp, #28
 800f90a:	468b      	mov	fp, r1
 800f90c:	9815      	ldr	r0, [sp, #84]	; 0x54
 800f90e:	9204      	str	r2, [sp, #16]
 800f910:	f89d 2064 	ldrb.w	r2, [sp, #100]	; 0x64
 800f914:	9205      	str	r2, [sp, #20]
 800f916:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800f91a:	6841      	ldr	r1, [r0, #4]
 800f91c:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800f920:	fb01 2404 	mla	r4, r1, r4, r2
 800f924:	6802      	ldr	r2, [r0, #0]
 800f926:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800f92a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800f92e:	3201      	adds	r2, #1
 800f930:	f022 0201 	bic.w	r2, r2, #1
 800f934:	9201      	str	r2, [sp, #4]
 800f936:	f8d8 2000 	ldr.w	r2, [r8]
 800f93a:	9202      	str	r2, [sp, #8]
 800f93c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800f940:	f1bb 0f00 	cmp.w	fp, #0
 800f944:	dc03      	bgt.n	800f94e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 800f946:	9a04      	ldr	r2, [sp, #16]
 800f948:	2a00      	cmp	r2, #0
 800f94a:	f340 8146 	ble.w	800fbda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 800f94e:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800f950:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 800f954:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 800f958:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800f95c:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800f95e:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800f962:	2b00      	cmp	r3, #0
 800f964:	dd0e      	ble.n	800f984 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 800f966:	1402      	asrs	r2, r0, #16
 800f968:	d405      	bmi.n	800f976 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800f96a:	42ba      	cmp	r2, r7
 800f96c:	da03      	bge.n	800f976 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800f96e:	140a      	asrs	r2, r1, #16
 800f970:	d401      	bmi.n	800f976 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 800f972:	42b2      	cmp	r2, r6
 800f974:	db07      	blt.n	800f986 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 800f976:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800f978:	4410      	add	r0, r2
 800f97a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800f97c:	3b01      	subs	r3, #1
 800f97e:	4411      	add	r1, r2
 800f980:	3402      	adds	r4, #2
 800f982:	e7ee      	b.n	800f962 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 800f984:	d017      	beq.n	800f9b6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 800f986:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800f988:	1e5a      	subs	r2, r3, #1
 800f98a:	fb05 0502 	mla	r5, r5, r2, r0
 800f98e:	142d      	asrs	r5, r5, #16
 800f990:	d409      	bmi.n	800f9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800f992:	42bd      	cmp	r5, r7
 800f994:	da07      	bge.n	800f9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800f996:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800f998:	fb05 1202 	mla	r2, r5, r2, r1
 800f99c:	1412      	asrs	r2, r2, #16
 800f99e:	d402      	bmi.n	800f9a6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 800f9a0:	42b2      	cmp	r2, r6
 800f9a2:	f2c0 80b3 	blt.w	800fb0c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 800f9a6:	2700      	movs	r7, #0
 800f9a8:	19da      	adds	r2, r3, r7
 800f9aa:	2a00      	cmp	r2, #0
 800f9ac:	dc3e      	bgt.n	800fa2c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 800f9ae:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800f9b2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800f9b6:	f1bb 0f00 	cmp.w	fp, #0
 800f9ba:	f340 810e 	ble.w	800fbda <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 800f9be:	ee30 0a04 	vadd.f32	s0, s0, s8
 800f9c2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800f9c6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800f9ca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800f9cc:	f1bb 0b01 	subs.w	fp, fp, #1
 800f9d0:	ee31 1a05 	vadd.f32	s2, s2, s10
 800f9d4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800f9d8:	eeb0 6a62 	vmov.f32	s12, s5
 800f9dc:	ee61 7a27 	vmul.f32	s15, s2, s15
 800f9e0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800f9e4:	ee77 2a62 	vsub.f32	s5, s14, s5
 800f9e8:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800f9ec:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800f9f0:	eeb0 6a43 	vmov.f32	s12, s6
 800f9f4:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800f9f8:	ee12 2a90 	vmov	r2, s5
 800f9fc:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fa00:	fb92 f3f3 	sdiv	r3, r2, r3
 800fa04:	ee13 2a10 	vmov	r2, s6
 800fa08:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fa0c:	9313      	str	r3, [sp, #76]	; 0x4c
 800fa0e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa10:	fb92 f3f3 	sdiv	r3, r2, r3
 800fa14:	9a04      	ldr	r2, [sp, #16]
 800fa16:	9314      	str	r3, [sp, #80]	; 0x50
 800fa18:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fa1c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fa1e:	eeb0 3a67 	vmov.f32	s6, s15
 800fa22:	bf08      	it	eq
 800fa24:	4613      	moveq	r3, r2
 800fa26:	eef0 2a47 	vmov.f32	s5, s14
 800fa2a:	e789      	b.n	800f940 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 800fa2c:	1405      	asrs	r5, r0, #16
 800fa2e:	d467      	bmi.n	800fb00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 800fa30:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800fa34:	42aa      	cmp	r2, r5
 800fa36:	dd63      	ble.n	800fb00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 800fa38:	140e      	asrs	r6, r1, #16
 800fa3a:	d461      	bmi.n	800fb00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 800fa3c:	f8d8 200c 	ldr.w	r2, [r8, #12]
 800fa40:	42b2      	cmp	r2, r6
 800fa42:	dd5d      	ble.n	800fb00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 800fa44:	9a01      	ldr	r2, [sp, #4]
 800fa46:	fb06 5502 	mla	r5, r6, r2, r5
 800fa4a:	086a      	lsrs	r2, r5, #1
 800fa4c:	9e02      	ldr	r6, [sp, #8]
 800fa4e:	5cb2      	ldrb	r2, [r6, r2]
 800fa50:	07ee      	lsls	r6, r5, #31
 800fa52:	bf54      	ite	pl
 800fa54:	f002 020f 	andpl.w	r2, r2, #15
 800fa58:	1112      	asrmi	r2, r2, #4
 800fa5a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800fa5e:	b2d2      	uxtb	r2, r2
 800fa60:	2a00      	cmp	r2, #0
 800fa62:	d04d      	beq.n	800fb00 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 800fa64:	4d5e      	ldr	r5, [pc, #376]	; (800fbe0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 800fa66:	f8d5 c000 	ldr.w	ip, [r5]
 800fa6a:	f06f 0501 	mvn.w	r5, #1
 800fa6e:	437d      	muls	r5, r7
 800fa70:	9503      	str	r5, [sp, #12]
 800fa72:	f834 e005 	ldrh.w	lr, [r4, r5]
 800fa76:	9d05      	ldr	r5, [sp, #20]
 800fa78:	436a      	muls	r2, r5
 800fa7a:	1c55      	adds	r5, r2, #1
 800fa7c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 800fa80:	1212      	asrs	r2, r2, #8
 800fa82:	fa1f f982 	uxth.w	r9, r2
 800fa86:	ea4f 262e 	mov.w	r6, lr, asr #8
 800fa8a:	f3cc 4507 	ubfx	r5, ip, #16, #8
 800fa8e:	43d2      	mvns	r2, r2
 800fa90:	b2d2      	uxtb	r2, r2
 800fa92:	fb15 f509 	smulbb	r5, r5, r9
 800fa96:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800fa9a:	fb06 5602 	mla	r6, r6, r2, r5
 800fa9e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 800faa2:	ea4f 05ee 	mov.w	r5, lr, asr #3
 800faa6:	fa5f fc8c 	uxtb.w	ip, ip
 800faaa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800faae:	fa5f fe8e 	uxtb.w	lr, lr
 800fab2:	fb1c fc09 	smulbb	ip, ip, r9
 800fab6:	fb0e cc02 	mla	ip, lr, r2, ip
 800faba:	b2b6      	uxth	r6, r6
 800fabc:	fb1a fa09 	smulbb	sl, sl, r9
 800fac0:	fa1f fc8c 	uxth.w	ip, ip
 800fac4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 800fac8:	fb05 a502 	mla	r5, r5, r2, sl
 800facc:	1c72      	adds	r2, r6, #1
 800face:	f10c 0a01 	add.w	sl, ip, #1
 800fad2:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 800fad6:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 800fada:	b2ad      	uxth	r5, r5
 800fadc:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fae0:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 800fae4:	ea4a 0606 	orr.w	r6, sl, r6
 800fae8:	f105 0a01 	add.w	sl, r5, #1
 800faec:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800faf0:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800faf4:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800faf8:	9a03      	ldr	r2, [sp, #12]
 800fafa:	ea46 060a 	orr.w	r6, r6, sl
 800fafe:	52a6      	strh	r6, [r4, r2]
 800fb00:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fb02:	4410      	add	r0, r2
 800fb04:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fb06:	3f01      	subs	r7, #1
 800fb08:	4411      	add	r1, r2
 800fb0a:	e74d      	b.n	800f9a8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 800fb0c:	f04f 0e00 	mov.w	lr, #0
 800fb10:	eba3 020e 	sub.w	r2, r3, lr
 800fb14:	2a00      	cmp	r2, #0
 800fb16:	f77f af4a 	ble.w	800f9ae <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 800fb1a:	9e01      	ldr	r6, [sp, #4]
 800fb1c:	1402      	asrs	r2, r0, #16
 800fb1e:	140d      	asrs	r5, r1, #16
 800fb20:	fb06 2505 	mla	r5, r6, r5, r2
 800fb24:	086a      	lsrs	r2, r5, #1
 800fb26:	9e02      	ldr	r6, [sp, #8]
 800fb28:	5cb2      	ldrb	r2, [r6, r2]
 800fb2a:	07ed      	lsls	r5, r5, #31
 800fb2c:	bf54      	ite	pl
 800fb2e:	f002 020f 	andpl.w	r2, r2, #15
 800fb32:	1112      	asrmi	r2, r2, #4
 800fb34:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800fb38:	b2d2      	uxtb	r2, r2
 800fb3a:	2a00      	cmp	r2, #0
 800fb3c:	d046      	beq.n	800fbcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 800fb3e:	4d28      	ldr	r5, [pc, #160]	; (800fbe0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 800fb40:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800fb44:	682f      	ldr	r7, [r5, #0]
 800fb46:	9d05      	ldr	r5, [sp, #20]
 800fb48:	436a      	muls	r2, r5
 800fb4a:	1c55      	adds	r5, r2, #1
 800fb4c:	eb05 2222 	add.w	r2, r5, r2, asr #8
 800fb50:	1212      	asrs	r2, r2, #8
 800fb52:	fa1f f982 	uxth.w	r9, r2
 800fb56:	ea4f 262c 	mov.w	r6, ip, asr #8
 800fb5a:	f3c7 4507 	ubfx	r5, r7, #16, #8
 800fb5e:	43d2      	mvns	r2, r2
 800fb60:	b2d2      	uxtb	r2, r2
 800fb62:	fb15 f509 	smulbb	r5, r5, r9
 800fb66:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 800fb6a:	fb06 5602 	mla	r6, r6, r2, r5
 800fb6e:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 800fb72:	ea4f 05ec 	mov.w	r5, ip, asr #3
 800fb76:	b2ff      	uxtb	r7, r7
 800fb78:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800fb7c:	fa5f fc8c 	uxtb.w	ip, ip
 800fb80:	fb17 f709 	smulbb	r7, r7, r9
 800fb84:	fb0c 7702 	mla	r7, ip, r2, r7
 800fb88:	b2b6      	uxth	r6, r6
 800fb8a:	fb1a fa09 	smulbb	sl, sl, r9
 800fb8e:	b2bf      	uxth	r7, r7
 800fb90:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 800fb94:	fb05 a502 	mla	r5, r5, r2, sl
 800fb98:	1c72      	adds	r2, r6, #1
 800fb9a:	f107 0a01 	add.w	sl, r7, #1
 800fb9e:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 800fba2:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 800fba6:	b2ad      	uxth	r5, r5
 800fba8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 800fbac:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 800fbb0:	ea4a 0606 	orr.w	r6, sl, r6
 800fbb4:	f105 0a01 	add.w	sl, r5, #1
 800fbb8:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 800fbbc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 800fbc0:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 800fbc4:	ea46 060a 	orr.w	r6, r6, sl
 800fbc8:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 800fbcc:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fbce:	4410      	add	r0, r2
 800fbd0:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fbd2:	f10e 0e01 	add.w	lr, lr, #1
 800fbd6:	4411      	add	r1, r2
 800fbd8:	e79a      	b.n	800fb10 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20c>
 800fbda:	b007      	add	sp, #28
 800fbdc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fbe0:	2000a0f4 	.word	0x2000a0f4

0800fbe4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 800fbe4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fbe8:	b087      	sub	sp, #28
 800fbea:	468b      	mov	fp, r1
 800fbec:	9815      	ldr	r0, [sp, #84]	; 0x54
 800fbee:	9205      	str	r2, [sp, #20]
 800fbf0:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	; 0x58
 800fbf4:	6841      	ldr	r1, [r0, #4]
 800fbf6:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 800fbfa:	fb01 2404 	mla	r4, r1, r4, r2
 800fbfe:	6802      	ldr	r2, [r0, #0]
 800fc00:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 800fc04:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800fc08:	3201      	adds	r2, #1
 800fc0a:	f022 0201 	bic.w	r2, r2, #1
 800fc0e:	9201      	str	r2, [sp, #4]
 800fc10:	f8d8 2000 	ldr.w	r2, [r8]
 800fc14:	9202      	str	r2, [sp, #8]
 800fc16:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 800fc1a:	f1bb 0f00 	cmp.w	fp, #0
 800fc1e:	dc03      	bgt.n	800fc28 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 800fc20:	9a05      	ldr	r2, [sp, #20]
 800fc22:	2a00      	cmp	r2, #0
 800fc24:	f340 8159 	ble.w	800feda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 800fc28:	9a11      	ldr	r2, [sp, #68]	; 0x44
 800fc2a:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 800fc2e:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 800fc32:	f502 4000 	add.w	r0, r2, #32768	; 0x8000
 800fc36:	9a12      	ldr	r2, [sp, #72]	; 0x48
 800fc38:	f502 4100 	add.w	r1, r2, #32768	; 0x8000
 800fc3c:	2b00      	cmp	r3, #0
 800fc3e:	dd0e      	ble.n	800fc5e <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 800fc40:	1402      	asrs	r2, r0, #16
 800fc42:	d405      	bmi.n	800fc50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800fc44:	42ba      	cmp	r2, r7
 800fc46:	da03      	bge.n	800fc50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800fc48:	140a      	asrs	r2, r1, #16
 800fc4a:	d401      	bmi.n	800fc50 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 800fc4c:	42b2      	cmp	r2, r6
 800fc4e:	db07      	blt.n	800fc60 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 800fc50:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fc52:	4410      	add	r0, r2
 800fc54:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fc56:	3b01      	subs	r3, #1
 800fc58:	4411      	add	r1, r2
 800fc5a:	3402      	adds	r4, #2
 800fc5c:	e7ee      	b.n	800fc3c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 800fc5e:	d017      	beq.n	800fc90 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 800fc60:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 800fc62:	1e5a      	subs	r2, r3, #1
 800fc64:	fb05 0502 	mla	r5, r5, r2, r0
 800fc68:	142d      	asrs	r5, r5, #16
 800fc6a:	d409      	bmi.n	800fc80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800fc6c:	42bd      	cmp	r5, r7
 800fc6e:	da07      	bge.n	800fc80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800fc70:	9d14      	ldr	r5, [sp, #80]	; 0x50
 800fc72:	fb05 1202 	mla	r2, r5, r2, r1
 800fc76:	1412      	asrs	r2, r2, #16
 800fc78:	d402      	bmi.n	800fc80 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 800fc7a:	42b2      	cmp	r2, r6
 800fc7c:	f2c0 80c3 	blt.w	800fe06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 800fc80:	2700      	movs	r7, #0
 800fc82:	19da      	adds	r2, r3, r7
 800fc84:	2a00      	cmp	r2, #0
 800fc86:	dc3e      	bgt.n	800fd06 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x122>
 800fc88:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800fc8c:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 800fc90:	f1bb 0f00 	cmp.w	fp, #0
 800fc94:	f340 8121 	ble.w	800feda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f6>
 800fc98:	ee30 0a04 	vadd.f32	s0, s0, s8
 800fc9c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 800fca0:	eec6 7a80 	vdiv.f32	s15, s13, s0
 800fca4:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fca6:	f1bb 0b01 	subs.w	fp, fp, #1
 800fcaa:	ee31 1a05 	vadd.f32	s2, s2, s10
 800fcae:	ee20 7aa7 	vmul.f32	s14, s1, s15
 800fcb2:	eeb0 6a62 	vmov.f32	s12, s5
 800fcb6:	ee61 7a27 	vmul.f32	s15, s2, s15
 800fcba:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fcbe:	ee77 2a62 	vsub.f32	s5, s14, s5
 800fcc2:	ed8d 6a11 	vstr	s12, [sp, #68]	; 0x44
 800fcc6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 800fcca:	eeb0 6a43 	vmov.f32	s12, s6
 800fcce:	ee37 3ac3 	vsub.f32	s6, s15, s6
 800fcd2:	ee12 2a90 	vmov	r2, s5
 800fcd6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 800fcda:	fb92 f3f3 	sdiv	r3, r2, r3
 800fcde:	ee13 2a10 	vmov	r2, s6
 800fce2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 800fce6:	9313      	str	r3, [sp, #76]	; 0x4c
 800fce8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fcea:	fb92 f3f3 	sdiv	r3, r2, r3
 800fcee:	9a05      	ldr	r2, [sp, #20]
 800fcf0:	9314      	str	r3, [sp, #80]	; 0x50
 800fcf2:	ed8d 6a12 	vstr	s12, [sp, #72]	; 0x48
 800fcf6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800fcf8:	eeb0 3a67 	vmov.f32	s6, s15
 800fcfc:	bf08      	it	eq
 800fcfe:	4613      	moveq	r3, r2
 800fd00:	eef0 2a47 	vmov.f32	s5, s14
 800fd04:	e789      	b.n	800fc1a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 800fd06:	1405      	asrs	r5, r0, #16
 800fd08:	d465      	bmi.n	800fdd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 800fd0a:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800fd0e:	42aa      	cmp	r2, r5
 800fd10:	dd61      	ble.n	800fdd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 800fd12:	140e      	asrs	r6, r1, #16
 800fd14:	d45f      	bmi.n	800fdd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 800fd16:	f8d8 200c 	ldr.w	r2, [r8, #12]
 800fd1a:	42b2      	cmp	r2, r6
 800fd1c:	dd5b      	ble.n	800fdd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 800fd1e:	9a01      	ldr	r2, [sp, #4]
 800fd20:	fb06 5502 	mla	r5, r6, r2, r5
 800fd24:	086a      	lsrs	r2, r5, #1
 800fd26:	9e02      	ldr	r6, [sp, #8]
 800fd28:	5cb2      	ldrb	r2, [r6, r2]
 800fd2a:	07ee      	lsls	r6, r5, #31
 800fd2c:	bf54      	ite	pl
 800fd2e:	f002 020f 	andpl.w	r2, r2, #15
 800fd32:	1112      	asrmi	r2, r2, #4
 800fd34:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800fd38:	b2d2      	uxtb	r2, r2
 800fd3a:	2a00      	cmp	r2, #0
 800fd3c:	d04b      	beq.n	800fdd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 800fd3e:	4d68      	ldr	r5, [pc, #416]	; (800fee0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 800fd40:	f8d5 9000 	ldr.w	r9, [r5]
 800fd44:	2aff      	cmp	r2, #255	; 0xff
 800fd46:	ea4f 2519 	mov.w	r5, r9, lsr #8
 800fd4a:	ea4f 4619 	mov.w	r6, r9, lsr #16
 800fd4e:	9503      	str	r5, [sp, #12]
 800fd50:	fa5f f989 	uxtb.w	r9, r9
 800fd54:	d045      	beq.n	800fde2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 800fd56:	f06f 0501 	mvn.w	r5, #1
 800fd5a:	437d      	muls	r5, r7
 800fd5c:	fa1f fa82 	uxth.w	sl, r2
 800fd60:	f834 e005 	ldrh.w	lr, [r4, r5]
 800fd64:	9504      	str	r5, [sp, #16]
 800fd66:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 800fd6a:	43d2      	mvns	r2, r2
 800fd6c:	b2f6      	uxtb	r6, r6
 800fd6e:	b2d2      	uxtb	r2, r2
 800fd70:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 800fd74:	fb16 f60a 	smulbb	r6, r6, sl
 800fd78:	fb0c 6602 	mla	r6, ip, r2, r6
 800fd7c:	ea4f 0cee 	mov.w	ip, lr, asr #3
 800fd80:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 800fd84:	f89d 500c 	ldrb.w	r5, [sp, #12]
 800fd88:	fa5f fe8e 	uxtb.w	lr, lr
 800fd8c:	fb19 f90a 	smulbb	r9, r9, sl
 800fd90:	fb0e 9902 	mla	r9, lr, r2, r9
 800fd94:	b2b6      	uxth	r6, r6
 800fd96:	fb15 f50a 	smulbb	r5, r5, sl
 800fd9a:	fa1f f989 	uxth.w	r9, r9
 800fd9e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 800fda2:	fb0c 5c02 	mla	ip, ip, r2, r5
 800fda6:	1c72      	adds	r2, r6, #1
 800fda8:	f109 0501 	add.w	r5, r9, #1
 800fdac:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 800fdb0:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 800fdb4:	fa1f fc8c 	uxth.w	ip, ip
 800fdb8:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 800fdbc:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 800fdc0:	432e      	orrs	r6, r5
 800fdc2:	f10c 0501 	add.w	r5, ip, #1
 800fdc6:	eb05 251c 	add.w	r5, r5, ip, lsr #8
 800fdca:	096d      	lsrs	r5, r5, #5
 800fdcc:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fdd0:	9a04      	ldr	r2, [sp, #16]
 800fdd2:	432e      	orrs	r6, r5
 800fdd4:	52a6      	strh	r6, [r4, r2]
 800fdd6:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fdd8:	4410      	add	r0, r2
 800fdda:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fddc:	3f01      	subs	r7, #1
 800fdde:	4411      	add	r1, r2
 800fde0:	e74f      	b.n	800fc82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 800fde2:	f06f 0201 	mvn.w	r2, #1
 800fde6:	fb02 fc07 	mul.w	ip, r2, r7
 800fdea:	f2a2 72fe 	subw	r2, r2, #2046	; 0x7fe
 800fdee:	ea02 2606 	and.w	r6, r2, r6, lsl #8
 800fdf2:	9a03      	ldr	r2, [sp, #12]
 800fdf4:	00d5      	lsls	r5, r2, #3
 800fdf6:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 800fdfa:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 800fdfe:	432e      	orrs	r6, r5
 800fe00:	f824 600c 	strh.w	r6, [r4, ip]
 800fe04:	e7e7      	b.n	800fdd6 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f2>
 800fe06:	f04f 0e00 	mov.w	lr, #0
 800fe0a:	eba3 020e 	sub.w	r2, r3, lr
 800fe0e:	2a00      	cmp	r2, #0
 800fe10:	f77f af3a 	ble.w	800fc88 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 800fe14:	9e01      	ldr	r6, [sp, #4]
 800fe16:	1402      	asrs	r2, r0, #16
 800fe18:	140d      	asrs	r5, r1, #16
 800fe1a:	fb06 2505 	mla	r5, r6, r5, r2
 800fe1e:	086a      	lsrs	r2, r5, #1
 800fe20:	9e02      	ldr	r6, [sp, #8]
 800fe22:	5cb2      	ldrb	r2, [r6, r2]
 800fe24:	07ed      	lsls	r5, r5, #31
 800fe26:	bf54      	ite	pl
 800fe28:	f002 020f 	andpl.w	r2, r2, #15
 800fe2c:	1112      	asrmi	r2, r2, #4
 800fe2e:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 800fe32:	b2d2      	uxtb	r2, r2
 800fe34:	2a00      	cmp	r2, #0
 800fe36:	d042      	beq.n	800febe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 800fe38:	4d29      	ldr	r5, [pc, #164]	; (800fee0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>)
 800fe3a:	682f      	ldr	r7, [r5, #0]
 800fe3c:	2aff      	cmp	r2, #255	; 0xff
 800fe3e:	ea4f 4517 	mov.w	r5, r7, lsr #16
 800fe42:	ea4f 2617 	mov.w	r6, r7, lsr #8
 800fe46:	fa5f f987 	uxtb.w	r9, r7
 800fe4a:	d03f      	beq.n	800fecc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 800fe4c:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 800fe50:	fa1f fa82 	uxth.w	sl, r2
 800fe54:	ea4f 272c 	mov.w	r7, ip, asr #8
 800fe58:	43d2      	mvns	r2, r2
 800fe5a:	b2ed      	uxtb	r5, r5
 800fe5c:	b2d2      	uxtb	r2, r2
 800fe5e:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 800fe62:	fb15 f50a 	smulbb	r5, r5, sl
 800fe66:	fb07 5502 	mla	r5, r7, r2, r5
 800fe6a:	ea4f 07ec 	mov.w	r7, ip, asr #3
 800fe6e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 800fe72:	fa5f fc8c 	uxtb.w	ip, ip
 800fe76:	fb19 f90a 	smulbb	r9, r9, sl
 800fe7a:	fb0c 9902 	mla	r9, ip, r2, r9
 800fe7e:	b2f6      	uxtb	r6, r6
 800fe80:	b2ad      	uxth	r5, r5
 800fe82:	fb16 f60a 	smulbb	r6, r6, sl
 800fe86:	fa1f f989 	uxth.w	r9, r9
 800fe8a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 800fe8e:	fb07 6702 	mla	r7, r7, r2, r6
 800fe92:	1c6a      	adds	r2, r5, #1
 800fe94:	f109 0601 	add.w	r6, r9, #1
 800fe98:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 800fe9c:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 800fea0:	b2bf      	uxth	r7, r7
 800fea2:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 800fea6:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 800feaa:	4335      	orrs	r5, r6
 800feac:	1c7e      	adds	r6, r7, #1
 800feae:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 800feb2:	0976      	lsrs	r6, r6, #5
 800feb4:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 800feb8:	4335      	orrs	r5, r6
 800feba:	f824 501e 	strh.w	r5, [r4, lr, lsl #1]
 800febe:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800fec0:	4410      	add	r0, r2
 800fec2:	9a14      	ldr	r2, [sp, #80]	; 0x50
 800fec4:	f10e 0e01 	add.w	lr, lr, #1
 800fec8:	4411      	add	r1, r2
 800feca:	e79e      	b.n	800fe0a <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 800fecc:	4a05      	ldr	r2, [pc, #20]	; (800fee4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>)
 800fece:	ea02 2505 	and.w	r5, r2, r5, lsl #8
 800fed2:	ea45 05d9 	orr.w	r5, r5, r9, lsr #3
 800fed6:	00f6      	lsls	r6, r6, #3
 800fed8:	e7ec      	b.n	800feb4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d0>
 800feda:	b007      	add	sp, #28
 800fedc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fee0:	2000a0f4 	.word	0x2000a0f4
 800fee4:	fffff800 	.word	0xfffff800

0800fee8 <_ZN8touchgfx8LCD16bppD1Ev>:
 800fee8:	4770      	bx	lr

0800feea <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 800feea:	4770      	bx	lr

0800feec <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 800feec:	4770      	bx	lr

0800feee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 800feee:	4770      	bx	lr

0800fef0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 800fef0:	4770      	bx	lr

0800fef2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 800fef2:	4770      	bx	lr

0800fef4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 800fef4:	4770      	bx	lr

0800fef6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 800fef6:	4770      	bx	lr

0800fef8 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 800fef8:	4770      	bx	lr

0800fefa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 800fefa:	4770      	bx	lr

0800fefc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 800fefc:	4770      	bx	lr

0800fefe <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 800fefe:	4770      	bx	lr

0800ff00 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 800ff00:	4770      	bx	lr

0800ff02 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 800ff02:	4770      	bx	lr

0800ff04 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 800ff04:	4770      	bx	lr

0800ff06 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 800ff06:	4770      	bx	lr

0800ff08 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 800ff08:	4770      	bx	lr

0800ff0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 800ff0a:	4770      	bx	lr

0800ff0c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 800ff0c:	4770      	bx	lr

0800ff0e <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 800ff0e:	4770      	bx	lr

0800ff10 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 800ff10:	4770      	bx	lr

0800ff12 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 800ff12:	4770      	bx	lr

0800ff14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 800ff14:	4770      	bx	lr

0800ff16 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 800ff16:	4770      	bx	lr

0800ff18 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 800ff18:	4770      	bx	lr

0800ff1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 800ff1a:	4770      	bx	lr

0800ff1c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 800ff1c:	4770      	bx	lr

0800ff1e <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 800ff1e:	4770      	bx	lr

0800ff20 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 800ff20:	4770      	bx	lr
	...

0800ff24 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 800ff24:	b508      	push	{r3, lr}
 800ff26:	4b06      	ldr	r3, [pc, #24]	; (800ff40 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x1c>)
 800ff28:	8818      	ldrh	r0, [r3, #0]
 800ff2a:	b928      	cbnz	r0, 800ff38 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x14>
 800ff2c:	4b05      	ldr	r3, [pc, #20]	; (800ff44 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x20>)
 800ff2e:	4a06      	ldr	r2, [pc, #24]	; (800ff48 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x24>)
 800ff30:	4806      	ldr	r0, [pc, #24]	; (800ff4c <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0x28>)
 800ff32:	2150      	movs	r1, #80	; 0x50
 800ff34:	f009 fa84 	bl	8019440 <__assert_func>
 800ff38:	0040      	lsls	r0, r0, #1
 800ff3a:	b280      	uxth	r0, r0
 800ff3c:	bd08      	pop	{r3, pc}
 800ff3e:	bf00      	nop
 800ff40:	2000a0e6 	.word	0x2000a0e6
 800ff44:	0801ce80 	.word	0x0801ce80
 800ff48:	0801d478 	.word	0x0801d478
 800ff4c:	0801cec2 	.word	0x0801cec2

0800ff50 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 800ff50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800ff54:	b08b      	sub	sp, #44	; 0x2c
 800ff56:	460f      	mov	r7, r1
 800ff58:	f89d b050 	ldrb.w	fp, [sp, #80]	; 0x50
 800ff5c:	f89d 4054 	ldrb.w	r4, [sp, #84]	; 0x54
 800ff60:	4616      	mov	r6, r2
 800ff62:	f1bb 0f00 	cmp.w	fp, #0
 800ff66:	d046      	beq.n	800fff6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 800ff68:	6810      	ldr	r0, [r2, #0]
 800ff6a:	6851      	ldr	r1, [r2, #4]
 800ff6c:	ad06      	add	r5, sp, #24
 800ff6e:	c503      	stmia	r5!, {r0, r1}
 800ff70:	6818      	ldr	r0, [r3, #0]
 800ff72:	6859      	ldr	r1, [r3, #4]
 800ff74:	ad08      	add	r5, sp, #32
 800ff76:	c503      	stmia	r5!, {r0, r1}
 800ff78:	a806      	add	r0, sp, #24
 800ff7a:	f7fa fda9 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 800ff7e:	4631      	mov	r1, r6
 800ff80:	a808      	add	r0, sp, #32
 800ff82:	f7fa fd8d 	bl	800aaa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 800ff86:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 800ff8a:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 800ff8e:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 800ff92:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 800ff96:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 800ff9a:	fb16 2103 	smlabb	r1, r6, r3, r2
 800ff9e:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 800ffa2:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 800ffa6:	4f5e      	ldr	r7, [pc, #376]	; (8010120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 800ffa8:	440a      	add	r2, r1
 800ffaa:	f8ad 2020 	strh.w	r2, [sp, #32]
 800ffae:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 800ffb2:	6838      	ldr	r0, [r7, #0]
 800ffb4:	4413      	add	r3, r2
 800ffb6:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 800ffba:	6803      	ldr	r3, [r0, #0]
 800ffbc:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800ffbe:	4798      	blx	r3
 800ffc0:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 800ffc4:	46b9      	mov	r9, r7
 800ffc6:	d019      	beq.n	800fffc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xac>
 800ffc8:	f010 0f04 	tst.w	r0, #4
 800ffcc:	d01a      	beq.n	8010004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 800ffce:	f8d9 0000 	ldr.w	r0, [r9]
 800ffd2:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 800ffd6:	6801      	ldr	r1, [r0, #0]
 800ffd8:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 800ffdc:	e9cd b403 	strd	fp, r4, [sp, #12]
 800ffe0:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 800ffe4:	9402      	str	r4, [sp, #8]
 800ffe6:	b2ad      	uxth	r5, r5
 800ffe8:	fa1f f488 	uxth.w	r4, r8
 800ffec:	9501      	str	r5, [sp, #4]
 800ffee:	9400      	str	r4, [sp, #0]
 800fff0:	6c0c      	ldr	r4, [r1, #64]	; 0x40
 800fff2:	4631      	mov	r1, r6
 800fff4:	47a0      	blx	r4
 800fff6:	b00b      	add	sp, #44	; 0x2c
 800fff8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800fffc:	b914      	cbnz	r4, 8010004 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 800fffe:	f010 0f01 	tst.w	r0, #1
 8010002:	e7e3      	b.n	800ffcc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7c>
 8010004:	f8d9 0000 	ldr.w	r0, [r9]
 8010008:	6803      	ldr	r3, [r0, #0]
 801000a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801000c:	4798      	blx	r3
 801000e:	4b45      	ldr	r3, [pc, #276]	; (8010124 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 8010010:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	; 0x22
 8010014:	881a      	ldrh	r2, [r3, #0]
 8010016:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801001a:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801001e:	fb02 1404 	mla	r4, r2, r4, r1
 8010022:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8010026:	469a      	mov	sl, r3
 8010028:	fb05 f502 	mul.w	r5, r5, r2
 801002c:	ea4f 0748 	mov.w	r7, r8, lsl #1
 8010030:	d059      	beq.n	80100e6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x196>
 8010032:	f1cb 09ff 	rsb	r9, fp, #255	; 0xff
 8010036:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801003a:	fa1f f28b 	uxth.w	r2, fp
 801003e:	fa1f f989 	uxth.w	r9, r9
 8010042:	469e      	mov	lr, r3
 8010044:	42ac      	cmp	r4, r5
 8010046:	d264      	bcs.n	8010112 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 8010048:	eb04 0a07 	add.w	sl, r4, r7
 801004c:	4554      	cmp	r4, sl
 801004e:	d23d      	bcs.n	80100cc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x17c>
 8010050:	8821      	ldrh	r1, [r4, #0]
 8010052:	f836 3b02 	ldrh.w	r3, [r6], #2
 8010056:	1208      	asrs	r0, r1, #8
 8010058:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801005c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8010060:	fb10 f009 	smulbb	r0, r0, r9
 8010064:	ea4f 0be1 	mov.w	fp, r1, asr #3
 8010068:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801006c:	00c9      	lsls	r1, r1, #3
 801006e:	fb0c 0c02 	mla	ip, ip, r2, r0
 8010072:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8010076:	10d8      	asrs	r0, r3, #3
 8010078:	b2c9      	uxtb	r1, r1
 801007a:	00db      	lsls	r3, r3, #3
 801007c:	fa1f fc8c 	uxth.w	ip, ip
 8010080:	fb1b fb09 	smulbb	fp, fp, r9
 8010084:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8010088:	b2db      	uxtb	r3, r3
 801008a:	fb11 f109 	smulbb	r1, r1, r9
 801008e:	fb00 b002 	mla	r0, r0, r2, fp
 8010092:	fb03 1302 	mla	r3, r3, r2, r1
 8010096:	f10c 0b01 	add.w	fp, ip, #1
 801009a:	b29b      	uxth	r3, r3
 801009c:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 80100a0:	b280      	uxth	r0, r0
 80100a2:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80100a6:	f103 0c01 	add.w	ip, r3, #1
 80100aa:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80100ae:	1c43      	adds	r3, r0, #1
 80100b0:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80100b4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80100b8:	0940      	lsrs	r0, r0, #5
 80100ba:	ea4c 0c0b 	orr.w	ip, ip, fp
 80100be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80100c2:	ea4c 0c00 	orr.w	ip, ip, r0
 80100c6:	f824 cb02 	strh.w	ip, [r4], #2
 80100ca:	e7bf      	b.n	801004c <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfc>
 80100cc:	f8be 3000 	ldrh.w	r3, [lr]
 80100d0:	eba3 0308 	sub.w	r3, r3, r8
 80100d4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80100d8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80100dc:	eba3 0308 	sub.w	r3, r3, r8
 80100e0:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 80100e4:	e7ae      	b.n	8010044 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xf4>
 80100e6:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 80100ea:	f8d9 0000 	ldr.w	r0, [r9]
 80100ee:	42ac      	cmp	r4, r5
 80100f0:	6803      	ldr	r3, [r0, #0]
 80100f2:	d20e      	bcs.n	8010112 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c2>
 80100f4:	f8d3 8030 	ldr.w	r8, [r3, #48]	; 0x30
 80100f8:	4632      	mov	r2, r6
 80100fa:	463b      	mov	r3, r7
 80100fc:	4621      	mov	r1, r4
 80100fe:	47c0      	blx	r8
 8010100:	f8ba 3000 	ldrh.w	r3, [sl]
 8010104:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8010108:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801010c:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 8010110:	e7eb      	b.n	80100ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19a>
 8010112:	4b03      	ldr	r3, [pc, #12]	; (8010120 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d0>)
 8010114:	6818      	ldr	r0, [r3, #0]
 8010116:	6803      	ldr	r3, [r0, #0]
 8010118:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801011a:	4798      	blx	r3
 801011c:	e76b      	b.n	800fff6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xa6>
 801011e:	bf00      	nop
 8010120:	2000a0ec 	.word	0x2000a0ec
 8010124:	2000a0e6 	.word	0x2000a0e6

08010128 <_ZN8touchgfx8LCD16bppD0Ev>:
 8010128:	b510      	push	{r4, lr}
 801012a:	2178      	movs	r1, #120	; 0x78
 801012c:	4604      	mov	r4, r0
 801012e:	f009 f958 	bl	80193e2 <_ZdlPvj>
 8010132:	4620      	mov	r0, r4
 8010134:	bd10      	pop	{r4, pc}

08010136 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 8010136:	b510      	push	{r4, lr}
 8010138:	2104      	movs	r1, #4
 801013a:	4604      	mov	r4, r0
 801013c:	f009 f951 	bl	80193e2 <_ZdlPvj>
 8010140:	4620      	mov	r0, r4
 8010142:	bd10      	pop	{r4, pc}

08010144 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 8010144:	b510      	push	{r4, lr}
 8010146:	2104      	movs	r1, #4
 8010148:	4604      	mov	r4, r0
 801014a:	f009 f94a 	bl	80193e2 <_ZdlPvj>
 801014e:	4620      	mov	r0, r4
 8010150:	bd10      	pop	{r4, pc}

08010152 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010152:	b510      	push	{r4, lr}
 8010154:	2104      	movs	r1, #4
 8010156:	4604      	mov	r4, r0
 8010158:	f009 f943 	bl	80193e2 <_ZdlPvj>
 801015c:	4620      	mov	r0, r4
 801015e:	bd10      	pop	{r4, pc}

08010160 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8010160:	b510      	push	{r4, lr}
 8010162:	2104      	movs	r1, #4
 8010164:	4604      	mov	r4, r0
 8010166:	f009 f93c 	bl	80193e2 <_ZdlPvj>
 801016a:	4620      	mov	r0, r4
 801016c:	bd10      	pop	{r4, pc}

0801016e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801016e:	b510      	push	{r4, lr}
 8010170:	2104      	movs	r1, #4
 8010172:	4604      	mov	r4, r0
 8010174:	f009 f935 	bl	80193e2 <_ZdlPvj>
 8010178:	4620      	mov	r0, r4
 801017a:	bd10      	pop	{r4, pc}

0801017c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801017c:	b510      	push	{r4, lr}
 801017e:	2104      	movs	r1, #4
 8010180:	4604      	mov	r4, r0
 8010182:	f009 f92e 	bl	80193e2 <_ZdlPvj>
 8010186:	4620      	mov	r0, r4
 8010188:	bd10      	pop	{r4, pc}

0801018a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801018a:	b510      	push	{r4, lr}
 801018c:	2104      	movs	r1, #4
 801018e:	4604      	mov	r4, r0
 8010190:	f009 f927 	bl	80193e2 <_ZdlPvj>
 8010194:	4620      	mov	r0, r4
 8010196:	bd10      	pop	{r4, pc}

08010198 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 8010198:	b510      	push	{r4, lr}
 801019a:	2104      	movs	r1, #4
 801019c:	4604      	mov	r4, r0
 801019e:	f009 f920 	bl	80193e2 <_ZdlPvj>
 80101a2:	4620      	mov	r0, r4
 80101a4:	bd10      	pop	{r4, pc}

080101a6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80101a6:	b510      	push	{r4, lr}
 80101a8:	2104      	movs	r1, #4
 80101aa:	4604      	mov	r4, r0
 80101ac:	f009 f919 	bl	80193e2 <_ZdlPvj>
 80101b0:	4620      	mov	r0, r4
 80101b2:	bd10      	pop	{r4, pc}

080101b4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 80101b4:	b510      	push	{r4, lr}
 80101b6:	2104      	movs	r1, #4
 80101b8:	4604      	mov	r4, r0
 80101ba:	f009 f912 	bl	80193e2 <_ZdlPvj>
 80101be:	4620      	mov	r0, r4
 80101c0:	bd10      	pop	{r4, pc}

080101c2 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 80101c2:	b510      	push	{r4, lr}
 80101c4:	2104      	movs	r1, #4
 80101c6:	4604      	mov	r4, r0
 80101c8:	f009 f90b 	bl	80193e2 <_ZdlPvj>
 80101cc:	4620      	mov	r0, r4
 80101ce:	bd10      	pop	{r4, pc}

080101d0 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 80101d0:	b510      	push	{r4, lr}
 80101d2:	2104      	movs	r1, #4
 80101d4:	4604      	mov	r4, r0
 80101d6:	f009 f904 	bl	80193e2 <_ZdlPvj>
 80101da:	4620      	mov	r0, r4
 80101dc:	bd10      	pop	{r4, pc}

080101de <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 80101de:	b510      	push	{r4, lr}
 80101e0:	2104      	movs	r1, #4
 80101e2:	4604      	mov	r4, r0
 80101e4:	f009 f8fd 	bl	80193e2 <_ZdlPvj>
 80101e8:	4620      	mov	r0, r4
 80101ea:	bd10      	pop	{r4, pc}

080101ec <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 80101ec:	b510      	push	{r4, lr}
 80101ee:	2104      	movs	r1, #4
 80101f0:	4604      	mov	r4, r0
 80101f2:	f009 f8f6 	bl	80193e2 <_ZdlPvj>
 80101f6:	4620      	mov	r0, r4
 80101f8:	bd10      	pop	{r4, pc}

080101fa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 80101fa:	b510      	push	{r4, lr}
 80101fc:	2104      	movs	r1, #4
 80101fe:	4604      	mov	r4, r0
 8010200:	f009 f8ef 	bl	80193e2 <_ZdlPvj>
 8010204:	4620      	mov	r0, r4
 8010206:	bd10      	pop	{r4, pc}

08010208 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 8010208:	b510      	push	{r4, lr}
 801020a:	2104      	movs	r1, #4
 801020c:	4604      	mov	r4, r0
 801020e:	f009 f8e8 	bl	80193e2 <_ZdlPvj>
 8010212:	4620      	mov	r0, r4
 8010214:	bd10      	pop	{r4, pc}

08010216 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 8010216:	b510      	push	{r4, lr}
 8010218:	2104      	movs	r1, #4
 801021a:	4604      	mov	r4, r0
 801021c:	f009 f8e1 	bl	80193e2 <_ZdlPvj>
 8010220:	4620      	mov	r0, r4
 8010222:	bd10      	pop	{r4, pc}

08010224 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 8010224:	b510      	push	{r4, lr}
 8010226:	2104      	movs	r1, #4
 8010228:	4604      	mov	r4, r0
 801022a:	f009 f8da 	bl	80193e2 <_ZdlPvj>
 801022e:	4620      	mov	r0, r4
 8010230:	bd10      	pop	{r4, pc}

08010232 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 8010232:	b510      	push	{r4, lr}
 8010234:	2104      	movs	r1, #4
 8010236:	4604      	mov	r4, r0
 8010238:	f009 f8d3 	bl	80193e2 <_ZdlPvj>
 801023c:	4620      	mov	r0, r4
 801023e:	bd10      	pop	{r4, pc}

08010240 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010240:	b510      	push	{r4, lr}
 8010242:	2104      	movs	r1, #4
 8010244:	4604      	mov	r4, r0
 8010246:	f009 f8cc 	bl	80193e2 <_ZdlPvj>
 801024a:	4620      	mov	r0, r4
 801024c:	bd10      	pop	{r4, pc}

0801024e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801024e:	b510      	push	{r4, lr}
 8010250:	2104      	movs	r1, #4
 8010252:	4604      	mov	r4, r0
 8010254:	f009 f8c5 	bl	80193e2 <_ZdlPvj>
 8010258:	4620      	mov	r0, r4
 801025a:	bd10      	pop	{r4, pc}

0801025c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801025c:	b510      	push	{r4, lr}
 801025e:	2104      	movs	r1, #4
 8010260:	4604      	mov	r4, r0
 8010262:	f009 f8be 	bl	80193e2 <_ZdlPvj>
 8010266:	4620      	mov	r0, r4
 8010268:	bd10      	pop	{r4, pc}

0801026a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801026a:	b510      	push	{r4, lr}
 801026c:	2104      	movs	r1, #4
 801026e:	4604      	mov	r4, r0
 8010270:	f009 f8b7 	bl	80193e2 <_ZdlPvj>
 8010274:	4620      	mov	r0, r4
 8010276:	bd10      	pop	{r4, pc}

08010278 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 8010278:	b510      	push	{r4, lr}
 801027a:	2104      	movs	r1, #4
 801027c:	4604      	mov	r4, r0
 801027e:	f009 f8b0 	bl	80193e2 <_ZdlPvj>
 8010282:	4620      	mov	r0, r4
 8010284:	bd10      	pop	{r4, pc}

08010286 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 8010286:	b510      	push	{r4, lr}
 8010288:	2104      	movs	r1, #4
 801028a:	4604      	mov	r4, r0
 801028c:	f009 f8a9 	bl	80193e2 <_ZdlPvj>
 8010290:	4620      	mov	r0, r4
 8010292:	bd10      	pop	{r4, pc}

08010294 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 8010294:	b510      	push	{r4, lr}
 8010296:	2104      	movs	r1, #4
 8010298:	4604      	mov	r4, r0
 801029a:	f009 f8a2 	bl	80193e2 <_ZdlPvj>
 801029e:	4620      	mov	r0, r4
 80102a0:	bd10      	pop	{r4, pc}

080102a2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 80102a2:	b510      	push	{r4, lr}
 80102a4:	2104      	movs	r1, #4
 80102a6:	4604      	mov	r4, r0
 80102a8:	f009 f89b 	bl	80193e2 <_ZdlPvj>
 80102ac:	4620      	mov	r0, r4
 80102ae:	bd10      	pop	{r4, pc}

080102b0 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 80102b0:	b510      	push	{r4, lr}
 80102b2:	2104      	movs	r1, #4
 80102b4:	4604      	mov	r4, r0
 80102b6:	f009 f894 	bl	80193e2 <_ZdlPvj>
 80102ba:	4620      	mov	r0, r4
 80102bc:	bd10      	pop	{r4, pc}
	...

080102c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 80102c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80102c4:	4f97      	ldr	r7, [pc, #604]	; (8010524 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x264>)
 80102c6:	4616      	mov	r6, r2
 80102c8:	683a      	ldr	r2, [r7, #0]
 80102ca:	f892 2048 	ldrb.w	r2, [r2, #72]	; 0x48
 80102ce:	2a02      	cmp	r2, #2
 80102d0:	b08f      	sub	sp, #60	; 0x3c
 80102d2:	4604      	mov	r4, r0
 80102d4:	4689      	mov	r9, r1
 80102d6:	d106      	bne.n	80102e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26>
 80102d8:	4b93      	ldr	r3, [pc, #588]	; (8010528 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x268>)
 80102da:	4a94      	ldr	r2, [pc, #592]	; (801052c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 80102dc:	f240 310f 	movw	r1, #783	; 0x30f
 80102e0:	4893      	ldr	r0, [pc, #588]	; (8010530 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x270>)
 80102e2:	f009 f8ad 	bl	8019440 <__assert_func>
 80102e6:	ad0e      	add	r5, sp, #56	; 0x38
 80102e8:	f825 3d24 	strh.w	r3, [r5, #-36]!
 80102ec:	4628      	mov	r0, r5
 80102ee:	f7fd fb6b 	bl	800d9c8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 80102f2:	6823      	ldr	r3, [r4, #0]
 80102f4:	4680      	mov	r8, r0
 80102f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80102f8:	4620      	mov	r0, r4
 80102fa:	4798      	blx	r3
 80102fc:	4580      	cmp	r8, r0
 80102fe:	d004      	beq.n	801030a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x4a>
 8010300:	4b8c      	ldr	r3, [pc, #560]	; (8010534 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x274>)
 8010302:	4a8a      	ldr	r2, [pc, #552]	; (801052c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8010304:	f240 3111 	movw	r1, #785	; 0x311
 8010308:	e7ea      	b.n	80102e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801030a:	4628      	mov	r0, r5
 801030c:	f7fd fad2 	bl	800d8b4 <_ZNK8touchgfx6Bitmap7getDataEv>
 8010310:	4680      	mov	r8, r0
 8010312:	b920      	cbnz	r0, 801031e <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x5e>
 8010314:	4b88      	ldr	r3, [pc, #544]	; (8010538 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x278>)
 8010316:	4a85      	ldr	r2, [pc, #532]	; (801052c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 8010318:	f240 3113 	movw	r1, #787	; 0x313
 801031c:	e7e0      	b.n	80102e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 801031e:	6830      	ldr	r0, [r6, #0]
 8010320:	6871      	ldr	r1, [r6, #4]
 8010322:	f9b6 a000 	ldrsh.w	sl, [r6]
 8010326:	ab06      	add	r3, sp, #24
 8010328:	c303      	stmia	r3!, {r0, r1}
 801032a:	f8d9 1004 	ldr.w	r1, [r9, #4]
 801032e:	f8d9 0000 	ldr.w	r0, [r9]
 8010332:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 8010336:	ab08      	add	r3, sp, #32
 8010338:	c303      	stmia	r3!, {r0, r1}
 801033a:	4628      	mov	r0, r5
 801033c:	f7fd f9b2 	bl	800d6a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8010340:	4606      	mov	r6, r0
 8010342:	4628      	mov	r0, r5
 8010344:	f7fd f9e8 	bl	800d718 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8010348:	f10d 0b20 	add.w	fp, sp, #32
 801034c:	f8ad 002e 	strh.w	r0, [sp, #46]	; 0x2e
 8010350:	a806      	add	r0, sp, #24
 8010352:	f8ad a028 	strh.w	sl, [sp, #40]	; 0x28
 8010356:	f8ad 902a 	strh.w	r9, [sp, #42]	; 0x2a
 801035a:	f8ad 602c 	strh.w	r6, [sp, #44]	; 0x2c
 801035e:	f7fa fbb7 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010362:	4658      	mov	r0, fp
 8010364:	f7fa fbb4 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010368:	a80a      	add	r0, sp, #40	; 0x28
 801036a:	f7fa fbb1 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801036e:	4d73      	ldr	r5, [pc, #460]	; (801053c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x27c>)
 8010370:	4b73      	ldr	r3, [pc, #460]	; (8010540 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 8010372:	f9b5 2000 	ldrsh.w	r2, [r5]
 8010376:	f9b3 3000 	ldrsh.w	r3, [r3]
 801037a:	f8ad 2034 	strh.w	r2, [sp, #52]	; 0x34
 801037e:	2100      	movs	r1, #0
 8010380:	910c      	str	r1, [sp, #48]	; 0x30
 8010382:	4658      	mov	r0, fp
 8010384:	a90c      	add	r1, sp, #48	; 0x30
 8010386:	f8ad 3036 	strh.w	r3, [sp, #54]	; 0x36
 801038a:	f7f8 fbf1 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 801038e:	4658      	mov	r0, fp
 8010390:	f7f8 fc31 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010394:	2800      	cmp	r0, #0
 8010396:	f040 8099 	bne.w	80104cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801039a:	f9bd 0020 	ldrsh.w	r0, [sp, #32]
 801039e:	f9bd 1018 	ldrsh.w	r1, [sp, #24]
 80103a2:	4288      	cmp	r0, r1
 80103a4:	db37      	blt.n	8010416 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80103a6:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 80103aa:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 80103ae:	429a      	cmp	r2, r3
 80103b0:	db31      	blt.n	8010416 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80103b2:	f8bd 6024 	ldrh.w	r6, [sp, #36]	; 0x24
 80103b6:	4430      	add	r0, r6
 80103b8:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 80103bc:	4431      	add	r1, r6
 80103be:	b200      	sxth	r0, r0
 80103c0:	b209      	sxth	r1, r1
 80103c2:	4288      	cmp	r0, r1
 80103c4:	dc27      	bgt.n	8010416 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80103c6:	f8bd 1026 	ldrh.w	r1, [sp, #38]	; 0x26
 80103ca:	440a      	add	r2, r1
 80103cc:	f8bd 101e 	ldrh.w	r1, [sp, #30]
 80103d0:	440b      	add	r3, r1
 80103d2:	b212      	sxth	r2, r2
 80103d4:	b21b      	sxth	r3, r3
 80103d6:	429a      	cmp	r2, r3
 80103d8:	dc1d      	bgt.n	8010416 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x156>
 80103da:	6823      	ldr	r3, [r4, #0]
 80103dc:	4620      	mov	r0, r4
 80103de:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80103e0:	4798      	blx	r3
 80103e2:	4682      	mov	sl, r0
 80103e4:	6838      	ldr	r0, [r7, #0]
 80103e6:	6803      	ldr	r3, [r0, #0]
 80103e8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80103ea:	4798      	blx	r3
 80103ec:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 80103f0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80103f4:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	; 0x2c
 80103f8:	1a5b      	subs	r3, r3, r1
 80103fa:	b29b      	uxth	r3, r3
 80103fc:	b21c      	sxth	r4, r3
 80103fe:	2c00      	cmp	r4, #0
 8010400:	dc0e      	bgt.n	8010420 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x160>
 8010402:	bf1f      	itttt	ne
 8010404:	f8ad 1020 	strhne.w	r1, [sp, #32]
 8010408:	f8bd 1024 	ldrhne.w	r1, [sp, #36]	; 0x24
 801040c:	185b      	addne	r3, r3, r1
 801040e:	f8ad 3024 	strhne.w	r3, [sp, #36]	; 0x24
 8010412:	4644      	mov	r4, r8
 8010414:	e009      	b.n	801042a <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x16a>
 8010416:	4b4b      	ldr	r3, [pc, #300]	; (8010544 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x284>)
 8010418:	4a44      	ldr	r2, [pc, #272]	; (801052c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x26c>)
 801041a:	f240 3121 	movw	r1, #801	; 0x321
 801041e:	e75f      	b.n	80102e0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20>
 8010420:	1ad3      	subs	r3, r2, r3
 8010422:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 8010426:	f8ad 302c 	strh.w	r3, [sp, #44]	; 0x2c
 801042a:	f9bd 602a 	ldrsh.w	r6, [sp, #42]	; 0x2a
 801042e:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 8010432:	1b9b      	subs	r3, r3, r6
 8010434:	b29b      	uxth	r3, r3
 8010436:	b219      	sxth	r1, r3
 8010438:	2900      	cmp	r1, #0
 801043a:	dd4b      	ble.n	80104d4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x214>
 801043c:	4351      	muls	r1, r2
 801043e:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8010442:	f8bd 102e 	ldrh.w	r1, [sp, #46]	; 0x2e
 8010446:	1acb      	subs	r3, r1, r3
 8010448:	f8ad 302e 	strh.w	r3, [sp, #46]	; 0x2e
 801044c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	; 0x2c
 8010450:	2e00      	cmp	r6, #0
 8010452:	dd3b      	ble.n	80104cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 8010454:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	; 0x2e
 8010458:	2b00      	cmp	r3, #0
 801045a:	dd37      	ble.n	80104cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801045c:	f9bd c022 	ldrsh.w	ip, [sp, #34]	; 0x22
 8010460:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 8010464:	fb0a f90c 	mul.w	r9, sl, ip
 8010468:	eb09 0941 	add.w	r9, r9, r1, lsl #1
 801046c:	4481      	add	r9, r0
 801046e:	8828      	ldrh	r0, [r5, #0]
 8010470:	f9bd 5024 	ldrsh.w	r5, [sp, #36]	; 0x24
 8010474:	42ae      	cmp	r6, r5
 8010476:	bfa8      	it	ge
 8010478:	462e      	movge	r6, r5
 801047a:	1a41      	subs	r1, r0, r1
 801047c:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	; 0x26
 8010480:	428e      	cmp	r6, r1
 8010482:	bfa8      	it	ge
 8010484:	460e      	movge	r6, r1
 8010486:	429d      	cmp	r5, r3
 8010488:	bfa8      	it	ge
 801048a:	461d      	movge	r5, r3
 801048c:	4b2c      	ldr	r3, [pc, #176]	; (8010540 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x280>)
 801048e:	881b      	ldrh	r3, [r3, #0]
 8010490:	eba3 030c 	sub.w	r3, r3, ip
 8010494:	429d      	cmp	r5, r3
 8010496:	bfa8      	it	ge
 8010498:	461d      	movge	r5, r3
 801049a:	42b0      	cmp	r0, r6
 801049c:	d12c      	bne.n	80104f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 801049e:	4290      	cmp	r0, r2
 80104a0:	d12a      	bne.n	80104f8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x238>
 80104a2:	6838      	ldr	r0, [r7, #0]
 80104a4:	9203      	str	r2, [sp, #12]
 80104a6:	6803      	ldr	r3, [r0, #0]
 80104a8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80104aa:	4798      	blx	r3
 80104ac:	07c3      	lsls	r3, r0, #31
 80104ae:	d51a      	bpl.n	80104e6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x226>
 80104b0:	9a03      	ldr	r2, [sp, #12]
 80104b2:	6838      	ldr	r0, [r7, #0]
 80104b4:	f8ad 5026 	strh.w	r5, [sp, #38]	; 0x26
 80104b8:	f8ad 2024 	strh.w	r2, [sp, #36]	; 0x24
 80104bc:	6803      	ldr	r3, [r0, #0]
 80104be:	9200      	str	r2, [sp, #0]
 80104c0:	6e5d      	ldr	r5, [r3, #100]	; 0x64
 80104c2:	e89b 0006 	ldmia.w	fp, {r1, r2}
 80104c6:	4623      	mov	r3, r4
 80104c8:	47a8      	blx	r5
 80104ca:	4680      	mov	r8, r0
 80104cc:	4640      	mov	r0, r8
 80104ce:	b00f      	add	sp, #60	; 0x3c
 80104d0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80104d4:	bf1f      	itttt	ne
 80104d6:	f8bd 1026 	ldrhne.w	r1, [sp, #38]	; 0x26
 80104da:	f8ad 6022 	strhne.w	r6, [sp, #34]	; 0x22
 80104de:	185b      	addne	r3, r3, r1
 80104e0:	f8ad 3026 	strhne.w	r3, [sp, #38]	; 0x26
 80104e4:	e7b2      	b.n	801044c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x18c>
 80104e6:	6838      	ldr	r0, [r7, #0]
 80104e8:	6803      	ldr	r3, [r0, #0]
 80104ea:	464a      	mov	r2, r9
 80104ec:	6b1e      	ldr	r6, [r3, #48]	; 0x30
 80104ee:	4621      	mov	r1, r4
 80104f0:	fb05 f30a 	mul.w	r3, r5, sl
 80104f4:	47b0      	blx	r6
 80104f6:	e7e9      	b.n	80104cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 80104f8:	4355      	muls	r5, r2
 80104fa:	eb04 0345 	add.w	r3, r4, r5, lsl #1
 80104fe:	9303      	str	r3, [sp, #12]
 8010500:	0076      	lsls	r6, r6, #1
 8010502:	ea4f 0b42 	mov.w	fp, r2, lsl #1
 8010506:	9b03      	ldr	r3, [sp, #12]
 8010508:	429c      	cmp	r4, r3
 801050a:	d2df      	bcs.n	80104cc <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x20c>
 801050c:	6838      	ldr	r0, [r7, #0]
 801050e:	6803      	ldr	r3, [r0, #0]
 8010510:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8010512:	464a      	mov	r2, r9
 8010514:	461d      	mov	r5, r3
 8010516:	4621      	mov	r1, r4
 8010518:	4633      	mov	r3, r6
 801051a:	47a8      	blx	r5
 801051c:	44d1      	add	r9, sl
 801051e:	445c      	add	r4, fp
 8010520:	e7f1      	b.n	8010506 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t+0x246>
 8010522:	bf00      	nop
 8010524:	2000a0ec 	.word	0x2000a0ec
 8010528:	0801cc78 	.word	0x0801cc78
 801052c:	0801d528 	.word	0x0801d528
 8010530:	0801cd2a 	.word	0x0801cd2a
 8010534:	0801cd5c 	.word	0x0801cd5c
 8010538:	0801cdb1 	.word	0x0801cdb1
 801053c:	2000a0e6 	.word	0x2000a0e6
 8010540:	2000a0e8 	.word	0x2000a0e8
 8010544:	0801cdef 	.word	0x0801cdef

08010548 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 8010548:	b5f0      	push	{r4, r5, r6, r7, lr}
 801054a:	4607      	mov	r7, r0
 801054c:	b087      	sub	sp, #28
 801054e:	460d      	mov	r5, r1
 8010550:	4614      	mov	r4, r2
 8010552:	461e      	mov	r6, r3
 8010554:	b373      	cbz	r3, 80105b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 8010556:	4608      	mov	r0, r1
 8010558:	f7f8 fb4d 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801055c:	bb50      	cbnz	r0, 80105b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 801055e:	6828      	ldr	r0, [r5, #0]
 8010560:	6869      	ldr	r1, [r5, #4]
 8010562:	4d1f      	ldr	r5, [pc, #124]	; (80105e0 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x98>)
 8010564:	ab04      	add	r3, sp, #16
 8010566:	c303      	stmia	r3!, {r0, r1}
 8010568:	a804      	add	r0, sp, #16
 801056a:	f7fa fab1 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801056e:	6828      	ldr	r0, [r5, #0]
 8010570:	6803      	ldr	r3, [r0, #0]
 8010572:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010574:	4798      	blx	r3
 8010576:	2eff      	cmp	r6, #255	; 0xff
 8010578:	d01e      	beq.n	80105b8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x70>
 801057a:	f010 0f08 	tst.w	r0, #8
 801057e:	6828      	ldr	r0, [r5, #0]
 8010580:	6803      	ldr	r3, [r0, #0]
 8010582:	d01c      	beq.n	80105be <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x76>
 8010584:	6d9d      	ldr	r5, [r3, #88]	; 0x58
 8010586:	4b17      	ldr	r3, [pc, #92]	; (80105e4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x9c>)
 8010588:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801058c:	9602      	str	r6, [sp, #8]
 801058e:	ea03 2314 	and.w	r3, r3, r4, lsr #8
 8010592:	f3c4 01c4 	ubfx	r1, r4, #3, #5
 8010596:	0964      	lsrs	r4, r4, #5
 8010598:	4319      	orrs	r1, r3
 801059a:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 801059e:	4321      	orrs	r1, r4
 80105a0:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 80105a4:	9401      	str	r4, [sp, #4]
 80105a6:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 80105aa:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 80105ae:	9400      	str	r4, [sp, #0]
 80105b0:	b289      	uxth	r1, r1
 80105b2:	47a8      	blx	r5
 80105b4:	b007      	add	sp, #28
 80105b6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80105b8:	f010 0f02 	tst.w	r0, #2
 80105bc:	e7df      	b.n	801057e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 80105be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80105c0:	4798      	blx	r3
 80105c2:	4b09      	ldr	r3, [pc, #36]	; (80105e8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0xa0>)
 80105c4:	881a      	ldrh	r2, [r3, #0]
 80105c6:	683b      	ldr	r3, [r7, #0]
 80105c8:	e9cd 4600 	strd	r4, r6, [sp]
 80105cc:	4601      	mov	r1, r0
 80105ce:	69dc      	ldr	r4, [r3, #28]
 80105d0:	4638      	mov	r0, r7
 80105d2:	ab04      	add	r3, sp, #16
 80105d4:	47a0      	blx	r4
 80105d6:	6828      	ldr	r0, [r5, #0]
 80105d8:	6803      	ldr	r3, [r0, #0]
 80105da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80105dc:	4798      	blx	r3
 80105de:	e7e9      	b.n	80105b4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x6c>
 80105e0:	2000a0ec 	.word	0x2000a0ec
 80105e4:	fffff800 	.word	0xfffff800
 80105e8:	2000a0e6 	.word	0x2000a0e6

080105ec <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 80105ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80105f0:	f89d 6024 	ldrb.w	r6, [sp, #36]	; 0x24
 80105f4:	f8dd 8020 	ldr.w	r8, [sp, #32]
 80105f8:	460f      	mov	r7, r1
 80105fa:	4614      	mov	r4, r2
 80105fc:	461d      	mov	r5, r3
 80105fe:	2e00      	cmp	r6, #0
 8010600:	f000 80b6 	beq.w	8010770 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8010604:	4618      	mov	r0, r3
 8010606:	f7f8 faf6 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 801060a:	2800      	cmp	r0, #0
 801060c:	f040 80b0 	bne.w	8010770 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8010610:	f9b5 1000 	ldrsh.w	r1, [r5]
 8010614:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 8010618:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801061c:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 8010620:	fb04 1303 	mla	r3, r4, r3, r1
 8010624:	eb07 0143 	add.w	r1, r7, r3, lsl #1
 8010628:	4365      	muls	r5, r4
 801062a:	2eff      	cmp	r6, #255	; 0xff
 801062c:	eba4 0c00 	sub.w	ip, r4, r0
 8010630:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 8010634:	ea4f 4e18 	mov.w	lr, r8, lsr #16
 8010638:	ea4f 2718 	mov.w	r7, r8, lsr #8
 801063c:	fa5f f288 	uxtb.w	r2, r8
 8010640:	d04a      	beq.n	80106d8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xec>
 8010642:	f1c6 08ff 	rsb	r8, r6, #255	; 0xff
 8010646:	fa5f fe8e 	uxtb.w	lr, lr
 801064a:	b2b6      	uxth	r6, r6
 801064c:	b2ff      	uxtb	r7, r7
 801064e:	0040      	lsls	r0, r0, #1
 8010650:	fb0e fe06 	mul.w	lr, lr, r6
 8010654:	4377      	muls	r7, r6
 8010656:	fb02 f306 	mul.w	r3, r2, r6
 801065a:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 801065e:	fa1f f888 	uxth.w	r8, r8
 8010662:	42a9      	cmp	r1, r5
 8010664:	f080 8084 	bcs.w	8010770 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 8010668:	eb01 0900 	add.w	r9, r1, r0
 801066c:	4549      	cmp	r1, r9
 801066e:	d231      	bcs.n	80106d4 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe8>
 8010670:	880a      	ldrh	r2, [r1, #0]
 8010672:	1214      	asrs	r4, r2, #8
 8010674:	10d6      	asrs	r6, r2, #3
 8010676:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 801067a:	00d2      	lsls	r2, r2, #3
 801067c:	b2d2      	uxtb	r2, r2
 801067e:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8010682:	fb14 f408 	smulbb	r4, r4, r8
 8010686:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801068a:	4474      	add	r4, lr
 801068c:	fb12 f208 	smulbb	r2, r2, r8
 8010690:	b2a4      	uxth	r4, r4
 8010692:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8010696:	441a      	add	r2, r3
 8010698:	b292      	uxth	r2, r2
 801069a:	f104 0a01 	add.w	sl, r4, #1
 801069e:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80106a2:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 80106a6:	fb16 f608 	smulbb	r6, r6, r8
 80106aa:	f102 0a01 	add.w	sl, r2, #1
 80106ae:	443e      	add	r6, r7
 80106b0:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 80106b4:	b2b6      	uxth	r6, r6
 80106b6:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 80106ba:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80106be:	4322      	orrs	r2, r4
 80106c0:	1c74      	adds	r4, r6, #1
 80106c2:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 80106c6:	0976      	lsrs	r6, r6, #5
 80106c8:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 80106cc:	4332      	orrs	r2, r6
 80106ce:	f821 2b02 	strh.w	r2, [r1], #2
 80106d2:	e7cb      	b.n	801066c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x80>
 80106d4:	4461      	add	r1, ip
 80106d6:	e7c4      	b.n	8010662 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 80106d8:	4b26      	ldr	r3, [pc, #152]	; (8010774 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x188>)
 80106da:	00ff      	lsls	r7, r7, #3
 80106dc:	ea03 230e 	and.w	r3, r3, lr, lsl #8
 80106e0:	ea43 03d2 	orr.w	r3, r3, r2, lsr #3
 80106e4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80106e8:	433b      	orrs	r3, r7
 80106ea:	07e2      	lsls	r2, r4, #31
 80106ec:	b29b      	uxth	r3, r3
 80106ee:	d50c      	bpl.n	801070a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11e>
 80106f0:	0040      	lsls	r0, r0, #1
 80106f2:	ea4f 0c4c 	mov.w	ip, ip, lsl #1
 80106f6:	42a9      	cmp	r1, r5
 80106f8:	d23a      	bcs.n	8010770 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 80106fa:	180a      	adds	r2, r1, r0
 80106fc:	4291      	cmp	r1, r2
 80106fe:	d202      	bcs.n	8010706 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11a>
 8010700:	f821 3b02 	strh.w	r3, [r1], #2
 8010704:	e7fa      	b.n	80106fc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 8010706:	4461      	add	r1, ip
 8010708:	e7f5      	b.n	80106f6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x10a>
 801070a:	078f      	lsls	r7, r1, #30
 801070c:	d008      	beq.n	8010720 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x134>
 801070e:	0066      	lsls	r6, r4, #1
 8010710:	460a      	mov	r2, r1
 8010712:	42aa      	cmp	r2, r5
 8010714:	d202      	bcs.n	801071c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x130>
 8010716:	8013      	strh	r3, [r2, #0]
 8010718:	4432      	add	r2, r6
 801071a:	e7fa      	b.n	8010712 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801071c:	3102      	adds	r1, #2
 801071e:	3801      	subs	r0, #1
 8010720:	07c6      	lsls	r6, r0, #31
 8010722:	d50b      	bpl.n	801073c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x150>
 8010724:	f100 4200 	add.w	r2, r0, #2147483648	; 0x80000000
 8010728:	3a01      	subs	r2, #1
 801072a:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801072e:	0066      	lsls	r6, r4, #1
 8010730:	42aa      	cmp	r2, r5
 8010732:	d202      	bcs.n	801073a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x14e>
 8010734:	8013      	strh	r3, [r2, #0]
 8010736:	4432      	add	r2, r6
 8010738:	e7fa      	b.n	8010730 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801073a:	3801      	subs	r0, #1
 801073c:	b1c0      	cbz	r0, 8010770 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 801073e:	1040      	asrs	r0, r0, #1
 8010740:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 8010744:	0080      	lsls	r0, r0, #2
 8010746:	0064      	lsls	r4, r4, #1
 8010748:	42a9      	cmp	r1, r5
 801074a:	d211      	bcs.n	8010770 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x184>
 801074c:	078a      	lsls	r2, r1, #30
 801074e:	d006      	beq.n	801075e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x172>
 8010750:	4b09      	ldr	r3, [pc, #36]	; (8010778 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x18c>)
 8010752:	4a0a      	ldr	r2, [pc, #40]	; (801077c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x190>)
 8010754:	480a      	ldr	r0, [pc, #40]	; (8010780 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x194>)
 8010756:	f240 31d6 	movw	r1, #982	; 0x3d6
 801075a:	f008 fe71 	bl	8019440 <__assert_func>
 801075e:	180e      	adds	r6, r1, r0
 8010760:	460a      	mov	r2, r1
 8010762:	42b2      	cmp	r2, r6
 8010764:	d202      	bcs.n	801076c <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x180>
 8010766:	f842 3b04 	str.w	r3, [r2], #4
 801076a:	e7fa      	b.n	8010762 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x176>
 801076c:	4421      	add	r1, r4
 801076e:	e7eb      	b.n	8010748 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15c>
 8010770:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010774:	fffff800 	.word	0xfffff800
 8010778:	0801cb29 	.word	0x0801cb29
 801077c:	0801d174 	.word	0x0801d174
 8010780:	0801cd2a 	.word	0x0801cd2a

08010784 <_ZN8touchgfx8LCD16bppC1Ev>:
 8010784:	2200      	movs	r2, #0
 8010786:	4910      	ldr	r1, [pc, #64]	; (80107c8 <_ZN8touchgfx8LCD16bppC1Ev+0x44>)
 8010788:	6042      	str	r2, [r0, #4]
 801078a:	6001      	str	r1, [r0, #0]
 801078c:	e9c0 2202 	strd	r2, r2, [r0, #8]
 8010790:	e9c0 2204 	strd	r2, r2, [r0, #16]
 8010794:	e9c0 2206 	strd	r2, r2, [r0, #24]
 8010798:	e9c0 2208 	strd	r2, r2, [r0, #32]
 801079c:	e9c0 220a 	strd	r2, r2, [r0, #40]	; 0x28
 80107a0:	e9c0 220c 	strd	r2, r2, [r0, #48]	; 0x30
 80107a4:	e9c0 220e 	strd	r2, r2, [r0, #56]	; 0x38
 80107a8:	e9c0 2210 	strd	r2, r2, [r0, #64]	; 0x40
 80107ac:	e9c0 2212 	strd	r2, r2, [r0, #72]	; 0x48
 80107b0:	e9c0 2214 	strd	r2, r2, [r0, #80]	; 0x50
 80107b4:	e9c0 2216 	strd	r2, r2, [r0, #88]	; 0x58
 80107b8:	e9c0 2218 	strd	r2, r2, [r0, #96]	; 0x60
 80107bc:	e9c0 221a 	strd	r2, r2, [r0, #104]	; 0x68
 80107c0:	e9c0 221c 	strd	r2, r2, [r0, #112]	; 0x70
 80107c4:	4770      	bx	lr
 80107c6:	bf00      	nop
 80107c8:	0801d130 	.word	0x0801d130

080107cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 80107cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80107d0:	460d      	mov	r5, r1
 80107d2:	b08b      	sub	sp, #44	; 0x2c
 80107d4:	4604      	mov	r4, r0
 80107d6:	6808      	ldr	r0, [r1, #0]
 80107d8:	6849      	ldr	r1, [r1, #4]
 80107da:	4699      	mov	r9, r3
 80107dc:	ab06      	add	r3, sp, #24
 80107de:	c303      	stmia	r3!, {r0, r1}
 80107e0:	6810      	ldr	r0, [r2, #0]
 80107e2:	6851      	ldr	r1, [r2, #4]
 80107e4:	ab08      	add	r3, sp, #32
 80107e6:	c303      	stmia	r3!, {r0, r1}
 80107e8:	a806      	add	r0, sp, #24
 80107ea:	f7fa f971 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 80107ee:	4629      	mov	r1, r5
 80107f0:	a808      	add	r0, sp, #32
 80107f2:	f7fa f955 	bl	800aaa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 80107f6:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80107fa:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	; 0x22
 80107fe:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8010802:	4d62      	ldr	r5, [pc, #392]	; (801098c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 8010804:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	; 0x24
 8010808:	6828      	ldr	r0, [r5, #0]
 801080a:	f9bd 6026 	ldrsh.w	r6, [sp, #38]	; 0x26
 801080e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8010812:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 8010816:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801081a:	440a      	add	r2, r1
 801081c:	f8ad 2020 	strh.w	r2, [sp, #32]
 8010820:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8010824:	4413      	add	r3, r2
 8010826:	f8ad 3022 	strh.w	r3, [sp, #34]	; 0x22
 801082a:	6803      	ldr	r3, [r0, #0]
 801082c:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801082e:	4798      	blx	r3
 8010830:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8010834:	d118      	bne.n	8010868 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9c>
 8010836:	f010 0f20 	tst.w	r0, #32
 801083a:	6828      	ldr	r0, [r5, #0]
 801083c:	d017      	beq.n	801086e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa2>
 801083e:	f8bd 501c 	ldrh.w	r5, [sp, #28]
 8010842:	6801      	ldr	r1, [r0, #0]
 8010844:	9502      	str	r5, [sp, #8]
 8010846:	b2b6      	uxth	r6, r6
 8010848:	fa1f f588 	uxth.w	r5, r8
 801084c:	f8cd 900c 	str.w	r9, [sp, #12]
 8010850:	9601      	str	r6, [sp, #4]
 8010852:	9500      	str	r5, [sp, #0]
 8010854:	6ccd      	ldr	r5, [r1, #76]	; 0x4c
 8010856:	f8bd 3022 	ldrh.w	r3, [sp, #34]	; 0x22
 801085a:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801085e:	4621      	mov	r1, r4
 8010860:	47a8      	blx	r5
 8010862:	b00b      	add	sp, #44	; 0x2c
 8010864:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010868:	f010 0f40 	tst.w	r0, #64	; 0x40
 801086c:	e7e5      	b.n	801083a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801086e:	6803      	ldr	r3, [r0, #0]
 8010870:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010872:	4798      	blx	r3
 8010874:	4946      	ldr	r1, [pc, #280]	; (8010990 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 8010876:	f9bd 2022 	ldrsh.w	r2, [sp, #34]	; 0x22
 801087a:	880b      	ldrh	r3, [r1, #0]
 801087c:	f9bd 5020 	ldrsh.w	r5, [sp, #32]
 8010880:	fb03 5202 	mla	r2, r3, r2, r5
 8010884:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8010888:	4373      	muls	r3, r6
 801088a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801088e:	9305      	str	r3, [sp, #20]
 8010890:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8010894:	9304      	str	r3, [sp, #16]
 8010896:	468a      	mov	sl, r1
 8010898:	9b05      	ldr	r3, [sp, #20]
 801089a:	4298      	cmp	r0, r3
 801089c:	d26f      	bcs.n	801097e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b2>
 801089e:	9b04      	ldr	r3, [sp, #16]
 80108a0:	4621      	mov	r1, r4
 80108a2:	eb00 0b03 	add.w	fp, r0, r3
 80108a6:	4558      	cmp	r0, fp
 80108a8:	d25c      	bcs.n	8010964 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x198>
 80108aa:	f851 2b04 	ldr.w	r2, [r1], #4
 80108ae:	0e14      	lsrs	r4, r2, #24
 80108b0:	d016      	beq.n	80108e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 80108b2:	2cff      	cmp	r4, #255	; 0xff
 80108b4:	b2d3      	uxtb	r3, r2
 80108b6:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 80108ba:	ea4f 4212 	mov.w	r2, r2, lsr #16
 80108be:	d111      	bne.n	80108e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 80108c0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 80108c4:	d10e      	bne.n	80108e4 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x118>
 80108c6:	f6a4 04ff 	subw	r4, r4, #2303	; 0x8ff
 80108ca:	ea04 2202 	and.w	r2, r4, r2, lsl #8
 80108ce:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80108d2:	ea42 03d3 	orr.w	r3, r2, r3, lsr #3
 80108d6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80108da:	ea43 030c 	orr.w	r3, r3, ip
 80108de:	8003      	strh	r3, [r0, #0]
 80108e0:	3002      	adds	r0, #2
 80108e2:	e7e0      	b.n	80108a6 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xda>
 80108e4:	fb09 f404 	mul.w	r4, r9, r4
 80108e8:	8807      	ldrh	r7, [r0, #0]
 80108ea:	1c65      	adds	r5, r4, #1
 80108ec:	eb05 2424 	add.w	r4, r5, r4, asr #8
 80108f0:	1224      	asrs	r4, r4, #8
 80108f2:	123e      	asrs	r6, r7, #8
 80108f4:	fa1f fe84 	uxth.w	lr, r4
 80108f8:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 80108fc:	43e4      	mvns	r4, r4
 80108fe:	b2d2      	uxtb	r2, r2
 8010900:	b2e4      	uxtb	r4, r4
 8010902:	10fd      	asrs	r5, r7, #3
 8010904:	fb12 f20e 	smulbb	r2, r2, lr
 8010908:	00ff      	lsls	r7, r7, #3
 801090a:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801090e:	fb06 2604 	mla	r6, r6, r4, r2
 8010912:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8010916:	b2ff      	uxtb	r7, r7
 8010918:	fa5f fc8c 	uxtb.w	ip, ip
 801091c:	b2b6      	uxth	r6, r6
 801091e:	fb1c fc0e 	smulbb	ip, ip, lr
 8010922:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8010926:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801092a:	fb13 f30e 	smulbb	r3, r3, lr
 801092e:	fb05 c504 	mla	r5, r5, r4, ip
 8010932:	1c72      	adds	r2, r6, #1
 8010934:	fb07 3704 	mla	r7, r7, r4, r3
 8010938:	b2ad      	uxth	r5, r5
 801093a:	b2bf      	uxth	r7, r7
 801093c:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8010940:	f406 4278 	and.w	r2, r6, #63488	; 0xf800
 8010944:	f105 0c01 	add.w	ip, r5, #1
 8010948:	1c7e      	adds	r6, r7, #1
 801094a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801094e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8010952:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8010956:	096d      	lsrs	r5, r5, #5
 8010958:	4316      	orrs	r6, r2
 801095a:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801095e:	432e      	orrs	r6, r5
 8010960:	8006      	strh	r6, [r0, #0]
 8010962:	e7bd      	b.n	80108e0 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x114>
 8010964:	f8ba 3000 	ldrh.w	r3, [sl]
 8010968:	f9bd 401c 	ldrsh.w	r4, [sp, #28]
 801096c:	eba3 0308 	sub.w	r3, r3, r8
 8010970:	eba4 0408 	sub.w	r4, r4, r8
 8010974:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010978:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801097c:	e78c      	b.n	8010898 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xcc>
 801097e:	4b03      	ldr	r3, [pc, #12]	; (801098c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c0>)
 8010980:	6818      	ldr	r0, [r3, #0]
 8010982:	6803      	ldr	r3, [r0, #0]
 8010984:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010986:	4798      	blx	r3
 8010988:	e76b      	b.n	8010862 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x96>
 801098a:	bf00      	nop
 801098c:	2000a0ec 	.word	0x2000a0ec
 8010990:	2000a0e6 	.word	0x2000a0e6

08010994 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 8010994:	b570      	push	{r4, r5, r6, lr}
 8010996:	9d04      	ldr	r5, [sp, #16]
 8010998:	f89d 6018 	ldrb.w	r6, [sp, #24]
 801099c:	460c      	mov	r4, r1
 801099e:	4619      	mov	r1, r3
 80109a0:	f89d 3014 	ldrb.w	r3, [sp, #20]
 80109a4:	2a0d      	cmp	r2, #13
 80109a6:	d820      	bhi.n	80109ea <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x56>
 80109a8:	e8df f002 	tbb	[pc, r2]
 80109ac:	18121807 	.word	0x18121807
 80109b0:	18181818 	.word	0x18181818
 80109b4:	18181818 	.word	0x18181818
 80109b8:	1818      	.short	0x1818
 80109ba:	6802      	ldr	r2, [r0, #0]
 80109bc:	e9cd 3604 	strd	r3, r6, [sp, #16]
 80109c0:	68d6      	ldr	r6, [r2, #12]
 80109c2:	462b      	mov	r3, r5
 80109c4:	460a      	mov	r2, r1
 80109c6:	46b4      	mov	ip, r6
 80109c8:	4621      	mov	r1, r4
 80109ca:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109ce:	4760      	bx	ip
 80109d0:	462a      	mov	r2, r5
 80109d2:	4620      	mov	r0, r4
 80109d4:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80109d8:	f7ff bef8 	b.w	80107cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80109dc:	4b03      	ldr	r3, [pc, #12]	; (80109ec <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x58>)
 80109de:	4a04      	ldr	r2, [pc, #16]	; (80109f0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x5c>)
 80109e0:	4804      	ldr	r0, [pc, #16]	; (80109f4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x60>)
 80109e2:	f44f 7142 	mov.w	r1, #776	; 0x308
 80109e6:	f008 fd2b 	bl	8019440 <__assert_func>
 80109ea:	bd70      	pop	{r4, r5, r6, pc}
 80109ec:	0801ce4f 	.word	0x0801ce4f
 80109f0:	0801d5ae 	.word	0x0801d5ae
 80109f4:	0801cd2a 	.word	0x0801cd2a

080109f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 80109f8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80109fc:	460e      	mov	r6, r1
 80109fe:	b08c      	sub	sp, #48	; 0x30
 8010a00:	4604      	mov	r4, r0
 8010a02:	6808      	ldr	r0, [r1, #0]
 8010a04:	6849      	ldr	r1, [r1, #4]
 8010a06:	f8df 81d0 	ldr.w	r8, [pc, #464]	; 8010bd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>
 8010a0a:	f8df 91d0 	ldr.w	r9, [pc, #464]	; 8010bdc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>
 8010a0e:	461d      	mov	r5, r3
 8010a10:	ab08      	add	r3, sp, #32
 8010a12:	c303      	stmia	r3!, {r0, r1}
 8010a14:	6810      	ldr	r0, [r2, #0]
 8010a16:	6851      	ldr	r1, [r2, #4]
 8010a18:	ab0a      	add	r3, sp, #40	; 0x28
 8010a1a:	c303      	stmia	r3!, {r0, r1}
 8010a1c:	a808      	add	r0, sp, #32
 8010a1e:	f7fa f857 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010a22:	4631      	mov	r1, r6
 8010a24:	a80a      	add	r0, sp, #40	; 0x28
 8010a26:	f7fa f83b 	bl	800aaa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010a2a:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	; 0x28
 8010a2e:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	; 0x2a
 8010a32:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8010a36:	f8d8 0000 	ldr.w	r0, [r8]
 8010a3a:	f9bd 702c 	ldrsh.w	r7, [sp, #44]	; 0x2c
 8010a3e:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	; 0x2e
 8010a42:	fb11 2103 	smlabb	r1, r1, r3, r2
 8010a46:	440c      	add	r4, r1
 8010a48:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 8010a4c:	440a      	add	r2, r1
 8010a4e:	f8ad 2028 	strh.w	r2, [sp, #40]	; 0x28
 8010a52:	f8bd 2022 	ldrh.w	r2, [sp, #34]	; 0x22
 8010a56:	4413      	add	r3, r2
 8010a58:	f8ad 302a 	strh.w	r3, [sp, #42]	; 0x2a
 8010a5c:	6803      	ldr	r3, [r0, #0]
 8010a5e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010a60:	4798      	blx	r3
 8010a62:	2dff      	cmp	r5, #255	; 0xff
 8010a64:	d122      	bne.n	8010aac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb4>
 8010a66:	f010 0f01 	tst.w	r0, #1
 8010a6a:	f8d8 0000 	ldr.w	r0, [r8]
 8010a6e:	d020      	beq.n	8010ab2 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xba>
 8010a70:	2100      	movs	r1, #0
 8010a72:	f04f 0e01 	mov.w	lr, #1
 8010a76:	f8d0 c000 	ldr.w	ip, [r0]
 8010a7a:	f8bd 302a 	ldrh.w	r3, [sp, #42]	; 0x2a
 8010a7e:	f8bd 2028 	ldrh.w	r2, [sp, #40]	; 0x28
 8010a82:	e9cd e106 	strd	lr, r1, [sp, #24]
 8010a86:	f8b9 e000 	ldrh.w	lr, [r9]
 8010a8a:	9503      	str	r5, [sp, #12]
 8010a8c:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 8010a90:	b2b6      	uxth	r6, r6
 8010a92:	f8bd 1024 	ldrh.w	r1, [sp, #36]	; 0x24
 8010a96:	9102      	str	r1, [sp, #8]
 8010a98:	b2bf      	uxth	r7, r7
 8010a9a:	9601      	str	r6, [sp, #4]
 8010a9c:	9700      	str	r7, [sp, #0]
 8010a9e:	f8dc 503c 	ldr.w	r5, [ip, #60]	; 0x3c
 8010aa2:	4621      	mov	r1, r4
 8010aa4:	47a8      	blx	r5
 8010aa6:	b00c      	add	sp, #48	; 0x30
 8010aa8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8010aac:	f010 0f04 	tst.w	r0, #4
 8010ab0:	e7db      	b.n	8010a6a <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x72>
 8010ab2:	6803      	ldr	r3, [r0, #0]
 8010ab4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010ab6:	4798      	blx	r3
 8010ab8:	f8b9 3000 	ldrh.w	r3, [r9]
 8010abc:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	; 0x2a
 8010ac0:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	; 0x28
 8010ac4:	f9bd c024 	ldrsh.w	ip, [sp, #36]	; 0x24
 8010ac8:	fb03 1202 	mla	r2, r3, r2, r1
 8010acc:	ebac 0c07 	sub.w	ip, ip, r7
 8010ad0:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8010ad4:	435e      	muls	r6, r3
 8010ad6:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 8010ada:	2dff      	cmp	r5, #255	; 0xff
 8010adc:	eba3 0707 	sub.w	r7, r3, r7
 8010ae0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8010ae4:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8010ae8:	ea4f 0747 	mov.w	r7, r7, lsl #1
 8010aec:	d049      	beq.n	8010b82 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18a>
 8010aee:	43eb      	mvns	r3, r5
 8010af0:	fa1f f985 	uxth.w	r9, r5
 8010af4:	b2db      	uxtb	r3, r3
 8010af6:	42b0      	cmp	r0, r6
 8010af8:	d266      	bcs.n	8010bc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8010afa:	eb00 0a0e 	add.w	sl, r0, lr
 8010afe:	4550      	cmp	r0, sl
 8010b00:	4621      	mov	r1, r4
 8010b02:	f104 0403 	add.w	r4, r4, #3
 8010b06:	d25b      	bcs.n	8010bc0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 8010b08:	8802      	ldrh	r2, [r0, #0]
 8010b0a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8010b0e:	ea4f 2822 	mov.w	r8, r2, asr #8
 8010b12:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8010b16:	fb11 f109 	smulbb	r1, r1, r9
 8010b1a:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 8010b1e:	10d5      	asrs	r5, r2, #3
 8010b20:	fb08 1803 	mla	r8, r8, r3, r1
 8010b24:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 8010b28:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8010b2c:	fb11 f109 	smulbb	r1, r1, r9
 8010b30:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 8010b34:	fb05 1503 	mla	r5, r5, r3, r1
 8010b38:	00d2      	lsls	r2, r2, #3
 8010b3a:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8010b3e:	b2d2      	uxtb	r2, r2
 8010b40:	fb11 f109 	smulbb	r1, r1, r9
 8010b44:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 8010b48:	fa1f f888 	uxth.w	r8, r8
 8010b4c:	fb02 1203 	mla	r2, r2, r3, r1
 8010b50:	b292      	uxth	r2, r2
 8010b52:	f108 0101 	add.w	r1, r8, #1
 8010b56:	b2ad      	uxth	r5, r5
 8010b58:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 8010b5c:	1c51      	adds	r1, r2, #1
 8010b5e:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8010b62:	1c69      	adds	r1, r5, #1
 8010b64:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 8010b68:	f408 4878 	and.w	r8, r8, #63488	; 0xf800
 8010b6c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8010b70:	096d      	lsrs	r5, r5, #5
 8010b72:	ea42 0208 	orr.w	r2, r2, r8
 8010b76:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8010b7a:	432a      	orrs	r2, r5
 8010b7c:	f820 2b02 	strh.w	r2, [r0], #2
 8010b80:	e7bd      	b.n	8010afe <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 8010b82:	4a14      	ldr	r2, [pc, #80]	; (8010bd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1dc>)
 8010b84:	42b0      	cmp	r0, r6
 8010b86:	d21f      	bcs.n	8010bc8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 8010b88:	eb00 050e 	add.w	r5, r0, lr
 8010b8c:	42a8      	cmp	r0, r5
 8010b8e:	4621      	mov	r1, r4
 8010b90:	f104 0403 	add.w	r4, r4, #3
 8010b94:	d210      	bcs.n	8010bb8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c0>
 8010b96:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 8010b9a:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 8010b9e:	00db      	lsls	r3, r3, #3
 8010ba0:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 8010ba4:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8010ba8:	430b      	orrs	r3, r1
 8010baa:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 8010bae:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 8010bb2:	f820 3b02 	strh.w	r3, [r0], #2
 8010bb6:	e7e9      	b.n	8010b8c <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 8010bb8:	4438      	add	r0, r7
 8010bba:	eb01 040c 	add.w	r4, r1, ip
 8010bbe:	e7e1      	b.n	8010b84 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x18c>
 8010bc0:	4438      	add	r0, r7
 8010bc2:	eb01 040c 	add.w	r4, r1, ip
 8010bc6:	e796      	b.n	8010af6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xfe>
 8010bc8:	4b03      	ldr	r3, [pc, #12]	; (8010bd8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e0>)
 8010bca:	6818      	ldr	r0, [r3, #0]
 8010bcc:	6803      	ldr	r3, [r0, #0]
 8010bce:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010bd0:	4798      	blx	r3
 8010bd2:	e768      	b.n	8010aa6 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xae>
 8010bd4:	fffff800 	.word	0xfffff800
 8010bd8:	2000a0ec 	.word	0x2000a0ec
 8010bdc:	2000a0e6 	.word	0x2000a0e6

08010be0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 8010be0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010be4:	b093      	sub	sp, #76	; 0x4c
 8010be6:	880e      	ldrh	r6, [r1, #0]
 8010be8:	f89d a070 	ldrb.w	sl, [sp, #112]	; 0x70
 8010bec:	4681      	mov	r9, r0
 8010bee:	4688      	mov	r8, r1
 8010bf0:	4615      	mov	r5, r2
 8010bf2:	b136      	cbz	r6, 8010c02 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x22>
 8010bf4:	4b70      	ldr	r3, [pc, #448]	; (8010db8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1d8>)
 8010bf6:	4a71      	ldr	r2, [pc, #452]	; (8010dbc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1dc>)
 8010bf8:	4871      	ldr	r0, [pc, #452]	; (8010dc0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e0>)
 8010bfa:	f44f 719a 	mov.w	r1, #308	; 0x134
 8010bfe:	f008 fc1f 	bl	8019440 <__assert_func>
 8010c02:	6810      	ldr	r0, [r2, #0]
 8010c04:	6851      	ldr	r1, [r2, #4]
 8010c06:	4f6f      	ldr	r7, [pc, #444]	; (8010dc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8010c08:	f8df b1bc 	ldr.w	fp, [pc, #444]	; 8010dc8 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e8>
 8010c0c:	ac0e      	add	r4, sp, #56	; 0x38
 8010c0e:	c403      	stmia	r4!, {r0, r1}
 8010c10:	6818      	ldr	r0, [r3, #0]
 8010c12:	6859      	ldr	r1, [r3, #4]
 8010c14:	ac10      	add	r4, sp, #64	; 0x40
 8010c16:	c403      	stmia	r4!, {r0, r1}
 8010c18:	a80e      	add	r0, sp, #56	; 0x38
 8010c1a:	f7f9 ff59 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010c1e:	4629      	mov	r1, r5
 8010c20:	a810      	add	r0, sp, #64	; 0x40
 8010c22:	f7f9 ff3d 	bl	800aaa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010c26:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	; 0x40
 8010c2a:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	; 0x42
 8010c2e:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8010c32:	6838      	ldr	r0, [r7, #0]
 8010c34:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	; 0x44
 8010c38:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	; 0x46
 8010c3c:	fb11 2103 	smlabb	r1, r1, r3, r2
 8010c40:	4489      	add	r9, r1
 8010c42:	f8bd 1038 	ldrh.w	r1, [sp, #56]	; 0x38
 8010c46:	440a      	add	r2, r1
 8010c48:	f8ad 2040 	strh.w	r2, [sp, #64]	; 0x40
 8010c4c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	; 0x3a
 8010c50:	4413      	add	r3, r2
 8010c52:	f8ad 3042 	strh.w	r3, [sp, #66]	; 0x42
 8010c56:	6803      	ldr	r3, [r0, #0]
 8010c58:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8010c5a:	4798      	blx	r3
 8010c5c:	f010 0f80 	tst.w	r0, #128	; 0x80
 8010c60:	6838      	ldr	r0, [r7, #0]
 8010c62:	d01c      	beq.n	8010c9e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xbe>
 8010c64:	210b      	movs	r1, #11
 8010c66:	6802      	ldr	r2, [r0, #0]
 8010c68:	9608      	str	r6, [sp, #32]
 8010c6a:	9107      	str	r1, [sp, #28]
 8010c6c:	f8bb 1000 	ldrh.w	r1, [fp]
 8010c70:	9106      	str	r1, [sp, #24]
 8010c72:	2101      	movs	r1, #1
 8010c74:	e9cd a104 	strd	sl, r1, [sp, #16]
 8010c78:	f8bd 103c 	ldrh.w	r1, [sp, #60]	; 0x3c
 8010c7c:	9103      	str	r1, [sp, #12]
 8010c7e:	b2a4      	uxth	r4, r4
 8010c80:	f8bd 1042 	ldrh.w	r1, [sp, #66]	; 0x42
 8010c84:	9100      	str	r1, [sp, #0]
 8010c86:	b2ad      	uxth	r5, r5
 8010c88:	9502      	str	r5, [sp, #8]
 8010c8a:	9401      	str	r4, [sp, #4]
 8010c8c:	6b94      	ldr	r4, [r2, #56]	; 0x38
 8010c8e:	f8bd 3040 	ldrh.w	r3, [sp, #64]	; 0x40
 8010c92:	4642      	mov	r2, r8
 8010c94:	4649      	mov	r1, r9
 8010c96:	47a0      	blx	r4
 8010c98:	b013      	add	sp, #76	; 0x4c
 8010c9a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010c9e:	6803      	ldr	r3, [r0, #0]
 8010ca0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010ca2:	4798      	blx	r3
 8010ca4:	f8bb 3000 	ldrh.w	r3, [fp]
 8010ca8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	; 0x42
 8010cac:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	; 0x40
 8010cb0:	fb03 1202 	mla	r2, r3, r2, r1
 8010cb4:	435d      	muls	r5, r3
 8010cb6:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 8010cba:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 8010cbe:	920c      	str	r2, [sp, #48]	; 0x30
 8010cc0:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	; 0x3c
 8010cc4:	1b12      	subs	r2, r2, r4
 8010cc6:	920d      	str	r2, [sp, #52]	; 0x34
 8010cc8:	0062      	lsls	r2, r4, #1
 8010cca:	1b1c      	subs	r4, r3, r4
 8010ccc:	0063      	lsls	r3, r4, #1
 8010cce:	920a      	str	r2, [sp, #40]	; 0x28
 8010cd0:	930b      	str	r3, [sp, #44]	; 0x2c
 8010cd2:	f04f 0e04 	mov.w	lr, #4
 8010cd6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010cd8:	4298      	cmp	r0, r3
 8010cda:	d266      	bcs.n	8010daa <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ca>
 8010cdc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010cde:	eb00 0b03 	add.w	fp, r0, r3
 8010ce2:	4558      	cmp	r0, fp
 8010ce4:	d25c      	bcs.n	8010da0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c0>
 8010ce6:	f819 3b01 	ldrb.w	r3, [r9], #1
 8010cea:	fb1e e303 	smlabb	r3, lr, r3, lr
 8010cee:	f858 2003 	ldr.w	r2, [r8, r3]
 8010cf2:	0e11      	lsrs	r1, r2, #24
 8010cf4:	d012      	beq.n	8010d1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8010cf6:	29ff      	cmp	r1, #255	; 0xff
 8010cf8:	ea4f 2712 	mov.w	r7, r2, lsr #8
 8010cfc:	d110      	bne.n	8010d20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8010cfe:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8010d02:	d10d      	bne.n	8010d20 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x140>
 8010d04:	0953      	lsrs	r3, r2, #5
 8010d06:	f427 67ff 	bic.w	r7, r7, #2040	; 0x7f8
 8010d0a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8010d0e:	f027 0707 	bic.w	r7, r7, #7
 8010d12:	431f      	orrs	r7, r3
 8010d14:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8010d18:	433a      	orrs	r2, r7
 8010d1a:	8002      	strh	r2, [r0, #0]
 8010d1c:	3002      	adds	r0, #2
 8010d1e:	e7e0      	b.n	8010ce2 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x102>
 8010d20:	fb0a f101 	mul.w	r1, sl, r1
 8010d24:	8806      	ldrh	r6, [r0, #0]
 8010d26:	1c4b      	adds	r3, r1, #1
 8010d28:	eb03 2321 	add.w	r3, r3, r1, asr #8
 8010d2c:	1235      	asrs	r5, r6, #8
 8010d2e:	10f4      	asrs	r4, r6, #3
 8010d30:	121b      	asrs	r3, r3, #8
 8010d32:	00f6      	lsls	r6, r6, #3
 8010d34:	b299      	uxth	r1, r3
 8010d36:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 8010d3a:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 8010d3e:	b2f6      	uxtb	r6, r6
 8010d40:	43db      	mvns	r3, r3
 8010d42:	b2d2      	uxtb	r2, r2
 8010d44:	b2db      	uxtb	r3, r3
 8010d46:	fb1c fc01 	smulbb	ip, ip, r1
 8010d4a:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 8010d4e:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 8010d52:	fb12 f201 	smulbb	r2, r2, r1
 8010d56:	fb05 c503 	mla	r5, r5, r3, ip
 8010d5a:	f004 04fc 	and.w	r4, r4, #252	; 0xfc
 8010d5e:	b2ff      	uxtb	r7, r7
 8010d60:	fb06 2203 	mla	r2, r6, r3, r2
 8010d64:	b2ad      	uxth	r5, r5
 8010d66:	fb17 f701 	smulbb	r7, r7, r1
 8010d6a:	b292      	uxth	r2, r2
 8010d6c:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 8010d70:	fb04 7403 	mla	r4, r4, r3, r7
 8010d74:	f105 0c01 	add.w	ip, r5, #1
 8010d78:	1c57      	adds	r7, r2, #1
 8010d7a:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8010d7e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8010d82:	b2a4      	uxth	r4, r4
 8010d84:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8010d88:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8010d8c:	433d      	orrs	r5, r7
 8010d8e:	1c67      	adds	r7, r4, #1
 8010d90:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 8010d94:	0964      	lsrs	r4, r4, #5
 8010d96:	f404 64fc 	and.w	r4, r4, #2016	; 0x7e0
 8010d9a:	4325      	orrs	r5, r4
 8010d9c:	8005      	strh	r5, [r0, #0]
 8010d9e:	e7bd      	b.n	8010d1c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x13c>
 8010da0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8010da2:	4418      	add	r0, r3
 8010da4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010da6:	4499      	add	r9, r3
 8010da8:	e795      	b.n	8010cd6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xf6>
 8010daa:	4b06      	ldr	r3, [pc, #24]	; (8010dc4 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1e4>)
 8010dac:	6818      	ldr	r0, [r3, #0]
 8010dae:	6803      	ldr	r3, [r0, #0]
 8010db0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010db2:	4798      	blx	r3
 8010db4:	e770      	b.n	8010c98 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xb8>
 8010db6:	bf00      	nop
 8010db8:	0801cc28 	.word	0x0801cc28
 8010dbc:	0801d37f 	.word	0x0801d37f
 8010dc0:	0801cd2a 	.word	0x0801cd2a
 8010dc4:	2000a0ec 	.word	0x2000a0ec
 8010dc8:	2000a0e6 	.word	0x2000a0e6

08010dcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 8010dcc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010dd0:	4614      	mov	r4, r2
 8010dd2:	880a      	ldrh	r2, [r1, #0]
 8010dd4:	b087      	sub	sp, #28
 8010dd6:	2a02      	cmp	r2, #2
 8010dd8:	4680      	mov	r8, r0
 8010dda:	460d      	mov	r5, r1
 8010ddc:	f89d 6040 	ldrb.w	r6, [sp, #64]	; 0x40
 8010de0:	d006      	beq.n	8010df0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x24>
 8010de2:	4b63      	ldr	r3, [pc, #396]	; (8010f70 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a4>)
 8010de4:	4a63      	ldr	r2, [pc, #396]	; (8010f74 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1a8>)
 8010de6:	4864      	ldr	r0, [pc, #400]	; (8010f78 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1ac>)
 8010de8:	f44f 71c7 	mov.w	r1, #398	; 0x18e
 8010dec:	f008 fb28 	bl	8019440 <__assert_func>
 8010df0:	2e00      	cmp	r6, #0
 8010df2:	f000 80b9 	beq.w	8010f68 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x19c>
 8010df6:	6820      	ldr	r0, [r4, #0]
 8010df8:	6861      	ldr	r1, [r4, #4]
 8010dfa:	af02      	add	r7, sp, #8
 8010dfc:	c703      	stmia	r7!, {r0, r1}
 8010dfe:	6818      	ldr	r0, [r3, #0]
 8010e00:	6859      	ldr	r1, [r3, #4]
 8010e02:	af04      	add	r7, sp, #16
 8010e04:	c703      	stmia	r7!, {r0, r1}
 8010e06:	a802      	add	r0, sp, #8
 8010e08:	f7f9 fe62 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010e0c:	4621      	mov	r1, r4
 8010e0e:	a804      	add	r0, sp, #16
 8010e10:	f7f9 fe46 	bl	800aaa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010e14:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8010e18:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8010e1c:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 8010e20:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 8010e24:	fb14 2103 	smlabb	r1, r4, r3, r2
 8010e28:	eb08 0401 	add.w	r4, r8, r1
 8010e2c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 8010e30:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 8010e34:	440a      	add	r2, r1
 8010e36:	f8ad 2010 	strh.w	r2, [sp, #16]
 8010e3a:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8010e3e:	4413      	add	r3, r2
 8010e40:	f8ad 3012 	strh.w	r3, [sp, #18]
 8010e44:	4b4d      	ldr	r3, [pc, #308]	; (8010f7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8010e46:	6818      	ldr	r0, [r3, #0]
 8010e48:	6803      	ldr	r3, [r0, #0]
 8010e4a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8010e4c:	4798      	blx	r3
 8010e4e:	4b4c      	ldr	r3, [pc, #304]	; (8010f80 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b4>)
 8010e50:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 8010e54:	881a      	ldrh	r2, [r3, #0]
 8010e56:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 8010e5a:	2eff      	cmp	r6, #255	; 0xff
 8010e5c:	fb02 c101 	mla	r1, r2, r1, ip
 8010e60:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 8010e64:	fb02 f207 	mul.w	r2, r2, r7
 8010e68:	f105 0104 	add.w	r1, r5, #4
 8010e6c:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 8010e70:	461d      	mov	r5, r3
 8010e72:	d05a      	beq.n	8010f2a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x15e>
 8010e74:	f1c6 0eff 	rsb	lr, r6, #255	; 0xff
 8010e78:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8010e7c:	b2b6      	uxth	r6, r6
 8010e7e:	fa1f fe8e 	uxth.w	lr, lr
 8010e82:	9301      	str	r3, [sp, #4]
 8010e84:	4282      	cmp	r2, r0
 8010e86:	d96a      	bls.n	8010f5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8010e88:	eb00 0b0a 	add.w	fp, r0, sl
 8010e8c:	4583      	cmp	fp, r0
 8010e8e:	d940      	bls.n	8010f12 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x146>
 8010e90:	f814 3b01 	ldrb.w	r3, [r4], #1
 8010e94:	8805      	ldrh	r5, [r0, #0]
 8010e96:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8010e9a:	122f      	asrs	r7, r5, #8
 8010e9c:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8010ea0:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 8010ea4:	fb17 f70e 	smulbb	r7, r7, lr
 8010ea8:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8010eac:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8010eb0:	00ed      	lsls	r5, r5, #3
 8010eb2:	fb0c 7c06 	mla	ip, ip, r6, r7
 8010eb6:	f009 09fc 	and.w	r9, r9, #252	; 0xfc
 8010eba:	10df      	asrs	r7, r3, #3
 8010ebc:	b2ed      	uxtb	r5, r5
 8010ebe:	00db      	lsls	r3, r3, #3
 8010ec0:	fa1f fc8c 	uxth.w	ip, ip
 8010ec4:	fb19 f90e 	smulbb	r9, r9, lr
 8010ec8:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8010ecc:	b2db      	uxtb	r3, r3
 8010ece:	fb15 f50e 	smulbb	r5, r5, lr
 8010ed2:	fb07 9706 	mla	r7, r7, r6, r9
 8010ed6:	fb03 5306 	mla	r3, r3, r6, r5
 8010eda:	f10c 0901 	add.w	r9, ip, #1
 8010ede:	b29b      	uxth	r3, r3
 8010ee0:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 8010ee4:	f40c 4978 	and.w	r9, ip, #63488	; 0xf800
 8010ee8:	f103 0c01 	add.w	ip, r3, #1
 8010eec:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8010ef0:	b2bf      	uxth	r7, r7
 8010ef2:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8010ef6:	ea4c 0c09 	orr.w	ip, ip, r9
 8010efa:	f107 0901 	add.w	r9, r7, #1
 8010efe:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 8010f02:	097f      	lsrs	r7, r7, #5
 8010f04:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8010f08:	ea4c 0c07 	orr.w	ip, ip, r7
 8010f0c:	f820 cb02 	strh.w	ip, [r0], #2
 8010f10:	e7bc      	b.n	8010e8c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xc0>
 8010f12:	9b01      	ldr	r3, [sp, #4]
 8010f14:	881b      	ldrh	r3, [r3, #0]
 8010f16:	eba3 0308 	sub.w	r3, r3, r8
 8010f1a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010f1e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010f22:	eba3 0308 	sub.w	r3, r3, r8
 8010f26:	441c      	add	r4, r3
 8010f28:	e7ac      	b.n	8010e84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xb8>
 8010f2a:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 8010f2e:	4282      	cmp	r2, r0
 8010f30:	d915      	bls.n	8010f5e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x192>
 8010f32:	eb00 060a 	add.w	r6, r0, sl
 8010f36:	4286      	cmp	r6, r0
 8010f38:	d906      	bls.n	8010f48 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17c>
 8010f3a:	f814 3b01 	ldrb.w	r3, [r4], #1
 8010f3e:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 8010f42:	f820 3b02 	strh.w	r3, [r0], #2
 8010f46:	e7f6      	b.n	8010f36 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x16a>
 8010f48:	882b      	ldrh	r3, [r5, #0]
 8010f4a:	eba3 0308 	sub.w	r3, r3, r8
 8010f4e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8010f52:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8010f56:	eba3 0308 	sub.w	r3, r3, r8
 8010f5a:	441c      	add	r4, r3
 8010f5c:	e7e7      	b.n	8010f2e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x162>
 8010f5e:	4b07      	ldr	r3, [pc, #28]	; (8010f7c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x1b0>)
 8010f60:	6818      	ldr	r0, [r3, #0]
 8010f62:	6803      	ldr	r3, [r0, #0]
 8010f64:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8010f66:	4798      	blx	r3
 8010f68:	b007      	add	sp, #28
 8010f6a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010f6e:	bf00      	nop
 8010f70:	0801cb58 	.word	0x0801cb58
 8010f74:	0801d1e9 	.word	0x0801d1e9
 8010f78:	0801cd2a 	.word	0x0801cd2a
 8010f7c:	2000a0ec 	.word	0x2000a0ec
 8010f80:	2000a0e6 	.word	0x2000a0e6

08010f84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 8010f84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8010f88:	f8b1 9000 	ldrh.w	r9, [r1]
 8010f8c:	b091      	sub	sp, #68	; 0x44
 8010f8e:	f1b9 0f01 	cmp.w	r9, #1
 8010f92:	4604      	mov	r4, r0
 8010f94:	460f      	mov	r7, r1
 8010f96:	4690      	mov	r8, r2
 8010f98:	f89d 5068 	ldrb.w	r5, [sp, #104]	; 0x68
 8010f9c:	d006      	beq.n	8010fac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x28>
 8010f9e:	4b84      	ldr	r3, [pc, #528]	; (80111b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x22c>)
 8010fa0:	4a84      	ldr	r2, [pc, #528]	; (80111b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x230>)
 8010fa2:	4885      	ldr	r0, [pc, #532]	; (80111b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x234>)
 8010fa4:	f44f 71ee 	mov.w	r1, #476	; 0x1dc
 8010fa8:	f008 fa4a 	bl	8019440 <__assert_func>
 8010fac:	2d00      	cmp	r5, #0
 8010fae:	d04f      	beq.n	8011050 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 8010fb0:	6810      	ldr	r0, [r2, #0]
 8010fb2:	6851      	ldr	r1, [r2, #4]
 8010fb4:	f8df b208 	ldr.w	fp, [pc, #520]	; 80111c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>
 8010fb8:	ae0c      	add	r6, sp, #48	; 0x30
 8010fba:	c603      	stmia	r6!, {r0, r1}
 8010fbc:	6818      	ldr	r0, [r3, #0]
 8010fbe:	6859      	ldr	r1, [r3, #4]
 8010fc0:	ae0e      	add	r6, sp, #56	; 0x38
 8010fc2:	c603      	stmia	r6!, {r0, r1}
 8010fc4:	a80c      	add	r0, sp, #48	; 0x30
 8010fc6:	f7f9 fd83 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8010fca:	4641      	mov	r1, r8
 8010fcc:	a80e      	add	r0, sp, #56	; 0x38
 8010fce:	f7f9 fd67 	bl	800aaa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8010fd2:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	; 0x38
 8010fd6:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8010fda:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8010fde:	f8db 0000 	ldr.w	r0, [fp]
 8010fe2:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	; 0x3c
 8010fe6:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	; 0x3e
 8010fea:	f8df 81d8 	ldr.w	r8, [pc, #472]	; 80111c4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x240>
 8010fee:	fb11 2103 	smlabb	r1, r1, r3, r2
 8010ff2:	440c      	add	r4, r1
 8010ff4:	f8bd 1030 	ldrh.w	r1, [sp, #48]	; 0x30
 8010ff8:	440a      	add	r2, r1
 8010ffa:	f8ad 2038 	strh.w	r2, [sp, #56]	; 0x38
 8010ffe:	f8bd 2032 	ldrh.w	r2, [sp, #50]	; 0x32
 8011002:	4413      	add	r3, r2
 8011004:	f8ad 303a 	strh.w	r3, [sp, #58]	; 0x3a
 8011008:	6803      	ldr	r3, [r0, #0]
 801100a:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 801100c:	4798      	blx	r3
 801100e:	f010 0f80 	tst.w	r0, #128	; 0x80
 8011012:	f8db 0000 	ldr.w	r0, [fp]
 8011016:	d01e      	beq.n	8011056 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xd2>
 8011018:	210b      	movs	r1, #11
 801101a:	f04f 0c00 	mov.w	ip, #0
 801101e:	6802      	ldr	r2, [r0, #0]
 8011020:	f8bd 3038 	ldrh.w	r3, [sp, #56]	; 0x38
 8011024:	e9cd 1c07 	strd	r1, ip, [sp, #28]
 8011028:	f8b8 1000 	ldrh.w	r1, [r8]
 801102c:	9504      	str	r5, [sp, #16]
 801102e:	e9cd 9105 	strd	r9, r1, [sp, #20]
 8011032:	f8bd 1034 	ldrh.w	r1, [sp, #52]	; 0x34
 8011036:	9103      	str	r1, [sp, #12]
 8011038:	fa1f f18a 	uxth.w	r1, sl
 801103c:	9102      	str	r1, [sp, #8]
 801103e:	b2b6      	uxth	r6, r6
 8011040:	f8bd 103a 	ldrh.w	r1, [sp, #58]	; 0x3a
 8011044:	9100      	str	r1, [sp, #0]
 8011046:	9601      	str	r6, [sp, #4]
 8011048:	6b95      	ldr	r5, [r2, #56]	; 0x38
 801104a:	4621      	mov	r1, r4
 801104c:	463a      	mov	r2, r7
 801104e:	47a8      	blx	r5
 8011050:	b011      	add	sp, #68	; 0x44
 8011052:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011056:	6803      	ldr	r3, [r0, #0]
 8011058:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801105a:	4798      	blx	r3
 801105c:	f8b8 2000 	ldrh.w	r2, [r8]
 8011060:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	; 0x3a
 8011064:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	; 0x38
 8011068:	2dff      	cmp	r5, #255	; 0xff
 801106a:	fb02 1303 	mla	r3, r2, r3, r1
 801106e:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011072:	ea4f 0946 	mov.w	r9, r6, lsl #1
 8011076:	fb0a fa02 	mul.w	sl, sl, r2
 801107a:	d062      	beq.n	8011142 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1be>
 801107c:	ea6f 0c05 	mvn.w	ip, r5
 8011080:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 8011084:	930a      	str	r3, [sp, #40]	; 0x28
 8011086:	b2ad      	uxth	r5, r5
 8011088:	fa5f fc8c 	uxtb.w	ip, ip
 801108c:	f8cd 802c 	str.w	r8, [sp, #44]	; 0x2c
 8011090:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8011092:	4298      	cmp	r0, r3
 8011094:	f080 8085 	bcs.w	80111a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8011098:	eb00 0b09 	add.w	fp, r0, r9
 801109c:	4558      	cmp	r0, fp
 801109e:	d246      	bcs.n	801112e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 80110a0:	f814 eb01 	ldrb.w	lr, [r4], #1
 80110a4:	2303      	movs	r3, #3
 80110a6:	2204      	movs	r2, #4
 80110a8:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 80110ac:	eb07 0a0e 	add.w	sl, r7, lr
 80110b0:	8803      	ldrh	r3, [r0, #0]
 80110b2:	f89a 8002 	ldrb.w	r8, [sl, #2]
 80110b6:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80110ba:	1219      	asrs	r1, r3, #8
 80110bc:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 80110c0:	fb18 f805 	smulbb	r8, r8, r5
 80110c4:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 80110c8:	10da      	asrs	r2, r3, #3
 80110ca:	fb01 810c 	mla	r1, r1, ip, r8
 80110ce:	00db      	lsls	r3, r3, #3
 80110d0:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80110d4:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 80110d8:	b2db      	uxtb	r3, r3
 80110da:	fb18 f805 	smulbb	r8, r8, r5
 80110de:	fb1e fe05 	smulbb	lr, lr, r5
 80110e2:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 80110e6:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 80110ea:	b289      	uxth	r1, r1
 80110ec:	fb02 820c 	mla	r2, r2, ip, r8
 80110f0:	fb03 e30c 	mla	r3, r3, ip, lr
 80110f4:	b292      	uxth	r2, r2
 80110f6:	b29b      	uxth	r3, r3
 80110f8:	f101 0801 	add.w	r8, r1, #1
 80110fc:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 8011100:	f103 0e01 	add.w	lr, r3, #1
 8011104:	f102 0801 	add.w	r8, r2, #1
 8011108:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801110c:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 8011110:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8011114:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 8011118:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801111c:	ea4e 0101 	orr.w	r1, lr, r1
 8011120:	f408 68fc 	and.w	r8, r8, #2016	; 0x7e0
 8011124:	ea41 0108 	orr.w	r1, r1, r8
 8011128:	f820 1b02 	strh.w	r1, [r0], #2
 801112c:	e7b6      	b.n	801109c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x118>
 801112e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011130:	881b      	ldrh	r3, [r3, #0]
 8011132:	1b9b      	subs	r3, r3, r6
 8011134:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011138:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801113c:	1b9b      	subs	r3, r3, r6
 801113e:	441c      	add	r4, r3
 8011140:	e7a6      	b.n	8011090 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x10c>
 8011142:	491e      	ldr	r1, [pc, #120]	; (80111bc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x238>)
 8011144:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 8011148:	2203      	movs	r2, #3
 801114a:	2504      	movs	r5, #4
 801114c:	4550      	cmp	r0, sl
 801114e:	d228      	bcs.n	80111a2 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21e>
 8011150:	eb00 0c09 	add.w	ip, r0, r9
 8011154:	4560      	cmp	r0, ip
 8011156:	4623      	mov	r3, r4
 8011158:	d219      	bcs.n	801118e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801115a:	f893 e000 	ldrb.w	lr, [r3]
 801115e:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 8011162:	eb07 0b0e 	add.w	fp, r7, lr
 8011166:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801116a:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801116e:	f89b b001 	ldrb.w	fp, [fp, #1]
 8011172:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8011176:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801117a:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 801117e:	ea43 030b 	orr.w	r3, r3, fp
 8011182:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 8011186:	3401      	adds	r4, #1
 8011188:	f820 3b02 	strh.w	r3, [r0], #2
 801118c:	e7e2      	b.n	8011154 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1d0>
 801118e:	f8b8 3000 	ldrh.w	r3, [r8]
 8011192:	1b9b      	subs	r3, r3, r6
 8011194:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011198:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	; 0x34
 801119c:	1b9b      	subs	r3, r3, r6
 801119e:	441c      	add	r4, r3
 80111a0:	e7d4      	b.n	801114c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1c8>
 80111a2:	4b07      	ldr	r3, [pc, #28]	; (80111c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x23c>)
 80111a4:	6818      	ldr	r0, [r3, #0]
 80111a6:	6803      	ldr	r3, [r0, #0]
 80111a8:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80111aa:	4798      	blx	r3
 80111ac:	e750      	b.n	8011050 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xcc>
 80111ae:	bf00      	nop
 80111b0:	0801cba6 	.word	0x0801cba6
 80111b4:	0801d272 	.word	0x0801d272
 80111b8:	0801cd2a 	.word	0x0801cd2a
 80111bc:	fffff800 	.word	0xfffff800
 80111c0:	2000a0ec 	.word	0x2000a0ec
 80111c4:	2000a0e6 	.word	0x2000a0e6

080111c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 80111c8:	b430      	push	{r4, r5}
 80111ca:	780d      	ldrb	r5, [r1, #0]
 80111cc:	f89d 4008 	ldrb.w	r4, [sp, #8]
 80111d0:	2d01      	cmp	r5, #1
 80111d2:	d00a      	beq.n	80111ea <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x22>
 80111d4:	d305      	bcc.n	80111e2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x1a>
 80111d6:	2d02      	cmp	r5, #2
 80111d8:	d10b      	bne.n	80111f2 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x2a>
 80111da:	9402      	str	r4, [sp, #8]
 80111dc:	bc30      	pop	{r4, r5}
 80111de:	f7ff bdf5 	b.w	8010dcc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 80111e2:	9402      	str	r4, [sp, #8]
 80111e4:	bc30      	pop	{r4, r5}
 80111e6:	f7ff bcfb 	b.w	8010be0 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 80111ea:	9402      	str	r4, [sp, #8]
 80111ec:	bc30      	pop	{r4, r5}
 80111ee:	f7ff bec9 	b.w	8010f84 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 80111f2:	bc30      	pop	{r4, r5}
 80111f4:	4770      	bx	lr
	...

080111f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 80111f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80111fc:	4604      	mov	r4, r0
 80111fe:	b087      	sub	sp, #28
 8011200:	6810      	ldr	r0, [r2, #0]
 8011202:	f89d a040 	ldrb.w	sl, [sp, #64]	; 0x40
 8011206:	f8df 9238 	ldr.w	r9, [pc, #568]	; 8011440 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801120a:	460e      	mov	r6, r1
 801120c:	6851      	ldr	r1, [r2, #4]
 801120e:	ad02      	add	r5, sp, #8
 8011210:	c503      	stmia	r5!, {r0, r1}
 8011212:	6818      	ldr	r0, [r3, #0]
 8011214:	6859      	ldr	r1, [r3, #4]
 8011216:	ad04      	add	r5, sp, #16
 8011218:	4617      	mov	r7, r2
 801121a:	c503      	stmia	r5!, {r0, r1}
 801121c:	a802      	add	r0, sp, #8
 801121e:	f7f9 fc57 	bl	800aad0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8011222:	4639      	mov	r1, r7
 8011224:	a804      	add	r0, sp, #16
 8011226:	f7f9 fc3b 	bl	800aaa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801122a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801122e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011232:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 8011236:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801123a:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801123e:	fb11 2103 	smlabb	r1, r1, r3, r2
 8011242:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 8011246:	440e      	add	r6, r1
 8011248:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801124c:	440a      	add	r2, r1
 801124e:	f8ad 2010 	strh.w	r2, [sp, #16]
 8011252:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8011256:	4413      	add	r3, r2
 8011258:	f8ad 3012 	strh.w	r3, [sp, #18]
 801125c:	4b77      	ldr	r3, [pc, #476]	; (801143c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801125e:	6818      	ldr	r0, [r3, #0]
 8011260:	6803      	ldr	r3, [r0, #0]
 8011262:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011264:	4798      	blx	r3
 8011266:	f8b9 b000 	ldrh.w	fp, [r9]
 801126a:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801126e:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 8011272:	fb0b 2303 	mla	r3, fp, r3, r2
 8011276:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801127a:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 801127e:	ea4f 0348 	mov.w	r3, r8, lsl #1
 8011282:	fb05 f50b 	mul.w	r5, r5, fp
 8011286:	9300      	str	r3, [sp, #0]
 8011288:	d069      	beq.n	801135e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801128a:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801128e:	4558      	cmp	r0, fp
 8011290:	f080 80cc 	bcs.w	801142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8011294:	9b00      	ldr	r3, [sp, #0]
 8011296:	18c3      	adds	r3, r0, r3
 8011298:	9301      	str	r3, [sp, #4]
 801129a:	4631      	mov	r1, r6
 801129c:	9b01      	ldr	r3, [sp, #4]
 801129e:	4298      	cmp	r0, r3
 80112a0:	d24f      	bcs.n	8011342 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 80112a2:	f811 2b01 	ldrb.w	r2, [r1], #1
 80112a6:	2a00      	cmp	r2, #0
 80112a8:	d048      	beq.n	801133c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80112aa:	fb0a f202 	mul.w	r2, sl, r2
 80112ae:	1c53      	adds	r3, r2, #1
 80112b0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80112b4:	121b      	asrs	r3, r3, #8
 80112b6:	d041      	beq.n	801133c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 80112b8:	8802      	ldrh	r2, [r0, #0]
 80112ba:	f8b4 c000 	ldrh.w	ip, [r4]
 80112be:	b29e      	uxth	r6, r3
 80112c0:	1215      	asrs	r5, r2, #8
 80112c2:	43db      	mvns	r3, r3
 80112c4:	b2db      	uxtb	r3, r3
 80112c6:	ea4f 272c 	mov.w	r7, ip, asr #8
 80112ca:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 80112ce:	fb15 f503 	smulbb	r5, r5, r3
 80112d2:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 80112d6:	f007 07f8 	and.w	r7, r7, #248	; 0xf8
 80112da:	00d2      	lsls	r2, r2, #3
 80112dc:	fb07 5706 	mla	r7, r7, r6, r5
 80112e0:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80112e4:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80112e8:	b2d2      	uxtb	r2, r2
 80112ea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80112ee:	b2bf      	uxth	r7, r7
 80112f0:	fb1e fe03 	smulbb	lr, lr, r3
 80112f4:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 80112f8:	fa5f fc8c 	uxtb.w	ip, ip
 80112fc:	fb12 f203 	smulbb	r2, r2, r3
 8011300:	fb05 e506 	mla	r5, r5, r6, lr
 8011304:	fb0c 2c06 	mla	ip, ip, r6, r2
 8011308:	f107 0e01 	add.w	lr, r7, #1
 801130c:	fa1f fc8c 	uxth.w	ip, ip
 8011310:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 8011314:	f407 4e78 	and.w	lr, r7, #63488	; 0xf800
 8011318:	f10c 0701 	add.w	r7, ip, #1
 801131c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8011320:	b2ad      	uxth	r5, r5
 8011322:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8011326:	ea47 070e 	orr.w	r7, r7, lr
 801132a:	f105 0e01 	add.w	lr, r5, #1
 801132e:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 8011332:	096d      	lsrs	r5, r5, #5
 8011334:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8011338:	432f      	orrs	r7, r5
 801133a:	8007      	strh	r7, [r0, #0]
 801133c:	3002      	adds	r0, #2
 801133e:	3402      	adds	r4, #2
 8011340:	e7ac      	b.n	801129c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 8011342:	f8b9 3000 	ldrh.w	r3, [r9]
 8011346:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801134a:	eba3 0308 	sub.w	r3, r3, r8
 801134e:	eba6 0608 	sub.w	r6, r6, r8
 8011352:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8011356:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801135a:	440e      	add	r6, r1
 801135c:	e797      	b.n	801128e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801135e:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011362:	42a8      	cmp	r0, r5
 8011364:	d262      	bcs.n	801142c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 8011366:	9b00      	ldr	r3, [sp, #0]
 8011368:	4631      	mov	r1, r6
 801136a:	eb00 0b03 	add.w	fp, r0, r3
 801136e:	4558      	cmp	r0, fp
 8011370:	d24e      	bcs.n	8011410 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 8011372:	f811 3b01 	ldrb.w	r3, [r1], #1
 8011376:	b12b      	cbz	r3, 8011384 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8011378:	2bff      	cmp	r3, #255	; 0xff
 801137a:	f8b4 e000 	ldrh.w	lr, [r4]
 801137e:	d104      	bne.n	801138a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 8011380:	f8a0 e000 	strh.w	lr, [r0]
 8011384:	3002      	adds	r0, #2
 8011386:	3402      	adds	r4, #2
 8011388:	e7f1      	b.n	801136e <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801138a:	8802      	ldrh	r2, [r0, #0]
 801138c:	b29f      	uxth	r7, r3
 801138e:	1216      	asrs	r6, r2, #8
 8011390:	43db      	mvns	r3, r3
 8011392:	b2db      	uxtb	r3, r3
 8011394:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8011398:	f006 06f8 	and.w	r6, r6, #248	; 0xf8
 801139c:	fb16 f603 	smulbb	r6, r6, r3
 80113a0:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 80113a4:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80113a8:	00d2      	lsls	r2, r2, #3
 80113aa:	fb0c 6c07 	mla	ip, ip, r7, r6
 80113ae:	b2d2      	uxtb	r2, r2
 80113b0:	ea4f 06ee 	mov.w	r6, lr, asr #3
 80113b4:	f00a 0afc 	and.w	sl, sl, #252	; 0xfc
 80113b8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80113bc:	fb1a fa03 	smulbb	sl, sl, r3
 80113c0:	fa1f fc8c 	uxth.w	ip, ip
 80113c4:	fb12 f303 	smulbb	r3, r2, r3
 80113c8:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 80113cc:	fa5f fe8e 	uxtb.w	lr, lr
 80113d0:	fb06 a607 	mla	r6, r6, r7, sl
 80113d4:	f10c 0201 	add.w	r2, ip, #1
 80113d8:	fb0e 3307 	mla	r3, lr, r7, r3
 80113dc:	b2b6      	uxth	r6, r6
 80113de:	b29b      	uxth	r3, r3
 80113e0:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 80113e4:	f40c 4278 	and.w	r2, ip, #63488	; 0xf800
 80113e8:	f106 0a01 	add.w	sl, r6, #1
 80113ec:	f103 0c01 	add.w	ip, r3, #1
 80113f0:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80113f4:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 80113f8:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80113fc:	0976      	lsrs	r6, r6, #5
 80113fe:	ea4c 0c02 	orr.w	ip, ip, r2
 8011402:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011406:	ea4c 0c06 	orr.w	ip, ip, r6
 801140a:	f8a0 c000 	strh.w	ip, [r0]
 801140e:	e7b9      	b.n	8011384 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 8011410:	f8b9 3000 	ldrh.w	r3, [r9]
 8011414:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 8011418:	eba3 0308 	sub.w	r3, r3, r8
 801141c:	eba6 0608 	sub.w	r6, r6, r8
 8011420:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 8011424:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8011428:	440e      	add	r6, r1
 801142a:	e79a      	b.n	8011362 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801142c:	4b03      	ldr	r3, [pc, #12]	; (801143c <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801142e:	6818      	ldr	r0, [r3, #0]
 8011430:	6803      	ldr	r3, [r0, #0]
 8011432:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011434:	4798      	blx	r3
 8011436:	b007      	add	sp, #28
 8011438:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801143c:	2000a0ec 	.word	0x2000a0ec
 8011440:	2000a0e6 	.word	0x2000a0e6

08011444 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 8011444:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011448:	b089      	sub	sp, #36	; 0x24
 801144a:	4682      	mov	sl, r0
 801144c:	f89d 504c 	ldrb.w	r5, [sp, #76]	; 0x4c
 8011450:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8011452:	4689      	mov	r9, r1
 8011454:	4690      	mov	r8, r2
 8011456:	461f      	mov	r7, r3
 8011458:	b355      	cbz	r5, 80114b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 801145a:	4608      	mov	r0, r1
 801145c:	f7fc f922 	bl	800d6a4 <_ZNK8touchgfx6Bitmap8getWidthEv>
 8011460:	4606      	mov	r6, r0
 8011462:	4648      	mov	r0, r9
 8011464:	f7fc f958 	bl	800d718 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011468:	f8ad 000e 	strh.w	r0, [sp, #14]
 801146c:	4648      	mov	r0, r9
 801146e:	f8ad 8008 	strh.w	r8, [sp, #8]
 8011472:	f8ad 600c 	strh.w	r6, [sp, #12]
 8011476:	f8ad 700a 	strh.w	r7, [sp, #10]
 801147a:	f7fc fa1b 	bl	800d8b4 <_ZNK8touchgfx6Bitmap7getDataEv>
 801147e:	4606      	mov	r6, r0
 8011480:	4648      	mov	r0, r9
 8011482:	f7fc fa49 	bl	800d918 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 8011486:	4680      	mov	r8, r0
 8011488:	4648      	mov	r0, r9
 801148a:	f7fc fa9d 	bl	800d9c8 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801148e:	280b      	cmp	r0, #11
 8011490:	f200 80ca 	bhi.w	8011628 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1e4>
 8011494:	e8df f000 	tbb	[pc, r0]
 8011498:	c8060f1e 	.word	0xc8060f1e
 801149c:	c8c8c8c8 	.word	0xc8c8c8c8
 80114a0:	16c8c8c8 	.word	0x16c8c8c8
 80114a4:	462b      	mov	r3, r5
 80114a6:	4622      	mov	r2, r4
 80114a8:	a902      	add	r1, sp, #8
 80114aa:	4630      	mov	r0, r6
 80114ac:	f7ff f98e 	bl	80107cc <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 80114b0:	b009      	add	sp, #36	; 0x24
 80114b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80114b6:	462b      	mov	r3, r5
 80114b8:	4622      	mov	r2, r4
 80114ba:	a902      	add	r1, sp, #8
 80114bc:	4630      	mov	r0, r6
 80114be:	f7ff fa9b 	bl	80109f8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 80114c2:	e7f5      	b.n	80114b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 80114c4:	9500      	str	r5, [sp, #0]
 80114c6:	4623      	mov	r3, r4
 80114c8:	aa02      	add	r2, sp, #8
 80114ca:	4641      	mov	r1, r8
 80114cc:	4630      	mov	r0, r6
 80114ce:	f7ff fe7b 	bl	80111c8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 80114d2:	e7ed      	b.n	80114b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 80114d4:	4648      	mov	r0, r9
 80114d6:	f7fc f9b3 	bl	800d840 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 80114da:	b950      	cbnz	r0, 80114f2 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xae>
 80114dc:	e9cd 5000 	strd	r5, r0, [sp]
 80114e0:	f8da 3000 	ldr.w	r3, [sl]
 80114e4:	aa02      	add	r2, sp, #8
 80114e6:	68dd      	ldr	r5, [r3, #12]
 80114e8:	4631      	mov	r1, r6
 80114ea:	4623      	mov	r3, r4
 80114ec:	4650      	mov	r0, sl
 80114ee:	47a8      	blx	r5
 80114f0:	e7de      	b.n	80114b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 80114f2:	af06      	add	r7, sp, #24
 80114f4:	4649      	mov	r1, r9
 80114f6:	4638      	mov	r0, r7
 80114f8:	f7fc f948 	bl	800d78c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 80114fc:	e897 0003 	ldmia.w	r7, {r0, r1}
 8011500:	f10d 0910 	add.w	r9, sp, #16
 8011504:	e889 0003 	stmia.w	r9, {r0, r1}
 8011508:	4648      	mov	r0, r9
 801150a:	4621      	mov	r1, r4
 801150c:	f7f7 fb30 	bl	8008b70 <_ZN8touchgfx4RectaNERKS0_>
 8011510:	4648      	mov	r0, r9
 8011512:	f7f7 fb70 	bl	8008bf6 <_ZNK8touchgfx4Rect7isEmptyEv>
 8011516:	b138      	cbz	r0, 8011528 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xe4>
 8011518:	9500      	str	r5, [sp, #0]
 801151a:	4623      	mov	r3, r4
 801151c:	aa02      	add	r2, sp, #8
 801151e:	4641      	mov	r1, r8
 8011520:	4630      	mov	r0, r6
 8011522:	f7ff fe69 	bl	80111f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011526:	e7c3      	b.n	80114b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8011528:	e9cd 5000 	strd	r5, r0, [sp]
 801152c:	f8da 3000 	ldr.w	r3, [sl]
 8011530:	aa02      	add	r2, sp, #8
 8011532:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 8011536:	4631      	mov	r1, r6
 8011538:	464b      	mov	r3, r9
 801153a:	4650      	mov	r0, sl
 801153c:	47d8      	blx	fp
 801153e:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 8011542:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 8011546:	4293      	cmp	r3, r2
 8011548:	dd13      	ble.n	8011572 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x12e>
 801154a:	f9b4 0000 	ldrsh.w	r0, [r4]
 801154e:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8011552:	f8ad 0018 	strh.w	r0, [sp, #24]
 8011556:	1a9b      	subs	r3, r3, r2
 8011558:	f8ad 201a 	strh.w	r2, [sp, #26]
 801155c:	f8ad 101c 	strh.w	r1, [sp, #28]
 8011560:	f8ad 301e 	strh.w	r3, [sp, #30]
 8011564:	9500      	str	r5, [sp, #0]
 8011566:	463b      	mov	r3, r7
 8011568:	aa02      	add	r2, sp, #8
 801156a:	4641      	mov	r1, r8
 801156c:	4630      	mov	r0, r6
 801156e:	f7ff fe43 	bl	80111f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 8011572:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 8011576:	f9b4 2000 	ldrsh.w	r2, [r4]
 801157a:	4293      	cmp	r3, r2
 801157c:	dd13      	ble.n	80115a6 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x162>
 801157e:	1a9b      	subs	r3, r3, r2
 8011580:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 8011584:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 8011588:	f8ad 2018 	strh.w	r2, [sp, #24]
 801158c:	f8ad 001a 	strh.w	r0, [sp, #26]
 8011590:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011594:	f8ad 101e 	strh.w	r1, [sp, #30]
 8011598:	9500      	str	r5, [sp, #0]
 801159a:	463b      	mov	r3, r7
 801159c:	aa02      	add	r2, sp, #8
 801159e:	4641      	mov	r1, r8
 80115a0:	4630      	mov	r0, r6
 80115a2:	f7ff fe29 	bl	80111f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80115a6:	88a2      	ldrh	r2, [r4, #4]
 80115a8:	8823      	ldrh	r3, [r4, #0]
 80115aa:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 80115ae:	4413      	add	r3, r2
 80115b0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80115b4:	440a      	add	r2, r1
 80115b6:	b29b      	uxth	r3, r3
 80115b8:	b292      	uxth	r2, r2
 80115ba:	b211      	sxth	r1, r2
 80115bc:	b218      	sxth	r0, r3
 80115be:	4288      	cmp	r0, r1
 80115c0:	dd13      	ble.n	80115ea <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1a6>
 80115c2:	1a9b      	subs	r3, r3, r2
 80115c4:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 80115c8:	f9bd c012 	ldrsh.w	ip, [sp, #18]
 80115cc:	f8ad 1018 	strh.w	r1, [sp, #24]
 80115d0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80115d4:	f8ad 001e 	strh.w	r0, [sp, #30]
 80115d8:	9500      	str	r5, [sp, #0]
 80115da:	463b      	mov	r3, r7
 80115dc:	aa02      	add	r2, sp, #8
 80115de:	4641      	mov	r1, r8
 80115e0:	4630      	mov	r0, r6
 80115e2:	f8ad c01a 	strh.w	ip, [sp, #26]
 80115e6:	f7ff fe07 	bl	80111f8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 80115ea:	88e2      	ldrh	r2, [r4, #6]
 80115ec:	8863      	ldrh	r3, [r4, #2]
 80115ee:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 80115f2:	4413      	add	r3, r2
 80115f4:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 80115f8:	440a      	add	r2, r1
 80115fa:	b29b      	uxth	r3, r3
 80115fc:	b292      	uxth	r2, r2
 80115fe:	b211      	sxth	r1, r2
 8011600:	b218      	sxth	r0, r3
 8011602:	4288      	cmp	r0, r1
 8011604:	f77f af54 	ble.w	80114b0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x6c>
 8011608:	f9b4 c000 	ldrsh.w	ip, [r4]
 801160c:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8011610:	f8ad c018 	strh.w	ip, [sp, #24]
 8011614:	1a9b      	subs	r3, r3, r2
 8011616:	f8ad 301e 	strh.w	r3, [sp, #30]
 801161a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801161e:	f8ad 001c 	strh.w	r0, [sp, #28]
 8011622:	9500      	str	r5, [sp, #0]
 8011624:	463b      	mov	r3, r7
 8011626:	e779      	b.n	801151c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xd8>
 8011628:	4b02      	ldr	r3, [pc, #8]	; (8011634 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f0>)
 801162a:	4a03      	ldr	r2, [pc, #12]	; (8011638 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f4>)
 801162c:	4803      	ldr	r0, [pc, #12]	; (801163c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x1f8>)
 801162e:	2181      	movs	r1, #129	; 0x81
 8011630:	f007 ff06 	bl	8019440 <__assert_func>
 8011634:	0801cbf4 	.word	0x0801cbf4
 8011638:	0801d2fb 	.word	0x0801d2fb
 801163c:	0801cd2a 	.word	0x0801cd2a

08011640 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 8011640:	b508      	push	{r3, lr}
 8011642:	b180      	cbz	r0, 8011666 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x26>
 8011644:	2902      	cmp	r1, #2
 8011646:	d014      	beq.n	8011672 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x32>
 8011648:	2903      	cmp	r1, #3
 801164a:	d01d      	beq.n	8011688 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801164c:	2901      	cmp	r1, #1
 801164e:	d101      	bne.n	8011654 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 8011650:	2001      	movs	r0, #1
 8011652:	bd08      	pop	{r3, pc}
 8011654:	4b0e      	ldr	r3, [pc, #56]	; (8011690 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8011656:	8818      	ldrh	r0, [r3, #0]
 8011658:	b990      	cbnz	r0, 8011680 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801165a:	4b0e      	ldr	r3, [pc, #56]	; (8011694 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x54>)
 801165c:	4a0e      	ldr	r2, [pc, #56]	; (8011698 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x58>)
 801165e:	480f      	ldr	r0, [pc, #60]	; (801169c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x5c>)
 8011660:	2150      	movs	r1, #80	; 0x50
 8011662:	f007 feed 	bl	8019440 <__assert_func>
 8011666:	2902      	cmp	r1, #2
 8011668:	d00e      	beq.n	8011688 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x48>
 801166a:	2903      	cmp	r1, #3
 801166c:	d0f2      	beq.n	8011654 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x14>
 801166e:	2901      	cmp	r1, #1
 8011670:	d1ee      	bne.n	8011650 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x10>
 8011672:	4b07      	ldr	r3, [pc, #28]	; (8011690 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 8011674:	8818      	ldrh	r0, [r3, #0]
 8011676:	2800      	cmp	r0, #0
 8011678:	d0ef      	beq.n	801165a <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x1a>
 801167a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801167e:	e7e8      	b.n	8011652 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8011680:	f3c0 000e 	ubfx	r0, r0, #0, #15
 8011684:	4240      	negs	r0, r0
 8011686:	e7e4      	b.n	8011652 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 8011688:	f04f 30ff 	mov.w	r0, #4294967295
 801168c:	e7e1      	b.n	8011652 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x12>
 801168e:	bf00      	nop
 8011690:	2000a0e6 	.word	0x2000a0e6
 8011694:	0801ce80 	.word	0x0801ce80
 8011698:	0801d478 	.word	0x0801d478
 801169c:	0801cec2 	.word	0x0801cec2

080116a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 80116a0:	b508      	push	{r3, lr}
 80116a2:	b180      	cbz	r0, 80116c6 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x26>
 80116a4:	2902      	cmp	r1, #2
 80116a6:	d014      	beq.n	80116d2 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x32>
 80116a8:	2903      	cmp	r1, #3
 80116aa:	d018      	beq.n	80116de <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80116ac:	2901      	cmp	r1, #1
 80116ae:	d001      	beq.n	80116b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80116b0:	2001      	movs	r0, #1
 80116b2:	e013      	b.n	80116dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80116b4:	4b0e      	ldr	r3, [pc, #56]	; (80116f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80116b6:	8818      	ldrh	r0, [r3, #0]
 80116b8:	b970      	cbnz	r0, 80116d8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x38>
 80116ba:	4b0e      	ldr	r3, [pc, #56]	; (80116f4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x54>)
 80116bc:	4a0e      	ldr	r2, [pc, #56]	; (80116f8 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x58>)
 80116be:	480f      	ldr	r0, [pc, #60]	; (80116fc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x5c>)
 80116c0:	2150      	movs	r1, #80	; 0x50
 80116c2:	f007 febd 	bl	8019440 <__assert_func>
 80116c6:	2902      	cmp	r1, #2
 80116c8:	d009      	beq.n	80116de <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3e>
 80116ca:	2903      	cmp	r1, #3
 80116cc:	d0f0      	beq.n	80116b0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x10>
 80116ce:	2901      	cmp	r1, #1
 80116d0:	d1f0      	bne.n	80116b4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x14>
 80116d2:	f04f 30ff 	mov.w	r0, #4294967295
 80116d6:	e001      	b.n	80116dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80116d8:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80116dc:	bd08      	pop	{r3, pc}
 80116de:	4b04      	ldr	r3, [pc, #16]	; (80116f0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 80116e0:	8818      	ldrh	r0, [r3, #0]
 80116e2:	2800      	cmp	r0, #0
 80116e4:	d0e9      	beq.n	80116ba <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x1a>
 80116e6:	f3c0 000e 	ubfx	r0, r0, #0, #15
 80116ea:	4240      	negs	r0, r0
 80116ec:	e7f6      	b.n	80116dc <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x3c>
 80116ee:	bf00      	nop
 80116f0:	2000a0e6 	.word	0x2000a0e6
 80116f4:	0801ce80 	.word	0x0801ce80
 80116f8:	0801d478 	.word	0x0801d478
 80116fc:	0801cec2 	.word	0x0801cec2

08011700 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 8011700:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011704:	b097      	sub	sp, #92	; 0x5c
 8011706:	9109      	str	r1, [sp, #36]	; 0x24
 8011708:	a912      	add	r1, sp, #72	; 0x48
 801170a:	e881 000c 	stmia.w	r1, {r2, r3}
 801170e:	e9dd 2124 	ldrd	r2, r1, [sp, #144]	; 0x90
 8011712:	f9bd 3084 	ldrsh.w	r3, [sp, #132]	; 0x84
 8011716:	9308      	str	r3, [sp, #32]
 8011718:	f891 900d 	ldrb.w	r9, [r1, #13]
 801171c:	f89d 309c 	ldrb.w	r3, [sp, #156]	; 0x9c
 8011720:	930f      	str	r3, [sp, #60]	; 0x3c
 8011722:	f89d 30a8 	ldrb.w	r3, [sp, #168]	; 0xa8
 8011726:	930a      	str	r3, [sp, #40]	; 0x28
 8011728:	7988      	ldrb	r0, [r1, #6]
 801172a:	f9bd 5080 	ldrsh.w	r5, [sp, #128]	; 0x80
 801172e:	f8bd 6088 	ldrh.w	r6, [sp, #136]	; 0x88
 8011732:	f8bd 708c 	ldrh.w	r7, [sp, #140]	; 0x8c
 8011736:	f89d 80a4 	ldrb.w	r8, [sp, #164]	; 0xa4
 801173a:	f89d a0ac 	ldrb.w	sl, [sp, #172]	; 0xac
 801173e:	ea4f 1349 	mov.w	r3, r9, lsl #5
 8011742:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8011746:	4303      	orrs	r3, r0
 8011748:	9307      	str	r3, [sp, #28]
 801174a:	f000 81b3 	beq.w	8011ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 801174e:	ea4f 1909 	mov.w	r9, r9, lsl #4
 8011752:	f409 7380 	and.w	r3, r9, #256	; 0x100
 8011756:	f891 9007 	ldrb.w	r9, [r1, #7]
 801175a:	ea59 0903 	orrs.w	r9, r9, r3
 801175e:	f000 81a9 	beq.w	8011ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8011762:	f991 3009 	ldrsb.w	r3, [r1, #9]
 8011766:	b29b      	uxth	r3, r3
 8011768:	2e00      	cmp	r6, #0
 801176a:	f000 8137 	beq.w	80119dc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2dc>
 801176e:	1af6      	subs	r6, r6, r3
 8011770:	b2b6      	uxth	r6, r6
 8011772:	0434      	lsls	r4, r6, #16
 8011774:	d502      	bpl.n	801177c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 8011776:	1bad      	subs	r5, r5, r6
 8011778:	b22d      	sxth	r5, r5
 801177a:	2600      	movs	r6, #0
 801177c:	f9b2 1000 	ldrsh.w	r1, [r2]
 8011780:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 8011784:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 8011788:	428d      	cmp	r5, r1
 801178a:	b28b      	uxth	r3, r1
 801178c:	bfbf      	itttt	lt
 801178e:	18f6      	addlt	r6, r6, r3
 8011790:	1b75      	sublt	r5, r6, r5
 8011792:	b2ae      	uxthlt	r6, r5
 8011794:	460d      	movlt	r5, r1
 8011796:	8891      	ldrh	r1, [r2, #4]
 8011798:	440b      	add	r3, r1
 801179a:	b21b      	sxth	r3, r3
 801179c:	930e      	str	r3, [sp, #56]	; 0x38
 801179e:	88d3      	ldrh	r3, [r2, #6]
 80117a0:	8852      	ldrh	r2, [r2, #2]
 80117a2:	4413      	add	r3, r2
 80117a4:	b21b      	sxth	r3, r3
 80117a6:	930d      	str	r3, [sp, #52]	; 0x34
 80117a8:	4b8e      	ldr	r3, [pc, #568]	; (80119e4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e4>)
 80117aa:	9a08      	ldr	r2, [sp, #32]
 80117ac:	f893 b000 	ldrb.w	fp, [r3]
 80117b0:	f10b 30ff 	add.w	r0, fp, #4294967295
 80117b4:	4243      	negs	r3, r0
 80117b6:	4143      	adcs	r3, r0
 80117b8:	930c      	str	r3, [sp, #48]	; 0x30
 80117ba:	4629      	mov	r1, r5
 80117bc:	4653      	mov	r3, sl
 80117be:	a812      	add	r0, sp, #72	; 0x48
 80117c0:	f7f8 ffde 	bl	800a780 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 80117c4:	4629      	mov	r1, r5
 80117c6:	f8ad 0054 	strh.w	r0, [sp, #84]	; 0x54
 80117ca:	4653      	mov	r3, sl
 80117cc:	9a08      	ldr	r2, [sp, #32]
 80117ce:	a812      	add	r0, sp, #72	; 0x48
 80117d0:	f7f8 ffee 	bl	800a7b0 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 80117d4:	a916      	add	r1, sp, #88	; 0x58
 80117d6:	f821 0d02 	strh.w	r0, [r1, #-2]!
 80117da:	a815      	add	r0, sp, #84	; 0x54
 80117dc:	f7f9 f94a 	bl	800aa74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 80117e0:	f1ba 0f00 	cmp.w	sl, #0
 80117e4:	f040 8106 	bne.w	80119f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f4>
 80117e8:	f1bb 0f01 	cmp.w	fp, #1
 80117ec:	f040 810a 	bne.w	8011a04 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x304>
 80117f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80117f2:	b153      	cbz	r3, 801180a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10a>
 80117f4:	9a07      	ldr	r2, [sp, #28]
 80117f6:	2408      	movs	r4, #8
 80117f8:	fb94 f3f8 	sdiv	r3, r4, r8
 80117fc:	1e5c      	subs	r4, r3, #1
 80117fe:	4414      	add	r4, r2
 8011800:	fb94 f4f3 	sdiv	r4, r4, r3
 8011804:	fb14 f403 	smulbb	r4, r4, r3
 8011808:	b2a4      	uxth	r4, r4
 801180a:	b906      	cbnz	r6, 801180e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x10e>
 801180c:	b16f      	cbz	r7, 801182a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x12a>
 801180e:	fb07 6304 	mla	r3, r7, r4, r6
 8011812:	9926      	ldr	r1, [sp, #152]	; 0x98
 8011814:	fb08 f303 	mul.w	r3, r8, r3
 8011818:	463a      	mov	r2, r7
 801181a:	f003 0707 	and.w	r7, r3, #7
 801181e:	eb01 03d3 	add.w	r3, r1, r3, lsr #3
 8011822:	9326      	str	r3, [sp, #152]	; 0x98
 8011824:	eba9 0302 	sub.w	r3, r9, r2
 8011828:	930b      	str	r3, [sp, #44]	; 0x2c
 801182a:	4651      	mov	r1, sl
 801182c:	980c      	ldr	r0, [sp, #48]	; 0x30
 801182e:	f7ff ff07 	bl	8011640 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 8011832:	4651      	mov	r1, sl
 8011834:	4681      	mov	r9, r0
 8011836:	980c      	ldr	r0, [sp, #48]	; 0x30
 8011838:	f7ff ff32 	bl	80116a0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801183c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801183e:	9a08      	ldr	r2, [sp, #32]
 8011840:	eba3 0a02 	sub.w	sl, r3, r2
 8011844:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8011846:	459a      	cmp	sl, r3
 8011848:	bfa8      	it	ge
 801184a:	469a      	movge	sl, r3
 801184c:	f1ba 0f00 	cmp.w	sl, #0
 8011850:	4683      	mov	fp, r0
 8011852:	f340 812f 	ble.w	8011ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8011856:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011858:	1bad      	subs	r5, r5, r6
 801185a:	1b5d      	subs	r5, r3, r5
 801185c:	9b07      	ldr	r3, [sp, #28]
 801185e:	429d      	cmp	r5, r3
 8011860:	bfd4      	ite	le
 8011862:	ebc6 0605 	rsble	r6, r6, r5
 8011866:	ebc6 0603 	rsbgt	r6, r6, r3
 801186a:	2e00      	cmp	r6, #0
 801186c:	f340 8122 	ble.w	8011ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8011870:	1ba4      	subs	r4, r4, r6
 8011872:	fb08 f304 	mul.w	r3, r8, r4
 8011876:	930d      	str	r3, [sp, #52]	; 0x34
 8011878:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801187a:	2b00      	cmp	r3, #0
 801187c:	f040 811f 	bne.w	8011abe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3be>
 8011880:	4b59      	ldr	r3, [pc, #356]	; (80119e8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2e8>)
 8011882:	6818      	ldr	r0, [r3, #0]
 8011884:	6803      	ldr	r3, [r0, #0]
 8011886:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8011888:	4798      	blx	r3
 801188a:	2301      	movs	r3, #1
 801188c:	fa03 f308 	lsl.w	r3, r3, r8
 8011890:	4a56      	ldr	r2, [pc, #344]	; (80119ec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ec>)
 8011892:	3b01      	subs	r3, #1
 8011894:	b2db      	uxtb	r3, r3
 8011896:	8811      	ldrh	r1, [r2, #0]
 8011898:	930c      	str	r3, [sp, #48]	; 0x30
 801189a:	f9bd 2054 	ldrsh.w	r2, [sp, #84]	; 0x54
 801189e:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	; 0x56
 80118a2:	fb01 2303 	mla	r3, r1, r3, r2
 80118a6:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80118aa:	9308      	str	r3, [sp, #32]
 80118ac:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80118ae:	0c1a      	lsrs	r2, r3, #16
 80118b0:	b2d3      	uxtb	r3, r2
 80118b2:	9311      	str	r3, [sp, #68]	; 0x44
 80118b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80118b6:	0a1b      	lsrs	r3, r3, #8
 80118b8:	b2d9      	uxtb	r1, r3
 80118ba:	9110      	str	r1, [sp, #64]	; 0x40
 80118bc:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80118be:	b2c9      	uxtb	r1, r1
 80118c0:	910e      	str	r1, [sp, #56]	; 0x38
 80118c2:	494b      	ldr	r1, [pc, #300]	; (80119f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2f0>)
 80118c4:	ea01 2202 	and.w	r2, r1, r2, lsl #8
 80118c8:	990e      	ldr	r1, [sp, #56]	; 0x38
 80118ca:	00db      	lsls	r3, r3, #3
 80118cc:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80118d0:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 80118d4:	431a      	orrs	r2, r3
 80118d6:	b293      	uxth	r3, r2
 80118d8:	930f      	str	r3, [sp, #60]	; 0x3c
 80118da:	9b26      	ldr	r3, [sp, #152]	; 0x98
 80118dc:	781a      	ldrb	r2, [r3, #0]
 80118de:	ea4f 0349 	mov.w	r3, r9, lsl #1
 80118e2:	413a      	asrs	r2, r7
 80118e4:	fb06 b919 	mls	r9, r6, r9, fp
 80118e8:	fb03 fb06 	mul.w	fp, r3, r6
 80118ec:	b2d2      	uxtb	r2, r2
 80118ee:	930b      	str	r3, [sp, #44]	; 0x2c
 80118f0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 80118f4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 80118f8:	f0c0 80f6 	bcc.w	8011ae8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e8>
 80118fc:	f8dd c020 	ldr.w	ip, [sp, #32]
 8011900:	46b6      	mov	lr, r6
 8011902:	f11e 3eff 	adds.w	lr, lr, #4294967295
 8011906:	f0c0 80de 	bcc.w	8011ac6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c6>
 801190a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801190c:	4013      	ands	r3, r2
 801190e:	d055      	beq.n	80119bc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2bc>
 8011910:	20ff      	movs	r0, #255	; 0xff
 8011912:	990c      	ldr	r1, [sp, #48]	; 0x30
 8011914:	fb90 f1f1 	sdiv	r1, r0, r1
 8011918:	434b      	muls	r3, r1
 801191a:	2bfe      	cmp	r3, #254	; 0xfe
 801191c:	dd03      	ble.n	8011926 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x226>
 801191e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011920:	4281      	cmp	r1, r0
 8011922:	f000 80ce 	beq.w	8011ac2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3c2>
 8011926:	990a      	ldr	r1, [sp, #40]	; 0x28
 8011928:	f8bc 4000 	ldrh.w	r4, [ip]
 801192c:	fb11 f303 	smulbb	r3, r1, r3
 8011930:	b29b      	uxth	r3, r3
 8011932:	1c59      	adds	r1, r3, #1
 8011934:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8011938:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801193c:	b29d      	uxth	r5, r3
 801193e:	43db      	mvns	r3, r3
 8011940:	b2db      	uxtb	r3, r3
 8011942:	9307      	str	r3, [sp, #28]
 8011944:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8011946:	1220      	asrs	r0, r4, #8
 8011948:	fb13 f905 	smulbb	r9, r3, r5
 801194c:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8011950:	9b07      	ldr	r3, [sp, #28]
 8011952:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 8011956:	fb00 9003 	mla	r0, r0, r3, r9
 801195a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801195c:	10e1      	asrs	r1, r4, #3
 801195e:	fb13 f905 	smulbb	r9, r3, r5
 8011962:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8011966:	9b07      	ldr	r3, [sp, #28]
 8011968:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801196c:	fb01 9103 	mla	r1, r1, r3, r9
 8011970:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8011972:	00e4      	lsls	r4, r4, #3
 8011974:	fb13 f505 	smulbb	r5, r3, r5
 8011978:	b2e4      	uxtb	r4, r4
 801197a:	9b07      	ldr	r3, [sp, #28]
 801197c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8011980:	fb04 5403 	mla	r4, r4, r3, r5
 8011984:	b280      	uxth	r0, r0
 8011986:	b2a4      	uxth	r4, r4
 8011988:	1c43      	adds	r3, r0, #1
 801198a:	f104 0901 	add.w	r9, r4, #1
 801198e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8011992:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 8011996:	b289      	uxth	r1, r1
 8011998:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801199c:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 80119a0:	ea49 0000 	orr.w	r0, r9, r0
 80119a4:	f101 0901 	add.w	r9, r1, #1
 80119a8:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 80119ac:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80119b0:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80119b4:	ea40 0009 	orr.w	r0, r0, r9
 80119b8:	f8ac 0000 	strh.w	r0, [ip]
 80119bc:	4447      	add	r7, r8
 80119be:	b2bf      	uxth	r7, r7
 80119c0:	2f07      	cmp	r7, #7
 80119c2:	bf81      	itttt	hi
 80119c4:	9b26      	ldrhi	r3, [sp, #152]	; 0x98
 80119c6:	785a      	ldrbhi	r2, [r3, #1]
 80119c8:	3301      	addhi	r3, #1
 80119ca:	9326      	strhi	r3, [sp, #152]	; 0x98
 80119cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80119ce:	bf9a      	itte	ls
 80119d0:	fa42 f208 	asrls.w	r2, r2, r8
 80119d4:	b2d2      	uxtbls	r2, r2
 80119d6:	2700      	movhi	r7, #0
 80119d8:	449c      	add	ip, r3
 80119da:	e792      	b.n	8011902 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x202>
 80119dc:	441d      	add	r5, r3
 80119de:	b22d      	sxth	r5, r5
 80119e0:	e6cc      	b.n	801177c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7c>
 80119e2:	bf00      	nop
 80119e4:	2000a0e4 	.word	0x2000a0e4
 80119e8:	2000a0ec 	.word	0x2000a0ec
 80119ec:	2000a0e6 	.word	0x2000a0e6
 80119f0:	fffff800 	.word	0xfffff800
 80119f4:	f1ba 0f01 	cmp.w	sl, #1
 80119f8:	f47f aefa 	bne.w	80117f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 80119fc:	f1bb 0f01 	cmp.w	fp, #1
 8011a00:	f47f aef6 	bne.w	80117f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011a04:	f8df b104 	ldr.w	fp, [pc, #260]	; 8011b0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>
 8011a08:	f8db 0000 	ldr.w	r0, [fp]
 8011a0c:	6803      	ldr	r3, [r0, #0]
 8011a0e:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8011a10:	4798      	blx	r3
 8011a12:	f410 7380 	ands.w	r3, r0, #256	; 0x100
 8011a16:	465a      	mov	r2, fp
 8011a18:	d006      	beq.n	8011a28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 8011a1a:	f1b8 0f04 	cmp.w	r8, #4
 8011a1e:	d14c      	bne.n	8011aba <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ba>
 8011a20:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8011a22:	3300      	adds	r3, #0
 8011a24:	bf18      	it	ne
 8011a26:	2301      	movne	r3, #1
 8011a28:	0581      	lsls	r1, r0, #22
 8011a2a:	d566      	bpl.n	8011afa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 8011a2c:	f1b8 0f08 	cmp.w	r8, #8
 8011a30:	d163      	bne.n	8011afa <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3fa>
 8011a32:	2b00      	cmp	r3, #0
 8011a34:	bf0c      	ite	eq
 8011a36:	f44f 7c00 	moveq.w	ip, #512	; 0x200
 8011a3a:	f44f 7c80 	movne.w	ip, #256	; 0x100
 8011a3e:	2e00      	cmp	r6, #0
 8011a40:	f47f aed6 	bne.w	80117f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011a44:	2f00      	cmp	r7, #0
 8011a46:	f47f aed3 	bne.w	80117f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011a4a:	9b07      	ldr	r3, [sp, #28]
 8011a4c:	990e      	ldr	r1, [sp, #56]	; 0x38
 8011a4e:	18eb      	adds	r3, r5, r3
 8011a50:	428b      	cmp	r3, r1
 8011a52:	f73f aecd 	bgt.w	80117f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011a56:	9b08      	ldr	r3, [sp, #32]
 8011a58:	990d      	ldr	r1, [sp, #52]	; 0x34
 8011a5a:	444b      	add	r3, r9
 8011a5c:	428b      	cmp	r3, r1
 8011a5e:	f73f aec7 	bgt.w	80117f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011a62:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8011a64:	4e28      	ldr	r6, [pc, #160]	; (8011b08 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x408>)
 8011a66:	6810      	ldr	r0, [r2, #0]
 8011a68:	f8bd 2054 	ldrh.w	r2, [sp, #84]	; 0x54
 8011a6c:	6803      	ldr	r3, [r0, #0]
 8011a6e:	ea06 2611 	and.w	r6, r6, r1, lsr #8
 8011a72:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8011a76:	4331      	orrs	r1, r6
 8011a78:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8011a7a:	6d1d      	ldr	r5, [r3, #80]	; 0x50
 8011a7c:	f8bd 3056 	ldrh.w	r3, [sp, #86]	; 0x56
 8011a80:	f8cd c014 	str.w	ip, [sp, #20]
 8011a84:	f1b8 0f08 	cmp.w	r8, #8
 8011a88:	ea4f 1656 	mov.w	r6, r6, lsr #5
 8011a8c:	bf18      	it	ne
 8011a8e:	3401      	addne	r4, #1
 8011a90:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8011a94:	bf18      	it	ne
 8011a96:	f024 0401 	bicne.w	r4, r4, #1
 8011a9a:	ea41 0106 	orr.w	r1, r1, r6
 8011a9e:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 8011aa0:	bf18      	it	ne
 8011aa2:	b2a4      	uxthne	r4, r4
 8011aa4:	b289      	uxth	r1, r1
 8011aa6:	e9cd 1603 	strd	r1, r6, [sp, #12]
 8011aaa:	e9cd 9401 	strd	r9, r4, [sp, #4]
 8011aae:	9400      	str	r4, [sp, #0]
 8011ab0:	9926      	ldr	r1, [sp, #152]	; 0x98
 8011ab2:	47a8      	blx	r5
 8011ab4:	b017      	add	sp, #92	; 0x5c
 8011ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011aba:	2300      	movs	r3, #0
 8011abc:	e7b4      	b.n	8011a28 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x328>
 8011abe:	9809      	ldr	r0, [sp, #36]	; 0x24
 8011ac0:	e6e3      	b.n	801188a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x18a>
 8011ac2:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8011ac4:	e778      	b.n	80119b8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2b8>
 8011ac6:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8011ac8:	b153      	cbz	r3, 8011ae0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e0>
 8011aca:	441f      	add	r7, r3
 8011acc:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8011ace:	b2bf      	uxth	r7, r7
 8011ad0:	eb03 03d7 	add.w	r3, r3, r7, lsr #3
 8011ad4:	f007 0707 	and.w	r7, r7, #7
 8011ad8:	781a      	ldrb	r2, [r3, #0]
 8011ada:	9326      	str	r3, [sp, #152]	; 0x98
 8011adc:	413a      	asrs	r2, r7
 8011ade:	b2d2      	uxtb	r2, r2
 8011ae0:	9b08      	ldr	r3, [sp, #32]
 8011ae2:	445b      	add	r3, fp
 8011ae4:	9308      	str	r3, [sp, #32]
 8011ae6:	e705      	b.n	80118f4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1f4>
 8011ae8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8011aea:	2b00      	cmp	r3, #0
 8011aec:	d1e2      	bne.n	8011ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8011aee:	4b07      	ldr	r3, [pc, #28]	; (8011b0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x40c>)
 8011af0:	6818      	ldr	r0, [r3, #0]
 8011af2:	6803      	ldr	r3, [r0, #0]
 8011af4:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8011af6:	4798      	blx	r3
 8011af8:	e7dc      	b.n	8011ab4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b4>
 8011afa:	2b00      	cmp	r3, #0
 8011afc:	f43f ae78 	beq.w	80117f0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf0>
 8011b00:	f44f 7c80 	mov.w	ip, #256	; 0x100
 8011b04:	e79b      	b.n	8011a3e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x33e>
 8011b06:	bf00      	nop
 8011b08:	fffff800 	.word	0xfffff800
 8011b0c:	2000a0ec 	.word	0x2000a0ec

08011b10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 8011b10:	b538      	push	{r3, r4, r5, lr}
 8011b12:	4c15      	ldr	r4, [pc, #84]	; (8011b68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 8011b14:	7823      	ldrb	r3, [r4, #0]
 8011b16:	f3bf 8f5b 	dmb	ish
 8011b1a:	07da      	lsls	r2, r3, #31
 8011b1c:	4605      	mov	r5, r0
 8011b1e:	d40b      	bmi.n	8011b38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8011b20:	4620      	mov	r0, r4
 8011b22:	f007 fc60 	bl	80193e6 <__cxa_guard_acquire>
 8011b26:	b138      	cbz	r0, 8011b38 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 8011b28:	4620      	mov	r0, r4
 8011b2a:	f007 fc68 	bl	80193fe <__cxa_guard_release>
 8011b2e:	4a0f      	ldr	r2, [pc, #60]	; (8011b6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8011b30:	490f      	ldr	r1, [pc, #60]	; (8011b70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 8011b32:	4810      	ldr	r0, [pc, #64]	; (8011b74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8011b34:	f007 fc50 	bl	80193d8 <__aeabi_atexit>
 8011b38:	4c0f      	ldr	r4, [pc, #60]	; (8011b78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 8011b3a:	7823      	ldrb	r3, [r4, #0]
 8011b3c:	f3bf 8f5b 	dmb	ish
 8011b40:	07db      	lsls	r3, r3, #31
 8011b42:	d40b      	bmi.n	8011b5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8011b44:	4620      	mov	r0, r4
 8011b46:	f007 fc4e 	bl	80193e6 <__cxa_guard_acquire>
 8011b4a:	b138      	cbz	r0, 8011b5c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 8011b4c:	4620      	mov	r0, r4
 8011b4e:	f007 fc56 	bl	80193fe <__cxa_guard_release>
 8011b52:	4a06      	ldr	r2, [pc, #24]	; (8011b6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 8011b54:	4909      	ldr	r1, [pc, #36]	; (8011b7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 8011b56:	480a      	ldr	r0, [pc, #40]	; (8011b80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8011b58:	f007 fc3e 	bl	80193d8 <__aeabi_atexit>
 8011b5c:	4b05      	ldr	r3, [pc, #20]	; (8011b74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 8011b5e:	612b      	str	r3, [r5, #16]
 8011b60:	4b07      	ldr	r3, [pc, #28]	; (8011b80 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 8011b62:	616b      	str	r3, [r5, #20]
 8011b64:	bd38      	pop	{r3, r4, r5, pc}
 8011b66:	bf00      	nop
 8011b68:	2000a1b8 	.word	0x2000a1b8
 8011b6c:	20000000 	.word	0x20000000
 8011b70:	0800ff1d 	.word	0x0800ff1d
 8011b74:	200000a4 	.word	0x200000a4
 8011b78:	2000a1bc 	.word	0x2000a1bc
 8011b7c:	0800ff1b 	.word	0x0800ff1b
 8011b80:	200000a8 	.word	0x200000a8

08011b84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 8011b84:	b538      	push	{r3, r4, r5, lr}
 8011b86:	4c15      	ldr	r4, [pc, #84]	; (8011bdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 8011b88:	7823      	ldrb	r3, [r4, #0]
 8011b8a:	f3bf 8f5b 	dmb	ish
 8011b8e:	07da      	lsls	r2, r3, #31
 8011b90:	4605      	mov	r5, r0
 8011b92:	d40b      	bmi.n	8011bac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8011b94:	4620      	mov	r0, r4
 8011b96:	f007 fc26 	bl	80193e6 <__cxa_guard_acquire>
 8011b9a:	b138      	cbz	r0, 8011bac <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 8011b9c:	4620      	mov	r0, r4
 8011b9e:	f007 fc2e 	bl	80193fe <__cxa_guard_release>
 8011ba2:	4a0f      	ldr	r2, [pc, #60]	; (8011be0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8011ba4:	490f      	ldr	r1, [pc, #60]	; (8011be4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 8011ba6:	4810      	ldr	r0, [pc, #64]	; (8011be8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8011ba8:	f007 fc16 	bl	80193d8 <__aeabi_atexit>
 8011bac:	4c0f      	ldr	r4, [pc, #60]	; (8011bec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 8011bae:	7823      	ldrb	r3, [r4, #0]
 8011bb0:	f3bf 8f5b 	dmb	ish
 8011bb4:	07db      	lsls	r3, r3, #31
 8011bb6:	d40b      	bmi.n	8011bd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8011bb8:	4620      	mov	r0, r4
 8011bba:	f007 fc14 	bl	80193e6 <__cxa_guard_acquire>
 8011bbe:	b138      	cbz	r0, 8011bd0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 8011bc0:	4620      	mov	r0, r4
 8011bc2:	f007 fc1c 	bl	80193fe <__cxa_guard_release>
 8011bc6:	4a06      	ldr	r2, [pc, #24]	; (8011be0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 8011bc8:	4909      	ldr	r1, [pc, #36]	; (8011bf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 8011bca:	480a      	ldr	r0, [pc, #40]	; (8011bf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8011bcc:	f007 fc04 	bl	80193d8 <__aeabi_atexit>
 8011bd0:	4b05      	ldr	r3, [pc, #20]	; (8011be8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 8011bd2:	60ab      	str	r3, [r5, #8]
 8011bd4:	4b07      	ldr	r3, [pc, #28]	; (8011bf4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 8011bd6:	60eb      	str	r3, [r5, #12]
 8011bd8:	bd38      	pop	{r3, r4, r5, pc}
 8011bda:	bf00      	nop
 8011bdc:	2000a190 	.word	0x2000a190
 8011be0:	20000000 	.word	0x20000000
 8011be4:	0800ff21 	.word	0x0800ff21
 8011be8:	2000007c 	.word	0x2000007c
 8011bec:	2000a194 	.word	0x2000a194
 8011bf0:	0800ff1f 	.word	0x0800ff1f
 8011bf4:	20000080 	.word	0x20000080

08011bf8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 8011bf8:	b510      	push	{r4, lr}
 8011bfa:	4604      	mov	r4, r0
 8011bfc:	f7ff ff88 	bl	8011b10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 8011c00:	4620      	mov	r0, r4
 8011c02:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011c06:	f7ff bfbd 	b.w	8011b84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

08011c0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 8011c0c:	b538      	push	{r3, r4, r5, lr}
 8011c0e:	4c15      	ldr	r4, [pc, #84]	; (8011c64 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 8011c10:	7823      	ldrb	r3, [r4, #0]
 8011c12:	f3bf 8f5b 	dmb	ish
 8011c16:	07da      	lsls	r2, r3, #31
 8011c18:	4605      	mov	r5, r0
 8011c1a:	d40b      	bmi.n	8011c34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8011c1c:	4620      	mov	r0, r4
 8011c1e:	f007 fbe2 	bl	80193e6 <__cxa_guard_acquire>
 8011c22:	b138      	cbz	r0, 8011c34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 8011c24:	4620      	mov	r0, r4
 8011c26:	f007 fbea 	bl	80193fe <__cxa_guard_release>
 8011c2a:	4a0f      	ldr	r2, [pc, #60]	; (8011c68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8011c2c:	490f      	ldr	r1, [pc, #60]	; (8011c6c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 8011c2e:	4810      	ldr	r0, [pc, #64]	; (8011c70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8011c30:	f007 fbd2 	bl	80193d8 <__aeabi_atexit>
 8011c34:	4c0f      	ldr	r4, [pc, #60]	; (8011c74 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 8011c36:	7823      	ldrb	r3, [r4, #0]
 8011c38:	f3bf 8f5b 	dmb	ish
 8011c3c:	07db      	lsls	r3, r3, #31
 8011c3e:	d40b      	bmi.n	8011c58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8011c40:	4620      	mov	r0, r4
 8011c42:	f007 fbd0 	bl	80193e6 <__cxa_guard_acquire>
 8011c46:	b138      	cbz	r0, 8011c58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 8011c48:	4620      	mov	r0, r4
 8011c4a:	f007 fbd8 	bl	80193fe <__cxa_guard_release>
 8011c4e:	4a06      	ldr	r2, [pc, #24]	; (8011c68 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 8011c50:	4909      	ldr	r1, [pc, #36]	; (8011c78 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 8011c52:	480a      	ldr	r0, [pc, #40]	; (8011c7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8011c54:	f007 fbc0 	bl	80193d8 <__aeabi_atexit>
 8011c58:	4b05      	ldr	r3, [pc, #20]	; (8011c70 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 8011c5a:	622b      	str	r3, [r5, #32]
 8011c5c:	4b07      	ldr	r3, [pc, #28]	; (8011c7c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 8011c5e:	626b      	str	r3, [r5, #36]	; 0x24
 8011c60:	bd38      	pop	{r3, r4, r5, pc}
 8011c62:	bf00      	nop
 8011c64:	2000a1c0 	.word	0x2000a1c0
 8011c68:	20000000 	.word	0x20000000
 8011c6c:	0800ff15 	.word	0x0800ff15
 8011c70:	200000ac 	.word	0x200000ac
 8011c74:	2000a1c4 	.word	0x2000a1c4
 8011c78:	0800ff13 	.word	0x0800ff13
 8011c7c:	200000b0 	.word	0x200000b0

08011c80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 8011c80:	b538      	push	{r3, r4, r5, lr}
 8011c82:	4c15      	ldr	r4, [pc, #84]	; (8011cd8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 8011c84:	7823      	ldrb	r3, [r4, #0]
 8011c86:	f3bf 8f5b 	dmb	ish
 8011c8a:	07da      	lsls	r2, r3, #31
 8011c8c:	4605      	mov	r5, r0
 8011c8e:	d40b      	bmi.n	8011ca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8011c90:	4620      	mov	r0, r4
 8011c92:	f007 fba8 	bl	80193e6 <__cxa_guard_acquire>
 8011c96:	b138      	cbz	r0, 8011ca8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 8011c98:	4620      	mov	r0, r4
 8011c9a:	f007 fbb0 	bl	80193fe <__cxa_guard_release>
 8011c9e:	4a0f      	ldr	r2, [pc, #60]	; (8011cdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8011ca0:	490f      	ldr	r1, [pc, #60]	; (8011ce0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 8011ca2:	4810      	ldr	r0, [pc, #64]	; (8011ce4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8011ca4:	f007 fb98 	bl	80193d8 <__aeabi_atexit>
 8011ca8:	4c0f      	ldr	r4, [pc, #60]	; (8011ce8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 8011caa:	7823      	ldrb	r3, [r4, #0]
 8011cac:	f3bf 8f5b 	dmb	ish
 8011cb0:	07db      	lsls	r3, r3, #31
 8011cb2:	d40b      	bmi.n	8011ccc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8011cb4:	4620      	mov	r0, r4
 8011cb6:	f007 fb96 	bl	80193e6 <__cxa_guard_acquire>
 8011cba:	b138      	cbz	r0, 8011ccc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 8011cbc:	4620      	mov	r0, r4
 8011cbe:	f007 fb9e 	bl	80193fe <__cxa_guard_release>
 8011cc2:	4a06      	ldr	r2, [pc, #24]	; (8011cdc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 8011cc4:	4909      	ldr	r1, [pc, #36]	; (8011cec <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 8011cc6:	480a      	ldr	r0, [pc, #40]	; (8011cf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8011cc8:	f007 fb86 	bl	80193d8 <__aeabi_atexit>
 8011ccc:	4b05      	ldr	r3, [pc, #20]	; (8011ce4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 8011cce:	61ab      	str	r3, [r5, #24]
 8011cd0:	4b07      	ldr	r3, [pc, #28]	; (8011cf0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 8011cd2:	61eb      	str	r3, [r5, #28]
 8011cd4:	bd38      	pop	{r3, r4, r5, pc}
 8011cd6:	bf00      	nop
 8011cd8:	2000a198 	.word	0x2000a198
 8011cdc:	20000000 	.word	0x20000000
 8011ce0:	0800ff19 	.word	0x0800ff19
 8011ce4:	20000084 	.word	0x20000084
 8011ce8:	2000a19c 	.word	0x2000a19c
 8011cec:	0800ff17 	.word	0x0800ff17
 8011cf0:	20000088 	.word	0x20000088

08011cf4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 8011cf4:	b510      	push	{r4, lr}
 8011cf6:	4604      	mov	r4, r0
 8011cf8:	f7ff ff88 	bl	8011c0c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 8011cfc:	4620      	mov	r0, r4
 8011cfe:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011d02:	f7ff bfbd 	b.w	8011c80 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

08011d08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 8011d08:	b538      	push	{r3, r4, r5, lr}
 8011d0a:	4c15      	ldr	r4, [pc, #84]	; (8011d60 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 8011d0c:	7823      	ldrb	r3, [r4, #0]
 8011d0e:	f3bf 8f5b 	dmb	ish
 8011d12:	07da      	lsls	r2, r3, #31
 8011d14:	4605      	mov	r5, r0
 8011d16:	d40b      	bmi.n	8011d30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8011d18:	4620      	mov	r0, r4
 8011d1a:	f007 fb64 	bl	80193e6 <__cxa_guard_acquire>
 8011d1e:	b138      	cbz	r0, 8011d30 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 8011d20:	4620      	mov	r0, r4
 8011d22:	f007 fb6c 	bl	80193fe <__cxa_guard_release>
 8011d26:	4a0f      	ldr	r2, [pc, #60]	; (8011d64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8011d28:	490f      	ldr	r1, [pc, #60]	; (8011d68 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 8011d2a:	4810      	ldr	r0, [pc, #64]	; (8011d6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8011d2c:	f007 fb54 	bl	80193d8 <__aeabi_atexit>
 8011d30:	4c0f      	ldr	r4, [pc, #60]	; (8011d70 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 8011d32:	7823      	ldrb	r3, [r4, #0]
 8011d34:	f3bf 8f5b 	dmb	ish
 8011d38:	07db      	lsls	r3, r3, #31
 8011d3a:	d40b      	bmi.n	8011d54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8011d3c:	4620      	mov	r0, r4
 8011d3e:	f007 fb52 	bl	80193e6 <__cxa_guard_acquire>
 8011d42:	b138      	cbz	r0, 8011d54 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 8011d44:	4620      	mov	r0, r4
 8011d46:	f007 fb5a 	bl	80193fe <__cxa_guard_release>
 8011d4a:	4a06      	ldr	r2, [pc, #24]	; (8011d64 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 8011d4c:	4909      	ldr	r1, [pc, #36]	; (8011d74 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 8011d4e:	480a      	ldr	r0, [pc, #40]	; (8011d78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8011d50:	f007 fb42 	bl	80193d8 <__aeabi_atexit>
 8011d54:	4b05      	ldr	r3, [pc, #20]	; (8011d6c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 8011d56:	632b      	str	r3, [r5, #48]	; 0x30
 8011d58:	4b07      	ldr	r3, [pc, #28]	; (8011d78 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 8011d5a:	636b      	str	r3, [r5, #52]	; 0x34
 8011d5c:	bd38      	pop	{r3, r4, r5, pc}
 8011d5e:	bf00      	nop
 8011d60:	2000a1d0 	.word	0x2000a1d0
 8011d64:	20000000 	.word	0x20000000
 8011d68:	0800ff0d 	.word	0x0800ff0d
 8011d6c:	200000bc 	.word	0x200000bc
 8011d70:	2000a1d4 	.word	0x2000a1d4
 8011d74:	0800ff0b 	.word	0x0800ff0b
 8011d78:	200000c0 	.word	0x200000c0

08011d7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 8011d7c:	b538      	push	{r3, r4, r5, lr}
 8011d7e:	4c15      	ldr	r4, [pc, #84]	; (8011dd4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 8011d80:	7823      	ldrb	r3, [r4, #0]
 8011d82:	f3bf 8f5b 	dmb	ish
 8011d86:	07da      	lsls	r2, r3, #31
 8011d88:	4605      	mov	r5, r0
 8011d8a:	d40b      	bmi.n	8011da4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8011d8c:	4620      	mov	r0, r4
 8011d8e:	f007 fb2a 	bl	80193e6 <__cxa_guard_acquire>
 8011d92:	b138      	cbz	r0, 8011da4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 8011d94:	4620      	mov	r0, r4
 8011d96:	f007 fb32 	bl	80193fe <__cxa_guard_release>
 8011d9a:	4a0f      	ldr	r2, [pc, #60]	; (8011dd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8011d9c:	490f      	ldr	r1, [pc, #60]	; (8011ddc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 8011d9e:	4810      	ldr	r0, [pc, #64]	; (8011de0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8011da0:	f007 fb1a 	bl	80193d8 <__aeabi_atexit>
 8011da4:	4c0f      	ldr	r4, [pc, #60]	; (8011de4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 8011da6:	7823      	ldrb	r3, [r4, #0]
 8011da8:	f3bf 8f5b 	dmb	ish
 8011dac:	07db      	lsls	r3, r3, #31
 8011dae:	d40b      	bmi.n	8011dc8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8011db0:	4620      	mov	r0, r4
 8011db2:	f007 fb18 	bl	80193e6 <__cxa_guard_acquire>
 8011db6:	b138      	cbz	r0, 8011dc8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 8011db8:	4620      	mov	r0, r4
 8011dba:	f007 fb20 	bl	80193fe <__cxa_guard_release>
 8011dbe:	4a06      	ldr	r2, [pc, #24]	; (8011dd8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 8011dc0:	4909      	ldr	r1, [pc, #36]	; (8011de8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 8011dc2:	480a      	ldr	r0, [pc, #40]	; (8011dec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8011dc4:	f007 fb08 	bl	80193d8 <__aeabi_atexit>
 8011dc8:	4b05      	ldr	r3, [pc, #20]	; (8011de0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 8011dca:	62ab      	str	r3, [r5, #40]	; 0x28
 8011dcc:	4b07      	ldr	r3, [pc, #28]	; (8011dec <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 8011dce:	62eb      	str	r3, [r5, #44]	; 0x2c
 8011dd0:	bd38      	pop	{r3, r4, r5, pc}
 8011dd2:	bf00      	nop
 8011dd4:	2000a1a0 	.word	0x2000a1a0
 8011dd8:	20000000 	.word	0x20000000
 8011ddc:	0800ff11 	.word	0x0800ff11
 8011de0:	2000008c 	.word	0x2000008c
 8011de4:	2000a1a4 	.word	0x2000a1a4
 8011de8:	0800ff0f 	.word	0x0800ff0f
 8011dec:	20000090 	.word	0x20000090

08011df0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 8011df0:	b510      	push	{r4, lr}
 8011df2:	4604      	mov	r4, r0
 8011df4:	f7ff ff88 	bl	8011d08 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 8011df8:	4620      	mov	r0, r4
 8011dfa:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011dfe:	f7ff bfbd 	b.w	8011d7c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

08011e04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 8011e04:	b538      	push	{r3, r4, r5, lr}
 8011e06:	4c15      	ldr	r4, [pc, #84]	; (8011e5c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 8011e08:	7823      	ldrb	r3, [r4, #0]
 8011e0a:	f3bf 8f5b 	dmb	ish
 8011e0e:	07da      	lsls	r2, r3, #31
 8011e10:	4605      	mov	r5, r0
 8011e12:	d40b      	bmi.n	8011e2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8011e14:	4620      	mov	r0, r4
 8011e16:	f007 fae6 	bl	80193e6 <__cxa_guard_acquire>
 8011e1a:	b138      	cbz	r0, 8011e2c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 8011e1c:	4620      	mov	r0, r4
 8011e1e:	f007 faee 	bl	80193fe <__cxa_guard_release>
 8011e22:	4a0f      	ldr	r2, [pc, #60]	; (8011e60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8011e24:	490f      	ldr	r1, [pc, #60]	; (8011e64 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 8011e26:	4810      	ldr	r0, [pc, #64]	; (8011e68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8011e28:	f007 fad6 	bl	80193d8 <__aeabi_atexit>
 8011e2c:	4c0f      	ldr	r4, [pc, #60]	; (8011e6c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 8011e2e:	7823      	ldrb	r3, [r4, #0]
 8011e30:	f3bf 8f5b 	dmb	ish
 8011e34:	07db      	lsls	r3, r3, #31
 8011e36:	d40b      	bmi.n	8011e50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8011e38:	4620      	mov	r0, r4
 8011e3a:	f007 fad4 	bl	80193e6 <__cxa_guard_acquire>
 8011e3e:	b138      	cbz	r0, 8011e50 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 8011e40:	4620      	mov	r0, r4
 8011e42:	f007 fadc 	bl	80193fe <__cxa_guard_release>
 8011e46:	4a06      	ldr	r2, [pc, #24]	; (8011e60 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 8011e48:	4909      	ldr	r1, [pc, #36]	; (8011e70 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 8011e4a:	480a      	ldr	r0, [pc, #40]	; (8011e74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8011e4c:	f007 fac4 	bl	80193d8 <__aeabi_atexit>
 8011e50:	4b05      	ldr	r3, [pc, #20]	; (8011e68 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 8011e52:	652b      	str	r3, [r5, #80]	; 0x50
 8011e54:	4b07      	ldr	r3, [pc, #28]	; (8011e74 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 8011e56:	656b      	str	r3, [r5, #84]	; 0x54
 8011e58:	bd38      	pop	{r3, r4, r5, pc}
 8011e5a:	bf00      	nop
 8011e5c:	2000a1d8 	.word	0x2000a1d8
 8011e60:	20000000 	.word	0x20000000
 8011e64:	0800fefd 	.word	0x0800fefd
 8011e68:	200000c4 	.word	0x200000c4
 8011e6c:	2000a1dc 	.word	0x2000a1dc
 8011e70:	0800fefb 	.word	0x0800fefb
 8011e74:	200000c8 	.word	0x200000c8

08011e78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 8011e78:	b538      	push	{r3, r4, r5, lr}
 8011e7a:	4c15      	ldr	r4, [pc, #84]	; (8011ed0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 8011e7c:	7823      	ldrb	r3, [r4, #0]
 8011e7e:	f3bf 8f5b 	dmb	ish
 8011e82:	07da      	lsls	r2, r3, #31
 8011e84:	4605      	mov	r5, r0
 8011e86:	d40b      	bmi.n	8011ea0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8011e88:	4620      	mov	r0, r4
 8011e8a:	f007 faac 	bl	80193e6 <__cxa_guard_acquire>
 8011e8e:	b138      	cbz	r0, 8011ea0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 8011e90:	4620      	mov	r0, r4
 8011e92:	f007 fab4 	bl	80193fe <__cxa_guard_release>
 8011e96:	4a0f      	ldr	r2, [pc, #60]	; (8011ed4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8011e98:	490f      	ldr	r1, [pc, #60]	; (8011ed8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 8011e9a:	4810      	ldr	r0, [pc, #64]	; (8011edc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8011e9c:	f007 fa9c 	bl	80193d8 <__aeabi_atexit>
 8011ea0:	4c0f      	ldr	r4, [pc, #60]	; (8011ee0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 8011ea2:	7823      	ldrb	r3, [r4, #0]
 8011ea4:	f3bf 8f5b 	dmb	ish
 8011ea8:	07db      	lsls	r3, r3, #31
 8011eaa:	d40b      	bmi.n	8011ec4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8011eac:	4620      	mov	r0, r4
 8011eae:	f007 fa9a 	bl	80193e6 <__cxa_guard_acquire>
 8011eb2:	b138      	cbz	r0, 8011ec4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 8011eb4:	4620      	mov	r0, r4
 8011eb6:	f007 faa2 	bl	80193fe <__cxa_guard_release>
 8011eba:	4a06      	ldr	r2, [pc, #24]	; (8011ed4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 8011ebc:	4909      	ldr	r1, [pc, #36]	; (8011ee4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 8011ebe:	480a      	ldr	r0, [pc, #40]	; (8011ee8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8011ec0:	f007 fa8a 	bl	80193d8 <__aeabi_atexit>
 8011ec4:	4b05      	ldr	r3, [pc, #20]	; (8011edc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 8011ec6:	64ab      	str	r3, [r5, #72]	; 0x48
 8011ec8:	4b07      	ldr	r3, [pc, #28]	; (8011ee8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 8011eca:	64eb      	str	r3, [r5, #76]	; 0x4c
 8011ecc:	bd38      	pop	{r3, r4, r5, pc}
 8011ece:	bf00      	nop
 8011ed0:	2000a1e0 	.word	0x2000a1e0
 8011ed4:	20000000 	.word	0x20000000
 8011ed8:	0800ff01 	.word	0x0800ff01
 8011edc:	200000cc 	.word	0x200000cc
 8011ee0:	2000a1e4 	.word	0x2000a1e4
 8011ee4:	0800feff 	.word	0x0800feff
 8011ee8:	200000d0 	.word	0x200000d0

08011eec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 8011eec:	b538      	push	{r3, r4, r5, lr}
 8011eee:	4c15      	ldr	r4, [pc, #84]	; (8011f44 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 8011ef0:	7823      	ldrb	r3, [r4, #0]
 8011ef2:	f3bf 8f5b 	dmb	ish
 8011ef6:	07da      	lsls	r2, r3, #31
 8011ef8:	4605      	mov	r5, r0
 8011efa:	d40b      	bmi.n	8011f14 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8011efc:	4620      	mov	r0, r4
 8011efe:	f007 fa72 	bl	80193e6 <__cxa_guard_acquire>
 8011f02:	b138      	cbz	r0, 8011f14 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 8011f04:	4620      	mov	r0, r4
 8011f06:	f007 fa7a 	bl	80193fe <__cxa_guard_release>
 8011f0a:	4a0f      	ldr	r2, [pc, #60]	; (8011f48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8011f0c:	490f      	ldr	r1, [pc, #60]	; (8011f4c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 8011f0e:	4810      	ldr	r0, [pc, #64]	; (8011f50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8011f10:	f007 fa62 	bl	80193d8 <__aeabi_atexit>
 8011f14:	4c0f      	ldr	r4, [pc, #60]	; (8011f54 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 8011f16:	7823      	ldrb	r3, [r4, #0]
 8011f18:	f3bf 8f5b 	dmb	ish
 8011f1c:	07db      	lsls	r3, r3, #31
 8011f1e:	d40b      	bmi.n	8011f38 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8011f20:	4620      	mov	r0, r4
 8011f22:	f007 fa60 	bl	80193e6 <__cxa_guard_acquire>
 8011f26:	b138      	cbz	r0, 8011f38 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 8011f28:	4620      	mov	r0, r4
 8011f2a:	f007 fa68 	bl	80193fe <__cxa_guard_release>
 8011f2e:	4a06      	ldr	r2, [pc, #24]	; (8011f48 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 8011f30:	4909      	ldr	r1, [pc, #36]	; (8011f58 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 8011f32:	480a      	ldr	r0, [pc, #40]	; (8011f5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8011f34:	f007 fa50 	bl	80193d8 <__aeabi_atexit>
 8011f38:	4b05      	ldr	r3, [pc, #20]	; (8011f50 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 8011f3a:	642b      	str	r3, [r5, #64]	; 0x40
 8011f3c:	4b07      	ldr	r3, [pc, #28]	; (8011f5c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 8011f3e:	646b      	str	r3, [r5, #68]	; 0x44
 8011f40:	bd38      	pop	{r3, r4, r5, pc}
 8011f42:	bf00      	nop
 8011f44:	2000a1a8 	.word	0x2000a1a8
 8011f48:	20000000 	.word	0x20000000
 8011f4c:	0800ff05 	.word	0x0800ff05
 8011f50:	20000094 	.word	0x20000094
 8011f54:	2000a1ac 	.word	0x2000a1ac
 8011f58:	0800ff03 	.word	0x0800ff03
 8011f5c:	20000098 	.word	0x20000098

08011f60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 8011f60:	b538      	push	{r3, r4, r5, lr}
 8011f62:	4c15      	ldr	r4, [pc, #84]	; (8011fb8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 8011f64:	7823      	ldrb	r3, [r4, #0]
 8011f66:	f3bf 8f5b 	dmb	ish
 8011f6a:	07da      	lsls	r2, r3, #31
 8011f6c:	4605      	mov	r5, r0
 8011f6e:	d40b      	bmi.n	8011f88 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8011f70:	4620      	mov	r0, r4
 8011f72:	f007 fa38 	bl	80193e6 <__cxa_guard_acquire>
 8011f76:	b138      	cbz	r0, 8011f88 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 8011f78:	4620      	mov	r0, r4
 8011f7a:	f007 fa40 	bl	80193fe <__cxa_guard_release>
 8011f7e:	4a0f      	ldr	r2, [pc, #60]	; (8011fbc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8011f80:	490f      	ldr	r1, [pc, #60]	; (8011fc0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 8011f82:	4810      	ldr	r0, [pc, #64]	; (8011fc4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8011f84:	f007 fa28 	bl	80193d8 <__aeabi_atexit>
 8011f88:	4c0f      	ldr	r4, [pc, #60]	; (8011fc8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 8011f8a:	7823      	ldrb	r3, [r4, #0]
 8011f8c:	f3bf 8f5b 	dmb	ish
 8011f90:	07db      	lsls	r3, r3, #31
 8011f92:	d40b      	bmi.n	8011fac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8011f94:	4620      	mov	r0, r4
 8011f96:	f007 fa26 	bl	80193e6 <__cxa_guard_acquire>
 8011f9a:	b138      	cbz	r0, 8011fac <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 8011f9c:	4620      	mov	r0, r4
 8011f9e:	f007 fa2e 	bl	80193fe <__cxa_guard_release>
 8011fa2:	4a06      	ldr	r2, [pc, #24]	; (8011fbc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 8011fa4:	4909      	ldr	r1, [pc, #36]	; (8011fcc <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 8011fa6:	480a      	ldr	r0, [pc, #40]	; (8011fd0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8011fa8:	f007 fa16 	bl	80193d8 <__aeabi_atexit>
 8011fac:	4b05      	ldr	r3, [pc, #20]	; (8011fc4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 8011fae:	63ab      	str	r3, [r5, #56]	; 0x38
 8011fb0:	4b07      	ldr	r3, [pc, #28]	; (8011fd0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 8011fb2:	63eb      	str	r3, [r5, #60]	; 0x3c
 8011fb4:	bd38      	pop	{r3, r4, r5, pc}
 8011fb6:	bf00      	nop
 8011fb8:	2000a1c8 	.word	0x2000a1c8
 8011fbc:	20000000 	.word	0x20000000
 8011fc0:	0800ff09 	.word	0x0800ff09
 8011fc4:	200000b4 	.word	0x200000b4
 8011fc8:	2000a1cc 	.word	0x2000a1cc
 8011fcc:	0800ff07 	.word	0x0800ff07
 8011fd0:	200000b8 	.word	0x200000b8

08011fd4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 8011fd4:	b510      	push	{r4, lr}
 8011fd6:	4604      	mov	r4, r0
 8011fd8:	f7ff ff14 	bl	8011e04 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 8011fdc:	4620      	mov	r0, r4
 8011fde:	f7ff ff85 	bl	8011eec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 8011fe2:	4620      	mov	r0, r4
 8011fe4:	f7ff ff48 	bl	8011e78 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 8011fe8:	4620      	mov	r0, r4
 8011fea:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011fee:	f7ff bfb7 	b.w	8011f60 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

08011ff4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 8011ff4:	b538      	push	{r3, r4, r5, lr}
 8011ff6:	4c15      	ldr	r4, [pc, #84]	; (801204c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 8011ff8:	7823      	ldrb	r3, [r4, #0]
 8011ffa:	f3bf 8f5b 	dmb	ish
 8011ffe:	07da      	lsls	r2, r3, #31
 8012000:	4605      	mov	r5, r0
 8012002:	d40b      	bmi.n	801201c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 8012004:	4620      	mov	r0, r4
 8012006:	f007 f9ee 	bl	80193e6 <__cxa_guard_acquire>
 801200a:	b138      	cbz	r0, 801201c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801200c:	4620      	mov	r0, r4
 801200e:	f007 f9f6 	bl	80193fe <__cxa_guard_release>
 8012012:	4a0f      	ldr	r2, [pc, #60]	; (8012050 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8012014:	490f      	ldr	r1, [pc, #60]	; (8012054 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 8012016:	4810      	ldr	r0, [pc, #64]	; (8012058 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8012018:	f007 f9de 	bl	80193d8 <__aeabi_atexit>
 801201c:	4c0f      	ldr	r4, [pc, #60]	; (801205c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801201e:	7823      	ldrb	r3, [r4, #0]
 8012020:	f3bf 8f5b 	dmb	ish
 8012024:	07db      	lsls	r3, r3, #31
 8012026:	d40b      	bmi.n	8012040 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8012028:	4620      	mov	r0, r4
 801202a:	f007 f9dc 	bl	80193e6 <__cxa_guard_acquire>
 801202e:	b138      	cbz	r0, 8012040 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 8012030:	4620      	mov	r0, r4
 8012032:	f007 f9e4 	bl	80193fe <__cxa_guard_release>
 8012036:	4a06      	ldr	r2, [pc, #24]	; (8012050 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 8012038:	4909      	ldr	r1, [pc, #36]	; (8012060 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801203a:	480a      	ldr	r0, [pc, #40]	; (8012064 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801203c:	f007 f9cc 	bl	80193d8 <__aeabi_atexit>
 8012040:	4b05      	ldr	r3, [pc, #20]	; (8012058 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 8012042:	662b      	str	r3, [r5, #96]	; 0x60
 8012044:	4b07      	ldr	r3, [pc, #28]	; (8012064 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 8012046:	666b      	str	r3, [r5, #100]	; 0x64
 8012048:	bd38      	pop	{r3, r4, r5, pc}
 801204a:	bf00      	nop
 801204c:	2000a1b0 	.word	0x2000a1b0
 8012050:	20000000 	.word	0x20000000
 8012054:	0800fef5 	.word	0x0800fef5
 8012058:	2000009c 	.word	0x2000009c
 801205c:	2000a1b4 	.word	0x2000a1b4
 8012060:	0800fef3 	.word	0x0800fef3
 8012064:	200000a0 	.word	0x200000a0

08012068 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 8012068:	b538      	push	{r3, r4, r5, lr}
 801206a:	4c15      	ldr	r4, [pc, #84]	; (80120c0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801206c:	7823      	ldrb	r3, [r4, #0]
 801206e:	f3bf 8f5b 	dmb	ish
 8012072:	07da      	lsls	r2, r3, #31
 8012074:	4605      	mov	r5, r0
 8012076:	d40b      	bmi.n	8012090 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8012078:	4620      	mov	r0, r4
 801207a:	f007 f9b4 	bl	80193e6 <__cxa_guard_acquire>
 801207e:	b138      	cbz	r0, 8012090 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 8012080:	4620      	mov	r0, r4
 8012082:	f007 f9bc 	bl	80193fe <__cxa_guard_release>
 8012086:	4a0f      	ldr	r2, [pc, #60]	; (80120c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 8012088:	490f      	ldr	r1, [pc, #60]	; (80120c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801208a:	4810      	ldr	r0, [pc, #64]	; (80120cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801208c:	f007 f9a4 	bl	80193d8 <__aeabi_atexit>
 8012090:	4c0f      	ldr	r4, [pc, #60]	; (80120d0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 8012092:	7823      	ldrb	r3, [r4, #0]
 8012094:	f3bf 8f5b 	dmb	ish
 8012098:	07db      	lsls	r3, r3, #31
 801209a:	d40b      	bmi.n	80120b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801209c:	4620      	mov	r0, r4
 801209e:	f007 f9a2 	bl	80193e6 <__cxa_guard_acquire>
 80120a2:	b138      	cbz	r0, 80120b4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 80120a4:	4620      	mov	r0, r4
 80120a6:	f007 f9aa 	bl	80193fe <__cxa_guard_release>
 80120aa:	4a06      	ldr	r2, [pc, #24]	; (80120c4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 80120ac:	4909      	ldr	r1, [pc, #36]	; (80120d4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 80120ae:	480a      	ldr	r0, [pc, #40]	; (80120d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80120b0:	f007 f992 	bl	80193d8 <__aeabi_atexit>
 80120b4:	4b05      	ldr	r3, [pc, #20]	; (80120cc <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 80120b6:	65ab      	str	r3, [r5, #88]	; 0x58
 80120b8:	4b07      	ldr	r3, [pc, #28]	; (80120d8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 80120ba:	65eb      	str	r3, [r5, #92]	; 0x5c
 80120bc:	bd38      	pop	{r3, r4, r5, pc}
 80120be:	bf00      	nop
 80120c0:	2000a188 	.word	0x2000a188
 80120c4:	20000000 	.word	0x20000000
 80120c8:	0800fef9 	.word	0x0800fef9
 80120cc:	20000074 	.word	0x20000074
 80120d0:	2000a18c 	.word	0x2000a18c
 80120d4:	0800fef7 	.word	0x0800fef7
 80120d8:	20000078 	.word	0x20000078

080120dc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 80120dc:	b510      	push	{r4, lr}
 80120de:	4604      	mov	r4, r0
 80120e0:	f7ff ff88 	bl	8011ff4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 80120e4:	4620      	mov	r0, r4
 80120e6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80120ea:	f7ff bfbd 	b.w	8012068 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

080120f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 80120f0:	b538      	push	{r3, r4, r5, lr}
 80120f2:	4c15      	ldr	r4, [pc, #84]	; (8012148 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 80120f4:	7823      	ldrb	r3, [r4, #0]
 80120f6:	f3bf 8f5b 	dmb	ish
 80120fa:	07da      	lsls	r2, r3, #31
 80120fc:	4605      	mov	r5, r0
 80120fe:	d40b      	bmi.n	8012118 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8012100:	4620      	mov	r0, r4
 8012102:	f007 f970 	bl	80193e6 <__cxa_guard_acquire>
 8012106:	b138      	cbz	r0, 8012118 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 8012108:	4620      	mov	r0, r4
 801210a:	f007 f978 	bl	80193fe <__cxa_guard_release>
 801210e:	4a0f      	ldr	r2, [pc, #60]	; (801214c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8012110:	490f      	ldr	r1, [pc, #60]	; (8012150 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 8012112:	4810      	ldr	r0, [pc, #64]	; (8012154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 8012114:	f007 f960 	bl	80193d8 <__aeabi_atexit>
 8012118:	4c0f      	ldr	r4, [pc, #60]	; (8012158 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801211a:	7823      	ldrb	r3, [r4, #0]
 801211c:	f3bf 8f5b 	dmb	ish
 8012120:	07db      	lsls	r3, r3, #31
 8012122:	d40b      	bmi.n	801213c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 8012124:	4620      	mov	r0, r4
 8012126:	f007 f95e 	bl	80193e6 <__cxa_guard_acquire>
 801212a:	b138      	cbz	r0, 801213c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801212c:	4620      	mov	r0, r4
 801212e:	f007 f966 	bl	80193fe <__cxa_guard_release>
 8012132:	4a06      	ldr	r2, [pc, #24]	; (801214c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 8012134:	4909      	ldr	r1, [pc, #36]	; (801215c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 8012136:	480a      	ldr	r0, [pc, #40]	; (8012160 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8012138:	f007 f94e 	bl	80193d8 <__aeabi_atexit>
 801213c:	4b05      	ldr	r3, [pc, #20]	; (8012154 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801213e:	672b      	str	r3, [r5, #112]	; 0x70
 8012140:	4b07      	ldr	r3, [pc, #28]	; (8012160 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 8012142:	676b      	str	r3, [r5, #116]	; 0x74
 8012144:	bd38      	pop	{r3, r4, r5, pc}
 8012146:	bf00      	nop
 8012148:	2000a180 	.word	0x2000a180
 801214c:	20000000 	.word	0x20000000
 8012150:	0800feed 	.word	0x0800feed
 8012154:	2000006c 	.word	0x2000006c
 8012158:	2000a184 	.word	0x2000a184
 801215c:	0800feeb 	.word	0x0800feeb
 8012160:	20000070 	.word	0x20000070

08012164 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 8012164:	b538      	push	{r3, r4, r5, lr}
 8012166:	4c15      	ldr	r4, [pc, #84]	; (80121bc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 8012168:	7823      	ldrb	r3, [r4, #0]
 801216a:	f3bf 8f5b 	dmb	ish
 801216e:	07da      	lsls	r2, r3, #31
 8012170:	4605      	mov	r5, r0
 8012172:	d40b      	bmi.n	801218c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 8012174:	4620      	mov	r0, r4
 8012176:	f007 f936 	bl	80193e6 <__cxa_guard_acquire>
 801217a:	b138      	cbz	r0, 801218c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801217c:	4620      	mov	r0, r4
 801217e:	f007 f93e 	bl	80193fe <__cxa_guard_release>
 8012182:	4a0f      	ldr	r2, [pc, #60]	; (80121c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 8012184:	490f      	ldr	r1, [pc, #60]	; (80121c4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 8012186:	4810      	ldr	r0, [pc, #64]	; (80121c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 8012188:	f007 f926 	bl	80193d8 <__aeabi_atexit>
 801218c:	4c0f      	ldr	r4, [pc, #60]	; (80121cc <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801218e:	7823      	ldrb	r3, [r4, #0]
 8012190:	f3bf 8f5b 	dmb	ish
 8012194:	07db      	lsls	r3, r3, #31
 8012196:	d40b      	bmi.n	80121b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 8012198:	4620      	mov	r0, r4
 801219a:	f007 f924 	bl	80193e6 <__cxa_guard_acquire>
 801219e:	b138      	cbz	r0, 80121b0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 80121a0:	4620      	mov	r0, r4
 80121a2:	f007 f92c 	bl	80193fe <__cxa_guard_release>
 80121a6:	4a06      	ldr	r2, [pc, #24]	; (80121c0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 80121a8:	4909      	ldr	r1, [pc, #36]	; (80121d0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 80121aa:	480a      	ldr	r0, [pc, #40]	; (80121d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80121ac:	f007 f914 	bl	80193d8 <__aeabi_atexit>
 80121b0:	4b05      	ldr	r3, [pc, #20]	; (80121c8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 80121b2:	66ab      	str	r3, [r5, #104]	; 0x68
 80121b4:	4b07      	ldr	r3, [pc, #28]	; (80121d4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 80121b6:	66eb      	str	r3, [r5, #108]	; 0x6c
 80121b8:	bd38      	pop	{r3, r4, r5, pc}
 80121ba:	bf00      	nop
 80121bc:	2000a178 	.word	0x2000a178
 80121c0:	20000000 	.word	0x20000000
 80121c4:	0800fef1 	.word	0x0800fef1
 80121c8:	20000064 	.word	0x20000064
 80121cc:	2000a17c 	.word	0x2000a17c
 80121d0:	0800feef 	.word	0x0800feef
 80121d4:	20000068 	.word	0x20000068

080121d8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 80121d8:	b510      	push	{r4, lr}
 80121da:	4604      	mov	r4, r0
 80121dc:	f7ff ff88 	bl	80120f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 80121e0:	4620      	mov	r0, r4
 80121e2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80121e6:	f7ff bfbd 	b.w	8012164 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

080121ea <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 80121ea:	b510      	push	{r4, lr}
 80121ec:	4604      	mov	r4, r0
 80121ee:	f7ff fff3 	bl	80121d8 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 80121f2:	4620      	mov	r0, r4
 80121f4:	f7ff ff72 	bl	80120dc <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 80121f8:	4620      	mov	r0, r4
 80121fa:	f7ff fdf9 	bl	8011df0 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 80121fe:	4620      	mov	r0, r4
 8012200:	f7ff fcfa 	bl	8011bf8 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 8012204:	4620      	mov	r0, r4
 8012206:	f7ff fd75 	bl	8011cf4 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801220a:	4620      	mov	r0, r4
 801220c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8012210:	f7ff bee0 	b.w	8011fd4 <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

08012214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 8012214:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012218:	e9dd 4e0c 	ldrd	r4, lr, [sp, #48]	; 0x30
 801221c:	f9bd 8028 	ldrsh.w	r8, [sp, #40]	; 0x28
 8012220:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8012224:	f89d 6038 	ldrb.w	r6, [sp, #56]	; 0x38
 8012228:	f89d c03c 	ldrb.w	ip, [sp, #60]	; 0x3c
 801222c:	f89d 5040 	ldrb.w	r5, [sp, #64]	; 0x40
 8012230:	8808      	ldrh	r0, [r1, #0]
 8012232:	fb0e 4708 	mla	r7, lr, r8, r4
 8012236:	f1be 0f00 	cmp.w	lr, #0
 801223a:	eb02 0a07 	add.w	sl, r2, r7
 801223e:	db37      	blt.n	80122b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8012240:	45f3      	cmp	fp, lr
 8012242:	dd35      	ble.n	80122b0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x9c>
 8012244:	2c00      	cmp	r4, #0
 8012246:	db31      	blt.n	80122ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 8012248:	45a0      	cmp	r8, r4
 801224a:	dd2f      	ble.n	80122ac <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x98>
 801224c:	5dd2      	ldrb	r2, [r2, r7]
 801224e:	f833 9012 	ldrh.w	r9, [r3, r2, lsl #1]
 8012252:	1c62      	adds	r2, r4, #1
 8012254:	d42f      	bmi.n	80122b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 8012256:	4590      	cmp	r8, r2
 8012258:	dd2d      	ble.n	80122b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801225a:	b366      	cbz	r6, 80122b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa2>
 801225c:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8012260:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 8012264:	f11e 0e01 	adds.w	lr, lr, #1
 8012268:	d429      	bmi.n	80122be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801226a:	45f3      	cmp	fp, lr
 801226c:	dd27      	ble.n	80122be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xaa>
 801226e:	f1bc 0f00 	cmp.w	ip, #0
 8012272:	f000 80a1 	beq.w	80123b8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a4>
 8012276:	2c00      	cmp	r4, #0
 8012278:	db1f      	blt.n	80122ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801227a:	45a0      	cmp	r8, r4
 801227c:	dd1d      	ble.n	80122ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801227e:	f81a 2008 	ldrb.w	r2, [sl, r8]
 8012282:	f833 e012 	ldrh.w	lr, [r3, r2, lsl #1]
 8012286:	3401      	adds	r4, #1
 8012288:	d41c      	bmi.n	80122c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801228a:	45a0      	cmp	r8, r4
 801228c:	dd1a      	ble.n	80122c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb0>
 801228e:	b1de      	cbz	r6, 80122c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb4>
 8012290:	44d0      	add	r8, sl
 8012292:	f898 2001 	ldrb.w	r2, [r8, #1]
 8012296:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801229a:	2e0f      	cmp	r6, #15
 801229c:	d915      	bls.n	80122ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xb6>
 801229e:	4b49      	ldr	r3, [pc, #292]	; (80123c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b0>)
 80122a0:	4a49      	ldr	r2, [pc, #292]	; (80123c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b4>)
 80122a2:	484a      	ldr	r0, [pc, #296]	; (80123cc <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1b8>)
 80122a4:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 80122a8:	f007 f8ca 	bl	8019440 <__assert_func>
 80122ac:	4681      	mov	r9, r0
 80122ae:	e7d0      	b.n	8012252 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x3e>
 80122b0:	4607      	mov	r7, r0
 80122b2:	4681      	mov	r9, r0
 80122b4:	e7d6      	b.n	8012264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80122b6:	4607      	mov	r7, r0
 80122b8:	e7d4      	b.n	8012264 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x50>
 80122ba:	4686      	mov	lr, r0
 80122bc:	e7e3      	b.n	8012286 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x72>
 80122be:	4603      	mov	r3, r0
 80122c0:	4686      	mov	lr, r0
 80122c2:	e7ea      	b.n	801229a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80122c4:	4603      	mov	r3, r0
 80122c6:	e7e8      	b.n	801229a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x86>
 80122c8:	4603      	mov	r3, r0
 80122ca:	f1bc 0f0f 	cmp.w	ip, #15
 80122ce:	d8e6      	bhi.n	801229e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80122d0:	ea4f 4409 	mov.w	r4, r9, lsl #16
 80122d4:	fb16 f80c 	smulbb	r8, r6, ip
 80122d8:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 80122dc:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80122e0:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80122e4:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80122e8:	ea44 0909 	orr.w	r9, r4, r9
 80122ec:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80122f0:	f1cc 0410 	rsb	r4, ip, #16
 80122f4:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80122f8:	1ba4      	subs	r4, r4, r6
 80122fa:	041a      	lsls	r2, r3, #16
 80122fc:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 8012300:	ea4a 0707 	orr.w	r7, sl, r7
 8012304:	4377      	muls	r7, r6
 8012306:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 801230a:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 801230e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012312:	fb04 7409 	mla	r4, r4, r9, r7
 8012316:	4313      	orrs	r3, r2
 8012318:	ea4f 420e 	mov.w	r2, lr, lsl #16
 801231c:	fb08 4303 	mla	r3, r8, r3, r4
 8012320:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8012324:	f42e 64fc 	bic.w	r4, lr, #2016	; 0x7e0
 8012328:	4322      	orrs	r2, r4
 801232a:	ebc8 0c4c 	rsb	ip, r8, ip, lsl #1
 801232e:	fb0c 3202 	mla	r2, ip, r2, r3
 8012332:	0d53      	lsrs	r3, r2, #21
 8012334:	0952      	lsrs	r2, r2, #5
 8012336:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801233a:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 801233e:	431a      	orrs	r2, r3
 8012340:	b293      	uxth	r3, r2
 8012342:	b2af      	uxth	r7, r5
 8012344:	1202      	asrs	r2, r0, #8
 8012346:	43ed      	mvns	r5, r5
 8012348:	b2ed      	uxtb	r5, r5
 801234a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801234e:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8012352:	fb12 f205 	smulbb	r2, r2, r5
 8012356:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 801235a:	fb0c 2c07 	mla	ip, ip, r7, r2
 801235e:	00dc      	lsls	r4, r3, #3
 8012360:	10da      	asrs	r2, r3, #3
 8012362:	10c6      	asrs	r6, r0, #3
 8012364:	00c3      	lsls	r3, r0, #3
 8012366:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 801236a:	b2db      	uxtb	r3, r3
 801236c:	fb16 f605 	smulbb	r6, r6, r5
 8012370:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8012374:	b2e4      	uxtb	r4, r4
 8012376:	fb13 f305 	smulbb	r3, r3, r5
 801237a:	fa1f fc8c 	uxth.w	ip, ip
 801237e:	fb02 6207 	mla	r2, r2, r7, r6
 8012382:	fb04 3307 	mla	r3, r4, r7, r3
 8012386:	b296      	uxth	r6, r2
 8012388:	b29a      	uxth	r2, r3
 801238a:	f10c 0301 	add.w	r3, ip, #1
 801238e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8012392:	1c53      	adds	r3, r2, #1
 8012394:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8012398:	1c72      	adds	r2, r6, #1
 801239a:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801239e:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80123a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80123a6:	0952      	lsrs	r2, r2, #5
 80123a8:	ea43 030c 	orr.w	r3, r3, ip
 80123ac:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80123b0:	4313      	orrs	r3, r2
 80123b2:	800b      	strh	r3, [r1, #0]
 80123b4:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80123b8:	2e0f      	cmp	r6, #15
 80123ba:	f63f af70 	bhi.w	801229e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x8a>
 80123be:	4603      	mov	r3, r0
 80123c0:	4686      	mov	lr, r0
 80123c2:	e785      	b.n	80122d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xbc>
 80123c4:	0801ce3e 	.word	0x0801ce3e
 80123c8:	0801d4b3 	.word	0x0801d4b3
 80123cc:	0801cec2 	.word	0x0801cec2

080123d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80123d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80123d4:	ed2d 8b08 	vpush	{d8-d11}
 80123d8:	b099      	sub	sp, #100	; 0x64
 80123da:	e9dd a52b 	ldrd	sl, r5, [sp, #172]	; 0xac
 80123de:	9215      	str	r2, [sp, #84]	; 0x54
 80123e0:	9309      	str	r3, [sp, #36]	; 0x24
 80123e2:	9a2f      	ldr	r2, [sp, #188]	; 0xbc
 80123e4:	f89d 30cc 	ldrb.w	r3, [sp, #204]	; 0xcc
 80123e8:	930d      	str	r3, [sp, #52]	; 0x34
 80123ea:	910c      	str	r1, [sp, #48]	; 0x30
 80123ec:	e9dd 1330 	ldrd	r1, r3, [sp, #192]	; 0xc0
 80123f0:	9016      	str	r0, [sp, #88]	; 0x58
 80123f2:	6850      	ldr	r0, [r2, #4]
 80123f4:	6812      	ldr	r2, [r2, #0]
 80123f6:	fb00 1303 	mla	r3, r0, r3, r1
 80123fa:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 80123fe:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012400:	681b      	ldr	r3, [r3, #0]
 8012402:	930b      	str	r3, [sp, #44]	; 0x2c
 8012404:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012406:	685e      	ldr	r6, [r3, #4]
 8012408:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801240a:	43db      	mvns	r3, r3
 801240c:	b2db      	uxtb	r3, r3
 801240e:	eeb0 aa40 	vmov.f32	s20, s0
 8012412:	eef0 9a60 	vmov.f32	s19, s1
 8012416:	eeb0 9a41 	vmov.f32	s18, s2
 801241a:	eeb0 8a62 	vmov.f32	s16, s5
 801241e:	eef0 8a43 	vmov.f32	s17, s6
 8012422:	eef0 ba44 	vmov.f32	s23, s8
 8012426:	eeb0 ba64 	vmov.f32	s22, s9
 801242a:	eef0 aa45 	vmov.f32	s21, s10
 801242e:	3604      	adds	r6, #4
 8012430:	930a      	str	r3, [sp, #40]	; 0x28
 8012432:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012434:	2b00      	cmp	r3, #0
 8012436:	dc03      	bgt.n	8012440 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8012438:	9b15      	ldr	r3, [sp, #84]	; 0x54
 801243a:	2b00      	cmp	r3, #0
 801243c:	f340 8225 	ble.w	801288a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 8012440:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012442:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8012446:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801244a:	1e48      	subs	r0, r1, #1
 801244c:	1e57      	subs	r7, r2, #1
 801244e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012450:	2b00      	cmp	r3, #0
 8012452:	f340 80e3 	ble.w	801261c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24c>
 8012456:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801245a:	ea4f 4325 	mov.w	r3, r5, asr #16
 801245e:	d406      	bmi.n	801246e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012460:	4584      	cmp	ip, r0
 8012462:	da04      	bge.n	801246e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012464:	2b00      	cmp	r3, #0
 8012466:	db02      	blt.n	801246e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012468:	42bb      	cmp	r3, r7
 801246a:	f2c0 80d8 	blt.w	801261e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 801246e:	f11c 0c01 	adds.w	ip, ip, #1
 8012472:	f100 80c9 	bmi.w	8012608 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8012476:	4561      	cmp	r1, ip
 8012478:	f2c0 80c6 	blt.w	8012608 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 801247c:	3301      	adds	r3, #1
 801247e:	f100 80c3 	bmi.w	8012608 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8012482:	429a      	cmp	r2, r3
 8012484:	f2c0 80c0 	blt.w	8012608 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8012488:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 801248c:	4647      	mov	r7, r8
 801248e:	f1bb 0f00 	cmp.w	fp, #0
 8012492:	f340 80e3 	ble.w	801265c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8012496:	9a32      	ldr	r2, [sp, #200]	; 0xc8
 8012498:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801249a:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801249e:	689b      	ldr	r3, [r3, #8]
 80124a0:	ea5f 422a 	movs.w	r2, sl, asr #16
 80124a4:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80124a8:	f3ca 3003 	ubfx	r0, sl, #12, #4
 80124ac:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80124b0:	f100 8121 	bmi.w	80126f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 80124b4:	f103 39ff 	add.w	r9, r3, #4294967295
 80124b8:	454a      	cmp	r2, r9
 80124ba:	f280 811c 	bge.w	80126f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 80124be:	f1bc 0f00 	cmp.w	ip, #0
 80124c2:	f2c0 8118 	blt.w	80126f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 80124c6:	f10e 39ff 	add.w	r9, lr, #4294967295
 80124ca:	45cc      	cmp	ip, r9
 80124cc:	f280 8113 	bge.w	80126f6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x326>
 80124d0:	b21b      	sxth	r3, r3
 80124d2:	fb0c 2203 	mla	r2, ip, r3, r2
 80124d6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80124d8:	eb04 0902 	add.w	r9, r4, r2
 80124dc:	5ca2      	ldrb	r2, [r4, r2]
 80124de:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 80124e2:	2800      	cmp	r0, #0
 80124e4:	f000 80fe 	beq.w	80126e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80124e8:	f899 2001 	ldrb.w	r2, [r9, #1]
 80124ec:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 80124f0:	9211      	str	r2, [sp, #68]	; 0x44
 80124f2:	b151      	cbz	r1, 801250a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80124f4:	eb09 0203 	add.w	r2, r9, r3
 80124f8:	f819 3003 	ldrb.w	r3, [r9, r3]
 80124fc:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012500:	930f      	str	r3, [sp, #60]	; 0x3c
 8012502:	7853      	ldrb	r3, [r2, #1]
 8012504:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012508:	9312      	str	r3, [sp, #72]	; 0x48
 801250a:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801250c:	9c12      	ldr	r4, [sp, #72]	; 0x48
 801250e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012512:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012516:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801251a:	ea4c 0c03 	orr.w	ip, ip, r3
 801251e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012520:	041b      	lsls	r3, r3, #16
 8012522:	fb10 f201 	smulbb	r2, r0, r1
 8012526:	f424 64fc 	bic.w	r4, r4, #2016	; 0x7e0
 801252a:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 801252e:	10d2      	asrs	r2, r2, #3
 8012530:	4323      	orrs	r3, r4
 8012532:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 8012536:	4353      	muls	r3, r2
 8012538:	fb09 330c 	mla	r3, r9, ip, r3
 801253c:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8012540:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012544:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8012548:	ea4c 0e0e 	orr.w	lr, ip, lr
 801254c:	f1c1 0c10 	rsb	ip, r1, #16
 8012550:	ebac 0c00 	sub.w	ip, ip, r0
 8012554:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8012558:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801255c:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801255e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8012560:	0418      	lsls	r0, r3, #16
 8012562:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012566:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801256a:	4318      	orrs	r0, r3
 801256c:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8012570:	fb02 c200 	mla	r2, r2, r0, ip
 8012574:	0d53      	lsrs	r3, r2, #21
 8012576:	0952      	lsrs	r2, r2, #5
 8012578:	8838      	ldrh	r0, [r7, #0]
 801257a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801257e:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012582:	431a      	orrs	r2, r3
 8012584:	b292      	uxth	r2, r2
 8012586:	1201      	asrs	r1, r0, #8
 8012588:	f8bd 3034 	ldrh.w	r3, [sp, #52]	; 0x34
 801258c:	ea4f 2c22 	mov.w	ip, r2, asr #8
 8012590:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8012594:	fb11 f104 	smulbb	r1, r1, r4
 8012598:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801259c:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 80125a0:	00c0      	lsls	r0, r0, #3
 80125a2:	fb0c 1c03 	mla	ip, ip, r3, r1
 80125a6:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 80125aa:	10d1      	asrs	r1, r2, #3
 80125ac:	b2c0      	uxtb	r0, r0
 80125ae:	00d2      	lsls	r2, r2, #3
 80125b0:	b2d2      	uxtb	r2, r2
 80125b2:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 80125b6:	fb1e fe04 	smulbb	lr, lr, r4
 80125ba:	fb10 f004 	smulbb	r0, r0, r4
 80125be:	fa1f fc8c 	uxth.w	ip, ip
 80125c2:	fb01 e103 	mla	r1, r1, r3, lr
 80125c6:	fb02 0303 	mla	r3, r2, r3, r0
 80125ca:	b29a      	uxth	r2, r3
 80125cc:	f10c 0301 	add.w	r3, ip, #1
 80125d0:	b289      	uxth	r1, r1
 80125d2:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 80125d6:	1c53      	adds	r3, r2, #1
 80125d8:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80125dc:	1c4a      	adds	r2, r1, #1
 80125de:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 80125e2:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 80125e6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80125ea:	0949      	lsrs	r1, r1, #5
 80125ec:	ea43 030c 	orr.w	r3, r3, ip
 80125f0:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80125f4:	430b      	orrs	r3, r1
 80125f6:	803b      	strh	r3, [r7, #0]
 80125f8:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80125fa:	449a      	add	sl, r3
 80125fc:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80125fe:	3702      	adds	r7, #2
 8012600:	441d      	add	r5, r3
 8012602:	f10b 3bff 	add.w	fp, fp, #4294967295
 8012606:	e742      	b.n	801248e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8012608:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801260a:	449a      	add	sl, r3
 801260c:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 801260e:	441d      	add	r5, r3
 8012610:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012612:	3b01      	subs	r3, #1
 8012614:	9309      	str	r3, [sp, #36]	; 0x24
 8012616:	f108 0802 	add.w	r8, r8, #2
 801261a:	e718      	b.n	801244e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801261c:	d023      	beq.n	8012666 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801261e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012620:	982d      	ldr	r0, [sp, #180]	; 0xb4
 8012622:	3b01      	subs	r3, #1
 8012624:	fb00 a003 	mla	r0, r0, r3, sl
 8012628:	1400      	asrs	r0, r0, #16
 801262a:	f53f af2d 	bmi.w	8012488 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801262e:	3901      	subs	r1, #1
 8012630:	4288      	cmp	r0, r1
 8012632:	f6bf af29 	bge.w	8012488 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8012636:	992e      	ldr	r1, [sp, #184]	; 0xb8
 8012638:	fb01 5303 	mla	r3, r1, r3, r5
 801263c:	141b      	asrs	r3, r3, #16
 801263e:	f53f af23 	bmi.w	8012488 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8012642:	3a01      	subs	r2, #1
 8012644:	4293      	cmp	r3, r2
 8012646:	f6bf af1f 	bge.w	8012488 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801264a:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 801264e:	f8bd 9034 	ldrh.w	r9, [sp, #52]	; 0x34
 8012652:	f8cd 8038 	str.w	r8, [sp, #56]	; 0x38
 8012656:	f1be 0f00 	cmp.w	lr, #0
 801265a:	dc6c      	bgt.n	8012736 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x366>
 801265c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801265e:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8012662:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 8012666:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012668:	2b00      	cmp	r3, #0
 801266a:	f340 810e 	ble.w	801288a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ba>
 801266e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8012672:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8012676:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801267a:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 801267c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8012680:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8012684:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8012688:	eef0 6a48 	vmov.f32	s13, s16
 801268c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8012690:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012694:	ee37 8a48 	vsub.f32	s16, s14, s16
 8012698:	ee16 aa90 	vmov	sl, s13
 801269c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 80126a0:	eef0 6a68 	vmov.f32	s13, s17
 80126a4:	ee77 8ae8 	vsub.f32	s17, s15, s17
 80126a8:	ee18 2a10 	vmov	r2, s16
 80126ac:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 80126b0:	fb92 f3f3 	sdiv	r3, r2, r3
 80126b4:	ee18 2a90 	vmov	r2, s17
 80126b8:	932d      	str	r3, [sp, #180]	; 0xb4
 80126ba:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80126bc:	fb92 f3f3 	sdiv	r3, r2, r3
 80126c0:	932e      	str	r3, [sp, #184]	; 0xb8
 80126c2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80126c4:	9a15      	ldr	r2, [sp, #84]	; 0x54
 80126c6:	3b01      	subs	r3, #1
 80126c8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80126cc:	930c      	str	r3, [sp, #48]	; 0x30
 80126ce:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80126d0:	bf08      	it	eq
 80126d2:	4613      	moveq	r3, r2
 80126d4:	ee16 5a90 	vmov	r5, s13
 80126d8:	9309      	str	r3, [sp, #36]	; 0x24
 80126da:	eef0 8a67 	vmov.f32	s17, s15
 80126de:	eeb0 8a47 	vmov.f32	s16, s14
 80126e2:	e6a6      	b.n	8012432 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 80126e4:	2900      	cmp	r1, #0
 80126e6:	f43f af10 	beq.w	801250a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80126ea:	f819 3003 	ldrb.w	r3, [r9, r3]
 80126ee:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80126f2:	930f      	str	r3, [sp, #60]	; 0x3c
 80126f4:	e709      	b.n	801250a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80126f6:	f112 0901 	adds.w	r9, r2, #1
 80126fa:	f53f af7d 	bmi.w	80125f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 80126fe:	454b      	cmp	r3, r9
 8012700:	f6ff af7a 	blt.w	80125f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8012704:	f11c 0901 	adds.w	r9, ip, #1
 8012708:	f53f af76 	bmi.w	80125f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801270c:	45ce      	cmp	lr, r9
 801270e:	f6ff af73 	blt.w	80125f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8012712:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8012714:	9202      	str	r2, [sp, #8]
 8012716:	b21b      	sxth	r3, r3
 8012718:	fa0f f28e 	sxth.w	r2, lr
 801271c:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8012720:	e9cd c003 	strd	ip, r0, [sp, #12]
 8012724:	9201      	str	r2, [sp, #4]
 8012726:	9300      	str	r3, [sp, #0]
 8012728:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801272a:	9816      	ldr	r0, [sp, #88]	; 0x58
 801272c:	4633      	mov	r3, r6
 801272e:	4639      	mov	r1, r7
 8012730:	f7ff fd70 	bl	8012214 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 8012734:	e760      	b.n	80125f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8012736:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 8012738:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801273a:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801273e:	ea4f 422a 	mov.w	r2, sl, asr #16
 8012742:	1429      	asrs	r1, r5, #16
 8012744:	fb03 2101 	mla	r1, r3, r1, r2
 8012748:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 801274a:	440a      	add	r2, r1
 801274c:	5c61      	ldrb	r1, [r4, r1]
 801274e:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 8012752:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8012756:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801275a:	f1bc 0f00 	cmp.w	ip, #0
 801275e:	f000 808c 	beq.w	801287a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8012762:	7857      	ldrb	r7, [r2, #1]
 8012764:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 8012768:	9413      	str	r4, [sp, #76]	; 0x4c
 801276a:	b140      	cbz	r0, 801277e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801276c:	18d7      	adds	r7, r2, r3
 801276e:	5cd3      	ldrb	r3, [r2, r3]
 8012770:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012774:	9310      	str	r3, [sp, #64]	; 0x40
 8012776:	787b      	ldrb	r3, [r7, #1]
 8012778:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801277c:	9314      	str	r3, [sp, #80]	; 0x50
 801277e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8012780:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8012782:	fb1c f200 	smulbb	r2, ip, r0
 8012786:	041f      	lsls	r7, r3, #16
 8012788:	10d2      	asrs	r2, r2, #3
 801278a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 801278e:	f007 67fc 	and.w	r7, r7, #132120576	; 0x7e00000
 8012792:	431f      	orrs	r7, r3
 8012794:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 8012798:	9317      	str	r3, [sp, #92]	; 0x5c
 801279a:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801279c:	041b      	lsls	r3, r3, #16
 801279e:	f424 6bfc 	bic.w	fp, r4, #2016	; 0x7e0
 80127a2:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 80127a6:	ea43 030b 	orr.w	r3, r3, fp
 80127aa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80127ac:	4353      	muls	r3, r2
 80127ae:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80127b2:	fb04 3707 	mla	r7, r4, r7, r3
 80127b6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80127ba:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 80127be:	ea43 0b01 	orr.w	fp, r3, r1
 80127c2:	f1c0 0110 	rsb	r1, r0, #16
 80127c6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80127c8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80127ca:	eba1 0c0c 	sub.w	ip, r1, ip
 80127ce:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 80127d2:	fb0c 770b 	mla	r7, ip, fp, r7
 80127d6:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 80127da:	f423 6bfc 	bic.w	fp, r3, #2016	; 0x7e0
 80127de:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80127e2:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 80127e6:	ea4c 0c0b 	orr.w	ip, ip, fp
 80127ea:	fb02 770c 	mla	r7, r2, ip, r7
 80127ee:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80127f0:	0d79      	lsrs	r1, r7, #21
 80127f2:	097f      	lsrs	r7, r7, #5
 80127f4:	8812      	ldrh	r2, [r2, #0]
 80127f6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80127fa:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 80127fe:	430f      	orrs	r7, r1
 8012800:	b2bb      	uxth	r3, r7
 8012802:	1211      	asrs	r1, r2, #8
 8012804:	1218      	asrs	r0, r3, #8
 8012806:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801280a:	fb11 f104 	smulbb	r1, r1, r4
 801280e:	10d7      	asrs	r7, r2, #3
 8012810:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8012814:	00d2      	lsls	r2, r2, #3
 8012816:	fb00 1009 	mla	r0, r0, r9, r1
 801281a:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 801281e:	10d9      	asrs	r1, r3, #3
 8012820:	b2d2      	uxtb	r2, r2
 8012822:	00db      	lsls	r3, r3, #3
 8012824:	fb17 f704 	smulbb	r7, r7, r4
 8012828:	fb12 f204 	smulbb	r2, r2, r4
 801282c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8012830:	b2db      	uxtb	r3, r3
 8012832:	b280      	uxth	r0, r0
 8012834:	fb01 7109 	mla	r1, r1, r9, r7
 8012838:	fb03 2309 	mla	r3, r3, r9, r2
 801283c:	b29b      	uxth	r3, r3
 801283e:	b289      	uxth	r1, r1
 8012840:	1c42      	adds	r2, r0, #1
 8012842:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8012846:	1c4f      	adds	r7, r1, #1
 8012848:	1c5a      	adds	r2, r3, #1
 801284a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801284e:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 8012852:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8012856:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801285a:	0949      	lsrs	r1, r1, #5
 801285c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801285e:	4310      	orrs	r0, r2
 8012860:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012864:	4308      	orrs	r0, r1
 8012866:	f823 0b02 	strh.w	r0, [r3], #2
 801286a:	930e      	str	r3, [sp, #56]	; 0x38
 801286c:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 801286e:	449a      	add	sl, r3
 8012870:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012872:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012876:	441d      	add	r5, r3
 8012878:	e6ed      	b.n	8012656 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x286>
 801287a:	2800      	cmp	r0, #0
 801287c:	f43f af7f 	beq.w	801277e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8012880:	5cd3      	ldrb	r3, [r2, r3]
 8012882:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8012886:	9310      	str	r3, [sp, #64]	; 0x40
 8012888:	e779      	b.n	801277e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 801288a:	b019      	add	sp, #100	; 0x64
 801288c:	ecbd 8b08 	vpop	{d8-d11}
 8012890:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8012894:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8012898:	e9dd 560a 	ldrd	r5, r6, [sp, #40]	; 0x28
 801289c:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 80128a0:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80128a4:	f89d 4030 	ldrb.w	r4, [sp, #48]	; 0x30
 80128a8:	f89d c034 	ldrb.w	ip, [sp, #52]	; 0x34
 80128ac:	8808      	ldrh	r0, [r1, #0]
 80128ae:	fb06 570e 	mla	r7, r6, lr, r5
 80128b2:	2e00      	cmp	r6, #0
 80128b4:	eb02 0807 	add.w	r8, r2, r7
 80128b8:	db38      	blt.n	801292c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80128ba:	45b1      	cmp	r9, r6
 80128bc:	dd36      	ble.n	801292c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x98>
 80128be:	2d00      	cmp	r5, #0
 80128c0:	db32      	blt.n	8012928 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80128c2:	45ae      	cmp	lr, r5
 80128c4:	dd30      	ble.n	8012928 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x94>
 80128c6:	5dd2      	ldrb	r2, [r2, r7]
 80128c8:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 80128cc:	1c6a      	adds	r2, r5, #1
 80128ce:	d430      	bmi.n	8012932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80128d0:	4596      	cmp	lr, r2
 80128d2:	dd2e      	ble.n	8012932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80128d4:	b36c      	cbz	r4, 8012932 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x9e>
 80128d6:	f898 2001 	ldrb.w	r2, [r8, #1]
 80128da:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 80128de:	3601      	adds	r6, #1
 80128e0:	d42b      	bmi.n	801293a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80128e2:	45b1      	cmp	r9, r6
 80128e4:	dd29      	ble.n	801293a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa6>
 80128e6:	f1bc 0f00 	cmp.w	ip, #0
 80128ea:	d028      	beq.n	801293e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xaa>
 80128ec:	2d00      	cmp	r5, #0
 80128ee:	db22      	blt.n	8012936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80128f0:	45ae      	cmp	lr, r5
 80128f2:	dd20      	ble.n	8012936 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xa2>
 80128f4:	f818 600e 	ldrb.w	r6, [r8, lr]
 80128f8:	f833 6016 	ldrh.w	r6, [r3, r6, lsl #1]
 80128fc:	3501      	adds	r5, #1
 80128fe:	d407      	bmi.n	8012910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8012900:	45ae      	cmp	lr, r5
 8012902:	dd05      	ble.n	8012910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 8012904:	b134      	cbz	r4, 8012914 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 8012906:	44c6      	add	lr, r8
 8012908:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801290c:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 8012910:	2c0f      	cmp	r4, #15
 8012912:	d802      	bhi.n	801291a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8012914:	f1bc 0f0f 	cmp.w	ip, #15
 8012918:	d914      	bls.n	8012944 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xb0>
 801291a:	4b26      	ldr	r3, [pc, #152]	; (80129b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x120>)
 801291c:	4a26      	ldr	r2, [pc, #152]	; (80129b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x124>)
 801291e:	4827      	ldr	r0, [pc, #156]	; (80129bc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x128>)
 8012920:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8012924:	f006 fd8c 	bl	8019440 <__assert_func>
 8012928:	4607      	mov	r7, r0
 801292a:	e7cf      	b.n	80128cc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x38>
 801292c:	4602      	mov	r2, r0
 801292e:	4607      	mov	r7, r0
 8012930:	e7d5      	b.n	80128de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8012932:	4602      	mov	r2, r0
 8012934:	e7d3      	b.n	80128de <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4a>
 8012936:	4606      	mov	r6, r0
 8012938:	e7e0      	b.n	80128fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x68>
 801293a:	4606      	mov	r6, r0
 801293c:	e7e8      	b.n	8012910 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7c>
 801293e:	2c0f      	cmp	r4, #15
 8012940:	d8eb      	bhi.n	801291a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8012942:	4606      	mov	r6, r0
 8012944:	043d      	lsls	r5, r7, #16
 8012946:	fb14 f30c 	smulbb	r3, r4, ip
 801294a:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 801294e:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8012952:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8012956:	10db      	asrs	r3, r3, #3
 8012958:	432f      	orrs	r7, r5
 801295a:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 801295e:	f1cc 0510 	rsb	r5, ip, #16
 8012962:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012966:	1b2d      	subs	r5, r5, r4
 8012968:	ea4e 0202 	orr.w	r2, lr, r2
 801296c:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8012970:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8012974:	4354      	muls	r4, r2
 8012976:	fb05 4507 	mla	r5, r5, r7, r4
 801297a:	0404      	lsls	r4, r0, #16
 801297c:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8012980:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8012984:	4320      	orrs	r0, r4
 8012986:	fb03 5400 	mla	r4, r3, r0, r5
 801298a:	0430      	lsls	r0, r6, #16
 801298c:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012990:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8012994:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8012998:	4330      	orrs	r0, r6
 801299a:	fb03 4000 	mla	r0, r3, r0, r4
 801299e:	0d43      	lsrs	r3, r0, #21
 80129a0:	0940      	lsrs	r0, r0, #5
 80129a2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80129a6:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80129aa:	4318      	orrs	r0, r3
 80129ac:	8008      	strh	r0, [r1, #0]
 80129ae:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80129b2:	bf00      	nop
 80129b4:	0801ce3e 	.word	0x0801ce3e
 80129b8:	0801d4b3 	.word	0x0801d4b3
 80129bc:	0801cec2 	.word	0x0801cec2

080129c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80129c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80129c4:	ed2d 8b0a 	vpush	{d8-d12}
 80129c8:	b093      	sub	sp, #76	; 0x4c
 80129ca:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	; 0x9c
 80129ce:	920f      	str	r2, [sp, #60]	; 0x3c
 80129d0:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 80129d2:	9108      	str	r1, [sp, #32]
 80129d4:	9306      	str	r3, [sp, #24]
 80129d6:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 80129da:	9010      	str	r0, [sp, #64]	; 0x40
 80129dc:	6850      	ldr	r0, [r2, #4]
 80129de:	6812      	ldr	r2, [r2, #0]
 80129e0:	fb00 1303 	mla	r3, r0, r3, r1
 80129e4:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80129e8:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80129ea:	681b      	ldr	r3, [r3, #0]
 80129ec:	9307      	str	r3, [sp, #28]
 80129ee:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 80129f0:	685f      	ldr	r7, [r3, #4]
 80129f2:	eeb0 aa40 	vmov.f32	s20, s0
 80129f6:	eef0 9a60 	vmov.f32	s19, s1
 80129fa:	eeb0 9a41 	vmov.f32	s18, s2
 80129fe:	eeb0 8a62 	vmov.f32	s16, s5
 8012a02:	eef0 8a43 	vmov.f32	s17, s6
 8012a06:	eeb0 ca44 	vmov.f32	s24, s8
 8012a0a:	eef0 ba64 	vmov.f32	s23, s9
 8012a0e:	eeb0 ba45 	vmov.f32	s22, s10
 8012a12:	3704      	adds	r7, #4
 8012a14:	eef7 aa00 	vmov.f32	s21, #112	; 0x3f800000  1.0
 8012a18:	9b08      	ldr	r3, [sp, #32]
 8012a1a:	2b00      	cmp	r3, #0
 8012a1c:	dc03      	bgt.n	8012a26 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8012a1e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012a20:	2b00      	cmp	r3, #0
 8012a22:	f340 81b2 	ble.w	8012d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8012a26:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012a28:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8012a2c:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8012a30:	1e48      	subs	r0, r1, #1
 8012a32:	f102 3cff 	add.w	ip, r2, #4294967295
 8012a36:	9b06      	ldr	r3, [sp, #24]
 8012a38:	2b00      	cmp	r3, #0
 8012a3a:	f340 80a9 	ble.w	8012b90 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d0>
 8012a3e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8012a42:	ea4f 4326 	mov.w	r3, r6, asr #16
 8012a46:	d406      	bmi.n	8012a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012a48:	4586      	cmp	lr, r0
 8012a4a:	da04      	bge.n	8012a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012a4c:	2b00      	cmp	r3, #0
 8012a4e:	db02      	blt.n	8012a56 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8012a50:	4563      	cmp	r3, ip
 8012a52:	f2c0 809e 	blt.w	8012b92 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8012a56:	f11e 0e01 	adds.w	lr, lr, #1
 8012a5a:	f100 808f 	bmi.w	8012b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8012a5e:	4571      	cmp	r1, lr
 8012a60:	f2c0 808c 	blt.w	8012b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8012a64:	3301      	adds	r3, #1
 8012a66:	f100 8089 	bmi.w	8012b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8012a6a:	429a      	cmp	r2, r3
 8012a6c:	f2c0 8086 	blt.w	8012b7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 8012a70:	f8dd b018 	ldr.w	fp, [sp, #24]
 8012a74:	46c8      	mov	r8, r9
 8012a76:	f1bb 0f00 	cmp.w	fp, #0
 8012a7a:	f340 80a6 	ble.w	8012bca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20a>
 8012a7e:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8012a80:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012a82:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8012a86:	689b      	ldr	r3, [r3, #8]
 8012a88:	1422      	asrs	r2, r4, #16
 8012a8a:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8012a8e:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8012a92:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8012a96:	f100 80e3 	bmi.w	8012c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8012a9a:	f103 3aff 	add.w	sl, r3, #4294967295
 8012a9e:	4552      	cmp	r2, sl
 8012aa0:	f280 80de 	bge.w	8012c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8012aa4:	f1bc 0f00 	cmp.w	ip, #0
 8012aa8:	f2c0 80da 	blt.w	8012c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8012aac:	f10e 3aff 	add.w	sl, lr, #4294967295
 8012ab0:	45d4      	cmp	ip, sl
 8012ab2:	f280 80d5 	bge.w	8012c60 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8012ab6:	b21b      	sxth	r3, r3
 8012ab8:	fb0c 2203 	mla	r2, ip, r3, r2
 8012abc:	9d07      	ldr	r5, [sp, #28]
 8012abe:	eb05 0a02 	add.w	sl, r5, r2
 8012ac2:	5caa      	ldrb	r2, [r5, r2]
 8012ac4:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 8012ac8:	2800      	cmp	r0, #0
 8012aca:	f000 80c0 	beq.w	8012c4e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28e>
 8012ace:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8012ad2:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 8012ad6:	920b      	str	r2, [sp, #44]	; 0x2c
 8012ad8:	b151      	cbz	r1, 8012af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8012ada:	eb0a 0203 	add.w	r2, sl, r3
 8012ade:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8012ae2:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012ae6:	9309      	str	r3, [sp, #36]	; 0x24
 8012ae8:	7853      	ldrb	r3, [r2, #1]
 8012aea:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012aee:	930c      	str	r3, [sp, #48]	; 0x30
 8012af0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8012af2:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8012af4:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012af8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012afc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012b00:	ea4c 0c03 	orr.w	ip, ip, r3
 8012b04:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8012b06:	041b      	lsls	r3, r3, #16
 8012b08:	fb10 f201 	smulbb	r2, r0, r1
 8012b0c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012b10:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8012b14:	10d2      	asrs	r2, r2, #3
 8012b16:	432b      	orrs	r3, r5
 8012b18:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 8012b1c:	4353      	muls	r3, r2
 8012b1e:	fb0a 330c 	mla	r3, sl, ip, r3
 8012b22:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 8012b26:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012b2a:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8012b2e:	ea4c 0e0e 	orr.w	lr, ip, lr
 8012b32:	f1c1 0c10 	rsb	ip, r1, #16
 8012b36:	ebac 0c00 	sub.w	ip, ip, r0
 8012b3a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 8012b3e:	fb0c 3c0e 	mla	ip, ip, lr, r3
 8012b42:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012b44:	0418      	lsls	r0, r3, #16
 8012b46:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8012b4a:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012b4e:	4318      	orrs	r0, r3
 8012b50:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 8012b54:	fb02 c200 	mla	r2, r2, r0, ip
 8012b58:	0d53      	lsrs	r3, r2, #21
 8012b5a:	0952      	lsrs	r2, r2, #5
 8012b5c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012b60:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8012b64:	431a      	orrs	r2, r3
 8012b66:	f8a8 2000 	strh.w	r2, [r8]
 8012b6a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012b6c:	441c      	add	r4, r3
 8012b6e:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012b70:	f108 0802 	add.w	r8, r8, #2
 8012b74:	441e      	add	r6, r3
 8012b76:	f10b 3bff 	add.w	fp, fp, #4294967295
 8012b7a:	e77c      	b.n	8012a76 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8012b7c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012b7e:	441c      	add	r4, r3
 8012b80:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012b82:	441e      	add	r6, r3
 8012b84:	9b06      	ldr	r3, [sp, #24]
 8012b86:	3b01      	subs	r3, #1
 8012b88:	9306      	str	r3, [sp, #24]
 8012b8a:	f109 0902 	add.w	r9, r9, #2
 8012b8e:	e752      	b.n	8012a36 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8012b90:	d020      	beq.n	8012bd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8012b92:	9b06      	ldr	r3, [sp, #24]
 8012b94:	9829      	ldr	r0, [sp, #164]	; 0xa4
 8012b96:	3b01      	subs	r3, #1
 8012b98:	fb00 4003 	mla	r0, r0, r3, r4
 8012b9c:	1400      	asrs	r0, r0, #16
 8012b9e:	f53f af67 	bmi.w	8012a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012ba2:	3901      	subs	r1, #1
 8012ba4:	4288      	cmp	r0, r1
 8012ba6:	f6bf af63 	bge.w	8012a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012baa:	992a      	ldr	r1, [sp, #168]	; 0xa8
 8012bac:	fb01 6303 	mla	r3, r1, r3, r6
 8012bb0:	141b      	asrs	r3, r3, #16
 8012bb2:	f53f af5d 	bmi.w	8012a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012bb6:	3a01      	subs	r2, #1
 8012bb8:	4293      	cmp	r3, r2
 8012bba:	f6bf af59 	bge.w	8012a70 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8012bbe:	f8dd 8018 	ldr.w	r8, [sp, #24]
 8012bc2:	46ca      	mov	sl, r9
 8012bc4:	f1b8 0f00 	cmp.w	r8, #0
 8012bc8:	dc67      	bgt.n	8012c9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2da>
 8012bca:	9b06      	ldr	r3, [sp, #24]
 8012bcc:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8012bd0:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8012bd4:	9b08      	ldr	r3, [sp, #32]
 8012bd6:	2b00      	cmp	r3, #0
 8012bd8:	f340 80d7 	ble.w	8012d8a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 8012bdc:	ee3a aa0c 	vadd.f32	s20, s20, s24
 8012be0:	ee79 9aab 	vadd.f32	s19, s19, s23
 8012be4:	eeca 7a8a 	vdiv.f32	s15, s21, s20
 8012be8:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012bea:	ee39 9a0b 	vadd.f32	s18, s18, s22
 8012bee:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8012bf2:	eef0 6a48 	vmov.f32	s13, s16
 8012bf6:	ee69 7a27 	vmul.f32	s15, s18, s15
 8012bfa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012bfe:	ee37 8a48 	vsub.f32	s16, s14, s16
 8012c02:	ee16 4a90 	vmov	r4, s13
 8012c06:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8012c0a:	eef0 6a68 	vmov.f32	s13, s17
 8012c0e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8012c12:	ee18 2a10 	vmov	r2, s16
 8012c16:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8012c1a:	fb92 f3f3 	sdiv	r3, r2, r3
 8012c1e:	ee18 2a90 	vmov	r2, s17
 8012c22:	9329      	str	r3, [sp, #164]	; 0xa4
 8012c24:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012c26:	fb92 f3f3 	sdiv	r3, r2, r3
 8012c2a:	932a      	str	r3, [sp, #168]	; 0xa8
 8012c2c:	9b08      	ldr	r3, [sp, #32]
 8012c2e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8012c30:	3b01      	subs	r3, #1
 8012c32:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012c36:	9308      	str	r3, [sp, #32]
 8012c38:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8012c3a:	bf08      	it	eq
 8012c3c:	4613      	moveq	r3, r2
 8012c3e:	ee16 6a90 	vmov	r6, s13
 8012c42:	9306      	str	r3, [sp, #24]
 8012c44:	eef0 8a67 	vmov.f32	s17, s15
 8012c48:	eeb0 8a47 	vmov.f32	s16, s14
 8012c4c:	e6e4      	b.n	8012a18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8012c4e:	2900      	cmp	r1, #0
 8012c50:	f43f af4e 	beq.w	8012af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8012c54:	f81a 3003 	ldrb.w	r3, [sl, r3]
 8012c58:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012c5c:	9309      	str	r3, [sp, #36]	; 0x24
 8012c5e:	e747      	b.n	8012af0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x130>
 8012c60:	f112 0a01 	adds.w	sl, r2, #1
 8012c64:	d481      	bmi.n	8012b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8012c66:	4553      	cmp	r3, sl
 8012c68:	f6ff af7f 	blt.w	8012b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8012c6c:	f11c 0a01 	adds.w	sl, ip, #1
 8012c70:	f53f af7b 	bmi.w	8012b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8012c74:	45d6      	cmp	lr, sl
 8012c76:	f6ff af78 	blt.w	8012b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8012c7a:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 8012c7e:	b21b      	sxth	r3, r3
 8012c80:	fa0f f28e 	sxth.w	r2, lr
 8012c84:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012c88:	9201      	str	r2, [sp, #4]
 8012c8a:	9300      	str	r3, [sp, #0]
 8012c8c:	9a07      	ldr	r2, [sp, #28]
 8012c8e:	9810      	ldr	r0, [sp, #64]	; 0x40
 8012c90:	463b      	mov	r3, r7
 8012c92:	4641      	mov	r1, r8
 8012c94:	f7ff fdfe 	bl	8012894 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8012c98:	e767      	b.n	8012b6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8012c9a:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012c9c:	9d07      	ldr	r5, [sp, #28]
 8012c9e:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8012ca2:	1422      	asrs	r2, r4, #16
 8012ca4:	1431      	asrs	r1, r6, #16
 8012ca6:	fb03 2101 	mla	r1, r3, r1, r2
 8012caa:	9a07      	ldr	r2, [sp, #28]
 8012cac:	440a      	add	r2, r1
 8012cae:	5c69      	ldrb	r1, [r5, r1]
 8012cb0:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 8012cb4:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8012cb8:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 8012cbc:	f1be 0f00 	cmp.w	lr, #0
 8012cc0:	d05c      	beq.n	8012d7c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3bc>
 8012cc2:	f892 c001 	ldrb.w	ip, [r2, #1]
 8012cc6:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 8012cca:	950d      	str	r5, [sp, #52]	; 0x34
 8012ccc:	b150      	cbz	r0, 8012ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8012cce:	eb02 0c03 	add.w	ip, r2, r3
 8012cd2:	5cd3      	ldrb	r3, [r2, r3]
 8012cd4:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012cd8:	930a      	str	r3, [sp, #40]	; 0x28
 8012cda:	f89c 3001 	ldrb.w	r3, [ip, #1]
 8012cde:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012ce2:	930e      	str	r3, [sp, #56]	; 0x38
 8012ce4:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8012ce6:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8012ce8:	fb1e f200 	smulbb	r2, lr, r0
 8012cec:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 8012cf0:	10d2      	asrs	r2, r2, #3
 8012cf2:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8012cf6:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8012cfa:	ea4c 0c03 	orr.w	ip, ip, r3
 8012cfe:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 8012d02:	9311      	str	r3, [sp, #68]	; 0x44
 8012d04:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012d06:	041b      	lsls	r3, r3, #16
 8012d08:	f425 6bfc 	bic.w	fp, r5, #2016	; 0x7e0
 8012d0c:	f003 63fc 	and.w	r3, r3, #132120576	; 0x7e00000
 8012d10:	ea43 030b 	orr.w	r3, r3, fp
 8012d14:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8012d16:	4353      	muls	r3, r2
 8012d18:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8012d1c:	fb05 3c0c 	mla	ip, r5, ip, r3
 8012d20:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8012d24:	f00b 63fc 	and.w	r3, fp, #132120576	; 0x7e00000
 8012d28:	ea43 0b01 	orr.w	fp, r3, r1
 8012d2c:	f1c0 0110 	rsb	r1, r0, #16
 8012d30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012d32:	eba1 0e0e 	sub.w	lr, r1, lr
 8012d36:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 8012d3a:	fb0e cc0b 	mla	ip, lr, fp, ip
 8012d3e:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 8012d42:	f423 6efc 	bic.w	lr, r3, #2016	; 0x7e0
 8012d46:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8012d4a:	ea4b 0e0e 	orr.w	lr, fp, lr
 8012d4e:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 8012d52:	fb02 cc0e 	mla	ip, r2, lr, ip
 8012d56:	ea4f 535c 	mov.w	r3, ip, lsr #21
 8012d5a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8012d5e:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8012d62:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8012d66:	ea43 0c0c 	orr.w	ip, r3, ip
 8012d6a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8012d6c:	f82a cb02 	strh.w	ip, [sl], #2
 8012d70:	441c      	add	r4, r3
 8012d72:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8012d74:	f108 38ff 	add.w	r8, r8, #4294967295
 8012d78:	441e      	add	r6, r3
 8012d7a:	e723      	b.n	8012bc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 8012d7c:	2800      	cmp	r0, #0
 8012d7e:	d0b1      	beq.n	8012ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8012d80:	5cd3      	ldrb	r3, [r2, r3]
 8012d82:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 8012d86:	930a      	str	r3, [sp, #40]	; 0x28
 8012d88:	e7ac      	b.n	8012ce4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 8012d8a:	b013      	add	sp, #76	; 0x4c
 8012d8c:	ecbd 8b0a 	vpop	{d8-d12}
 8012d90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08012d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 8012d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012d98:	468b      	mov	fp, r1
 8012d9a:	8809      	ldrh	r1, [r1, #0]
 8012d9c:	b089      	sub	sp, #36	; 0x24
 8012d9e:	10cd      	asrs	r5, r1, #3
 8012da0:	e9dd 6414 	ldrd	r6, r4, [sp, #80]	; 0x50
 8012da4:	ea4f 2921 	mov.w	r9, r1, asr #8
 8012da8:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8012dac:	00c9      	lsls	r1, r1, #3
 8012dae:	9500      	str	r5, [sp, #0]
 8012db0:	b2c9      	uxtb	r1, r1
 8012db2:	f9bd e048 	ldrsh.w	lr, [sp, #72]	; 0x48
 8012db6:	9101      	str	r1, [sp, #4]
 8012db8:	9900      	ldr	r1, [sp, #0]
 8012dba:	9202      	str	r2, [sp, #8]
 8012dbc:	fb04 650e 	mla	r5, r4, lr, r6
 8012dc0:	f009 09f8 	and.w	r9, r9, #248	; 0xf8
 8012dc4:	eb02 0805 	add.w	r8, r2, r5
 8012dc8:	0209      	lsls	r1, r1, #8
 8012dca:	9a01      	ldr	r2, [sp, #4]
 8012dcc:	f9bd a04c 	ldrsh.w	sl, [sp, #76]	; 0x4c
 8012dd0:	f89d 7058 	ldrb.w	r7, [sp, #88]	; 0x58
 8012dd4:	f89d 005c 	ldrb.w	r0, [sp, #92]	; 0x5c
 8012dd8:	f89d c060 	ldrb.w	ip, [sp, #96]	; 0x60
 8012ddc:	ea41 4109 	orr.w	r1, r1, r9, lsl #16
 8012de0:	4311      	orrs	r1, r2
 8012de2:	2c00      	cmp	r4, #0
 8012de4:	9107      	str	r1, [sp, #28]
 8012de6:	db43      	blt.n	8012e70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8012de8:	45a2      	cmp	sl, r4
 8012dea:	dd41      	ble.n	8012e70 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xdc>
 8012dec:	2e00      	cmp	r6, #0
 8012dee:	db3d      	blt.n	8012e6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8012df0:	45b6      	cmp	lr, r6
 8012df2:	dd3b      	ble.n	8012e6c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd8>
 8012df4:	9a02      	ldr	r2, [sp, #8]
 8012df6:	5d55      	ldrb	r5, [r2, r5]
 8012df8:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8012dfc:	441d      	add	r5, r3
 8012dfe:	1c72      	adds	r2, r6, #1
 8012e00:	d439      	bmi.n	8012e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8012e02:	4596      	cmp	lr, r2
 8012e04:	dd37      	ble.n	8012e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8012e06:	2f00      	cmp	r7, #0
 8012e08:	d035      	beq.n	8012e76 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe2>
 8012e0a:	f898 1001 	ldrb.w	r1, [r8, #1]
 8012e0e:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8012e12:	4419      	add	r1, r3
 8012e14:	3401      	adds	r4, #1
 8012e16:	d432      	bmi.n	8012e7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8012e18:	45a2      	cmp	sl, r4
 8012e1a:	dd30      	ble.n	8012e7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8012e1c:	b378      	cbz	r0, 8012e7e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xea>
 8012e1e:	2e00      	cmp	r6, #0
 8012e20:	db2b      	blt.n	8012e7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8012e22:	45b6      	cmp	lr, r6
 8012e24:	dd29      	ble.n	8012e7a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xe6>
 8012e26:	f818 400e 	ldrb.w	r4, [r8, lr]
 8012e2a:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 8012e2e:	441c      	add	r4, r3
 8012e30:	3601      	adds	r6, #1
 8012e32:	d427      	bmi.n	8012e84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8012e34:	45b6      	cmp	lr, r6
 8012e36:	dd25      	ble.n	8012e84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8012e38:	b327      	cbz	r7, 8012e84 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf0>
 8012e3a:	44c6      	add	lr, r8
 8012e3c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8012e40:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8012e44:	4413      	add	r3, r2
 8012e46:	782a      	ldrb	r2, [r5, #0]
 8012e48:	9202      	str	r2, [sp, #8]
 8012e4a:	780a      	ldrb	r2, [r1, #0]
 8012e4c:	9203      	str	r2, [sp, #12]
 8012e4e:	7822      	ldrb	r2, [r4, #0]
 8012e50:	9204      	str	r2, [sp, #16]
 8012e52:	2f0f      	cmp	r7, #15
 8012e54:	781a      	ldrb	r2, [r3, #0]
 8012e56:	9205      	str	r2, [sp, #20]
 8012e58:	d801      	bhi.n	8012e5e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xca>
 8012e5a:	280f      	cmp	r0, #15
 8012e5c:	d914      	bls.n	8012e88 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xf4>
 8012e5e:	4b3f      	ldr	r3, [pc, #252]	; (8012f5c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c8>)
 8012e60:	4a3f      	ldr	r2, [pc, #252]	; (8012f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1cc>)
 8012e62:	4840      	ldr	r0, [pc, #256]	; (8012f64 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d0>)
 8012e64:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8012e68:	f006 faea 	bl	8019440 <__assert_func>
 8012e6c:	ad07      	add	r5, sp, #28
 8012e6e:	e7c6      	b.n	8012dfe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6a>
 8012e70:	a907      	add	r1, sp, #28
 8012e72:	460d      	mov	r5, r1
 8012e74:	e7ce      	b.n	8012e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8012e76:	a907      	add	r1, sp, #28
 8012e78:	e7cc      	b.n	8012e14 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x80>
 8012e7a:	ac07      	add	r4, sp, #28
 8012e7c:	e7d8      	b.n	8012e30 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x9c>
 8012e7e:	ab07      	add	r3, sp, #28
 8012e80:	461c      	mov	r4, r3
 8012e82:	e7e0      	b.n	8012e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8012e84:	ab07      	add	r3, sp, #28
 8012e86:	e7de      	b.n	8012e46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb2>
 8012e88:	b2ba      	uxth	r2, r7
 8012e8a:	b280      	uxth	r0, r0
 8012e8c:	fb02 fa00 	mul.w	sl, r2, r0
 8012e90:	ebca 1000 	rsb	r0, sl, r0, lsl #4
 8012e94:	0112      	lsls	r2, r2, #4
 8012e96:	b280      	uxth	r0, r0
 8012e98:	f891 8002 	ldrb.w	r8, [r1, #2]
 8012e9c:	7849      	ldrb	r1, [r1, #1]
 8012e9e:	78ae      	ldrb	r6, [r5, #2]
 8012ea0:	786d      	ldrb	r5, [r5, #1]
 8012ea2:	f5c2 7e80 	rsb	lr, r2, #256	; 0x100
 8012ea6:	eba2 020a 	sub.w	r2, r2, sl
 8012eaa:	b292      	uxth	r2, r2
 8012eac:	ebae 0e00 	sub.w	lr, lr, r0
 8012eb0:	fa1f fe8e 	uxth.w	lr, lr
 8012eb4:	4351      	muls	r1, r2
 8012eb6:	fb02 f808 	mul.w	r8, r2, r8
 8012eba:	fb0e 8806 	mla	r8, lr, r6, r8
 8012ebe:	fb0e 1505 	mla	r5, lr, r5, r1
 8012ec2:	78a6      	ldrb	r6, [r4, #2]
 8012ec4:	7861      	ldrb	r1, [r4, #1]
 8012ec6:	fa1f f78c 	uxth.w	r7, ip
 8012eca:	fb00 8806 	mla	r8, r0, r6, r8
 8012ece:	fb00 5501 	mla	r5, r0, r1, r5
 8012ed2:	789e      	ldrb	r6, [r3, #2]
 8012ed4:	7859      	ldrb	r1, [r3, #1]
 8012ed6:	9b00      	ldr	r3, [sp, #0]
 8012ed8:	ea6f 0c0c 	mvn.w	ip, ip
 8012edc:	fa5f fc8c 	uxtb.w	ip, ip
 8012ee0:	fb0a 5101 	mla	r1, sl, r1, r5
 8012ee4:	fb13 f50c 	smulbb	r5, r3, ip
 8012ee8:	9b03      	ldr	r3, [sp, #12]
 8012eea:	435a      	muls	r2, r3
 8012eec:	9b02      	ldr	r3, [sp, #8]
 8012eee:	fb0e 2203 	mla	r2, lr, r3, r2
 8012ef2:	9b04      	ldr	r3, [sp, #16]
 8012ef4:	fb00 2003 	mla	r0, r0, r3, r2
 8012ef8:	9b05      	ldr	r3, [sp, #20]
 8012efa:	fb0a 8606 	mla	r6, sl, r6, r8
 8012efe:	fb19 f90c 	smulbb	r9, r9, ip
 8012f02:	fb0a 0a03 	mla	sl, sl, r3, r0
 8012f06:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8012f0a:	9b01      	ldr	r3, [sp, #4]
 8012f0c:	fb06 9607 	mla	r6, r6, r7, r9
 8012f10:	b2b6      	uxth	r6, r6
 8012f12:	f3ca 2a07 	ubfx	sl, sl, #8, #8
 8012f16:	fb13 fc0c 	smulbb	ip, r3, ip
 8012f1a:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8012f1e:	fb01 5107 	mla	r1, r1, r7, r5
 8012f22:	f106 0901 	add.w	r9, r6, #1
 8012f26:	fb0a c707 	mla	r7, sl, r7, ip
 8012f2a:	b2bf      	uxth	r7, r7
 8012f2c:	b289      	uxth	r1, r1
 8012f2e:	eb09 2616 	add.w	r6, r9, r6, lsr #8
 8012f32:	f406 4978 	and.w	r9, r6, #63488	; 0xf800
 8012f36:	1c4d      	adds	r5, r1, #1
 8012f38:	1c7e      	adds	r6, r7, #1
 8012f3a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 8012f3e:	eb05 2111 	add.w	r1, r5, r1, lsr #8
 8012f42:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8012f46:	0949      	lsrs	r1, r1, #5
 8012f48:	ea46 0609 	orr.w	r6, r6, r9
 8012f4c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8012f50:	430e      	orrs	r6, r1
 8012f52:	f8ab 6000 	strh.w	r6, [fp]
 8012f56:	b009      	add	sp, #36	; 0x24
 8012f58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012f5c:	0801ce3e 	.word	0x0801ce3e
 8012f60:	0801d40a 	.word	0x0801d40a
 8012f64:	0801cec2 	.word	0x0801cec2

08012f68 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8012f68:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012f6c:	ed2d 8b08 	vpush	{d8-d11}
 8012f70:	b095      	sub	sp, #84	; 0x54
 8012f72:	eeb0 aa40 	vmov.f32	s20, s0
 8012f76:	9212      	str	r2, [sp, #72]	; 0x48
 8012f78:	9309      	str	r3, [sp, #36]	; 0x24
 8012f7a:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8012f7c:	f89d 30bc 	ldrb.w	r3, [sp, #188]	; 0xbc
 8012f80:	930f      	str	r3, [sp, #60]	; 0x3c
 8012f82:	910e      	str	r1, [sp, #56]	; 0x38
 8012f84:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	; 0xb0
 8012f88:	9013      	str	r0, [sp, #76]	; 0x4c
 8012f8a:	6850      	ldr	r0, [r2, #4]
 8012f8c:	6812      	ldr	r2, [r2, #0]
 8012f8e:	fb00 1303 	mla	r3, r0, r3, r1
 8012f92:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8012f96:	930a      	str	r3, [sp, #40]	; 0x28
 8012f98:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012f9a:	681b      	ldr	r3, [r3, #0]
 8012f9c:	930d      	str	r3, [sp, #52]	; 0x34
 8012f9e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012fa0:	685c      	ldr	r4, [r3, #4]
 8012fa2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8012fa4:	43db      	mvns	r3, r3
 8012fa6:	b2db      	uxtb	r3, r3
 8012fa8:	eef0 9a60 	vmov.f32	s19, s1
 8012fac:	eeb0 9a41 	vmov.f32	s18, s2
 8012fb0:	eeb0 8a62 	vmov.f32	s16, s5
 8012fb4:	eef0 8a43 	vmov.f32	s17, s6
 8012fb8:	eef0 ba44 	vmov.f32	s23, s8
 8012fbc:	eeb0 ba64 	vmov.f32	s22, s9
 8012fc0:	eef0 aa45 	vmov.f32	s21, s10
 8012fc4:	3404      	adds	r4, #4
 8012fc6:	930b      	str	r3, [sp, #44]	; 0x2c
 8012fc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8012fca:	2b00      	cmp	r3, #0
 8012fcc:	dc03      	bgt.n	8012fd6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8012fce:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8012fd0:	2b00      	cmp	r3, #0
 8012fd2:	f340 8255 	ble.w	8013480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8012fd6:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8012fd8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8012fdc:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8012fe0:	1e48      	subs	r0, r1, #1
 8012fe2:	1e55      	subs	r5, r2, #1
 8012fe4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8012fe6:	2b00      	cmp	r3, #0
 8012fe8:	f340 80f9 	ble.w	80131de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8012fec:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8012fee:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8012ff0:	1436      	asrs	r6, r6, #16
 8012ff2:	ea4f 4323 	mov.w	r3, r3, asr #16
 8012ff6:	d406      	bmi.n	8013006 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012ff8:	4286      	cmp	r6, r0
 8012ffa:	da04      	bge.n	8013006 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8012ffc:	2b00      	cmp	r3, #0
 8012ffe:	db02      	blt.n	8013006 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013000:	42ab      	cmp	r3, r5
 8013002:	f2c0 80ed 	blt.w	80131e0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 8013006:	3601      	adds	r6, #1
 8013008:	f100 80da 	bmi.w	80131c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801300c:	42b1      	cmp	r1, r6
 801300e:	f2c0 80d7 	blt.w	80131c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8013012:	3301      	adds	r3, #1
 8013014:	f100 80d4 	bmi.w	80131c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 8013018:	429a      	cmp	r2, r3
 801301a:	f2c0 80d1 	blt.w	80131c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x258>
 801301e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013020:	9311      	str	r3, [sp, #68]	; 0x44
 8013022:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013024:	930c      	str	r3, [sp, #48]	; 0x30
 8013026:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8013028:	2b00      	cmp	r3, #0
 801302a:	f340 80fa 	ble.w	8013222 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 801302e:	982e      	ldr	r0, [sp, #184]	; 0xb8
 8013030:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013032:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8013034:	68c6      	ldr	r6, [r0, #12]
 8013036:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8013038:	141d      	asrs	r5, r3, #16
 801303a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801303e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013040:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8013042:	1400      	asrs	r0, r0, #16
 8013044:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013048:	6892      	ldr	r2, [r2, #8]
 801304a:	f100 813e 	bmi.w	80132ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801304e:	1e57      	subs	r7, r2, #1
 8013050:	42b8      	cmp	r0, r7
 8013052:	f280 813a 	bge.w	80132ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8013056:	2d00      	cmp	r5, #0
 8013058:	f2c0 8137 	blt.w	80132ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 801305c:	1e77      	subs	r7, r6, #1
 801305e:	42bd      	cmp	r5, r7
 8013060:	f280 8133 	bge.w	80132ca <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8013064:	b212      	sxth	r2, r2
 8013066:	fb05 0002 	mla	r0, r5, r2, r0
 801306a:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801306c:	f815 a000 	ldrb.w	sl, [r5, r0]
 8013070:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 8013074:	182e      	adds	r6, r5, r0
 8013076:	eb04 050a 	add.w	r5, r4, sl
 801307a:	2b00      	cmp	r3, #0
 801307c:	f000 8117 	beq.w	80132ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8013080:	f896 c001 	ldrb.w	ip, [r6, #1]
 8013084:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 8013088:	44a4      	add	ip, r4
 801308a:	2900      	cmp	r1, #0
 801308c:	f000 8117 	beq.w	80132be <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8013090:	18b0      	adds	r0, r6, r2
 8013092:	5cb2      	ldrb	r2, [r6, r2]
 8013094:	7840      	ldrb	r0, [r0, #1]
 8013096:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801309a:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801309e:	4422      	add	r2, r4
 80130a0:	4420      	add	r0, r4
 80130a2:	b29b      	uxth	r3, r3
 80130a4:	b289      	uxth	r1, r1
 80130a6:	fb03 f901 	mul.w	r9, r3, r1
 80130aa:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80130ae:	011b      	lsls	r3, r3, #4
 80130b0:	b289      	uxth	r1, r1
 80130b2:	f89c 7002 	ldrb.w	r7, [ip, #2]
 80130b6:	f895 b002 	ldrb.w	fp, [r5, #2]
 80130ba:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 80130bc:	f814 a00a 	ldrb.w	sl, [r4, sl]
 80130c0:	f8b6 e000 	ldrh.w	lr, [r6]
 80130c4:	f8bd 603c 	ldrh.w	r6, [sp, #60]	; 0x3c
 80130c8:	f5c3 7880 	rsb	r8, r3, #256	; 0x100
 80130cc:	eba3 0309 	sub.w	r3, r3, r9
 80130d0:	b29b      	uxth	r3, r3
 80130d2:	eba8 0801 	sub.w	r8, r8, r1
 80130d6:	fa1f f888 	uxth.w	r8, r8
 80130da:	435f      	muls	r7, r3
 80130dc:	fb08 770b 	mla	r7, r8, fp, r7
 80130e0:	f892 b002 	ldrb.w	fp, [r2, #2]
 80130e4:	9310      	str	r3, [sp, #64]	; 0x40
 80130e6:	fb01 770b 	mla	r7, r1, fp, r7
 80130ea:	f890 b002 	ldrb.w	fp, [r0, #2]
 80130ee:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80130f0:	fb09 770b 	mla	r7, r9, fp, r7
 80130f4:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 80130f8:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80130fc:	fb1b fb03 	smulbb	fp, fp, r3
 8013100:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8013104:	fb07 b706 	mla	r7, r7, r6, fp
 8013108:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801310a:	f895 b001 	ldrb.w	fp, [r5, #1]
 801310e:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8013112:	f89c c000 	ldrb.w	ip, [ip]
 8013116:	435d      	muls	r5, r3
 8013118:	fb08 550b 	mla	r5, r8, fp, r5
 801311c:	f892 b001 	ldrb.w	fp, [r2, #1]
 8013120:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013122:	fb01 550b 	mla	r5, r1, fp, r5
 8013126:	f890 b001 	ldrb.w	fp, [r0, #1]
 801312a:	fb09 550b 	mla	r5, r9, fp, r5
 801312e:	ea4f 0bee 	mov.w	fp, lr, asr #3
 8013132:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 8013136:	fb1b fb03 	smulbb	fp, fp, r3
 801313a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 801313c:	fb03 f30c 	mul.w	r3, r3, ip
 8013140:	f892 c000 	ldrb.w	ip, [r2]
 8013144:	fb08 330a 	mla	r3, r8, sl, r3
 8013148:	fb01 330c 	mla	r3, r1, ip, r3
 801314c:	f890 c000 	ldrb.w	ip, [r0]
 8013150:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8013154:	fb09 3c0c 	mla	ip, r9, ip, r3
 8013158:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801315a:	fa5f fe8e 	uxtb.w	lr, lr
 801315e:	b2bf      	uxth	r7, r7
 8013160:	fb1e fe03 	smulbb	lr, lr, r3
 8013164:	f3c5 2507 	ubfx	r5, r5, #8, #8
 8013168:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801316c:	fb05 b506 	mla	r5, r5, r6, fp
 8013170:	1c7b      	adds	r3, r7, #1
 8013172:	fb0c e606 	mla	r6, ip, r6, lr
 8013176:	b2ad      	uxth	r5, r5
 8013178:	b2b6      	uxth	r6, r6
 801317a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801317e:	f407 4378 	and.w	r3, r7, #63488	; 0xf800
 8013182:	f105 0b01 	add.w	fp, r5, #1
 8013186:	1c77      	adds	r7, r6, #1
 8013188:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801318c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8013190:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013194:	096d      	lsrs	r5, r5, #5
 8013196:	431f      	orrs	r7, r3
 8013198:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 801319c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801319e:	433d      	orrs	r5, r7
 80131a0:	801d      	strh	r5, [r3, #0]
 80131a2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80131a4:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 80131a6:	3302      	adds	r3, #2
 80131a8:	930c      	str	r3, [sp, #48]	; 0x30
 80131aa:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80131ac:	4413      	add	r3, r2
 80131ae:	9327      	str	r3, [sp, #156]	; 0x9c
 80131b0:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 80131b2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80131b4:	4413      	add	r3, r2
 80131b6:	9328      	str	r3, [sp, #160]	; 0xa0
 80131b8:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80131ba:	3b01      	subs	r3, #1
 80131bc:	9311      	str	r3, [sp, #68]	; 0x44
 80131be:	e732      	b.n	8013026 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 80131c0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80131c2:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 80131c4:	4433      	add	r3, r6
 80131c6:	9327      	str	r3, [sp, #156]	; 0x9c
 80131c8:	9e2a      	ldr	r6, [sp, #168]	; 0xa8
 80131ca:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80131cc:	4433      	add	r3, r6
 80131ce:	9328      	str	r3, [sp, #160]	; 0xa0
 80131d0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80131d2:	3b01      	subs	r3, #1
 80131d4:	9309      	str	r3, [sp, #36]	; 0x24
 80131d6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80131d8:	3302      	adds	r3, #2
 80131da:	930a      	str	r3, [sp, #40]	; 0x28
 80131dc:	e702      	b.n	8012fe4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80131de:	d027      	beq.n	8013230 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 80131e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80131e2:	9829      	ldr	r0, [sp, #164]	; 0xa4
 80131e4:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 80131e6:	3b01      	subs	r3, #1
 80131e8:	fb00 5003 	mla	r0, r0, r3, r5
 80131ec:	1400      	asrs	r0, r0, #16
 80131ee:	f53f af16 	bmi.w	801301e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80131f2:	3901      	subs	r1, #1
 80131f4:	4288      	cmp	r0, r1
 80131f6:	f6bf af12 	bge.w	801301e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 80131fa:	992a      	ldr	r1, [sp, #168]	; 0xa8
 80131fc:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80131fe:	fb01 0303 	mla	r3, r1, r3, r0
 8013202:	141b      	asrs	r3, r3, #16
 8013204:	f53f af0b 	bmi.w	801301e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013208:	3a01      	subs	r2, #1
 801320a:	4293      	cmp	r3, r2
 801320c:	f6bf af07 	bge.w	801301e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8013210:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013212:	9311      	str	r3, [sp, #68]	; 0x44
 8013214:	f8bd a03c 	ldrh.w	sl, [sp, #60]	; 0x3c
 8013218:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801321a:	930c      	str	r3, [sp, #48]	; 0x30
 801321c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801321e:	2b00      	cmp	r3, #0
 8013220:	dc70      	bgt.n	8013304 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8013222:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013224:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013226:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801322a:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801322e:	930a      	str	r3, [sp, #40]	; 0x28
 8013230:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8013232:	2b00      	cmp	r3, #0
 8013234:	f340 8124 	ble.w	8013480 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>
 8013238:	ee3a aa2b 	vadd.f32	s20, s20, s23
 801323c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013240:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8013244:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013246:	ee79 9a8b 	vadd.f32	s19, s19, s22
 801324a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801324e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013252:	eef0 6a48 	vmov.f32	s13, s16
 8013256:	ee69 7a27 	vmul.f32	s15, s18, s15
 801325a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801325e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013262:	edcd 6a27 	vstr	s13, [sp, #156]	; 0x9c
 8013266:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 801326a:	eef0 6a68 	vmov.f32	s13, s17
 801326e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013272:	ee18 2a10 	vmov	r2, s16
 8013276:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 801327a:	fb92 f3f3 	sdiv	r3, r2, r3
 801327e:	ee18 2a90 	vmov	r2, s17
 8013282:	9329      	str	r3, [sp, #164]	; 0xa4
 8013284:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8013286:	fb92 f3f3 	sdiv	r3, r2, r3
 801328a:	932a      	str	r3, [sp, #168]	; 0xa8
 801328c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801328e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8013290:	3b01      	subs	r3, #1
 8013292:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013296:	930e      	str	r3, [sp, #56]	; 0x38
 8013298:	9b26      	ldr	r3, [sp, #152]	; 0x98
 801329a:	edcd 6a28 	vstr	s13, [sp, #160]	; 0xa0
 801329e:	bf08      	it	eq
 80132a0:	4613      	moveq	r3, r2
 80132a2:	9309      	str	r3, [sp, #36]	; 0x24
 80132a4:	eef0 8a67 	vmov.f32	s17, s15
 80132a8:	eeb0 8a47 	vmov.f32	s16, s14
 80132ac:	e68c      	b.n	8012fc8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80132ae:	b149      	cbz	r1, 80132c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35c>
 80132b0:	5cb2      	ldrb	r2, [r6, r2]
 80132b2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80132b6:	4422      	add	r2, r4
 80132b8:	4628      	mov	r0, r5
 80132ba:	46ac      	mov	ip, r5
 80132bc:	e6f1      	b.n	80130a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80132be:	4628      	mov	r0, r5
 80132c0:	462a      	mov	r2, r5
 80132c2:	e6ee      	b.n	80130a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13a>
 80132c4:	4628      	mov	r0, r5
 80132c6:	462a      	mov	r2, r5
 80132c8:	e7f7      	b.n	80132ba <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 80132ca:	1c47      	adds	r7, r0, #1
 80132cc:	f53f af69 	bmi.w	80131a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80132d0:	42ba      	cmp	r2, r7
 80132d2:	f6ff af66 	blt.w	80131a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80132d6:	1c6f      	adds	r7, r5, #1
 80132d8:	f53f af63 	bmi.w	80131a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80132dc:	42be      	cmp	r6, r7
 80132de:	f6ff af60 	blt.w	80131a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 80132e2:	9f0f      	ldr	r7, [sp, #60]	; 0x3c
 80132e4:	9002      	str	r0, [sp, #8]
 80132e6:	b236      	sxth	r6, r6
 80132e8:	b212      	sxth	r2, r2
 80132ea:	e9cd 1705 	strd	r1, r7, [sp, #20]
 80132ee:	e9cd 5303 	strd	r5, r3, [sp, #12]
 80132f2:	9200      	str	r2, [sp, #0]
 80132f4:	9601      	str	r6, [sp, #4]
 80132f6:	4623      	mov	r3, r4
 80132f8:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	; 0x30
 80132fc:	9813      	ldr	r0, [sp, #76]	; 0x4c
 80132fe:	f7ff fd49 	bl	8012d94 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 8013302:	e74e      	b.n	80131a2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x23a>
 8013304:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 8013306:	9828      	ldr	r0, [sp, #160]	; 0xa0
 8013308:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 801330a:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 801330c:	f3c2 3103 	ubfx	r1, r2, #12, #4
 8013310:	9a2e      	ldr	r2, [sp, #184]	; 0xb8
 8013312:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8013316:	142d      	asrs	r5, r5, #16
 8013318:	1400      	asrs	r0, r0, #16
 801331a:	fb02 5000 	mla	r0, r2, r0, r5
 801331e:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 8013320:	f815 9000 	ldrb.w	r9, [r5, r0]
 8013324:	f3c3 3303 	ubfx	r3, r3, #12, #4
 8013328:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801332c:	182e      	adds	r6, r5, r0
 801332e:	eb04 0509 	add.w	r5, r4, r9
 8013332:	2b00      	cmp	r3, #0
 8013334:	f000 8096 	beq.w	8013464 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4fc>
 8013338:	7877      	ldrb	r7, [r6, #1]
 801333a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801333e:	4427      	add	r7, r4
 8013340:	2900      	cmp	r1, #0
 8013342:	f000 8097 	beq.w	8013474 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50c>
 8013346:	18b0      	adds	r0, r6, r2
 8013348:	5cb2      	ldrb	r2, [r6, r2]
 801334a:	7840      	ldrb	r0, [r0, #1]
 801334c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013350:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013354:	4422      	add	r2, r4
 8013356:	4420      	add	r0, r4
 8013358:	b29b      	uxth	r3, r3
 801335a:	b289      	uxth	r1, r1
 801335c:	fb03 f801 	mul.w	r8, r3, r1
 8013360:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8013362:	f895 b002 	ldrb.w	fp, [r5, #2]
 8013366:	f8b6 c000 	ldrh.w	ip, [r6]
 801336a:	78be      	ldrb	r6, [r7, #2]
 801336c:	f814 9009 	ldrb.w	r9, [r4, r9]
 8013370:	011b      	lsls	r3, r3, #4
 8013372:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 8013376:	b289      	uxth	r1, r1
 8013378:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801337c:	eba3 0308 	sub.w	r3, r3, r8
 8013380:	b29b      	uxth	r3, r3
 8013382:	ebae 0e01 	sub.w	lr, lr, r1
 8013386:	fa1f fe8e 	uxth.w	lr, lr
 801338a:	435e      	muls	r6, r3
 801338c:	fb0e 660b 	mla	r6, lr, fp, r6
 8013390:	f892 b002 	ldrb.w	fp, [r2, #2]
 8013394:	9310      	str	r3, [sp, #64]	; 0x40
 8013396:	fb01 660b 	mla	r6, r1, fp, r6
 801339a:	f890 b002 	ldrb.w	fp, [r0, #2]
 801339e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80133a0:	fb08 660b 	mla	r6, r8, fp, r6
 80133a4:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 80133a8:	f00b 0bf8 	and.w	fp, fp, #248	; 0xf8
 80133ac:	fb1b fb03 	smulbb	fp, fp, r3
 80133b0:	f3c6 2607 	ubfx	r6, r6, #8, #8
 80133b4:	fb06 b60a 	mla	r6, r6, sl, fp
 80133b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80133ba:	f895 b001 	ldrb.w	fp, [r5, #1]
 80133be:	787d      	ldrb	r5, [r7, #1]
 80133c0:	783f      	ldrb	r7, [r7, #0]
 80133c2:	435d      	muls	r5, r3
 80133c4:	fb0e 550b 	mla	r5, lr, fp, r5
 80133c8:	f892 b001 	ldrb.w	fp, [r2, #1]
 80133cc:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80133ce:	fb01 550b 	mla	r5, r1, fp, r5
 80133d2:	f890 b001 	ldrb.w	fp, [r0, #1]
 80133d6:	fb08 550b 	mla	r5, r8, fp, r5
 80133da:	ea4f 0bec 	mov.w	fp, ip, asr #3
 80133de:	f00b 0bfc 	and.w	fp, fp, #252	; 0xfc
 80133e2:	fb1b fb03 	smulbb	fp, fp, r3
 80133e6:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80133e8:	437b      	muls	r3, r7
 80133ea:	7817      	ldrb	r7, [r2, #0]
 80133ec:	fb0e 3309 	mla	r3, lr, r9, r3
 80133f0:	fb01 3307 	mla	r3, r1, r7, r3
 80133f4:	7807      	ldrb	r7, [r0, #0]
 80133f6:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80133fa:	fb08 3707 	mla	r7, r8, r7, r3
 80133fe:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8013400:	fa5f fc8c 	uxtb.w	ip, ip
 8013404:	fb1c fc03 	smulbb	ip, ip, r3
 8013408:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801340c:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8013410:	fb05 b50a 	mla	r5, r5, sl, fp
 8013414:	fb07 c70a 	mla	r7, r7, sl, ip
 8013418:	b2b6      	uxth	r6, r6
 801341a:	b2ad      	uxth	r5, r5
 801341c:	b2bf      	uxth	r7, r7
 801341e:	1c73      	adds	r3, r6, #1
 8013420:	1c7a      	adds	r2, r7, #1
 8013422:	f105 0b01 	add.w	fp, r5, #1
 8013426:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801342a:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801342e:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 8013432:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8013436:	f406 4678 	and.w	r6, r6, #63488	; 0xf800
 801343a:	096d      	lsrs	r5, r5, #5
 801343c:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 801343e:	4316      	orrs	r6, r2
 8013440:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8013444:	432e      	orrs	r6, r5
 8013446:	f823 6b02 	strh.w	r6, [r3], #2
 801344a:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 801344c:	930c      	str	r3, [sp, #48]	; 0x30
 801344e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8013450:	4413      	add	r3, r2
 8013452:	9327      	str	r3, [sp, #156]	; 0x9c
 8013454:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 8013456:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013458:	4413      	add	r3, r2
 801345a:	9328      	str	r3, [sp, #160]	; 0xa0
 801345c:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801345e:	3b01      	subs	r3, #1
 8013460:	9311      	str	r3, [sp, #68]	; 0x44
 8013462:	e6db      	b.n	801321c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b4>
 8013464:	b149      	cbz	r1, 801347a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 8013466:	5cb2      	ldrb	r2, [r6, r2]
 8013468:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801346c:	4422      	add	r2, r4
 801346e:	4628      	mov	r0, r5
 8013470:	462f      	mov	r7, r5
 8013472:	e771      	b.n	8013358 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8013474:	4628      	mov	r0, r5
 8013476:	462a      	mov	r2, r5
 8013478:	e76e      	b.n	8013358 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 801347a:	4628      	mov	r0, r5
 801347c:	462a      	mov	r2, r5
 801347e:	e7f7      	b.n	8013470 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x508>
 8013480:	b015      	add	sp, #84	; 0x54
 8013482:	ecbd 8b08 	vpop	{d8-d11}
 8013486:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

0801348c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801348c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013490:	880e      	ldrh	r6, [r1, #0]
 8013492:	b085      	sub	sp, #20
 8013494:	0230      	lsls	r0, r6, #8
 8013496:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 801349a:	f400 0b78 	and.w	fp, r0, #16252928	; 0xf80000
 801349e:	0170      	lsls	r0, r6, #5
 80134a0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80134a4:	9101      	str	r1, [sp, #4]
 80134a6:	f400 407c 	and.w	r0, r0, #64512	; 0xfc00
 80134aa:	00f6      	lsls	r6, r6, #3
 80134ac:	ea4b 0000 	orr.w	r0, fp, r0
 80134b0:	b2f6      	uxtb	r6, r6
 80134b2:	4691      	mov	r9, r2
 80134b4:	fb05 7a0c 	mla	sl, r5, ip, r7
 80134b8:	4306      	orrs	r6, r0
 80134ba:	2d00      	cmp	r5, #0
 80134bc:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80134c0:	f89d 2048 	ldrb.w	r2, [sp, #72]	; 0x48
 80134c4:	f89d 404c 	ldrb.w	r4, [sp, #76]	; 0x4c
 80134c8:	9603      	str	r6, [sp, #12]
 80134ca:	eb09 0e0a 	add.w	lr, r9, sl
 80134ce:	db42      	blt.n	8013556 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 80134d0:	45a8      	cmp	r8, r5
 80134d2:	dd40      	ble.n	8013556 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xca>
 80134d4:	2f00      	cmp	r7, #0
 80134d6:	db3c      	blt.n	8013552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 80134d8:	45bc      	cmp	ip, r7
 80134da:	dd3a      	ble.n	8013552 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xc6>
 80134dc:	f819 600a 	ldrb.w	r6, [r9, sl]
 80134e0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 80134e4:	441e      	add	r6, r3
 80134e6:	1c78      	adds	r0, r7, #1
 80134e8:	d438      	bmi.n	801355c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 80134ea:	4584      	cmp	ip, r0
 80134ec:	dd36      	ble.n	801355c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 80134ee:	b3aa      	cbz	r2, 801355c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd0>
 80134f0:	f89e 0001 	ldrb.w	r0, [lr, #1]
 80134f4:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80134f8:	4418      	add	r0, r3
 80134fa:	3501      	adds	r5, #1
 80134fc:	d432      	bmi.n	8013564 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 80134fe:	45a8      	cmp	r8, r5
 8013500:	dd30      	ble.n	8013564 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8013502:	b37c      	cbz	r4, 8013564 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd8>
 8013504:	2f00      	cmp	r7, #0
 8013506:	db2b      	blt.n	8013560 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 8013508:	45bc      	cmp	ip, r7
 801350a:	dd29      	ble.n	8013560 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xd4>
 801350c:	f81e 500c 	ldrb.w	r5, [lr, ip]
 8013510:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 8013514:	441d      	add	r5, r3
 8013516:	3701      	adds	r7, #1
 8013518:	d427      	bmi.n	801356a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801351a:	45bc      	cmp	ip, r7
 801351c:	dd25      	ble.n	801356a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 801351e:	b322      	cbz	r2, 801356a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xde>
 8013520:	44f4      	add	ip, lr
 8013522:	f89c 7001 	ldrb.w	r7, [ip, #1]
 8013526:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801352a:	443b      	add	r3, r7
 801352c:	781f      	ldrb	r7, [r3, #0]
 801352e:	f896 9000 	ldrb.w	r9, [r6]
 8013532:	f890 a000 	ldrb.w	sl, [r0]
 8013536:	f895 8000 	ldrb.w	r8, [r5]
 801353a:	2a0f      	cmp	r2, #15
 801353c:	4639      	mov	r1, r7
 801353e:	d801      	bhi.n	8013544 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xb8>
 8013540:	2c0f      	cmp	r4, #15
 8013542:	d914      	bls.n	801356e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xe2>
 8013544:	4b2c      	ldr	r3, [pc, #176]	; (80135f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x16c>)
 8013546:	4a2d      	ldr	r2, [pc, #180]	; (80135fc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x170>)
 8013548:	482d      	ldr	r0, [pc, #180]	; (8013600 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x174>)
 801354a:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801354e:	f005 ff77 	bl	8019440 <__assert_func>
 8013552:	ae03      	add	r6, sp, #12
 8013554:	e7c7      	b.n	80134e6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x5a>
 8013556:	a803      	add	r0, sp, #12
 8013558:	4606      	mov	r6, r0
 801355a:	e7ce      	b.n	80134fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801355c:	a803      	add	r0, sp, #12
 801355e:	e7cc      	b.n	80134fa <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 8013560:	ad03      	add	r5, sp, #12
 8013562:	e7d8      	b.n	8013516 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8a>
 8013564:	ab03      	add	r3, sp, #12
 8013566:	461d      	mov	r5, r3
 8013568:	e7e0      	b.n	801352c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 801356a:	ab03      	add	r3, sp, #12
 801356c:	e7de      	b.n	801352c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa0>
 801356e:	b292      	uxth	r2, r2
 8013570:	b2a4      	uxth	r4, r4
 8013572:	fb02 fe04 	mul.w	lr, r2, r4
 8013576:	ebce 1404 	rsb	r4, lr, r4, lsl #4
 801357a:	0112      	lsls	r2, r2, #4
 801357c:	b2a4      	uxth	r4, r4
 801357e:	f890 c002 	ldrb.w	ip, [r0, #2]
 8013582:	f896 b002 	ldrb.w	fp, [r6, #2]
 8013586:	7840      	ldrb	r0, [r0, #1]
 8013588:	7876      	ldrb	r6, [r6, #1]
 801358a:	f5c2 7780 	rsb	r7, r2, #256	; 0x100
 801358e:	eba2 020e 	sub.w	r2, r2, lr
 8013592:	b292      	uxth	r2, r2
 8013594:	1b3f      	subs	r7, r7, r4
 8013596:	b2bf      	uxth	r7, r7
 8013598:	fb02 fc0c 	mul.w	ip, r2, ip
 801359c:	fb07 cc0b 	mla	ip, r7, fp, ip
 80135a0:	f895 b002 	ldrb.w	fp, [r5, #2]
 80135a4:	fb04 cc0b 	mla	ip, r4, fp, ip
 80135a8:	f893 b002 	ldrb.w	fp, [r3, #2]
 80135ac:	785b      	ldrb	r3, [r3, #1]
 80135ae:	fb0e cc0b 	mla	ip, lr, fp, ip
 80135b2:	f40c 4b78 	and.w	fp, ip, #63488	; 0xf800
 80135b6:	fb02 fc0a 	mul.w	ip, r2, sl
 80135ba:	4342      	muls	r2, r0
 80135bc:	7868      	ldrb	r0, [r5, #1]
 80135be:	fb07 cc09 	mla	ip, r7, r9, ip
 80135c2:	fb07 2206 	mla	r2, r7, r6, r2
 80135c6:	fb04 cc08 	mla	ip, r4, r8, ip
 80135ca:	fb04 2400 	mla	r4, r4, r0, r2
 80135ce:	fb0e cc01 	mla	ip, lr, r1, ip
 80135d2:	fb0e 4e03 	mla	lr, lr, r3, r4
 80135d6:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 80135da:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80135de:	ea4c 0c0b 	orr.w	ip, ip, fp
 80135e2:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 80135e6:	9b01      	ldr	r3, [sp, #4]
 80135e8:	ea4c 0c0e 	orr.w	ip, ip, lr
 80135ec:	f8a3 c000 	strh.w	ip, [r3]
 80135f0:	b005      	add	sp, #20
 80135f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135f6:	bf00      	nop
 80135f8:	0801ce3e 	.word	0x0801ce3e
 80135fc:	0801d40a 	.word	0x0801d40a
 8013600:	0801cec2 	.word	0x0801cec2

08013604 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013604:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013608:	ed2d 8b08 	vpush	{d8-d11}
 801360c:	b08f      	sub	sp, #60	; 0x3c
 801360e:	e9dd b521 	ldrd	fp, r5, [sp, #132]	; 0x84
 8013612:	920c      	str	r2, [sp, #48]	; 0x30
 8013614:	9a25      	ldr	r2, [sp, #148]	; 0x94
 8013616:	910a      	str	r1, [sp, #40]	; 0x28
 8013618:	9306      	str	r3, [sp, #24]
 801361a:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	; 0x98
 801361e:	900d      	str	r0, [sp, #52]	; 0x34
 8013620:	6850      	ldr	r0, [r2, #4]
 8013622:	6812      	ldr	r2, [r2, #0]
 8013624:	fb00 1303 	mla	r3, r0, r3, r1
 8013628:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801362c:	9307      	str	r3, [sp, #28]
 801362e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013630:	681b      	ldr	r3, [r3, #0]
 8013632:	9308      	str	r3, [sp, #32]
 8013634:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8013636:	685c      	ldr	r4, [r3, #4]
 8013638:	eeb0 aa40 	vmov.f32	s20, s0
 801363c:	eef0 9a60 	vmov.f32	s19, s1
 8013640:	eeb0 9a41 	vmov.f32	s18, s2
 8013644:	eeb0 8a62 	vmov.f32	s16, s5
 8013648:	eef0 8a43 	vmov.f32	s17, s6
 801364c:	eef0 ba44 	vmov.f32	s23, s8
 8013650:	eeb0 ba64 	vmov.f32	s22, s9
 8013654:	eef0 aa45 	vmov.f32	s21, s10
 8013658:	3404      	adds	r4, #4
 801365a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801365c:	2b00      	cmp	r3, #0
 801365e:	dc03      	bgt.n	8013668 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8013660:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8013662:	2b00      	cmp	r3, #0
 8013664:	f340 81d6 	ble.w	8013a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 8013668:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801366a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801366e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8013672:	1e48      	subs	r0, r1, #1
 8013674:	1e56      	subs	r6, r2, #1
 8013676:	9b06      	ldr	r3, [sp, #24]
 8013678:	2b00      	cmp	r3, #0
 801367a:	f340 80b7 	ble.w	80137ec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801367e:	ea5f 472b 	movs.w	r7, fp, asr #16
 8013682:	ea4f 4325 	mov.w	r3, r5, asr #16
 8013686:	d406      	bmi.n	8013696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013688:	4287      	cmp	r7, r0
 801368a:	da04      	bge.n	8013696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801368c:	2b00      	cmp	r3, #0
 801368e:	db02      	blt.n	8013696 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8013690:	42b3      	cmp	r3, r6
 8013692:	f2c0 80ac 	blt.w	80137ee <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8013696:	3701      	adds	r7, #1
 8013698:	f100 809d 	bmi.w	80137d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 801369c:	42b9      	cmp	r1, r7
 801369e:	f2c0 809a 	blt.w	80137d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80136a2:	3301      	adds	r3, #1
 80136a4:	f100 8097 	bmi.w	80137d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80136a8:	429a      	cmp	r2, r3
 80136aa:	f2c0 8094 	blt.w	80137d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80136ae:	9b06      	ldr	r3, [sp, #24]
 80136b0:	930b      	str	r3, [sp, #44]	; 0x2c
 80136b2:	9b07      	ldr	r3, [sp, #28]
 80136b4:	9309      	str	r3, [sp, #36]	; 0x24
 80136b6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80136b8:	2b00      	cmp	r3, #0
 80136ba:	f340 80b5 	ble.w	8013828 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 80136be:	9828      	ldr	r0, [sp, #160]	; 0xa0
 80136c0:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 80136c2:	68c7      	ldr	r7, [r0, #12]
 80136c4:	6892      	ldr	r2, [r2, #8]
 80136c6:	ea5f 402b 	movs.w	r0, fp, asr #16
 80136ca:	ea4f 4625 	mov.w	r6, r5, asr #16
 80136ce:	f3cb 3303 	ubfx	r3, fp, #12, #4
 80136d2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 80136d6:	f100 80fb 	bmi.w	80138d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80136da:	f102 3cff 	add.w	ip, r2, #4294967295
 80136de:	4560      	cmp	r0, ip
 80136e0:	f280 80f6 	bge.w	80138d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80136e4:	2e00      	cmp	r6, #0
 80136e6:	f2c0 80f3 	blt.w	80138d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80136ea:	f107 3cff 	add.w	ip, r7, #4294967295
 80136ee:	4566      	cmp	r6, ip
 80136f0:	f280 80ee 	bge.w	80138d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2cc>
 80136f4:	b212      	sxth	r2, r2
 80136f6:	fb06 0002 	mla	r0, r6, r2, r0
 80136fa:	9e08      	ldr	r6, [sp, #32]
 80136fc:	1837      	adds	r7, r6, r0
 80136fe:	5c30      	ldrb	r0, [r6, r0]
 8013700:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 8013704:	eb04 0c08 	add.w	ip, r4, r8
 8013708:	2b00      	cmp	r3, #0
 801370a:	f000 80d3 	beq.w	80138b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b0>
 801370e:	787e      	ldrb	r6, [r7, #1]
 8013710:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 8013714:	4426      	add	r6, r4
 8013716:	2900      	cmp	r1, #0
 8013718:	f000 80d4 	beq.w	80138c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c0>
 801371c:	18b8      	adds	r0, r7, r2
 801371e:	5cba      	ldrb	r2, [r7, r2]
 8013720:	7840      	ldrb	r0, [r0, #1]
 8013722:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013726:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801372a:	4422      	add	r2, r4
 801372c:	4420      	add	r0, r4
 801372e:	b29b      	uxth	r3, r3
 8013730:	b289      	uxth	r1, r1
 8013732:	fb03 f901 	mul.w	r9, r3, r1
 8013736:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801373a:	011b      	lsls	r3, r3, #4
 801373c:	b289      	uxth	r1, r1
 801373e:	78b7      	ldrb	r7, [r6, #2]
 8013740:	f89c a002 	ldrb.w	sl, [ip, #2]
 8013744:	f89c c001 	ldrb.w	ip, [ip, #1]
 8013748:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 801374c:	eba3 0309 	sub.w	r3, r3, r9
 8013750:	b29b      	uxth	r3, r3
 8013752:	ebae 0e01 	sub.w	lr, lr, r1
 8013756:	fa1f fe8e 	uxth.w	lr, lr
 801375a:	435f      	muls	r7, r3
 801375c:	fb0e 770a 	mla	r7, lr, sl, r7
 8013760:	f892 a002 	ldrb.w	sl, [r2, #2]
 8013764:	fb01 770a 	mla	r7, r1, sl, r7
 8013768:	f890 a002 	ldrb.w	sl, [r0, #2]
 801376c:	fb09 7a0a 	mla	sl, r9, sl, r7
 8013770:	f814 7008 	ldrb.w	r7, [r4, r8]
 8013774:	f896 8000 	ldrb.w	r8, [r6]
 8013778:	7876      	ldrb	r6, [r6, #1]
 801377a:	fb03 f808 	mul.w	r8, r3, r8
 801377e:	fb0e 8807 	mla	r8, lr, r7, r8
 8013782:	7817      	ldrb	r7, [r2, #0]
 8013784:	fb01 8807 	mla	r8, r1, r7, r8
 8013788:	7807      	ldrb	r7, [r0, #0]
 801378a:	fb09 8707 	mla	r7, r9, r7, r8
 801378e:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 8013792:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8013796:	ea47 070a 	orr.w	r7, r7, sl
 801379a:	4373      	muls	r3, r6
 801379c:	f892 a001 	ldrb.w	sl, [r2, #1]
 80137a0:	fb0e 330c 	mla	r3, lr, ip, r3
 80137a4:	fb01 310a 	mla	r1, r1, sl, r3
 80137a8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80137ac:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80137ae:	fb09 1a0a 	mla	sl, r9, sl, r1
 80137b2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80137b6:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80137ba:	ea47 070a 	orr.w	r7, r7, sl
 80137be:	801f      	strh	r7, [r3, #0]
 80137c0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80137c2:	3302      	adds	r3, #2
 80137c4:	9309      	str	r3, [sp, #36]	; 0x24
 80137c6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80137c8:	449b      	add	fp, r3
 80137ca:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80137cc:	441d      	add	r5, r3
 80137ce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80137d0:	3b01      	subs	r3, #1
 80137d2:	930b      	str	r3, [sp, #44]	; 0x2c
 80137d4:	e76f      	b.n	80136b6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80137d6:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80137d8:	449b      	add	fp, r3
 80137da:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80137dc:	441d      	add	r5, r3
 80137de:	9b06      	ldr	r3, [sp, #24]
 80137e0:	3b01      	subs	r3, #1
 80137e2:	9306      	str	r3, [sp, #24]
 80137e4:	9b07      	ldr	r3, [sp, #28]
 80137e6:	3302      	adds	r3, #2
 80137e8:	9307      	str	r3, [sp, #28]
 80137ea:	e744      	b.n	8013676 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80137ec:	d023      	beq.n	8013836 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x232>
 80137ee:	9b06      	ldr	r3, [sp, #24]
 80137f0:	9823      	ldr	r0, [sp, #140]	; 0x8c
 80137f2:	3b01      	subs	r3, #1
 80137f4:	fb00 b003 	mla	r0, r0, r3, fp
 80137f8:	1400      	asrs	r0, r0, #16
 80137fa:	f53f af58 	bmi.w	80136ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 80137fe:	3901      	subs	r1, #1
 8013800:	4288      	cmp	r0, r1
 8013802:	f6bf af54 	bge.w	80136ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013806:	9924      	ldr	r1, [sp, #144]	; 0x90
 8013808:	fb01 5303 	mla	r3, r1, r3, r5
 801380c:	141b      	asrs	r3, r3, #16
 801380e:	f53f af4e 	bmi.w	80136ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8013812:	3a01      	subs	r2, #1
 8013814:	4293      	cmp	r3, r2
 8013816:	f6bf af4a 	bge.w	80136ae <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 801381a:	9b06      	ldr	r3, [sp, #24]
 801381c:	9309      	str	r3, [sp, #36]	; 0x24
 801381e:	9b07      	ldr	r3, [sp, #28]
 8013820:	930b      	str	r3, [sp, #44]	; 0x2c
 8013822:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013824:	2b00      	cmp	r3, #0
 8013826:	dc70      	bgt.n	801390a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8013828:	9b06      	ldr	r3, [sp, #24]
 801382a:	9a07      	ldr	r2, [sp, #28]
 801382c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8013830:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013834:	9307      	str	r3, [sp, #28]
 8013836:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013838:	2b00      	cmp	r3, #0
 801383a:	f340 80eb 	ble.w	8013a14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x410>
 801383e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8013842:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8013846:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801384a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801384c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8013850:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8013854:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8013858:	eef0 6a48 	vmov.f32	s13, s16
 801385c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8013860:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8013864:	ee37 8a48 	vsub.f32	s16, s14, s16
 8013868:	ee16 ba90 	vmov	fp, s13
 801386c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8013870:	eef0 6a68 	vmov.f32	s13, s17
 8013874:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8013878:	ee18 2a10 	vmov	r2, s16
 801387c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8013880:	fb92 f3f3 	sdiv	r3, r2, r3
 8013884:	ee18 2a90 	vmov	r2, s17
 8013888:	9323      	str	r3, [sp, #140]	; 0x8c
 801388a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 801388c:	fb92 f3f3 	sdiv	r3, r2, r3
 8013890:	9324      	str	r3, [sp, #144]	; 0x90
 8013892:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8013894:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013896:	3b01      	subs	r3, #1
 8013898:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801389c:	930a      	str	r3, [sp, #40]	; 0x28
 801389e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 80138a0:	bf08      	it	eq
 80138a2:	4613      	moveq	r3, r2
 80138a4:	ee16 5a90 	vmov	r5, s13
 80138a8:	9306      	str	r3, [sp, #24]
 80138aa:	eef0 8a67 	vmov.f32	s17, s15
 80138ae:	eeb0 8a47 	vmov.f32	s16, s14
 80138b2:	e6d2      	b.n	801365a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 80138b4:	b149      	cbz	r1, 80138ca <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c6>
 80138b6:	5cba      	ldrb	r2, [r7, r2]
 80138b8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80138bc:	4422      	add	r2, r4
 80138be:	4660      	mov	r0, ip
 80138c0:	4666      	mov	r6, ip
 80138c2:	e734      	b.n	801372e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80138c4:	4660      	mov	r0, ip
 80138c6:	4662      	mov	r2, ip
 80138c8:	e731      	b.n	801372e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x12a>
 80138ca:	4660      	mov	r0, ip
 80138cc:	4662      	mov	r2, ip
 80138ce:	e7f7      	b.n	80138c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2bc>
 80138d0:	f110 0c01 	adds.w	ip, r0, #1
 80138d4:	f53f af74 	bmi.w	80137c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80138d8:	4562      	cmp	r2, ip
 80138da:	f6ff af71 	blt.w	80137c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80138de:	f116 0c01 	adds.w	ip, r6, #1
 80138e2:	f53f af6d 	bmi.w	80137c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80138e6:	4567      	cmp	r7, ip
 80138e8:	f6ff af6a 	blt.w	80137c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80138ec:	b23f      	sxth	r7, r7
 80138ee:	b212      	sxth	r2, r2
 80138f0:	e9cd 3104 	strd	r3, r1, [sp, #16]
 80138f4:	e9cd 0602 	strd	r0, r6, [sp, #8]
 80138f8:	9200      	str	r2, [sp, #0]
 80138fa:	9701      	str	r7, [sp, #4]
 80138fc:	4623      	mov	r3, r4
 80138fe:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8013902:	980d      	ldr	r0, [sp, #52]	; 0x34
 8013904:	f7ff fdc2 	bl	801348c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 8013908:	e75a      	b.n	80137c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 801390a:	9a28      	ldr	r2, [sp, #160]	; 0xa0
 801390c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 8013910:	ea4f 462b 	mov.w	r6, fp, asr #16
 8013914:	1428      	asrs	r0, r5, #16
 8013916:	fb02 6000 	mla	r0, r2, r0, r6
 801391a:	9e08      	ldr	r6, [sp, #32]
 801391c:	f816 8000 	ldrb.w	r8, [r6, r0]
 8013920:	f3cb 3303 	ubfx	r3, fp, #12, #4
 8013924:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 8013928:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801392c:	1837      	adds	r7, r6, r0
 801392e:	eb04 0c08 	add.w	ip, r4, r8
 8013932:	2b00      	cmp	r3, #0
 8013934:	d060      	beq.n	80139f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8013936:	787e      	ldrb	r6, [r7, #1]
 8013938:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801393c:	4426      	add	r6, r4
 801393e:	2900      	cmp	r1, #0
 8013940:	d062      	beq.n	8013a08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x404>
 8013942:	18b8      	adds	r0, r7, r2
 8013944:	5cba      	ldrb	r2, [r7, r2]
 8013946:	7840      	ldrb	r0, [r0, #1]
 8013948:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801394c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8013950:	4422      	add	r2, r4
 8013952:	4420      	add	r0, r4
 8013954:	b29b      	uxth	r3, r3
 8013956:	b289      	uxth	r1, r1
 8013958:	fb03 f901 	mul.w	r9, r3, r1
 801395c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8013960:	011b      	lsls	r3, r3, #4
 8013962:	b289      	uxth	r1, r1
 8013964:	78b7      	ldrb	r7, [r6, #2]
 8013966:	f89c a002 	ldrb.w	sl, [ip, #2]
 801396a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801396e:	f5c3 7e80 	rsb	lr, r3, #256	; 0x100
 8013972:	eba3 0309 	sub.w	r3, r3, r9
 8013976:	b29b      	uxth	r3, r3
 8013978:	ebae 0e01 	sub.w	lr, lr, r1
 801397c:	fa1f fe8e 	uxth.w	lr, lr
 8013980:	435f      	muls	r7, r3
 8013982:	fb0e 770a 	mla	r7, lr, sl, r7
 8013986:	f892 a002 	ldrb.w	sl, [r2, #2]
 801398a:	fb01 770a 	mla	r7, r1, sl, r7
 801398e:	f890 a002 	ldrb.w	sl, [r0, #2]
 8013992:	fb09 7a0a 	mla	sl, r9, sl, r7
 8013996:	f814 7008 	ldrb.w	r7, [r4, r8]
 801399a:	f896 8000 	ldrb.w	r8, [r6]
 801399e:	7876      	ldrb	r6, [r6, #1]
 80139a0:	fb03 f808 	mul.w	r8, r3, r8
 80139a4:	fb0e 8807 	mla	r8, lr, r7, r8
 80139a8:	7817      	ldrb	r7, [r2, #0]
 80139aa:	fb01 8807 	mla	r8, r1, r7, r8
 80139ae:	7807      	ldrb	r7, [r0, #0]
 80139b0:	fb09 8707 	mla	r7, r9, r7, r8
 80139b4:	f40a 4a78 	and.w	sl, sl, #63488	; 0xf800
 80139b8:	4373      	muls	r3, r6
 80139ba:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 80139be:	7856      	ldrb	r6, [r2, #1]
 80139c0:	ea47 070a 	orr.w	r7, r7, sl
 80139c4:	fb0e 330c 	mla	r3, lr, ip, r3
 80139c8:	f890 a001 	ldrb.w	sl, [r0, #1]
 80139cc:	fb01 3306 	mla	r3, r1, r6, r3
 80139d0:	fb09 3a0a 	mla	sl, r9, sl, r3
 80139d4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80139d8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80139da:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 80139de:	ea47 070a 	orr.w	r7, r7, sl
 80139e2:	f823 7b02 	strh.w	r7, [r3], #2
 80139e6:	930b      	str	r3, [sp, #44]	; 0x2c
 80139e8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 80139ea:	449b      	add	fp, r3
 80139ec:	9b24      	ldr	r3, [sp, #144]	; 0x90
 80139ee:	441d      	add	r5, r3
 80139f0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80139f2:	3b01      	subs	r3, #1
 80139f4:	9309      	str	r3, [sp, #36]	; 0x24
 80139f6:	e714      	b.n	8013822 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x21e>
 80139f8:	b149      	cbz	r1, 8013a0e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40a>
 80139fa:	5cba      	ldrb	r2, [r7, r2]
 80139fc:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 8013a00:	4422      	add	r2, r4
 8013a02:	4660      	mov	r0, ip
 8013a04:	4666      	mov	r6, ip
 8013a06:	e7a5      	b.n	8013954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8013a08:	4660      	mov	r0, ip
 8013a0a:	4662      	mov	r2, ip
 8013a0c:	e7a2      	b.n	8013954 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8013a0e:	4660      	mov	r0, ip
 8013a10:	4662      	mov	r2, ip
 8013a12:	e7f7      	b.n	8013a04 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x400>
 8013a14:	b00f      	add	sp, #60	; 0x3c
 8013a16:	ecbd 8b08 	vpop	{d8-d11}
 8013a1a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08013a20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 8013a20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013a24:	880e      	ldrh	r6, [r1, #0]
 8013a26:	b085      	sub	sp, #20
 8013a28:	ea4f 2e26 	mov.w	lr, r6, asr #8
 8013a2c:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8013a30:	4691      	mov	r9, r2
 8013a32:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 8013a36:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8013a3a:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8013a3e:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 8013a42:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 8013a46:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 8013a4a:	9200      	str	r2, [sp, #0]
 8013a4c:	00f6      	lsls	r6, r6, #3
 8013a4e:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 8013a52:	9201      	str	r2, [sp, #4]
 8013a54:	2c00      	cmp	r4, #0
 8013a56:	b2f2      	uxtb	r2, r6
 8013a58:	fb04 560c 	mla	r6, r4, ip, r5
 8013a5c:	9202      	str	r2, [sp, #8]
 8013a5e:	eb09 0e06 	add.w	lr, r9, r6
 8013a62:	db3e      	blt.n	8013ae2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8013a64:	45a0      	cmp	r8, r4
 8013a66:	dd3c      	ble.n	8013ae2 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc2>
 8013a68:	2d00      	cmp	r5, #0
 8013a6a:	db38      	blt.n	8013ade <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8013a6c:	45ac      	cmp	ip, r5
 8013a6e:	dd36      	ble.n	8013ade <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xbe>
 8013a70:	f819 2006 	ldrb.w	r2, [r9, r6]
 8013a74:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8013a78:	1c6e      	adds	r6, r5, #1
 8013a7a:	d435      	bmi.n	8013ae8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8013a7c:	45b4      	cmp	ip, r6
 8013a7e:	dd33      	ble.n	8013ae8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xc8>
 8013a80:	b3a0      	cbz	r0, 8013aec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xcc>
 8013a82:	f89e 6001 	ldrb.w	r6, [lr, #1]
 8013a86:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 8013a8a:	3401      	adds	r4, #1
 8013a8c:	d432      	bmi.n	8013af4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8013a8e:	45a0      	cmp	r8, r4
 8013a90:	dd30      	ble.n	8013af4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd4>
 8013a92:	b397      	cbz	r7, 8013afa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xda>
 8013a94:	2d00      	cmp	r5, #0
 8013a96:	db2b      	blt.n	8013af0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8013a98:	45ac      	cmp	ip, r5
 8013a9a:	dd29      	ble.n	8013af0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xd0>
 8013a9c:	f81e 400c 	ldrb.w	r4, [lr, ip]
 8013aa0:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8013aa4:	3501      	adds	r5, #1
 8013aa6:	d42b      	bmi.n	8013b00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8013aa8:	45ac      	cmp	ip, r5
 8013aaa:	dd29      	ble.n	8013b00 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe0>
 8013aac:	b350      	cbz	r0, 8013b04 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe4>
 8013aae:	44f4      	add	ip, lr
 8013ab0:	f89c 5001 	ldrb.w	r5, [ip, #1]
 8013ab4:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8013ab8:	280f      	cmp	r0, #15
 8013aba:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8013abe:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8013ac2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8013ac6:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8013aca:	d801      	bhi.n	8013ad0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xb0>
 8013acc:	2f0f      	cmp	r7, #15
 8013ace:	d91b      	bls.n	8013b08 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0xe8>
 8013ad0:	4b84      	ldr	r3, [pc, #528]	; (8013ce4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c4>)
 8013ad2:	4a85      	ldr	r2, [pc, #532]	; (8013ce8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2c8>)
 8013ad4:	4885      	ldr	r0, [pc, #532]	; (8013cec <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x2cc>)
 8013ad6:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8013ada:	f005 fcb1 	bl	8019440 <__assert_func>
 8013ade:	2200      	movs	r2, #0
 8013ae0:	e7ca      	b.n	8013a78 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x58>
 8013ae2:	2600      	movs	r6, #0
 8013ae4:	4632      	mov	r2, r6
 8013ae6:	e7d0      	b.n	8013a8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8013ae8:	2600      	movs	r6, #0
 8013aea:	e7ce      	b.n	8013a8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8013aec:	4606      	mov	r6, r0
 8013aee:	e7cc      	b.n	8013a8a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x6a>
 8013af0:	2400      	movs	r4, #0
 8013af2:	e7d7      	b.n	8013aa4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x84>
 8013af4:	2300      	movs	r3, #0
 8013af6:	461c      	mov	r4, r3
 8013af8:	e7de      	b.n	8013ab8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8013afa:	463b      	mov	r3, r7
 8013afc:	463c      	mov	r4, r7
 8013afe:	e7db      	b.n	8013ab8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8013b00:	2300      	movs	r3, #0
 8013b02:	e7d9      	b.n	8013ab8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8013b04:	4603      	mov	r3, r0
 8013b06:	e7d7      	b.n	8013ab8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x98>
 8013b08:	b280      	uxth	r0, r0
 8013b0a:	b2bf      	uxth	r7, r7
 8013b0c:	fb00 fe07 	mul.w	lr, r0, r7
 8013b10:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8013b14:	0100      	lsls	r0, r0, #4
 8013b16:	eba0 0c0e 	sub.w	ip, r0, lr
 8013b1a:	b2bf      	uxth	r7, r7
 8013b1c:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8013b20:	fa1f fc8c 	uxth.w	ip, ip
 8013b24:	1bed      	subs	r5, r5, r7
 8013b26:	b2ad      	uxth	r5, r5
 8013b28:	fb0c f00a 	mul.w	r0, ip, sl
 8013b2c:	fb05 000b 	mla	r0, r5, fp, r0
 8013b30:	fb07 0009 	mla	r0, r7, r9, r0
 8013b34:	fb0e 0008 	mla	r0, lr, r8, r0
 8013b38:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8013b3c:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8013b40:	9003      	str	r0, [sp, #12]
 8013b42:	d018      	beq.n	8013b76 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x156>
 8013b44:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8013b48:	fb0b f000 	mul.w	r0, fp, r0
 8013b4c:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8013b50:	fb0b fb02 	mul.w	fp, fp, r2
 8013b54:	0a02      	lsrs	r2, r0, #8
 8013b56:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8013b5a:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8013b5e:	4402      	add	r2, r0
 8013b60:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8013b64:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8013b68:	0a12      	lsrs	r2, r2, #8
 8013b6a:	0a00      	lsrs	r0, r0, #8
 8013b6c:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8013b70:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8013b74:	4302      	orrs	r2, r0
 8013b76:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8013b7a:	d019      	beq.n	8013bb0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x190>
 8013b7c:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8013b80:	fb0a fb0b 	mul.w	fp, sl, fp
 8013b84:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013b88:	fb0a fa06 	mul.w	sl, sl, r6
 8013b8c:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8013b90:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013b94:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8013b98:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8013b9c:	445e      	add	r6, fp
 8013b9e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8013ba2:	0a36      	lsrs	r6, r6, #8
 8013ba4:	0a00      	lsrs	r0, r0, #8
 8013ba6:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8013baa:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8013bae:	4306      	orrs	r6, r0
 8013bb0:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8013bb4:	d019      	beq.n	8013bea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x1ca>
 8013bb6:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8013bba:	fb09 fa0a 	mul.w	sl, r9, sl
 8013bbe:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8013bc2:	fb09 f904 	mul.w	r9, r9, r4
 8013bc6:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8013bca:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8013bce:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8013bd2:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8013bd6:	4454      	add	r4, sl
 8013bd8:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8013bdc:	0a24      	lsrs	r4, r4, #8
 8013bde:	0a00      	lsrs	r0, r0, #8
 8013be0:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8013be4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8013be8:	4304      	orrs	r4, r0
 8013bea:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8013bee:	d019      	beq.n	8013c24 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x204>
 8013bf0:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8013bf4:	fb08 f909 	mul.w	r9, r8, r9
 8013bf8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013bfc:	fb08 f803 	mul.w	r8, r8, r3
 8013c00:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8013c04:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8013c08:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8013c0c:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8013c10:	444b      	add	r3, r9
 8013c12:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8013c16:	0a1b      	lsrs	r3, r3, #8
 8013c18:	0a00      	lsrs	r0, r0, #8
 8013c1a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8013c1e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8013c22:	4303      	orrs	r3, r0
 8013c24:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8013c28:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8013c2c:	fb0c f808 	mul.w	r8, ip, r8
 8013c30:	fb05 8800 	mla	r8, r5, r0, r8
 8013c34:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8013c38:	fb07 8800 	mla	r8, r7, r0, r8
 8013c3c:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8013c40:	fb0e 8000 	mla	r0, lr, r0, r8
 8013c44:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8013c48:	fb0c f606 	mul.w	r6, ip, r6
 8013c4c:	0a00      	lsrs	r0, r0, #8
 8013c4e:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8013c52:	fb05 6202 	mla	r2, r5, r2, r6
 8013c56:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8013c5a:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8013c5e:	fb07 2700 	mla	r7, r7, r0, r2
 8013c62:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8013c66:	f89d 3050 	ldrb.w	r3, [sp, #80]	; 0x50
 8013c6a:	9c03      	ldr	r4, [sp, #12]
 8013c6c:	9e01      	ldr	r6, [sp, #4]
 8013c6e:	b29b      	uxth	r3, r3
 8013c70:	435c      	muls	r4, r3
 8013c72:	fb0e 7000 	mla	r0, lr, r0, r7
 8013c76:	1c62      	adds	r2, r4, #1
 8013c78:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8013c7c:	0a00      	lsrs	r0, r0, #8
 8013c7e:	9c00      	ldr	r4, [sp, #0]
 8013c80:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8013c84:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 8013c88:	ea48 0000 	orr.w	r0, r8, r0
 8013c8c:	b2d2      	uxtb	r2, r2
 8013c8e:	fb14 f402 	smulbb	r4, r4, r2
 8013c92:	0c05      	lsrs	r5, r0, #16
 8013c94:	fb05 4503 	mla	r5, r5, r3, r4
 8013c98:	fb16 f602 	smulbb	r6, r6, r2
 8013c9c:	f3c0 2407 	ubfx	r4, r0, #8, #8
 8013ca0:	fb04 6403 	mla	r4, r4, r3, r6
 8013ca4:	9e02      	ldr	r6, [sp, #8]
 8013ca6:	b2c0      	uxtb	r0, r0
 8013ca8:	fb16 f202 	smulbb	r2, r6, r2
 8013cac:	fb00 2303 	mla	r3, r0, r3, r2
 8013cb0:	b2ad      	uxth	r5, r5
 8013cb2:	b298      	uxth	r0, r3
 8013cb4:	1c43      	adds	r3, r0, #1
 8013cb6:	1c6a      	adds	r2, r5, #1
 8013cb8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8013cbc:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8013cc0:	b2a4      	uxth	r4, r4
 8013cc2:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8013cc6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8013cca:	4313      	orrs	r3, r2
 8013ccc:	1c62      	adds	r2, r4, #1
 8013cce:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8013cd2:	0952      	lsrs	r2, r2, #5
 8013cd4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8013cd8:	4313      	orrs	r3, r2
 8013cda:	800b      	strh	r3, [r1, #0]
 8013cdc:	b005      	add	sp, #20
 8013cde:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013ce2:	bf00      	nop
 8013ce4:	0801ce3e 	.word	0x0801ce3e
 8013ce8:	0801d40a 	.word	0x0801d40a
 8013cec:	0801cec2 	.word	0x0801cec2

08013cf0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8013cf0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013cf4:	ed2d 8b08 	vpush	{d8-d11}
 8013cf8:	b09f      	sub	sp, #124	; 0x7c
 8013cfa:	eeb0 aa40 	vmov.f32	s20, s0
 8013cfe:	921b      	str	r2, [sp, #108]	; 0x6c
 8013d00:	9309      	str	r3, [sp, #36]	; 0x24
 8013d02:	9a35      	ldr	r2, [sp, #212]	; 0xd4
 8013d04:	f89d 30e4 	ldrb.w	r3, [sp, #228]	; 0xe4
 8013d08:	931c      	str	r3, [sp, #112]	; 0x70
 8013d0a:	9119      	str	r1, [sp, #100]	; 0x64
 8013d0c:	e9dd 1336 	ldrd	r1, r3, [sp, #216]	; 0xd8
 8013d10:	901d      	str	r0, [sp, #116]	; 0x74
 8013d12:	6850      	ldr	r0, [r2, #4]
 8013d14:	6812      	ldr	r2, [r2, #0]
 8013d16:	9d32      	ldr	r5, [sp, #200]	; 0xc8
 8013d18:	fb00 1303 	mla	r3, r0, r3, r1
 8013d1c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8013d20:	930c      	str	r3, [sp, #48]	; 0x30
 8013d22:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8013d24:	681b      	ldr	r3, [r3, #0]
 8013d26:	9312      	str	r3, [sp, #72]	; 0x48
 8013d28:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8013d2a:	685e      	ldr	r6, [r3, #4]
 8013d2c:	f8bd 3070 	ldrh.w	r3, [sp, #112]	; 0x70
 8013d30:	930d      	str	r3, [sp, #52]	; 0x34
 8013d32:	eef0 9a60 	vmov.f32	s19, s1
 8013d36:	eeb0 9a41 	vmov.f32	s18, s2
 8013d3a:	eeb0 8a62 	vmov.f32	s16, s5
 8013d3e:	eef0 8a43 	vmov.f32	s17, s6
 8013d42:	eef0 ba44 	vmov.f32	s23, s8
 8013d46:	eeb0 ba64 	vmov.f32	s22, s9
 8013d4a:	eef0 aa45 	vmov.f32	s21, s10
 8013d4e:	3604      	adds	r6, #4
 8013d50:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8013d52:	2b00      	cmp	r3, #0
 8013d54:	dc03      	bgt.n	8013d5e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8013d56:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8013d58:	2b00      	cmp	r3, #0
 8013d5a:	f340 8388 	ble.w	801446e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 8013d5e:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8013d60:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8013d64:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8013d68:	1e48      	subs	r0, r1, #1
 8013d6a:	1e57      	subs	r7, r2, #1
 8013d6c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013d6e:	2b00      	cmp	r3, #0
 8013d70:	f340 8195 	ble.w	801409e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8013d74:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8013d76:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8013d7a:	ea4f 4325 	mov.w	r3, r5, asr #16
 8013d7e:	d406      	bmi.n	8013d8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013d80:	4584      	cmp	ip, r0
 8013d82:	da04      	bge.n	8013d8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013d84:	2b00      	cmp	r3, #0
 8013d86:	db02      	blt.n	8013d8e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8013d88:	42bb      	cmp	r3, r7
 8013d8a:	f2c0 8189 	blt.w	80140a0 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b0>
 8013d8e:	f11c 0c01 	adds.w	ip, ip, #1
 8013d92:	f100 8177 	bmi.w	8014084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8013d96:	4561      	cmp	r1, ip
 8013d98:	f2c0 8174 	blt.w	8014084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8013d9c:	3301      	adds	r3, #1
 8013d9e:	f100 8171 	bmi.w	8014084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8013da2:	429a      	cmp	r2, r3
 8013da4:	f2c0 816e 	blt.w	8014084 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>
 8013da8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8013daa:	9f0c      	ldr	r7, [sp, #48]	; 0x30
 8013dac:	931a      	str	r3, [sp, #104]	; 0x68
 8013dae:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 8013db0:	2b00      	cmp	r3, #0
 8013db2:	f340 8193 	ble.w	80140dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 8013db6:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8013db8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8013dbc:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 8013dbe:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 8013dc2:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8013dc4:	141b      	asrs	r3, r3, #16
 8013dc6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8013dca:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8013dce:	f100 81d6 	bmi.w	801417e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8013dd2:	f100 38ff 	add.w	r8, r0, #4294967295
 8013dd6:	4543      	cmp	r3, r8
 8013dd8:	f280 81d1 	bge.w	801417e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8013ddc:	f1bc 0f00 	cmp.w	ip, #0
 8013de0:	f2c0 81cd 	blt.w	801417e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8013de4:	f10e 38ff 	add.w	r8, lr, #4294967295
 8013de8:	45c4      	cmp	ip, r8
 8013dea:	f280 81c8 	bge.w	801417e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 8013dee:	b200      	sxth	r0, r0
 8013df0:	fb0c 3300 	mla	r3, ip, r0, r3
 8013df4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8013df6:	eb04 0803 	add.w	r8, r4, r3
 8013dfa:	5ce3      	ldrb	r3, [r4, r3]
 8013dfc:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8013e00:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8013e04:	2a00      	cmp	r2, #0
 8013e06:	f000 81af 	beq.w	8014168 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8013e0a:	f898 c001 	ldrb.w	ip, [r8, #1]
 8013e0e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8013e12:	940e      	str	r4, [sp, #56]	; 0x38
 8013e14:	0e24      	lsrs	r4, r4, #24
 8013e16:	9415      	str	r4, [sp, #84]	; 0x54
 8013e18:	b179      	cbz	r1, 8013e3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8013e1a:	eb08 0c00 	add.w	ip, r8, r0
 8013e1e:	f818 0000 	ldrb.w	r0, [r8, r0]
 8013e22:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8013e26:	900a      	str	r0, [sp, #40]	; 0x28
 8013e28:	0e00      	lsrs	r0, r0, #24
 8013e2a:	9013      	str	r0, [sp, #76]	; 0x4c
 8013e2c:	f89c 0001 	ldrb.w	r0, [ip, #1]
 8013e30:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8013e34:	900f      	str	r0, [sp, #60]	; 0x3c
 8013e36:	0e00      	lsrs	r0, r0, #24
 8013e38:	9016      	str	r0, [sp, #88]	; 0x58
 8013e3a:	b292      	uxth	r2, r2
 8013e3c:	b289      	uxth	r1, r1
 8013e3e:	fb02 f901 	mul.w	r9, r2, r1
 8013e42:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8013e46:	0112      	lsls	r2, r2, #4
 8013e48:	eba2 0809 	sub.w	r8, r2, r9
 8013e4c:	b289      	uxth	r1, r1
 8013e4e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8013e52:	9815      	ldr	r0, [sp, #84]	; 0x54
 8013e54:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013e56:	fa1f f888 	uxth.w	r8, r8
 8013e5a:	1a52      	subs	r2, r2, r1
 8013e5c:	b292      	uxth	r2, r2
 8013e5e:	fb08 f000 	mul.w	r0, r8, r0
 8013e62:	fb02 000e 	mla	r0, r2, lr, r0
 8013e66:	fb01 0004 	mla	r0, r1, r4, r0
 8013e6a:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8013e6c:	fb09 0004 	mla	r0, r9, r4, r0
 8013e70:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8013e74:	2800      	cmp	r0, #0
 8013e76:	f000 80fa 	beq.w	801406e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8013e7a:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8013e7e:	d01b      	beq.n	8013eb8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8013e80:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8013e84:	fb0e fa0a 	mul.w	sl, lr, sl
 8013e88:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013e8c:	fb0e fe03 	mul.w	lr, lr, r3
 8013e90:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8013e94:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8013e98:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8013e9c:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8013ea0:	4453      	add	r3, sl
 8013ea2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8013ea6:	0a1b      	lsrs	r3, r3, #8
 8013ea8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8013eac:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8013eb0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8013eb4:	ea43 030c 	orr.w	r3, r3, ip
 8013eb8:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8013eba:	2cff      	cmp	r4, #255	; 0xff
 8013ebc:	d021      	beq.n	8013f02 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8013ebe:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013ec0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8013ec4:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8013ec6:	fb04 fb0b 	mul.w	fp, r4, fp
 8013eca:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013ecc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8013ed0:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8013ed2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8013ed6:	fb04 fa0a 	mul.w	sl, r4, sl
 8013eda:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8013ede:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8013ee2:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8013ee6:	44de      	add	lr, fp
 8013ee8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8013eec:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8013ef0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8013ef4:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8013ef8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8013efc:	ea4e 040a 	orr.w	r4, lr, sl
 8013f00:	940e      	str	r4, [sp, #56]	; 0x38
 8013f02:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013f04:	2cff      	cmp	r4, #255	; 0xff
 8013f06:	d021      	beq.n	8013f4c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 8013f08:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013f0a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8013f0e:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013f10:	fb04 fb0b 	mul.w	fp, r4, fp
 8013f14:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013f16:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8013f1a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8013f1c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8013f20:	fb04 fa0a 	mul.w	sl, r4, sl
 8013f24:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8013f28:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8013f2c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8013f30:	44de      	add	lr, fp
 8013f32:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8013f36:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8013f3a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8013f3e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8013f42:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8013f46:	ea4e 040a 	orr.w	r4, lr, sl
 8013f4a:	940a      	str	r4, [sp, #40]	; 0x28
 8013f4c:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8013f4e:	2cff      	cmp	r4, #255	; 0xff
 8013f50:	d021      	beq.n	8013f96 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8013f52:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8013f54:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8013f58:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8013f5a:	fb04 fb0b 	mul.w	fp, r4, fp
 8013f5e:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8013f60:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8013f64:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8013f66:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8013f6a:	fb04 fa0a 	mul.w	sl, r4, sl
 8013f6e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8013f72:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8013f76:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8013f7a:	44de      	add	lr, fp
 8013f7c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8013f80:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8013f84:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8013f88:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8013f8c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8013f90:	ea4e 040a 	orr.w	r4, lr, sl
 8013f94:	940f      	str	r4, [sp, #60]	; 0x3c
 8013f96:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013f98:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8013f9c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8013f9e:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 8013fa2:	fb08 fc0c 	mul.w	ip, r8, ip
 8013fa6:	fb02 cc0e 	mla	ip, r2, lr, ip
 8013faa:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8013fae:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8013fb0:	fb01 cc0e 	mla	ip, r1, lr, ip
 8013fb4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 8013fb8:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8013fba:	fb09 cc0e 	mla	ip, r9, lr, ip
 8013fbe:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 8013fc2:	fb08 f80e 	mul.w	r8, r8, lr
 8013fc6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8013fca:	fb02 8303 	mla	r3, r2, r3, r8
 8013fce:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8013fd0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8013fd2:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8013fd6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8013fd8:	fb01 330a 	mla	r3, r1, sl, r3
 8013fdc:	f402 417f 	and.w	r1, r2, #65280	; 0xff00
 8013fe0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8013fe2:	fb09 3901 	mla	r9, r9, r1, r3
 8013fe6:	4342      	muls	r2, r0
 8013fe8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8013fec:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8013ff0:	883b      	ldrh	r3, [r7, #0]
 8013ff2:	1c50      	adds	r0, r2, #1
 8013ff4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8013ff8:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8013ffc:	ea4c 0c09 	orr.w	ip, ip, r9
 8014000:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 8014004:	1219      	asrs	r1, r3, #8
 8014006:	ea4f 421c 	mov.w	r2, ip, lsr #16
 801400a:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 801400e:	b2c0      	uxtb	r0, r0
 8014010:	fb12 f204 	smulbb	r2, r2, r4
 8014014:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8014018:	fb01 2100 	mla	r1, r1, r0, r2
 801401c:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 8014020:	10da      	asrs	r2, r3, #3
 8014022:	fa5f fc8c 	uxtb.w	ip, ip
 8014026:	00db      	lsls	r3, r3, #3
 8014028:	fb1c fc04 	smulbb	ip, ip, r4
 801402c:	b2db      	uxtb	r3, r3
 801402e:	b289      	uxth	r1, r1
 8014030:	fb03 c300 	mla	r3, r3, r0, ip
 8014034:	fa1f fc83 	uxth.w	ip, r3
 8014038:	1c4b      	adds	r3, r1, #1
 801403a:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801403e:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8014042:	fb1e fe04 	smulbb	lr, lr, r4
 8014046:	f10c 0301 	add.w	r3, ip, #1
 801404a:	fb02 e200 	mla	r2, r2, r0, lr
 801404e:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8014052:	b292      	uxth	r2, r2
 8014054:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8014058:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801405c:	430b      	orrs	r3, r1
 801405e:	1c51      	adds	r1, r2, #1
 8014060:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8014064:	0952      	lsrs	r2, r2, #5
 8014066:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801406a:	4313      	orrs	r3, r2
 801406c:	803b      	strh	r3, [r7, #0]
 801406e:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014070:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8014072:	441a      	add	r2, r3
 8014074:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8014076:	9231      	str	r2, [sp, #196]	; 0xc4
 8014078:	441d      	add	r5, r3
 801407a:	9b1a      	ldr	r3, [sp, #104]	; 0x68
 801407c:	3b01      	subs	r3, #1
 801407e:	3702      	adds	r7, #2
 8014080:	931a      	str	r3, [sp, #104]	; 0x68
 8014082:	e694      	b.n	8013dae <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 8014084:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014086:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 8014088:	441c      	add	r4, r3
 801408a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801408c:	9431      	str	r4, [sp, #196]	; 0xc4
 801408e:	441d      	add	r5, r3
 8014090:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014092:	3b01      	subs	r3, #1
 8014094:	9309      	str	r3, [sp, #36]	; 0x24
 8014096:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8014098:	3302      	adds	r3, #2
 801409a:	930c      	str	r3, [sp, #48]	; 0x30
 801409c:	e666      	b.n	8013d6c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801409e:	d024      	beq.n	80140ea <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fa>
 80140a0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80140a2:	9833      	ldr	r0, [sp, #204]	; 0xcc
 80140a4:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80140a6:	3b01      	subs	r3, #1
 80140a8:	fb00 4003 	mla	r0, r0, r3, r4
 80140ac:	1400      	asrs	r0, r0, #16
 80140ae:	f53f ae7b 	bmi.w	8013da8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80140b2:	3901      	subs	r1, #1
 80140b4:	4288      	cmp	r0, r1
 80140b6:	f6bf ae77 	bge.w	8013da8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80140ba:	9934      	ldr	r1, [sp, #208]	; 0xd0
 80140bc:	fb01 5303 	mla	r3, r1, r3, r5
 80140c0:	141b      	asrs	r3, r3, #16
 80140c2:	f53f ae71 	bmi.w	8013da8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80140c6:	3a01      	subs	r2, #1
 80140c8:	4293      	cmp	r3, r2
 80140ca:	f6bf ae6d 	bge.w	8013da8 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80140ce:	f8dd b024 	ldr.w	fp, [sp, #36]	; 0x24
 80140d2:	f8dd 9030 	ldr.w	r9, [sp, #48]	; 0x30
 80140d6:	f1bb 0f00 	cmp.w	fp, #0
 80140da:	dc70      	bgt.n	80141be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ce>
 80140dc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80140de:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80140e2:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80140e4:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80140e8:	930c      	str	r3, [sp, #48]	; 0x30
 80140ea:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80140ec:	2b00      	cmp	r3, #0
 80140ee:	f340 81be 	ble.w	801446e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77e>
 80140f2:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80140f6:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80140fa:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 80140fe:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014100:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014104:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014108:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801410c:	eef0 6a48 	vmov.f32	s13, s16
 8014110:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014114:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014118:	ee37 8a48 	vsub.f32	s16, s14, s16
 801411c:	edcd 6a31 	vstr	s13, [sp, #196]	; 0xc4
 8014120:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014124:	eef0 6a68 	vmov.f32	s13, s17
 8014128:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801412c:	ee18 2a10 	vmov	r2, s16
 8014130:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014134:	fb92 f3f3 	sdiv	r3, r2, r3
 8014138:	ee18 2a90 	vmov	r2, s17
 801413c:	9333      	str	r3, [sp, #204]	; 0xcc
 801413e:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014140:	fb92 f3f3 	sdiv	r3, r2, r3
 8014144:	9334      	str	r3, [sp, #208]	; 0xd0
 8014146:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8014148:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 801414a:	3b01      	subs	r3, #1
 801414c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014150:	9319      	str	r3, [sp, #100]	; 0x64
 8014152:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014154:	bf08      	it	eq
 8014156:	4613      	moveq	r3, r2
 8014158:	ee16 5a90 	vmov	r5, s13
 801415c:	9309      	str	r3, [sp, #36]	; 0x24
 801415e:	eef0 8a67 	vmov.f32	s17, s15
 8014162:	eeb0 8a47 	vmov.f32	s16, s14
 8014166:	e5f3      	b.n	8013d50 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8014168:	2900      	cmp	r1, #0
 801416a:	f43f ae66 	beq.w	8013e3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801416e:	f818 0000 	ldrb.w	r0, [r8, r0]
 8014172:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8014176:	900a      	str	r0, [sp, #40]	; 0x28
 8014178:	0e00      	lsrs	r0, r0, #24
 801417a:	9013      	str	r0, [sp, #76]	; 0x4c
 801417c:	e65d      	b.n	8013e3a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 801417e:	f113 0801 	adds.w	r8, r3, #1
 8014182:	f53f af74 	bmi.w	801406e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8014186:	4540      	cmp	r0, r8
 8014188:	f6ff af71 	blt.w	801406e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801418c:	f11c 0801 	adds.w	r8, ip, #1
 8014190:	f53f af6d 	bmi.w	801406e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 8014194:	45c6      	cmp	lr, r8
 8014196:	f6ff af6a 	blt.w	801406e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 801419a:	9c1c      	ldr	r4, [sp, #112]	; 0x70
 801419c:	9302      	str	r3, [sp, #8]
 801419e:	b200      	sxth	r0, r0
 80141a0:	fa0f f38e 	sxth.w	r3, lr
 80141a4:	e9cd 1405 	strd	r1, r4, [sp, #20]
 80141a8:	e9cd c203 	strd	ip, r2, [sp, #12]
 80141ac:	9301      	str	r3, [sp, #4]
 80141ae:	9000      	str	r0, [sp, #0]
 80141b0:	4633      	mov	r3, r6
 80141b2:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80141b4:	981d      	ldr	r0, [sp, #116]	; 0x74
 80141b6:	4639      	mov	r1, r7
 80141b8:	f7ff fc32 	bl	8013a20 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 80141bc:	e757      	b.n	801406e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80141be:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80141c0:	9c31      	ldr	r4, [sp, #196]	; 0xc4
 80141c2:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80141c6:	9b38      	ldr	r3, [sp, #224]	; 0xe0
 80141c8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80141cc:	1427      	asrs	r7, r4, #16
 80141ce:	142b      	asrs	r3, r5, #16
 80141d0:	fb01 7303 	mla	r3, r1, r3, r7
 80141d4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80141d6:	18e7      	adds	r7, r4, r3
 80141d8:	5ce3      	ldrb	r3, [r4, r3]
 80141da:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80141de:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80141e2:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80141e6:	2a00      	cmp	r2, #0
 80141e8:	f000 8137 	beq.w	801445a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76a>
 80141ec:	f897 e001 	ldrb.w	lr, [r7, #1]
 80141f0:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 80141f4:	9410      	str	r4, [sp, #64]	; 0x40
 80141f6:	0e24      	lsrs	r4, r4, #24
 80141f8:	9417      	str	r4, [sp, #92]	; 0x5c
 80141fa:	b170      	cbz	r0, 801421a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 80141fc:	eb07 0e01 	add.w	lr, r7, r1
 8014200:	5c79      	ldrb	r1, [r7, r1]
 8014202:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014206:	910b      	str	r1, [sp, #44]	; 0x2c
 8014208:	0e09      	lsrs	r1, r1, #24
 801420a:	9114      	str	r1, [sp, #80]	; 0x50
 801420c:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8014210:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014214:	9111      	str	r1, [sp, #68]	; 0x44
 8014216:	0e09      	lsrs	r1, r1, #24
 8014218:	9118      	str	r1, [sp, #96]	; 0x60
 801421a:	b292      	uxth	r2, r2
 801421c:	b280      	uxth	r0, r0
 801421e:	fb02 f800 	mul.w	r8, r2, r0
 8014222:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8014226:	0112      	lsls	r2, r2, #4
 8014228:	eba2 0e08 	sub.w	lr, r2, r8
 801422c:	b280      	uxth	r0, r0
 801422e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8014232:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8014234:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014236:	fa1f fe8e 	uxth.w	lr, lr
 801423a:	1a12      	subs	r2, r2, r0
 801423c:	b292      	uxth	r2, r2
 801423e:	fb0e f101 	mul.w	r1, lr, r1
 8014242:	fb02 110c 	mla	r1, r2, ip, r1
 8014246:	fb00 1104 	mla	r1, r0, r4, r1
 801424a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801424c:	fb08 1104 	mla	r1, r8, r4, r1
 8014250:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8014254:	2900      	cmp	r1, #0
 8014256:	f000 80f5 	beq.w	8014444 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 801425a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801425e:	d019      	beq.n	8014294 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 8014260:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8014264:	fb0c fa0a 	mul.w	sl, ip, sl
 8014268:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801426c:	fb0c fc03 	mul.w	ip, ip, r3
 8014270:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8014274:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014278:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801427c:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8014280:	4453      	add	r3, sl
 8014282:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8014286:	0a1b      	lsrs	r3, r3, #8
 8014288:	0a3f      	lsrs	r7, r7, #8
 801428a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801428e:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8014292:	433b      	orrs	r3, r7
 8014294:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8014296:	2cff      	cmp	r4, #255	; 0xff
 8014298:	d020      	beq.n	80142dc <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 801429a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801429c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80142a0:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80142a2:	4367      	muls	r7, r4
 80142a4:	9c10      	ldr	r4, [sp, #64]	; 0x40
 80142a6:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80142aa:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80142ac:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80142b0:	fb04 fa0a 	mul.w	sl, r4, sl
 80142b4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80142b8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80142bc:	44bc      	add	ip, r7
 80142be:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80142c2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80142c6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80142ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80142ce:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80142d2:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80142d6:	ea4c 040a 	orr.w	r4, ip, sl
 80142da:	9410      	str	r4, [sp, #64]	; 0x40
 80142dc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80142de:	2cff      	cmp	r4, #255	; 0xff
 80142e0:	d020      	beq.n	8014324 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80142e2:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80142e4:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 80142e8:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80142ea:	4367      	muls	r7, r4
 80142ec:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80142ee:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 80142f2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 80142f4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80142f8:	fb04 fa0a 	mul.w	sl, r4, sl
 80142fc:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014300:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014304:	44bc      	add	ip, r7
 8014306:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801430a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801430e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014312:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014316:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801431a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801431e:	ea4c 040a 	orr.w	r4, ip, sl
 8014322:	940b      	str	r4, [sp, #44]	; 0x2c
 8014324:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8014326:	2cff      	cmp	r4, #255	; 0xff
 8014328:	d020      	beq.n	801436c <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x67c>
 801432a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 801432c:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014330:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8014332:	4367      	muls	r7, r4
 8014334:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014336:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801433a:	9c18      	ldr	r4, [sp, #96]	; 0x60
 801433c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014340:	fb04 fa0a 	mul.w	sl, r4, sl
 8014344:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014348:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801434c:	44bc      	add	ip, r7
 801434e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8014352:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014356:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801435a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801435e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014362:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014366:	ea4c 040a 	orr.w	r4, ip, sl
 801436a:	9411      	str	r4, [sp, #68]	; 0x44
 801436c:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801436e:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014372:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8014374:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8014378:	fb0e f707 	mul.w	r7, lr, r7
 801437c:	fb02 770c 	mla	r7, r2, ip, r7
 8014380:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8014384:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014386:	fb00 770c 	mla	r7, r0, ip, r7
 801438a:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 801438e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014390:	fb08 770c 	mla	r7, r8, ip, r7
 8014394:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8014398:	fb0e fe0c 	mul.w	lr, lr, ip
 801439c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80143a0:	fb02 e303 	mla	r3, r2, r3, lr
 80143a4:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80143a6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80143a8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80143ac:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80143ae:	fb00 330a 	mla	r3, r0, sl, r3
 80143b2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80143b6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80143ba:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 80143bc:	f8b9 0000 	ldrh.w	r0, [r9]
 80143c0:	434b      	muls	r3, r1
 80143c2:	0a3f      	lsrs	r7, r7, #8
 80143c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80143c8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80143cc:	1c59      	adds	r1, r3, #1
 80143ce:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80143d2:	ea47 070c 	orr.w	r7, r7, ip
 80143d6:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80143da:	1202      	asrs	r2, r0, #8
 80143dc:	0c3b      	lsrs	r3, r7, #16
 80143de:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 80143e2:	b2c9      	uxtb	r1, r1
 80143e4:	fb13 f304 	smulbb	r3, r3, r4
 80143e8:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 80143ec:	fb02 3201 	mla	r2, r2, r1, r3
 80143f0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 80143f4:	10c3      	asrs	r3, r0, #3
 80143f6:	b2ff      	uxtb	r7, r7
 80143f8:	00c0      	lsls	r0, r0, #3
 80143fa:	b292      	uxth	r2, r2
 80143fc:	fb1c fc04 	smulbb	ip, ip, r4
 8014400:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8014404:	b2c0      	uxtb	r0, r0
 8014406:	fb17 f704 	smulbb	r7, r7, r4
 801440a:	fb03 c301 	mla	r3, r3, r1, ip
 801440e:	fb00 7001 	mla	r0, r0, r1, r7
 8014412:	f102 0c01 	add.w	ip, r2, #1
 8014416:	b280      	uxth	r0, r0
 8014418:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 801441c:	f402 4c78 	and.w	ip, r2, #63488	; 0xf800
 8014420:	1c42      	adds	r2, r0, #1
 8014422:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8014426:	b29b      	uxth	r3, r3
 8014428:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801442c:	ea42 020c 	orr.w	r2, r2, ip
 8014430:	f103 0c01 	add.w	ip, r3, #1
 8014434:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8014438:	095b      	lsrs	r3, r3, #5
 801443a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801443e:	431a      	orrs	r2, r3
 8014440:	f8a9 2000 	strh.w	r2, [r9]
 8014444:	9b33      	ldr	r3, [sp, #204]	; 0xcc
 8014446:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8014448:	441a      	add	r2, r3
 801444a:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801444c:	9231      	str	r2, [sp, #196]	; 0xc4
 801444e:	f109 0902 	add.w	r9, r9, #2
 8014452:	441d      	add	r5, r3
 8014454:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014458:	e63d      	b.n	80140d6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801445a:	2800      	cmp	r0, #0
 801445c:	f43f aedd 	beq.w	801421a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 8014460:	5c79      	ldrb	r1, [r7, r1]
 8014462:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014466:	910b      	str	r1, [sp, #44]	; 0x2c
 8014468:	0e09      	lsrs	r1, r1, #24
 801446a:	9114      	str	r1, [sp, #80]	; 0x50
 801446c:	e6d5      	b.n	801421a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52a>
 801446e:	b01f      	add	sp, #124	; 0x7c
 8014470:	ecbd 8b08 	vpop	{d8-d11}
 8014474:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08014478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 8014478:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801447c:	880e      	ldrh	r6, [r1, #0]
 801447e:	b085      	sub	sp, #20
 8014480:	ea4f 2826 	mov.w	r8, r6, asr #8
 8014484:	e9dd 5410 	ldrd	r5, r4, [sp, #64]	; 0x40
 8014488:	4691      	mov	r9, r2
 801448a:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 801448e:	f9bd e03c 	ldrsh.w	lr, [sp, #60]	; 0x3c
 8014492:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8014496:	f89d 704c 	ldrb.w	r7, [sp, #76]	; 0x4c
 801449a:	f008 02f8 	and.w	r2, r8, #248	; 0xf8
 801449e:	ea4f 08e6 	mov.w	r8, r6, asr #3
 80144a2:	9200      	str	r2, [sp, #0]
 80144a4:	00f6      	lsls	r6, r6, #3
 80144a6:	f008 02fc 	and.w	r2, r8, #252	; 0xfc
 80144aa:	9201      	str	r2, [sp, #4]
 80144ac:	2c00      	cmp	r4, #0
 80144ae:	b2f2      	uxtb	r2, r6
 80144b0:	fb04 560c 	mla	r6, r4, ip, r5
 80144b4:	9202      	str	r2, [sp, #8]
 80144b6:	eb09 0806 	add.w	r8, r9, r6
 80144ba:	db3f      	blt.n	801453c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 80144bc:	45a6      	cmp	lr, r4
 80144be:	dd3d      	ble.n	801453c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc4>
 80144c0:	2d00      	cmp	r5, #0
 80144c2:	db39      	blt.n	8014538 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 80144c4:	45ac      	cmp	ip, r5
 80144c6:	dd37      	ble.n	8014538 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xc0>
 80144c8:	f819 2006 	ldrb.w	r2, [r9, r6]
 80144cc:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80144d0:	1c6e      	adds	r6, r5, #1
 80144d2:	d436      	bmi.n	8014542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 80144d4:	45b4      	cmp	ip, r6
 80144d6:	dd34      	ble.n	8014542 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xca>
 80144d8:	b3a8      	cbz	r0, 8014546 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xce>
 80144da:	f898 6001 	ldrb.w	r6, [r8, #1]
 80144de:	f853 6026 	ldr.w	r6, [r3, r6, lsl #2]
 80144e2:	3401      	adds	r4, #1
 80144e4:	d433      	bmi.n	801454e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80144e6:	45a6      	cmp	lr, r4
 80144e8:	dd31      	ble.n	801454e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd6>
 80144ea:	b39f      	cbz	r7, 8014554 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xdc>
 80144ec:	2d00      	cmp	r5, #0
 80144ee:	eb08 0e0c 	add.w	lr, r8, ip
 80144f2:	db2a      	blt.n	801454a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 80144f4:	45ac      	cmp	ip, r5
 80144f6:	dd28      	ble.n	801454a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xd2>
 80144f8:	f818 400c 	ldrb.w	r4, [r8, ip]
 80144fc:	f853 4024 	ldr.w	r4, [r3, r4, lsl #2]
 8014500:	3501      	adds	r5, #1
 8014502:	d42a      	bmi.n	801455a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8014504:	45ac      	cmp	ip, r5
 8014506:	dd28      	ble.n	801455a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe2>
 8014508:	b348      	cbz	r0, 801455e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xe6>
 801450a:	f89e 5001 	ldrb.w	r5, [lr, #1]
 801450e:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8014512:	280f      	cmp	r0, #15
 8014514:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8014518:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 801451c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8014520:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8014524:	d801      	bhi.n	801452a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb2>
 8014526:	2f0f      	cmp	r7, #15
 8014528:	d91b      	bls.n	8014562 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xea>
 801452a:	4b7d      	ldr	r3, [pc, #500]	; (8014720 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2a8>)
 801452c:	4a7d      	ldr	r2, [pc, #500]	; (8014724 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2ac>)
 801452e:	487e      	ldr	r0, [pc, #504]	; (8014728 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x2b0>)
 8014530:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8014534:	f004 ff84 	bl	8019440 <__assert_func>
 8014538:	2200      	movs	r2, #0
 801453a:	e7c9      	b.n	80144d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x58>
 801453c:	2600      	movs	r6, #0
 801453e:	4632      	mov	r2, r6
 8014540:	e7cf      	b.n	80144e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8014542:	2600      	movs	r6, #0
 8014544:	e7cd      	b.n	80144e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 8014546:	4606      	mov	r6, r0
 8014548:	e7cb      	b.n	80144e2 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x6a>
 801454a:	2400      	movs	r4, #0
 801454c:	e7d8      	b.n	8014500 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x88>
 801454e:	2300      	movs	r3, #0
 8014550:	461c      	mov	r4, r3
 8014552:	e7de      	b.n	8014512 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8014554:	463b      	mov	r3, r7
 8014556:	463c      	mov	r4, r7
 8014558:	e7db      	b.n	8014512 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801455a:	2300      	movs	r3, #0
 801455c:	e7d9      	b.n	8014512 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 801455e:	4603      	mov	r3, r0
 8014560:	e7d7      	b.n	8014512 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x9a>
 8014562:	b280      	uxth	r0, r0
 8014564:	b2bf      	uxth	r7, r7
 8014566:	fb00 fe07 	mul.w	lr, r0, r7
 801456a:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 801456e:	0100      	lsls	r0, r0, #4
 8014570:	eba0 0c0e 	sub.w	ip, r0, lr
 8014574:	b2bf      	uxth	r7, r7
 8014576:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 801457a:	fa1f fc8c 	uxth.w	ip, ip
 801457e:	1bed      	subs	r5, r5, r7
 8014580:	b2ad      	uxth	r5, r5
 8014582:	fb0c f00a 	mul.w	r0, ip, sl
 8014586:	fb05 000b 	mla	r0, r5, fp, r0
 801458a:	fb07 0009 	mla	r0, r7, r9, r0
 801458e:	fb0e 0008 	mla	r0, lr, r8, r0
 8014592:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8014596:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 801459a:	9003      	str	r0, [sp, #12]
 801459c:	d018      	beq.n	80145d0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x158>
 801459e:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 80145a2:	fb0b f000 	mul.w	r0, fp, r0
 80145a6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80145aa:	fb0b fb02 	mul.w	fp, fp, r2
 80145ae:	0a02      	lsrs	r2, r0, #8
 80145b0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80145b4:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80145b8:	4402      	add	r2, r0
 80145ba:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80145be:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80145c2:	0a12      	lsrs	r2, r2, #8
 80145c4:	0a00      	lsrs	r0, r0, #8
 80145c6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80145ca:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80145ce:	4302      	orrs	r2, r0
 80145d0:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80145d4:	d019      	beq.n	801460a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x192>
 80145d6:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80145da:	fb0a fb0b 	mul.w	fp, sl, fp
 80145de:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80145e2:	fb0a fa06 	mul.w	sl, sl, r6
 80145e6:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80145ea:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80145ee:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80145f2:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80145f6:	445e      	add	r6, fp
 80145f8:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80145fc:	0a36      	lsrs	r6, r6, #8
 80145fe:	0a00      	lsrs	r0, r0, #8
 8014600:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8014604:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014608:	4306      	orrs	r6, r0
 801460a:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801460e:	d019      	beq.n	8014644 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x1cc>
 8014610:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8014614:	fb09 fa0a 	mul.w	sl, r9, sl
 8014618:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 801461c:	fb09 f904 	mul.w	r9, r9, r4
 8014620:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8014624:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8014628:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 801462c:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8014630:	4454      	add	r4, sl
 8014632:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8014636:	0a24      	lsrs	r4, r4, #8
 8014638:	0a00      	lsrs	r0, r0, #8
 801463a:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 801463e:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8014642:	4304      	orrs	r4, r0
 8014644:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8014648:	d019      	beq.n	801467e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x206>
 801464a:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 801464e:	fb08 f909 	mul.w	r9, r8, r9
 8014652:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014656:	fb08 f803 	mul.w	r8, r8, r3
 801465a:	ea4f 2319 	mov.w	r3, r9, lsr #8
 801465e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014662:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8014666:	f508 7080 	add.w	r0, r8, #256	; 0x100
 801466a:	444b      	add	r3, r9
 801466c:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8014670:	0a1b      	lsrs	r3, r3, #8
 8014672:	0a00      	lsrs	r0, r0, #8
 8014674:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014678:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801467c:	4303      	orrs	r3, r0
 801467e:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8014682:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8014686:	fb0c f808 	mul.w	r8, ip, r8
 801468a:	fb05 8800 	mla	r8, r5, r0, r8
 801468e:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8014692:	fb07 8800 	mla	r8, r7, r0, r8
 8014696:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 801469a:	fb0e 8000 	mla	r0, lr, r0, r8
 801469e:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80146a2:	fb0c f606 	mul.w	r6, ip, r6
 80146a6:	0a00      	lsrs	r0, r0, #8
 80146a8:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80146ac:	fb05 6202 	mla	r2, r5, r2, r6
 80146b0:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 80146b4:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 80146b8:	fb07 2700 	mla	r7, r7, r0, r2
 80146bc:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80146c0:	9b03      	ldr	r3, [sp, #12]
 80146c2:	9d00      	ldr	r5, [sp, #0]
 80146c4:	9a02      	ldr	r2, [sp, #8]
 80146c6:	fb0e 7000 	mla	r0, lr, r0, r7
 80146ca:	43dc      	mvns	r4, r3
 80146cc:	9b01      	ldr	r3, [sp, #4]
 80146ce:	b2e4      	uxtb	r4, r4
 80146d0:	0a00      	lsrs	r0, r0, #8
 80146d2:	4363      	muls	r3, r4
 80146d4:	4365      	muls	r5, r4
 80146d6:	4362      	muls	r2, r4
 80146d8:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80146dc:	ea48 0000 	orr.w	r0, r8, r0
 80146e0:	4614      	mov	r4, r2
 80146e2:	1c5e      	adds	r6, r3, #1
 80146e4:	1c6a      	adds	r2, r5, #1
 80146e6:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 80146ea:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 80146ee:	0a03      	lsrs	r3, r0, #8
 80146f0:	0c02      	lsrs	r2, r0, #16
 80146f2:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 80146f6:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 80146fa:	00db      	lsls	r3, r3, #3
 80146fc:	0212      	lsls	r2, r2, #8
 80146fe:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8014702:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014706:	4313      	orrs	r3, r2
 8014708:	1c62      	adds	r2, r4, #1
 801470a:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 801470e:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8014712:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8014716:	4318      	orrs	r0, r3
 8014718:	8008      	strh	r0, [r1, #0]
 801471a:	b005      	add	sp, #20
 801471c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014720:	0801ce3e 	.word	0x0801ce3e
 8014724:	0801d40a 	.word	0x0801d40a
 8014728:	0801cec2 	.word	0x0801cec2

0801472c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801472c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014730:	ed2d 8b08 	vpush	{d8-d11}
 8014734:	b09b      	sub	sp, #108	; 0x6c
 8014736:	eeb0 aa40 	vmov.f32	s20, s0
 801473a:	9218      	str	r2, [sp, #96]	; 0x60
 801473c:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 801473e:	9116      	str	r1, [sp, #88]	; 0x58
 8014740:	9307      	str	r3, [sp, #28]
 8014742:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8014746:	9019      	str	r0, [sp, #100]	; 0x64
 8014748:	6850      	ldr	r0, [r2, #4]
 801474a:	6812      	ldr	r2, [r2, #0]
 801474c:	9d2e      	ldr	r5, [sp, #184]	; 0xb8
 801474e:	fb00 1303 	mla	r3, r0, r3, r1
 8014752:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8014756:	930a      	str	r3, [sp, #40]	; 0x28
 8014758:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 801475a:	681b      	ldr	r3, [r3, #0]
 801475c:	930f      	str	r3, [sp, #60]	; 0x3c
 801475e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8014760:	685e      	ldr	r6, [r3, #4]
 8014762:	eef0 9a60 	vmov.f32	s19, s1
 8014766:	eeb0 9a41 	vmov.f32	s18, s2
 801476a:	eeb0 8a62 	vmov.f32	s16, s5
 801476e:	eef0 8a43 	vmov.f32	s17, s6
 8014772:	eef0 ba44 	vmov.f32	s23, s8
 8014776:	eeb0 ba64 	vmov.f32	s22, s9
 801477a:	eef0 aa45 	vmov.f32	s21, s10
 801477e:	3604      	adds	r6, #4
 8014780:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014782:	2b00      	cmp	r3, #0
 8014784:	dc03      	bgt.n	801478e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x62>
 8014786:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8014788:	2b00      	cmp	r3, #0
 801478a:	f340 8373 	ble.w	8014e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 801478e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8014790:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014794:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8014798:	1e48      	subs	r0, r1, #1
 801479a:	1e57      	subs	r7, r2, #1
 801479c:	9b07      	ldr	r3, [sp, #28]
 801479e:	2b00      	cmp	r3, #0
 80147a0:	f340 8190 	ble.w	8014ac4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80147a4:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80147a6:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80147aa:	ea4f 4325 	mov.w	r3, r5, asr #16
 80147ae:	d406      	bmi.n	80147be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80147b0:	4584      	cmp	ip, r0
 80147b2:	da04      	bge.n	80147be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80147b4:	2b00      	cmp	r3, #0
 80147b6:	db02      	blt.n	80147be <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80147b8:	42bb      	cmp	r3, r7
 80147ba:	f2c0 8184 	blt.w	8014ac6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39a>
 80147be:	f11c 0c01 	adds.w	ip, ip, #1
 80147c2:	f100 8172 	bmi.w	8014aaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80147c6:	4561      	cmp	r1, ip
 80147c8:	f2c0 816f 	blt.w	8014aaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80147cc:	3301      	adds	r3, #1
 80147ce:	f100 816c 	bmi.w	8014aaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80147d2:	429a      	cmp	r2, r3
 80147d4:	f2c0 8169 	blt.w	8014aaa <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37e>
 80147d8:	9b07      	ldr	r3, [sp, #28]
 80147da:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80147dc:	9317      	str	r3, [sp, #92]	; 0x5c
 80147de:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80147e0:	2b00      	cmp	r3, #0
 80147e2:	f340 818e 	ble.w	8014b02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 80147e6:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80147e8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80147ec:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80147ee:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 80147f2:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80147f4:	141b      	asrs	r3, r3, #16
 80147f6:	ea4f 4c25 	mov.w	ip, r5, asr #16
 80147fa:	f3c5 3003 	ubfx	r0, r5, #12, #4
 80147fe:	f100 81d1 	bmi.w	8014ba4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8014802:	f101 38ff 	add.w	r8, r1, #4294967295
 8014806:	4543      	cmp	r3, r8
 8014808:	f280 81cc 	bge.w	8014ba4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801480c:	f1bc 0f00 	cmp.w	ip, #0
 8014810:	f2c0 81c8 	blt.w	8014ba4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8014814:	f10e 38ff 	add.w	r8, lr, #4294967295
 8014818:	45c4      	cmp	ip, r8
 801481a:	f280 81c3 	bge.w	8014ba4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 801481e:	b209      	sxth	r1, r1
 8014820:	fb0c 3301 	mla	r3, ip, r1, r3
 8014824:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8014826:	eb04 0803 	add.w	r8, r4, r3
 801482a:	5ce3      	ldrb	r3, [r4, r3]
 801482c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8014830:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8014834:	2a00      	cmp	r2, #0
 8014836:	f000 81aa 	beq.w	8014b8e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x462>
 801483a:	f898 c001 	ldrb.w	ip, [r8, #1]
 801483e:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8014842:	940b      	str	r4, [sp, #44]	; 0x2c
 8014844:	0e24      	lsrs	r4, r4, #24
 8014846:	9412      	str	r4, [sp, #72]	; 0x48
 8014848:	b178      	cbz	r0, 801486a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 801484a:	eb08 0c01 	add.w	ip, r8, r1
 801484e:	f818 1001 	ldrb.w	r1, [r8, r1]
 8014852:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014856:	9108      	str	r1, [sp, #32]
 8014858:	0e09      	lsrs	r1, r1, #24
 801485a:	9110      	str	r1, [sp, #64]	; 0x40
 801485c:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8014860:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014864:	910c      	str	r1, [sp, #48]	; 0x30
 8014866:	0e09      	lsrs	r1, r1, #24
 8014868:	9113      	str	r1, [sp, #76]	; 0x4c
 801486a:	b292      	uxth	r2, r2
 801486c:	b280      	uxth	r0, r0
 801486e:	fb02 f900 	mul.w	r9, r2, r0
 8014872:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8014876:	0112      	lsls	r2, r2, #4
 8014878:	eba2 0809 	sub.w	r8, r2, r9
 801487c:	b280      	uxth	r0, r0
 801487e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8014882:	9912      	ldr	r1, [sp, #72]	; 0x48
 8014884:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014886:	fa1f f888 	uxth.w	r8, r8
 801488a:	1a12      	subs	r2, r2, r0
 801488c:	b292      	uxth	r2, r2
 801488e:	fb08 f101 	mul.w	r1, r8, r1
 8014892:	fb02 110e 	mla	r1, r2, lr, r1
 8014896:	fb00 1104 	mla	r1, r0, r4, r1
 801489a:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801489c:	fb09 1104 	mla	r1, r9, r4, r1
 80148a0:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80148a4:	2900      	cmp	r1, #0
 80148a6:	f000 80f5 	beq.w	8014a94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80148aa:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80148ae:	d01b      	beq.n	80148e8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1bc>
 80148b0:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 80148b4:	fb0e fa0a 	mul.w	sl, lr, sl
 80148b8:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80148bc:	fb0e fe03 	mul.w	lr, lr, r3
 80148c0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80148c4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80148c8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80148cc:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80148d0:	4453      	add	r3, sl
 80148d2:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80148d6:	0a1b      	lsrs	r3, r3, #8
 80148d8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80148dc:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80148e0:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80148e4:	ea43 030c 	orr.w	r3, r3, ip
 80148e8:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80148ea:	2cff      	cmp	r4, #255	; 0xff
 80148ec:	d021      	beq.n	8014932 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 80148ee:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80148f0:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 80148f4:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80148f6:	fb04 fb0b 	mul.w	fp, r4, fp
 80148fa:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80148fc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014900:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8014902:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8014906:	fb04 fa0a 	mul.w	sl, r4, sl
 801490a:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801490e:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8014912:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8014916:	44de      	add	lr, fp
 8014918:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 801491c:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8014920:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014924:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014928:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801492c:	ea4e 040a 	orr.w	r4, lr, sl
 8014930:	940b      	str	r4, [sp, #44]	; 0x2c
 8014932:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014934:	2cff      	cmp	r4, #255	; 0xff
 8014936:	d021      	beq.n	801497c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 8014938:	9c08      	ldr	r4, [sp, #32]
 801493a:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 801493e:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8014940:	fb04 fb0b 	mul.w	fp, r4, fp
 8014944:	9c08      	ldr	r4, [sp, #32]
 8014946:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 801494a:	9c10      	ldr	r4, [sp, #64]	; 0x40
 801494c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8014950:	fb04 fa0a 	mul.w	sl, r4, sl
 8014954:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014958:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801495c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8014960:	44de      	add	lr, fp
 8014962:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8014966:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801496a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801496e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8014972:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014976:	ea4e 040a 	orr.w	r4, lr, sl
 801497a:	9408      	str	r4, [sp, #32]
 801497c:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801497e:	2cff      	cmp	r4, #255	; 0xff
 8014980:	d021      	beq.n	80149c6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8014982:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014984:	f004 1bff 	and.w	fp, r4, #16711935	; 0xff00ff
 8014988:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 801498a:	fb04 fb0b 	mul.w	fp, r4, fp
 801498e:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8014990:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014994:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 8014996:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801499a:	fb04 fa0a 	mul.w	sl, r4, sl
 801499e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80149a2:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80149a6:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80149aa:	44de      	add	lr, fp
 80149ac:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80149b0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80149b4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80149b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80149bc:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80149c0:	ea4e 040a 	orr.w	r4, lr, sl
 80149c4:	940c      	str	r4, [sp, #48]	; 0x30
 80149c6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80149c8:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 80149cc:	9c08      	ldr	r4, [sp, #32]
 80149ce:	f003 1eff 	and.w	lr, r3, #16711935	; 0xff00ff
 80149d2:	fb08 fc0c 	mul.w	ip, r8, ip
 80149d6:	fb02 cc0e 	mla	ip, r2, lr, ip
 80149da:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80149de:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80149e0:	fb00 cc0e 	mla	ip, r0, lr, ip
 80149e4:	f004 1eff 	and.w	lr, r4, #16711935	; 0xff00ff
 80149e8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80149ea:	fb09 cc0e 	mla	ip, r9, lr, ip
 80149ee:	f404 4e7f 	and.w	lr, r4, #65280	; 0xff00
 80149f2:	fb08 f80e 	mul.w	r8, r8, lr
 80149f6:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80149fa:	fb02 8303 	mla	r3, r2, r3, r8
 80149fe:	9a08      	ldr	r2, [sp, #32]
 8014a00:	f8b7 8000 	ldrh.w	r8, [r7]
 8014a04:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 8014a08:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014a0a:	fb00 330a 	mla	r3, r0, sl, r3
 8014a0e:	f402 407f 	and.w	r0, r2, #65280	; 0xff00
 8014a12:	fb09 3900 	mla	r9, r9, r0, r3
 8014a16:	43c9      	mvns	r1, r1
 8014a18:	ea4f 2228 	mov.w	r2, r8, asr #8
 8014a1c:	fa5f fe81 	uxtb.w	lr, r1
 8014a20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014a24:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8014a28:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8014a2c:	fb02 f20e 	mul.w	r2, r2, lr
 8014a30:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014a34:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8014a38:	ea4c 0c09 	orr.w	ip, ip, r9
 8014a3c:	1c53      	adds	r3, r2, #1
 8014a3e:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8014a42:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8014a46:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8014a4a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8014a4e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8014a52:	4a63      	ldr	r2, [pc, #396]	; (8014be0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>)
 8014a54:	fb00 f00e 	mul.w	r0, r0, lr
 8014a58:	b2db      	uxtb	r3, r3
 8014a5a:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8014a5e:	1c43      	adds	r3, r0, #1
 8014a60:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8014a64:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8014a68:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8014a6c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8014a70:	b2c9      	uxtb	r1, r1
 8014a72:	00db      	lsls	r3, r3, #3
 8014a74:	fb01 f10e 	mul.w	r1, r1, lr
 8014a78:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014a7c:	4313      	orrs	r3, r2
 8014a7e:	1c4a      	adds	r2, r1, #1
 8014a80:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014a84:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8014a88:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8014a8c:	ea4c 0c03 	orr.w	ip, ip, r3
 8014a90:	f8a7 c000 	strh.w	ip, [r7]
 8014a94:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8014a96:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014a98:	441a      	add	r2, r3
 8014a9a:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014a9c:	922d      	str	r2, [sp, #180]	; 0xb4
 8014a9e:	441d      	add	r5, r3
 8014aa0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8014aa2:	3b01      	subs	r3, #1
 8014aa4:	3702      	adds	r7, #2
 8014aa6:	9317      	str	r3, [sp, #92]	; 0x5c
 8014aa8:	e699      	b.n	80147de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8014aaa:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8014aac:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8014aae:	441c      	add	r4, r3
 8014ab0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014ab2:	942d      	str	r4, [sp, #180]	; 0xb4
 8014ab4:	441d      	add	r5, r3
 8014ab6:	9b07      	ldr	r3, [sp, #28]
 8014ab8:	3b01      	subs	r3, #1
 8014aba:	9307      	str	r3, [sp, #28]
 8014abc:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014abe:	3302      	adds	r3, #2
 8014ac0:	930a      	str	r3, [sp, #40]	; 0x28
 8014ac2:	e66b      	b.n	801479c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8014ac4:	d024      	beq.n	8014b10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e4>
 8014ac6:	9b07      	ldr	r3, [sp, #28]
 8014ac8:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8014aca:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8014acc:	3b01      	subs	r3, #1
 8014ace:	fb00 4003 	mla	r0, r0, r3, r4
 8014ad2:	1400      	asrs	r0, r0, #16
 8014ad4:	f53f ae80 	bmi.w	80147d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8014ad8:	3901      	subs	r1, #1
 8014ada:	4288      	cmp	r0, r1
 8014adc:	f6bf ae7c 	bge.w	80147d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8014ae0:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8014ae2:	fb01 5303 	mla	r3, r1, r3, r5
 8014ae6:	141b      	asrs	r3, r3, #16
 8014ae8:	f53f ae76 	bmi.w	80147d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8014aec:	3a01      	subs	r2, #1
 8014aee:	4293      	cmp	r3, r2
 8014af0:	f6bf ae72 	bge.w	80147d8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8014af4:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8014af8:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8014afc:	f1bb 0f00 	cmp.w	fp, #0
 8014b00:	dc70      	bgt.n	8014be4 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b8>
 8014b02:	9b07      	ldr	r3, [sp, #28]
 8014b04:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8014b08:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014b0a:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8014b0e:	930a      	str	r3, [sp, #40]	; 0x28
 8014b10:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014b12:	2b00      	cmp	r3, #0
 8014b14:	f340 81ae 	ble.w	8014e74 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x748>
 8014b18:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8014b1c:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8014b20:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8014b24:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014b26:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8014b2a:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8014b2e:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8014b32:	eef0 6a48 	vmov.f32	s13, s16
 8014b36:	ee69 7a27 	vmul.f32	s15, s18, s15
 8014b3a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b3e:	ee37 8a48 	vsub.f32	s16, s14, s16
 8014b42:	edcd 6a2d 	vstr	s13, [sp, #180]	; 0xb4
 8014b46:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8014b4a:	eef0 6a68 	vmov.f32	s13, s17
 8014b4e:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8014b52:	ee18 2a10 	vmov	r2, s16
 8014b56:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8014b5a:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b5e:	ee18 2a90 	vmov	r2, s17
 8014b62:	932f      	str	r3, [sp, #188]	; 0xbc
 8014b64:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014b66:	fb92 f3f3 	sdiv	r3, r2, r3
 8014b6a:	9330      	str	r3, [sp, #192]	; 0xc0
 8014b6c:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8014b6e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8014b70:	3b01      	subs	r3, #1
 8014b72:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8014b76:	9316      	str	r3, [sp, #88]	; 0x58
 8014b78:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8014b7a:	bf08      	it	eq
 8014b7c:	4613      	moveq	r3, r2
 8014b7e:	ee16 5a90 	vmov	r5, s13
 8014b82:	9307      	str	r3, [sp, #28]
 8014b84:	eef0 8a67 	vmov.f32	s17, s15
 8014b88:	eeb0 8a47 	vmov.f32	s16, s14
 8014b8c:	e5f8      	b.n	8014780 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8014b8e:	2800      	cmp	r0, #0
 8014b90:	f43f ae6b 	beq.w	801486a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014b94:	f818 1001 	ldrb.w	r1, [r8, r1]
 8014b98:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014b9c:	9108      	str	r1, [sp, #32]
 8014b9e:	0e09      	lsrs	r1, r1, #24
 8014ba0:	9110      	str	r1, [sp, #64]	; 0x40
 8014ba2:	e662      	b.n	801486a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8014ba4:	f113 0801 	adds.w	r8, r3, #1
 8014ba8:	f53f af74 	bmi.w	8014a94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8014bac:	4541      	cmp	r1, r8
 8014bae:	f6ff af71 	blt.w	8014a94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8014bb2:	f11c 0801 	adds.w	r8, ip, #1
 8014bb6:	f53f af6d 	bmi.w	8014a94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8014bba:	45c6      	cmp	lr, r8
 8014bbc:	f6ff af6a 	blt.w	8014a94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8014bc0:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8014bc4:	b209      	sxth	r1, r1
 8014bc6:	fa0f f38e 	sxth.w	r3, lr
 8014bca:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8014bce:	9301      	str	r3, [sp, #4]
 8014bd0:	9100      	str	r1, [sp, #0]
 8014bd2:	4633      	mov	r3, r6
 8014bd4:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8014bd6:	9819      	ldr	r0, [sp, #100]	; 0x64
 8014bd8:	4639      	mov	r1, r7
 8014bda:	f7ff fc4d 	bl	8014478 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8014bde:	e759      	b.n	8014a94 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 8014be0:	fffff800 	.word	0xfffff800
 8014be4:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 8014be6:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8014be8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8014bec:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8014bee:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8014bf2:	1427      	asrs	r7, r4, #16
 8014bf4:	142b      	asrs	r3, r5, #16
 8014bf6:	fb01 7303 	mla	r3, r1, r3, r7
 8014bfa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8014bfc:	18e7      	adds	r7, r4, r3
 8014bfe:	5ce3      	ldrb	r3, [r4, r3]
 8014c00:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8014c04:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8014c08:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8014c0c:	2a00      	cmp	r2, #0
 8014c0e:	f000 8127 	beq.w	8014e60 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 8014c12:	f897 e001 	ldrb.w	lr, [r7, #1]
 8014c16:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8014c1a:	940d      	str	r4, [sp, #52]	; 0x34
 8014c1c:	0e24      	lsrs	r4, r4, #24
 8014c1e:	9414      	str	r4, [sp, #80]	; 0x50
 8014c20:	b170      	cbz	r0, 8014c40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8014c22:	eb07 0e01 	add.w	lr, r7, r1
 8014c26:	5c79      	ldrb	r1, [r7, r1]
 8014c28:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014c2c:	9109      	str	r1, [sp, #36]	; 0x24
 8014c2e:	0e09      	lsrs	r1, r1, #24
 8014c30:	9111      	str	r1, [sp, #68]	; 0x44
 8014c32:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8014c36:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014c3a:	910e      	str	r1, [sp, #56]	; 0x38
 8014c3c:	0e09      	lsrs	r1, r1, #24
 8014c3e:	9115      	str	r1, [sp, #84]	; 0x54
 8014c40:	b292      	uxth	r2, r2
 8014c42:	b280      	uxth	r0, r0
 8014c44:	fb02 f800 	mul.w	r8, r2, r0
 8014c48:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8014c4c:	0112      	lsls	r2, r2, #4
 8014c4e:	eba2 0e08 	sub.w	lr, r2, r8
 8014c52:	b280      	uxth	r0, r0
 8014c54:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8014c58:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8014c5a:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014c5c:	fa1f fe8e 	uxth.w	lr, lr
 8014c60:	1a09      	subs	r1, r1, r0
 8014c62:	b289      	uxth	r1, r1
 8014c64:	fb0e f202 	mul.w	r2, lr, r2
 8014c68:	fb01 220c 	mla	r2, r1, ip, r2
 8014c6c:	fb00 2204 	mla	r2, r0, r4, r2
 8014c70:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014c72:	fb08 2204 	mla	r2, r8, r4, r2
 8014c76:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8014c7a:	2a00      	cmp	r2, #0
 8014c7c:	f000 80e5 	beq.w	8014e4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 8014c80:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8014c84:	d019      	beq.n	8014cba <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58e>
 8014c86:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8014c8a:	fb0c fa0a 	mul.w	sl, ip, sl
 8014c8e:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014c92:	fb0c fc03 	mul.w	ip, ip, r3
 8014c96:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8014c9a:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014c9e:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8014ca2:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 8014ca6:	4453      	add	r3, sl
 8014ca8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8014cac:	0a1b      	lsrs	r3, r3, #8
 8014cae:	0a3f      	lsrs	r7, r7, #8
 8014cb0:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8014cb4:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 8014cb8:	433b      	orrs	r3, r7
 8014cba:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014cbc:	2cff      	cmp	r4, #255	; 0xff
 8014cbe:	d020      	beq.n	8014d02 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d6>
 8014cc0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014cc2:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014cc6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014cc8:	4367      	muls	r7, r4
 8014cca:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014ccc:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014cd0:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8014cd2:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014cd6:	fb04 fa0a 	mul.w	sl, r4, sl
 8014cda:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014cde:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014ce2:	44bc      	add	ip, r7
 8014ce4:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8014ce8:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014cec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014cf0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014cf4:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014cf8:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014cfc:	ea4c 040a 	orr.w	r4, ip, sl
 8014d00:	940d      	str	r4, [sp, #52]	; 0x34
 8014d02:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014d04:	2cff      	cmp	r4, #255	; 0xff
 8014d06:	d020      	beq.n	8014d4a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x61e>
 8014d08:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8014d0a:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014d0e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014d10:	4367      	muls	r7, r4
 8014d12:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8014d14:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014d18:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8014d1a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014d1e:	fb04 fa0a 	mul.w	sl, r4, sl
 8014d22:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014d26:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014d2a:	44bc      	add	ip, r7
 8014d2c:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8014d30:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014d34:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014d38:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014d3c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014d40:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014d44:	ea4c 040a 	orr.w	r4, ip, sl
 8014d48:	9409      	str	r4, [sp, #36]	; 0x24
 8014d4a:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014d4c:	2cff      	cmp	r4, #255	; 0xff
 8014d4e:	d020      	beq.n	8014d92 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x666>
 8014d50:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014d52:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014d56:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014d58:	4367      	muls	r7, r4
 8014d5a:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014d5c:	f404 4a7f 	and.w	sl, r4, #65280	; 0xff00
 8014d60:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8014d62:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8014d66:	fb04 fa0a 	mul.w	sl, r4, sl
 8014d6a:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8014d6e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014d72:	44bc      	add	ip, r7
 8014d74:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8014d78:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8014d7c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014d80:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014d84:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8014d88:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8014d8c:	ea4c 040a 	orr.w	r4, ip, sl
 8014d90:	940e      	str	r4, [sp, #56]	; 0x38
 8014d92:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014d94:	f004 17ff 	and.w	r7, r4, #16711935	; 0xff00ff
 8014d98:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8014d9a:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 8014d9e:	fb0e f707 	mul.w	r7, lr, r7
 8014da2:	fb01 770c 	mla	r7, r1, ip, r7
 8014da6:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8014daa:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8014dac:	fb00 770c 	mla	r7, r0, ip, r7
 8014db0:	f004 1cff 	and.w	ip, r4, #16711935	; 0xff00ff
 8014db4:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8014db6:	fb08 770c 	mla	r7, r8, ip, r7
 8014dba:	f404 4c7f 	and.w	ip, r4, #65280	; 0xff00
 8014dbe:	fb0e fe0c 	mul.w	lr, lr, ip
 8014dc2:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8014dc6:	fb01 e303 	mla	r3, r1, r3, lr
 8014dca:	9909      	ldr	r1, [sp, #36]	; 0x24
 8014dcc:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8014dd0:	990e      	ldr	r1, [sp, #56]	; 0x38
 8014dd2:	fb00 330a 	mla	r3, r0, sl, r3
 8014dd6:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 8014dda:	fb08 3c0c 	mla	ip, r8, ip, r3
 8014dde:	f8b9 3000 	ldrh.w	r3, [r9]
 8014de2:	43d2      	mvns	r2, r2
 8014de4:	1218      	asrs	r0, r3, #8
 8014de6:	b2d2      	uxtb	r2, r2
 8014de8:	10d9      	asrs	r1, r3, #3
 8014dea:	0a3f      	lsrs	r7, r7, #8
 8014dec:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8014df0:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8014df4:	00db      	lsls	r3, r3, #3
 8014df6:	4350      	muls	r0, r2
 8014df8:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8014dfc:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8014e00:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8014e04:	b2db      	uxtb	r3, r3
 8014e06:	ea47 070c 	orr.w	r7, r7, ip
 8014e0a:	4351      	muls	r1, r2
 8014e0c:	4353      	muls	r3, r2
 8014e0e:	1c42      	adds	r2, r0, #1
 8014e10:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014e14:	0c3a      	lsrs	r2, r7, #16
 8014e16:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8014e1a:	4a19      	ldr	r2, [pc, #100]	; (8014e80 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>)
 8014e1c:	b2c0      	uxtb	r0, r0
 8014e1e:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 8014e22:	1c4a      	adds	r2, r1, #1
 8014e24:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014e28:	0a3a      	lsrs	r2, r7, #8
 8014e2a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8014e2e:	00c9      	lsls	r1, r1, #3
 8014e30:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8014e34:	4301      	orrs	r1, r0
 8014e36:	1c58      	adds	r0, r3, #1
 8014e38:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8014e3c:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8014e40:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8014e44:	4308      	orrs	r0, r1
 8014e46:	f8a9 0000 	strh.w	r0, [r9]
 8014e4a:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8014e4c:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8014e4e:	441a      	add	r2, r3
 8014e50:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8014e52:	922d      	str	r2, [sp, #180]	; 0xb4
 8014e54:	f109 0902 	add.w	r9, r9, #2
 8014e58:	441d      	add	r5, r3
 8014e5a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014e5e:	e64d      	b.n	8014afc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 8014e60:	2800      	cmp	r0, #0
 8014e62:	f43f aeed 	beq.w	8014c40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8014e66:	5c79      	ldrb	r1, [r7, r1]
 8014e68:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8014e6c:	9109      	str	r1, [sp, #36]	; 0x24
 8014e6e:	0e09      	lsrs	r1, r1, #24
 8014e70:	9111      	str	r1, [sp, #68]	; 0x44
 8014e72:	e6e5      	b.n	8014c40 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x514>
 8014e74:	b01b      	add	sp, #108	; 0x6c
 8014e76:	ecbd 8b08 	vpop	{d8-d11}
 8014e7a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014e7e:	bf00      	nop
 8014e80:	fffff800 	.word	0xfffff800

08014e84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 8014e84:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014e88:	b085      	sub	sp, #20
 8014e8a:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 8014e8e:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 8014e92:	9103      	str	r1, [sp, #12]
 8014e94:	fb05 7106 	mla	r1, r5, r6, r7
 8014e98:	eb02 0441 	add.w	r4, r2, r1, lsl #1
 8014e9c:	2d00      	cmp	r5, #0
 8014e9e:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 8014ea2:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 8014ea6:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8014eaa:	9401      	str	r4, [sp, #4]
 8014eac:	eb03 0901 	add.w	r9, r3, r1
 8014eb0:	f2c0 80c0 	blt.w	8015034 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8014eb4:	45a8      	cmp	r8, r5
 8014eb6:	f340 80bd 	ble.w	8015034 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1b0>
 8014eba:	2f00      	cmp	r7, #0
 8014ebc:	f2c0 80b6 	blt.w	801502c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8014ec0:	42be      	cmp	r6, r7
 8014ec2:	f340 80b3 	ble.w	801502c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1a8>
 8014ec6:	f813 c001 	ldrb.w	ip, [r3, r1]
 8014eca:	f832 1011 	ldrh.w	r1, [r2, r1, lsl #1]
 8014ece:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8014ed2:	d019      	beq.n	8014f08 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x84>
 8014ed4:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8014ed8:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8014edc:	435a      	muls	r2, r3
 8014ede:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8014ee2:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8014ee6:	fb0c f403 	mul.w	r4, ip, r3
 8014eea:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8014eee:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8014ef2:	441a      	add	r2, r3
 8014ef4:	f104 0320 	add.w	r3, r4, #32
 8014ef8:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8014efc:	0a1b      	lsrs	r3, r3, #8
 8014efe:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8014f02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014f06:	4319      	orrs	r1, r3
 8014f08:	b289      	uxth	r1, r1
 8014f0a:	1c7b      	adds	r3, r7, #1
 8014f0c:	f100 8097 	bmi.w	801503e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8014f10:	429e      	cmp	r6, r3
 8014f12:	f340 8094 	ble.w	801503e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1ba>
 8014f16:	2800      	cmp	r0, #0
 8014f18:	f000 8094 	beq.w	8015044 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c0>
 8014f1c:	f899 4001 	ldrb.w	r4, [r9, #1]
 8014f20:	9b01      	ldr	r3, [sp, #4]
 8014f22:	2cff      	cmp	r4, #255	; 0xff
 8014f24:	885b      	ldrh	r3, [r3, #2]
 8014f26:	d01b      	beq.n	8014f60 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xdc>
 8014f28:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8014f2c:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8014f30:	fb0a f202 	mul.w	r2, sl, r2
 8014f34:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014f38:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8014f3c:	fb04 fa03 	mul.w	sl, r4, r3
 8014f40:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8014f44:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8014f48:	441a      	add	r2, r3
 8014f4a:	f10a 0320 	add.w	r3, sl, #32
 8014f4e:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8014f52:	0a1b      	lsrs	r3, r3, #8
 8014f54:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8014f58:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8014f5c:	ea4b 0303 	orr.w	r3, fp, r3
 8014f60:	b29b      	uxth	r3, r3
 8014f62:	3501      	adds	r5, #1
 8014f64:	d474      	bmi.n	8015050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8014f66:	45a8      	cmp	r8, r5
 8014f68:	dd72      	ble.n	8015050 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1cc>
 8014f6a:	f1be 0f00 	cmp.w	lr, #0
 8014f6e:	f000 8120 	beq.w	80151b2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x32e>
 8014f72:	2f00      	cmp	r7, #0
 8014f74:	db69      	blt.n	801504a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8014f76:	42be      	cmp	r6, r7
 8014f78:	dd67      	ble.n	801504a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1c6>
 8014f7a:	f819 5006 	ldrb.w	r5, [r9, r6]
 8014f7e:	9a01      	ldr	r2, [sp, #4]
 8014f80:	2dff      	cmp	r5, #255	; 0xff
 8014f82:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8014f86:	d01c      	beq.n	8014fc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x13e>
 8014f88:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8014f8c:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8014f90:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8014f94:	fb05 fa0b 	mul.w	sl, r5, fp
 8014f98:	fb08 f802 	mul.w	r8, r8, r2
 8014f9c:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8014fa0:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8014fa4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8014fa8:	4490      	add	r8, r2
 8014faa:	f10a 0220 	add.w	r2, sl, #32
 8014fae:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8014fb2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8014fb6:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8014fba:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8014fbe:	ea4b 0b0a 	orr.w	fp, fp, sl
 8014fc2:	fa1f fb8b 	uxth.w	fp, fp
 8014fc6:	3701      	adds	r7, #1
 8014fc8:	d447      	bmi.n	801505a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8014fca:	42be      	cmp	r6, r7
 8014fcc:	dd45      	ble.n	801505a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1d6>
 8014fce:	2800      	cmp	r0, #0
 8014fd0:	d046      	beq.n	8015060 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1dc>
 8014fd2:	3601      	adds	r6, #1
 8014fd4:	9a01      	ldr	r2, [sp, #4]
 8014fd6:	f819 7006 	ldrb.w	r7, [r9, r6]
 8014fda:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8014fde:	2fff      	cmp	r7, #255	; 0xff
 8014fe0:	d01a      	beq.n	8015018 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x194>
 8014fe2:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8014fe6:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8014fea:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8014fee:	fb07 f902 	mul.w	r9, r7, r2
 8014ff2:	fb08 f806 	mul.w	r8, r8, r6
 8014ff6:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8014ffa:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8014ffe:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015002:	44b0      	add	r8, r6
 8015004:	f109 0620 	add.w	r6, r9, #32
 8015008:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 801500c:	0a36      	lsrs	r6, r6, #8
 801500e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8015012:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015016:	4332      	orrs	r2, r6
 8015018:	b292      	uxth	r2, r2
 801501a:	280f      	cmp	r0, #15
 801501c:	d922      	bls.n	8015064 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e0>
 801501e:	4b69      	ldr	r3, [pc, #420]	; (80151c4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x340>)
 8015020:	4a69      	ldr	r2, [pc, #420]	; (80151c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x344>)
 8015022:	486a      	ldr	r0, [pc, #424]	; (80151cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x348>)
 8015024:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8015028:	f004 fa0a 	bl	8019440 <__assert_func>
 801502c:	f04f 0c00 	mov.w	ip, #0
 8015030:	4661      	mov	r1, ip
 8015032:	e76a      	b.n	8014f0a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x86>
 8015034:	2400      	movs	r4, #0
 8015036:	46a4      	mov	ip, r4
 8015038:	4623      	mov	r3, r4
 801503a:	4621      	mov	r1, r4
 801503c:	e791      	b.n	8014f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801503e:	2400      	movs	r4, #0
 8015040:	4623      	mov	r3, r4
 8015042:	e78e      	b.n	8014f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 8015044:	4604      	mov	r4, r0
 8015046:	4603      	mov	r3, r0
 8015048:	e78b      	b.n	8014f62 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xde>
 801504a:	2500      	movs	r5, #0
 801504c:	46ab      	mov	fp, r5
 801504e:	e7ba      	b.n	8014fc6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x142>
 8015050:	2700      	movs	r7, #0
 8015052:	463d      	mov	r5, r7
 8015054:	463a      	mov	r2, r7
 8015056:	46bb      	mov	fp, r7
 8015058:	e7df      	b.n	801501a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 801505a:	2700      	movs	r7, #0
 801505c:	463a      	mov	r2, r7
 801505e:	e7dc      	b.n	801501a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x196>
 8015060:	4607      	mov	r7, r0
 8015062:	4602      	mov	r2, r0
 8015064:	f1be 0f0f 	cmp.w	lr, #15
 8015068:	d8d9      	bhi.n	801501e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 801506a:	b286      	uxth	r6, r0
 801506c:	fa1f f98e 	uxth.w	r9, lr
 8015070:	fb06 f809 	mul.w	r8, r6, r9
 8015074:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8015078:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 801507c:	0136      	lsls	r6, r6, #4
 801507e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015082:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015086:	9601      	str	r6, [sp, #4]
 8015088:	ea4a 0101 	orr.w	r1, sl, r1
 801508c:	fa1f f689 	uxth.w	r6, r9
 8015090:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8015094:	fb10 f90e 	smulbb	r9, r0, lr
 8015098:	ea4f 09e9 	mov.w	r9, r9, asr #3
 801509c:	9602      	str	r6, [sp, #8]
 801509e:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80150a2:	460e      	mov	r6, r1
 80150a4:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80150a8:	f1ce 0110 	rsb	r1, lr, #16
 80150ac:	1a09      	subs	r1, r1, r0
 80150ae:	ea4a 0303 	orr.w	r3, sl, r3
 80150b2:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 80150b6:	4343      	muls	r3, r0
 80150b8:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 80150bc:	9801      	ldr	r0, [sp, #4]
 80150be:	fb01 3106 	mla	r1, r1, r6, r3
 80150c2:	9e02      	ldr	r6, [sp, #8]
 80150c4:	f5c0 7080 	rsb	r0, r0, #256	; 0x100
 80150c8:	1b80      	subs	r0, r0, r6
 80150ca:	9e01      	ldr	r6, [sp, #4]
 80150cc:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 80150d0:	eba6 0608 	sub.w	r6, r6, r8
 80150d4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80150d8:	b2b6      	uxth	r6, r6
 80150da:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80150de:	ea4a 0202 	orr.w	r2, sl, r2
 80150e2:	b280      	uxth	r0, r0
 80150e4:	4374      	muls	r4, r6
 80150e6:	fb09 1302 	mla	r3, r9, r2, r1
 80150ea:	fb0c 4400 	mla	r4, ip, r0, r4
 80150ee:	9a03      	ldr	r2, [sp, #12]
 80150f0:	9802      	ldr	r0, [sp, #8]
 80150f2:	8811      	ldrh	r1, [r2, #0]
 80150f4:	f89d 2050 	ldrb.w	r2, [sp, #80]	; 0x50
 80150f8:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 80150fc:	fb00 4505 	mla	r5, r0, r5, r4
 8015100:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015104:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8015108:	fb08 5707 	mla	r7, r8, r7, r5
 801510c:	ea4a 0b0b 	orr.w	fp, sl, fp
 8015110:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8015114:	b292      	uxth	r2, r2
 8015116:	fb0e 3e0b 	mla	lr, lr, fp, r3
 801511a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801511e:	4357      	muls	r7, r2
 8015120:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8015124:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015128:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801512c:	f107 0801 	add.w	r8, r7, #1
 8015130:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015134:	ea43 0e0e 	orr.w	lr, r3, lr
 8015138:	eb08 2717 	add.w	r7, r8, r7, lsr #8
 801513c:	fa1f f38e 	uxth.w	r3, lr
 8015140:	1208      	asrs	r0, r1, #8
 8015142:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8015146:	b2ff      	uxtb	r7, r7
 8015148:	121c      	asrs	r4, r3, #8
 801514a:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801514e:	fb10 f007 	smulbb	r0, r0, r7
 8015152:	10cd      	asrs	r5, r1, #3
 8015154:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8015158:	fb04 0402 	mla	r4, r4, r2, r0
 801515c:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8015160:	10d8      	asrs	r0, r3, #3
 8015162:	fb15 f507 	smulbb	r5, r5, r7
 8015166:	00db      	lsls	r3, r3, #3
 8015168:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801516c:	fb00 5002 	mla	r0, r0, r2, r5
 8015170:	b2dd      	uxtb	r5, r3
 8015172:	00cb      	lsls	r3, r1, #3
 8015174:	b2db      	uxtb	r3, r3
 8015176:	fb13 f307 	smulbb	r3, r3, r7
 801517a:	fb05 3202 	mla	r2, r5, r2, r3
 801517e:	b2a4      	uxth	r4, r4
 8015180:	b292      	uxth	r2, r2
 8015182:	1c63      	adds	r3, r4, #1
 8015184:	b280      	uxth	r0, r0
 8015186:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 801518a:	1c53      	adds	r3, r2, #1
 801518c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015190:	1c42      	adds	r2, r0, #1
 8015192:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8015196:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 801519a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801519e:	0940      	lsrs	r0, r0, #5
 80151a0:	4323      	orrs	r3, r4
 80151a2:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80151a6:	9a03      	ldr	r2, [sp, #12]
 80151a8:	4303      	orrs	r3, r0
 80151aa:	8013      	strh	r3, [r2, #0]
 80151ac:	b005      	add	sp, #20
 80151ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151b2:	280f      	cmp	r0, #15
 80151b4:	f63f af33 	bhi.w	801501e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x19a>
 80151b8:	4677      	mov	r7, lr
 80151ba:	4675      	mov	r5, lr
 80151bc:	4672      	mov	r2, lr
 80151be:	46f3      	mov	fp, lr
 80151c0:	e753      	b.n	801506a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x1e6>
 80151c2:	bf00      	nop
 80151c4:	0801ce3e 	.word	0x0801ce3e
 80151c8:	0801d40a 	.word	0x0801d40a
 80151cc:	0801cec2 	.word	0x0801cec2

080151d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80151d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80151d4:	ed2d 8b08 	vpush	{d8-d11}
 80151d8:	b097      	sub	sp, #92	; 0x5c
 80151da:	eeb0 aa40 	vmov.f32	s20, s0
 80151de:	9214      	str	r2, [sp, #80]	; 0x50
 80151e0:	9308      	str	r3, [sp, #32]
 80151e2:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80151e4:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80151e8:	9312      	str	r3, [sp, #72]	; 0x48
 80151ea:	9111      	str	r1, [sp, #68]	; 0x44
 80151ec:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80151f0:	9015      	str	r0, [sp, #84]	; 0x54
 80151f2:	6850      	ldr	r0, [r2, #4]
 80151f4:	6812      	ldr	r2, [r2, #0]
 80151f6:	fb00 1303 	mla	r3, r0, r3, r1
 80151fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80151fe:	9309      	str	r3, [sp, #36]	; 0x24
 8015200:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015202:	681b      	ldr	r3, [r3, #0]
 8015204:	930b      	str	r3, [sp, #44]	; 0x2c
 8015206:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8015208:	685b      	ldr	r3, [r3, #4]
 801520a:	930c      	str	r3, [sp, #48]	; 0x30
 801520c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	; 0x48
 8015210:	930a      	str	r3, [sp, #40]	; 0x28
 8015212:	eef0 9a60 	vmov.f32	s19, s1
 8015216:	eeb0 9a41 	vmov.f32	s18, s2
 801521a:	eeb0 8a62 	vmov.f32	s16, s5
 801521e:	eef0 8a43 	vmov.f32	s17, s6
 8015222:	eef0 ba44 	vmov.f32	s23, s8
 8015226:	eeb0 ba64 	vmov.f32	s22, s9
 801522a:	eef0 aa45 	vmov.f32	s21, s10
 801522e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8015230:	2b00      	cmp	r3, #0
 8015232:	dc03      	bgt.n	801523c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8015234:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8015236:	2b00      	cmp	r3, #0
 8015238:	f340 83cb 	ble.w	80159d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 801523c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801523e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015242:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015246:	1e48      	subs	r0, r1, #1
 8015248:	1e55      	subs	r5, r2, #1
 801524a:	9b08      	ldr	r3, [sp, #32]
 801524c:	2b00      	cmp	r3, #0
 801524e:	f340 81a3 	ble.w	8015598 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8015252:	9e29      	ldr	r6, [sp, #164]	; 0xa4
 8015254:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015256:	1436      	asrs	r6, r6, #16
 8015258:	ea4f 4323 	mov.w	r3, r3, asr #16
 801525c:	d406      	bmi.n	801526c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 801525e:	4286      	cmp	r6, r0
 8015260:	da04      	bge.n	801526c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015262:	2b00      	cmp	r3, #0
 8015264:	db02      	blt.n	801526c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8015266:	42ab      	cmp	r3, r5
 8015268:	f2c0 8197 	blt.w	801559a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ca>
 801526c:	3601      	adds	r6, #1
 801526e:	f100 8184 	bmi.w	801557a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015272:	42b1      	cmp	r1, r6
 8015274:	f2c0 8181 	blt.w	801557a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015278:	3301      	adds	r3, #1
 801527a:	f100 817e 	bmi.w	801557a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 801527e:	429a      	cmp	r2, r3
 8015280:	f2c0 817b 	blt.w	801557a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015284:	9b08      	ldr	r3, [sp, #32]
 8015286:	9f09      	ldr	r7, [sp, #36]	; 0x24
 8015288:	9313      	str	r3, [sp, #76]	; 0x4c
 801528a:	f64f 061f 	movw	r6, #63519	; 0xf81f
 801528e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015290:	2b00      	cmp	r3, #0
 8015292:	f340 81a4 	ble.w	80155de <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40e>
 8015296:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 8015298:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 801529a:	1418      	asrs	r0, r3, #16
 801529c:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801529e:	f3c3 3103 	ubfx	r1, r3, #12, #4
 80152a2:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80152a4:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 80152a8:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80152aa:	142d      	asrs	r5, r5, #16
 80152ac:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 80152b0:	f100 81f8 	bmi.w	80156a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80152b4:	f102 3eff 	add.w	lr, r2, #4294967295
 80152b8:	4575      	cmp	r5, lr
 80152ba:	f280 81f3 	bge.w	80156a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80152be:	2800      	cmp	r0, #0
 80152c0:	f2c0 81f0 	blt.w	80156a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80152c4:	f103 3eff 	add.w	lr, r3, #4294967295
 80152c8:	4570      	cmp	r0, lr
 80152ca:	f280 81eb 	bge.w	80156a4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d4>
 80152ce:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80152d0:	b212      	sxth	r2, r2
 80152d2:	fb00 5002 	mla	r0, r0, r2, r5
 80152d6:	fa1f fe81 	uxth.w	lr, r1
 80152da:	eb03 0a00 	add.w	sl, r3, r0
 80152de:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80152e2:	f813 9000 	ldrb.w	r9, [r3, r0]
 80152e6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80152ea:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 80152ee:	b29b      	uxth	r3, r3
 80152f0:	f1bc 0f00 	cmp.w	ip, #0
 80152f4:	f000 81b9 	beq.w	801566a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 80152f8:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80152fc:	940d      	str	r4, [sp, #52]	; 0x34
 80152fe:	eb0a 0b02 	add.w	fp, sl, r2
 8015302:	fa1f fa8c 	uxth.w	sl, ip
 8015306:	fb0a fe0e 	mul.w	lr, sl, lr
 801530a:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 801530e:	fa1f fa8a 	uxth.w	sl, sl
 8015312:	eba5 050e 	sub.w	r5, r5, lr
 8015316:	f89b 4001 	ldrb.w	r4, [fp, #1]
 801531a:	940e      	str	r4, [sp, #56]	; 0x38
 801531c:	eba3 030a 	sub.w	r3, r3, sl
 8015320:	b2ad      	uxth	r5, r5
 8015322:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8015324:	b29b      	uxth	r3, r3
 8015326:	fb08 f505 	mul.w	r5, r8, r5
 801532a:	fb09 5303 	mla	r3, r9, r3, r5
 801532e:	fb0a 3304 	mla	r3, sl, r4, r3
 8015332:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015334:	fb0e 3304 	mla	r3, lr, r4, r3
 8015338:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801533c:	2b00      	cmp	r3, #0
 801533e:	f000 810f 	beq.w	8015560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 8015342:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015344:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015348:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 801534c:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8015350:	f000 8190 	beq.w	8015674 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a4>
 8015354:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8015358:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 801535c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015360:	fb09 f000 	mul.w	r0, r9, r0
 8015364:	fb0a fe0e 	mul.w	lr, sl, lr
 8015368:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 801536c:	f100 0b20 	add.w	fp, r0, #32
 8015370:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015374:	44ce      	add	lr, r9
 8015376:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 801537a:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801537e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8015382:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015386:	ea4e 0909 	orr.w	r9, lr, r9
 801538a:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 801538e:	8868      	ldrh	r0, [r5, #2]
 8015390:	d019      	beq.n	80153c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 8015392:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8015396:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 801539a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801539e:	fb08 f800 	mul.w	r8, r8, r0
 80153a2:	fb0a fe0e 	mul.w	lr, sl, lr
 80153a6:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 80153aa:	f108 0b20 	add.w	fp, r8, #32
 80153ae:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 80153b2:	4486      	add	lr, r0
 80153b4:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 80153b8:	0a00      	lsrs	r0, r0, #8
 80153ba:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80153be:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80153c2:	ea4e 0000 	orr.w	r0, lr, r0
 80153c6:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80153ca:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80153ce:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 80153d2:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80153d6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80153da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80153de:	ea4e 0909 	orr.w	r9, lr, r9
 80153e2:	ea4a 0000 	orr.w	r0, sl, r0
 80153e6:	f1bc 0f00 	cmp.w	ip, #0
 80153ea:	f000 8145 	beq.w	8015678 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a8>
 80153ee:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 80153f2:	3a01      	subs	r2, #1
 80153f4:	0052      	lsls	r2, r2, #1
 80153f6:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80153f8:	3202      	adds	r2, #2
 80153fa:	2cff      	cmp	r4, #255	; 0xff
 80153fc:	eb05 0e02 	add.w	lr, r5, r2
 8015400:	5aaa      	ldrh	r2, [r5, r2]
 8015402:	d018      	beq.n	8015436 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8015404:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8015408:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801540c:	fb04 fa02 	mul.w	sl, r4, r2
 8015410:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015414:	fb08 f805 	mul.w	r8, r8, r5
 8015418:	f10a 0520 	add.w	r5, sl, #32
 801541c:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8015420:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8015424:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015428:	4442      	add	r2, r8
 801542a:	0a2d      	lsrs	r5, r5, #8
 801542c:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8015430:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015434:	432a      	orrs	r2, r5
 8015436:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8015438:	f8be 5002 	ldrh.w	r5, [lr, #2]
 801543c:	2cff      	cmp	r4, #255	; 0xff
 801543e:	d01a      	beq.n	8015476 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 8015440:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8015444:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015448:	fb04 fa05 	mul.w	sl, r4, r5
 801544c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015450:	fb08 f80e 	mul.w	r8, r8, lr
 8015454:	f10a 0e20 	add.w	lr, sl, #32
 8015458:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 801545c:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8015460:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015464:	4445      	add	r5, r8
 8015466:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801546a:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 801546e:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8015472:	ea45 050e 	orr.w	r5, r5, lr
 8015476:	fb1c fe01 	smulbb	lr, ip, r1
 801547a:	ea4f 0eee 	mov.w	lr, lr, asr #3
 801547e:	f1cc 0810 	rsb	r8, ip, #16
 8015482:	eba8 0801 	sub.w	r8, r8, r1
 8015486:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 801548a:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 801548e:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8015492:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8015496:	4341      	muls	r1, r0
 8015498:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801549c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80154a0:	ea4a 0202 	orr.w	r2, sl, r2
 80154a4:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 80154a8:	fb09 1108 	mla	r1, r9, r8, r1
 80154ac:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80154b0:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 80154b4:	fb0c 1102 	mla	r1, ip, r2, r1
 80154b8:	ea4b 0505 	orr.w	r5, fp, r5
 80154bc:	fb0e 1e05 	mla	lr, lr, r5, r1
 80154c0:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80154c4:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80154c8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80154cc:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80154d0:	ea42 0e0e 	orr.w	lr, r2, lr
 80154d4:	fa1f f28e 	uxth.w	r2, lr
 80154d8:	2bff      	cmp	r3, #255	; 0xff
 80154da:	d103      	bne.n	80154e4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 80154dc:	9912      	ldr	r1, [sp, #72]	; 0x48
 80154de:	29ff      	cmp	r1, #255	; 0xff
 80154e0:	f000 80de 	beq.w	80156a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d0>
 80154e4:	990a      	ldr	r1, [sp, #40]	; 0x28
 80154e6:	8838      	ldrh	r0, [r7, #0]
 80154e8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80154ea:	434b      	muls	r3, r1
 80154ec:	f103 0c01 	add.w	ip, r3, #1
 80154f0:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80154f4:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80154f8:	fa5f fc83 	uxtb.w	ip, r3
 80154fc:	1203      	asrs	r3, r0, #8
 80154fe:	1215      	asrs	r5, r2, #8
 8015500:	f003 03f8 	and.w	r3, r3, #248	; 0xf8
 8015504:	fb13 f30c 	smulbb	r3, r3, ip
 8015508:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801550c:	fb05 3501 	mla	r5, r5, r1, r3
 8015510:	10c3      	asrs	r3, r0, #3
 8015512:	10d1      	asrs	r1, r2, #3
 8015514:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8015518:	fb13 f30c 	smulbb	r3, r3, ip
 801551c:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8015520:	fb01 3104 	mla	r1, r1, r4, r3
 8015524:	00c3      	lsls	r3, r0, #3
 8015526:	00d2      	lsls	r2, r2, #3
 8015528:	b2db      	uxtb	r3, r3
 801552a:	b2d2      	uxtb	r2, r2
 801552c:	fb13 f30c 	smulbb	r3, r3, ip
 8015530:	b2ad      	uxth	r5, r5
 8015532:	fb02 3304 	mla	r3, r2, r4, r3
 8015536:	b29a      	uxth	r2, r3
 8015538:	1c6b      	adds	r3, r5, #1
 801553a:	b289      	uxth	r1, r1
 801553c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8015540:	1c53      	adds	r3, r2, #1
 8015542:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8015546:	1c4a      	adds	r2, r1, #1
 8015548:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801554c:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 8015550:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8015554:	0949      	lsrs	r1, r1, #5
 8015556:	432b      	orrs	r3, r5
 8015558:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 801555c:	430b      	orrs	r3, r1
 801555e:	803b      	strh	r3, [r7, #0]
 8015560:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015562:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015564:	4413      	add	r3, r2
 8015566:	9329      	str	r3, [sp, #164]	; 0xa4
 8015568:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801556a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801556c:	441a      	add	r2, r3
 801556e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015570:	922a      	str	r2, [sp, #168]	; 0xa8
 8015572:	3b01      	subs	r3, #1
 8015574:	3702      	adds	r7, #2
 8015576:	9313      	str	r3, [sp, #76]	; 0x4c
 8015578:	e689      	b.n	801528e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xbe>
 801557a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801557c:	9e2b      	ldr	r6, [sp, #172]	; 0xac
 801557e:	9c2a      	ldr	r4, [sp, #168]	; 0xa8
 8015580:	4433      	add	r3, r6
 8015582:	9329      	str	r3, [sp, #164]	; 0xa4
 8015584:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015586:	441c      	add	r4, r3
 8015588:	9b08      	ldr	r3, [sp, #32]
 801558a:	942a      	str	r4, [sp, #168]	; 0xa8
 801558c:	3b01      	subs	r3, #1
 801558e:	9308      	str	r3, [sp, #32]
 8015590:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015592:	3302      	adds	r3, #2
 8015594:	9309      	str	r3, [sp, #36]	; 0x24
 8015596:	e658      	b.n	801524a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8015598:	d028      	beq.n	80155ec <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41c>
 801559a:	9b08      	ldr	r3, [sp, #32]
 801559c:	982b      	ldr	r0, [sp, #172]	; 0xac
 801559e:	9d29      	ldr	r5, [sp, #164]	; 0xa4
 80155a0:	3b01      	subs	r3, #1
 80155a2:	fb00 5003 	mla	r0, r0, r3, r5
 80155a6:	1400      	asrs	r0, r0, #16
 80155a8:	f53f ae6c 	bmi.w	8015284 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80155ac:	3901      	subs	r1, #1
 80155ae:	4288      	cmp	r0, r1
 80155b0:	f6bf ae68 	bge.w	8015284 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80155b4:	992c      	ldr	r1, [sp, #176]	; 0xb0
 80155b6:	982a      	ldr	r0, [sp, #168]	; 0xa8
 80155b8:	fb01 0303 	mla	r3, r1, r3, r0
 80155bc:	141b      	asrs	r3, r3, #16
 80155be:	f53f ae61 	bmi.w	8015284 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80155c2:	3a01      	subs	r2, #1
 80155c4:	4293      	cmp	r3, r2
 80155c6:	f6bf ae5d 	bge.w	8015284 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80155ca:	9b08      	ldr	r3, [sp, #32]
 80155cc:	f8dd e024 	ldr.w	lr, [sp, #36]	; 0x24
 80155d0:	9313      	str	r3, [sp, #76]	; 0x4c
 80155d2:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80155d6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80155d8:	2b00      	cmp	r3, #0
 80155da:	f300 8082 	bgt.w	80156e2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x512>
 80155de:	9b08      	ldr	r3, [sp, #32]
 80155e0:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80155e4:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80155e6:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80155ea:	9309      	str	r3, [sp, #36]	; 0x24
 80155ec:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80155ee:	2b00      	cmp	r3, #0
 80155f0:	f340 81ef 	ble.w	80159d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x802>
 80155f4:	ee3a aa2b 	vadd.f32	s20, s20, s23
 80155f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80155fc:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8015600:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015602:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8015606:	ee39 9a2a 	vadd.f32	s18, s18, s21
 801560a:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801560e:	eef0 6a48 	vmov.f32	s13, s16
 8015612:	ee69 7a27 	vmul.f32	s15, s18, s15
 8015616:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801561a:	ee37 8a48 	vsub.f32	s16, s14, s16
 801561e:	edcd 6a29 	vstr	s13, [sp, #164]	; 0xa4
 8015622:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8015626:	eef0 6a68 	vmov.f32	s13, s17
 801562a:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801562e:	ee18 2a10 	vmov	r2, s16
 8015632:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8015636:	fb92 f3f3 	sdiv	r3, r2, r3
 801563a:	ee18 2a90 	vmov	r2, s17
 801563e:	932b      	str	r3, [sp, #172]	; 0xac
 8015640:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015642:	fb92 f3f3 	sdiv	r3, r2, r3
 8015646:	932c      	str	r3, [sp, #176]	; 0xb0
 8015648:	9b11      	ldr	r3, [sp, #68]	; 0x44
 801564a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801564c:	3b01      	subs	r3, #1
 801564e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8015652:	9311      	str	r3, [sp, #68]	; 0x44
 8015654:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8015656:	edcd 6a2a 	vstr	s13, [sp, #168]	; 0xa8
 801565a:	bf08      	it	eq
 801565c:	4613      	moveq	r3, r2
 801565e:	9308      	str	r3, [sp, #32]
 8015660:	eef0 8a67 	vmov.f32	s17, s15
 8015664:	eeb0 8a47 	vmov.f32	s16, s14
 8015668:	e5e1      	b.n	801522e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801566a:	fb08 f505 	mul.w	r5, r8, r5
 801566e:	fb09 5303 	mla	r3, r9, r3, r5
 8015672:	e661      	b.n	8015338 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x168>
 8015674:	4681      	mov	r9, r0
 8015676:	e688      	b.n	801538a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8015678:	f1c1 0210 	rsb	r2, r1, #16
 801567c:	4341      	muls	r1, r0
 801567e:	fb09 1902 	mla	r9, r9, r2, r1
 8015682:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8015686:	ea4f 5259 	mov.w	r2, r9, lsr #21
 801568a:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801568e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015692:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015696:	ea42 0909 	orr.w	r9, r2, r9
 801569a:	fa1f f289 	uxth.w	r2, r9
 801569e:	e71b      	b.n	80154d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x308>
 80156a0:	803a      	strh	r2, [r7, #0]
 80156a2:	e75d      	b.n	8015560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80156a4:	f115 0e01 	adds.w	lr, r5, #1
 80156a8:	f53f af5a 	bmi.w	8015560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80156ac:	4572      	cmp	r2, lr
 80156ae:	f6ff af57 	blt.w	8015560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80156b2:	f110 0e01 	adds.w	lr, r0, #1
 80156b6:	f53f af53 	bmi.w	8015560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80156ba:	4573      	cmp	r3, lr
 80156bc:	f6ff af50 	blt.w	8015560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80156c0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80156c2:	9502      	str	r5, [sp, #8]
 80156c4:	b21b      	sxth	r3, r3
 80156c6:	b212      	sxth	r2, r2
 80156c8:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80156cc:	9301      	str	r3, [sp, #4]
 80156ce:	9200      	str	r2, [sp, #0]
 80156d0:	e9cd c405 	strd	ip, r4, [sp, #20]
 80156d4:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	; 0x2c
 80156d8:	4639      	mov	r1, r7
 80156da:	9815      	ldr	r0, [sp, #84]	; 0x54
 80156dc:	f7ff fbd2 	bl	8014e84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80156e0:	e73e      	b.n	8015560 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x390>
 80156e2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80156e4:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80156e8:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80156ea:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80156ee:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80156f0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80156f4:	9b2a      	ldr	r3, [sp, #168]	; 0xa8
 80156f6:	141f      	asrs	r7, r3, #16
 80156f8:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80156fa:	141b      	asrs	r3, r3, #16
 80156fc:	fb01 3707 	mla	r7, r1, r7, r3
 8015700:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8015702:	fa1f fc82 	uxth.w	ip, r2
 8015706:	eb03 0a07 	add.w	sl, r3, r7
 801570a:	ea4f 100c 	mov.w	r0, ip, lsl #4
 801570e:	f813 9007 	ldrb.w	r9, [r3, r7]
 8015712:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015716:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801571a:	b29b      	uxth	r3, r3
 801571c:	2d00      	cmp	r5, #0
 801571e:	f000 813d 	beq.w	801599c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7cc>
 8015722:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8015726:	940f      	str	r4, [sp, #60]	; 0x3c
 8015728:	eb0a 0b01 	add.w	fp, sl, r1
 801572c:	fa1f fa85 	uxth.w	sl, r5
 8015730:	fb0a fc0c 	mul.w	ip, sl, ip
 8015734:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8015738:	fa1f fa8a 	uxth.w	sl, sl
 801573c:	eba0 000c 	sub.w	r0, r0, ip
 8015740:	eba3 030a 	sub.w	r3, r3, sl
 8015744:	b280      	uxth	r0, r0
 8015746:	fb08 f000 	mul.w	r0, r8, r0
 801574a:	b29b      	uxth	r3, r3
 801574c:	fb09 0303 	mla	r3, r9, r3, r0
 8015750:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015752:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8015756:	9410      	str	r4, [sp, #64]	; 0x40
 8015758:	fb0a 3300 	mla	r3, sl, r0, r3
 801575c:	fb0c 3304 	mla	r3, ip, r4, r3
 8015760:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015764:	2b00      	cmp	r3, #0
 8015766:	f000 810b 	beq.w	8015980 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 801576a:	980b      	ldr	r0, [sp, #44]	; 0x2c
 801576c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 801576e:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015772:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8015776:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 801577a:	f000 8114 	beq.w	80159a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d6>
 801577e:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 8015782:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8015786:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801578a:	fb09 f707 	mul.w	r7, r9, r7
 801578e:	fb0a fc0c 	mul.w	ip, sl, ip
 8015792:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8015796:	f107 0b20 	add.w	fp, r7, #32
 801579a:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 801579e:	44cc      	add	ip, r9
 80157a0:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80157a4:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80157a8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80157ac:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80157b0:	ea4c 0909 	orr.w	r9, ip, r9
 80157b4:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80157b8:	8847      	ldrh	r7, [r0, #2]
 80157ba:	d019      	beq.n	80157f0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x620>
 80157bc:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80157c0:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80157c4:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80157c8:	fb08 f807 	mul.w	r8, r8, r7
 80157cc:	fb0a fc0c 	mul.w	ip, sl, ip
 80157d0:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80157d4:	f108 0b20 	add.w	fp, r8, #32
 80157d8:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80157dc:	44bc      	add	ip, r7
 80157de:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80157e2:	0a3f      	lsrs	r7, r7, #8
 80157e4:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80157e8:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80157ec:	ea4c 0707 	orr.w	r7, ip, r7
 80157f0:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 80157f4:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 80157f8:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 80157fc:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015800:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015804:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8015808:	ea4c 0909 	orr.w	r9, ip, r9
 801580c:	ea4a 0707 	orr.w	r7, sl, r7
 8015810:	2d00      	cmp	r5, #0
 8015812:	f000 80ca 	beq.w	80159aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7da>
 8015816:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 801581a:	3901      	subs	r1, #1
 801581c:	0049      	lsls	r1, r1, #1
 801581e:	3102      	adds	r1, #2
 8015820:	eb00 0c01 	add.w	ip, r0, r1
 8015824:	5a41      	ldrh	r1, [r0, r1]
 8015826:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8015828:	28ff      	cmp	r0, #255	; 0xff
 801582a:	d019      	beq.n	8015860 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x690>
 801582c:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 801582e:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 8015832:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015836:	fb04 fa01 	mul.w	sl, r4, r1
 801583a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801583e:	fb08 f800 	mul.w	r8, r8, r0
 8015842:	f10a 0020 	add.w	r0, sl, #32
 8015846:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 801584a:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 801584e:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015852:	4441      	add	r1, r8
 8015854:	0a00      	lsrs	r0, r0, #8
 8015856:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 801585a:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801585e:	4301      	orrs	r1, r0
 8015860:	9c10      	ldr	r4, [sp, #64]	; 0x40
 8015862:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8015866:	2cff      	cmp	r4, #255	; 0xff
 8015868:	d01a      	beq.n	80158a0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6d0>
 801586a:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 801586e:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015872:	fb04 fa00 	mul.w	sl, r4, r0
 8015876:	ea4f 08e4 	mov.w	r8, r4, asr #3
 801587a:	fb08 f80c 	mul.w	r8, r8, ip
 801587e:	f10a 0c20 	add.w	ip, sl, #32
 8015882:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8015886:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 801588a:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801588e:	4440      	add	r0, r8
 8015890:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8015894:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8015898:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 801589c:	ea40 000c 	orr.w	r0, r0, ip
 80158a0:	fb15 fc02 	smulbb	ip, r5, r2
 80158a4:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80158a8:	f1c5 0810 	rsb	r8, r5, #16
 80158ac:	eba8 0802 	sub.w	r8, r8, r2
 80158b0:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80158b4:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80158b8:	437a      	muls	r2, r7
 80158ba:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80158be:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80158c2:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80158c6:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80158ca:	fb09 2208 	mla	r2, r9, r8, r2
 80158ce:	ea4a 0101 	orr.w	r1, sl, r1
 80158d2:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80158d6:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80158da:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80158de:	fb05 2201 	mla	r2, r5, r1, r2
 80158e2:	ea4b 0000 	orr.w	r0, fp, r0
 80158e6:	fb0c 2200 	mla	r2, ip, r0, r2
 80158ea:	0d57      	lsrs	r7, r2, #21
 80158ec:	0952      	lsrs	r2, r2, #5
 80158ee:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80158f2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80158f6:	433a      	orrs	r2, r7
 80158f8:	2bff      	cmp	r3, #255	; 0xff
 80158fa:	b292      	uxth	r2, r2
 80158fc:	d102      	bne.n	8015904 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x734>
 80158fe:	9912      	ldr	r1, [sp, #72]	; 0x48
 8015900:	29ff      	cmp	r1, #255	; 0xff
 8015902:	d063      	beq.n	80159cc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7fc>
 8015904:	980a      	ldr	r0, [sp, #40]	; 0x28
 8015906:	f8be 1000 	ldrh.w	r1, [lr]
 801590a:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 801590c:	4343      	muls	r3, r0
 801590e:	1c58      	adds	r0, r3, #1
 8015910:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8015914:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8015918:	1208      	asrs	r0, r1, #8
 801591a:	b2db      	uxtb	r3, r3
 801591c:	1215      	asrs	r5, r2, #8
 801591e:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8015922:	fb10 f003 	smulbb	r0, r0, r3
 8015926:	10cf      	asrs	r7, r1, #3
 8015928:	f005 05f8 	and.w	r5, r5, #248	; 0xf8
 801592c:	00c9      	lsls	r1, r1, #3
 801592e:	fb05 0504 	mla	r5, r5, r4, r0
 8015932:	b2c9      	uxtb	r1, r1
 8015934:	10d0      	asrs	r0, r2, #3
 8015936:	00d2      	lsls	r2, r2, #3
 8015938:	fb11 f103 	smulbb	r1, r1, r3
 801593c:	b2d2      	uxtb	r2, r2
 801593e:	f007 07fc 	and.w	r7, r7, #252	; 0xfc
 8015942:	fb02 1204 	mla	r2, r2, r4, r1
 8015946:	fb17 f703 	smulbb	r7, r7, r3
 801594a:	b2ad      	uxth	r5, r5
 801594c:	b292      	uxth	r2, r2
 801594e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015952:	fb00 7004 	mla	r0, r0, r4, r7
 8015956:	1c6b      	adds	r3, r5, #1
 8015958:	1c57      	adds	r7, r2, #1
 801595a:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801595e:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8015962:	b280      	uxth	r0, r0
 8015964:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8015968:	f405 4578 	and.w	r5, r5, #63488	; 0xf800
 801596c:	433d      	orrs	r5, r7
 801596e:	1c47      	adds	r7, r0, #1
 8015970:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8015974:	097f      	lsrs	r7, r7, #5
 8015976:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801597a:	433d      	orrs	r5, r7
 801597c:	f8ae 5000 	strh.w	r5, [lr]
 8015980:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8015982:	9a2b      	ldr	r2, [sp, #172]	; 0xac
 8015984:	4413      	add	r3, r2
 8015986:	9329      	str	r3, [sp, #164]	; 0xa4
 8015988:	9a2a      	ldr	r2, [sp, #168]	; 0xa8
 801598a:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801598c:	441a      	add	r2, r3
 801598e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8015990:	922a      	str	r2, [sp, #168]	; 0xa8
 8015992:	3b01      	subs	r3, #1
 8015994:	f10e 0e02 	add.w	lr, lr, #2
 8015998:	9313      	str	r3, [sp, #76]	; 0x4c
 801599a:	e61c      	b.n	80155d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x406>
 801599c:	fb08 f000 	mul.w	r0, r8, r0
 80159a0:	fb09 0303 	mla	r3, r9, r3, r0
 80159a4:	e6dc      	b.n	8015760 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x590>
 80159a6:	46b9      	mov	r9, r7
 80159a8:	e704      	b.n	80157b4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e4>
 80159aa:	f1c2 0110 	rsb	r1, r2, #16
 80159ae:	437a      	muls	r2, r7
 80159b0:	fb09 2901 	mla	r9, r9, r1, r2
 80159b4:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80159b8:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80159bc:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80159c0:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80159c4:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80159c8:	4302      	orrs	r2, r0
 80159ca:	e795      	b.n	80158f8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x728>
 80159cc:	f8ae 2000 	strh.w	r2, [lr]
 80159d0:	e7d6      	b.n	8015980 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b0>
 80159d2:	b017      	add	sp, #92	; 0x5c
 80159d4:	ecbd 8b08 	vpop	{d8-d11}
 80159d8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080159dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 80159dc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80159e0:	b085      	sub	sp, #20
 80159e2:	e9dd 7510 	ldrd	r7, r5, [sp, #64]	; 0x40
 80159e6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	; 0x38
 80159ea:	9103      	str	r1, [sp, #12]
 80159ec:	fb05 7106 	mla	r1, r5, r6, r7
 80159f0:	eb03 0441 	add.w	r4, r3, r1, lsl #1
 80159f4:	2d00      	cmp	r5, #0
 80159f6:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	; 0x3c
 80159fa:	f89d 0048 	ldrb.w	r0, [sp, #72]	; 0x48
 80159fe:	f89d e04c 	ldrb.w	lr, [sp, #76]	; 0x4c
 8015a02:	9401      	str	r4, [sp, #4]
 8015a04:	eb02 0901 	add.w	r9, r2, r1
 8015a08:	f2c0 80c0 	blt.w	8015b8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8015a0c:	45a8      	cmp	r8, r5
 8015a0e:	f340 80bd 	ble.w	8015b8c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1b0>
 8015a12:	2f00      	cmp	r7, #0
 8015a14:	f2c0 80b6 	blt.w	8015b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8015a18:	42be      	cmp	r6, r7
 8015a1a:	f340 80b3 	ble.w	8015b84 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1a8>
 8015a1e:	f812 c001 	ldrb.w	ip, [r2, r1]
 8015a22:	f833 1011 	ldrh.w	r1, [r3, r1, lsl #1]
 8015a26:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8015a2a:	d019      	beq.n	8015a60 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x84>
 8015a2c:	f421 63fc 	bic.w	r3, r1, #2016	; 0x7e0
 8015a30:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8015a34:	435a      	muls	r2, r3
 8015a36:	f401 63fc 	and.w	r3, r1, #2016	; 0x7e0
 8015a3a:	f64f 011f 	movw	r1, #63519	; 0xf81f
 8015a3e:	fb0c f403 	mul.w	r4, ip, r3
 8015a42:	ea01 1352 	and.w	r3, r1, r2, lsr #5
 8015a46:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8015a4a:	441a      	add	r2, r3
 8015a4c:	f104 0320 	add.w	r3, r4, #32
 8015a50:	eb03 2314 	add.w	r3, r3, r4, lsr #8
 8015a54:	0a1b      	lsrs	r3, r3, #8
 8015a56:	ea01 1152 	and.w	r1, r1, r2, lsr #5
 8015a5a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015a5e:	4319      	orrs	r1, r3
 8015a60:	b289      	uxth	r1, r1
 8015a62:	1c7b      	adds	r3, r7, #1
 8015a64:	f100 8097 	bmi.w	8015b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8015a68:	429e      	cmp	r6, r3
 8015a6a:	f340 8094 	ble.w	8015b96 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1ba>
 8015a6e:	2800      	cmp	r0, #0
 8015a70:	f000 8094 	beq.w	8015b9c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c0>
 8015a74:	f899 4001 	ldrb.w	r4, [r9, #1]
 8015a78:	9b01      	ldr	r3, [sp, #4]
 8015a7a:	2cff      	cmp	r4, #255	; 0xff
 8015a7c:	885b      	ldrh	r3, [r3, #2]
 8015a7e:	d01b      	beq.n	8015ab8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xdc>
 8015a80:	f423 62fc 	bic.w	r2, r3, #2016	; 0x7e0
 8015a84:	ea4f 0ae4 	mov.w	sl, r4, asr #3
 8015a88:	fb0a f202 	mul.w	r2, sl, r2
 8015a8c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015a90:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8015a94:	fb04 fa03 	mul.w	sl, r4, r3
 8015a98:	ea0b 1352 	and.w	r3, fp, r2, lsr #5
 8015a9c:	f602 0201 	addw	r2, r2, #2049	; 0x801
 8015aa0:	441a      	add	r2, r3
 8015aa2:	f10a 0320 	add.w	r3, sl, #32
 8015aa6:	eb03 231a 	add.w	r3, r3, sl, lsr #8
 8015aaa:	0a1b      	lsrs	r3, r3, #8
 8015aac:	ea0b 1b52 	and.w	fp, fp, r2, lsr #5
 8015ab0:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015ab4:	ea4b 0303 	orr.w	r3, fp, r3
 8015ab8:	b29b      	uxth	r3, r3
 8015aba:	3501      	adds	r5, #1
 8015abc:	d474      	bmi.n	8015ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8015abe:	45a8      	cmp	r8, r5
 8015ac0:	dd72      	ble.n	8015ba8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1cc>
 8015ac2:	f1be 0f00 	cmp.w	lr, #0
 8015ac6:	f000 8110 	beq.w	8015cea <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x30e>
 8015aca:	2f00      	cmp	r7, #0
 8015acc:	db69      	blt.n	8015ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8015ace:	42be      	cmp	r6, r7
 8015ad0:	dd67      	ble.n	8015ba2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1c6>
 8015ad2:	f819 5006 	ldrb.w	r5, [r9, r6]
 8015ad6:	9a01      	ldr	r2, [sp, #4]
 8015ad8:	2dff      	cmp	r5, #255	; 0xff
 8015ada:	f832 b016 	ldrh.w	fp, [r2, r6, lsl #1]
 8015ade:	d01c      	beq.n	8015b1a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x13e>
 8015ae0:	f42b 62fc 	bic.w	r2, fp, #2016	; 0x7e0
 8015ae4:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8015ae8:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8015aec:	fb05 fa0b 	mul.w	sl, r5, fp
 8015af0:	fb08 f802 	mul.w	r8, r8, r2
 8015af4:	f64f 0b1f 	movw	fp, #63519	; 0xf81f
 8015af8:	ea0b 1258 	and.w	r2, fp, r8, lsr #5
 8015afc:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015b00:	4490      	add	r8, r2
 8015b02:	f10a 0220 	add.w	r2, sl, #32
 8015b06:	eb02 2a1a 	add.w	sl, r2, sl, lsr #8
 8015b0a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8015b0e:	ea0b 1b58 	and.w	fp, fp, r8, lsr #5
 8015b12:	f40a 6afc 	and.w	sl, sl, #2016	; 0x7e0
 8015b16:	ea4b 0b0a 	orr.w	fp, fp, sl
 8015b1a:	fa1f fb8b 	uxth.w	fp, fp
 8015b1e:	3701      	adds	r7, #1
 8015b20:	d447      	bmi.n	8015bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8015b22:	42be      	cmp	r6, r7
 8015b24:	dd45      	ble.n	8015bb2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1d6>
 8015b26:	2800      	cmp	r0, #0
 8015b28:	d046      	beq.n	8015bb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1dc>
 8015b2a:	3601      	adds	r6, #1
 8015b2c:	9a01      	ldr	r2, [sp, #4]
 8015b2e:	f819 7006 	ldrb.w	r7, [r9, r6]
 8015b32:	f832 2016 	ldrh.w	r2, [r2, r6, lsl #1]
 8015b36:	2fff      	cmp	r7, #255	; 0xff
 8015b38:	d01a      	beq.n	8015b70 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x194>
 8015b3a:	f422 66fc 	bic.w	r6, r2, #2016	; 0x7e0
 8015b3e:	ea4f 08e7 	mov.w	r8, r7, asr #3
 8015b42:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015b46:	fb07 f902 	mul.w	r9, r7, r2
 8015b4a:	fb08 f806 	mul.w	r8, r8, r6
 8015b4e:	f64f 021f 	movw	r2, #63519	; 0xf81f
 8015b52:	ea02 1658 	and.w	r6, r2, r8, lsr #5
 8015b56:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015b5a:	44b0      	add	r8, r6
 8015b5c:	f109 0620 	add.w	r6, r9, #32
 8015b60:	eb06 2619 	add.w	r6, r6, r9, lsr #8
 8015b64:	0a36      	lsrs	r6, r6, #8
 8015b66:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8015b6a:	f406 66fc 	and.w	r6, r6, #2016	; 0x7e0
 8015b6e:	4332      	orrs	r2, r6
 8015b70:	b292      	uxth	r2, r2
 8015b72:	280f      	cmp	r0, #15
 8015b74:	d922      	bls.n	8015bbc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e0>
 8015b76:	4b61      	ldr	r3, [pc, #388]	; (8015cfc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x320>)
 8015b78:	4a61      	ldr	r2, [pc, #388]	; (8015d00 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x324>)
 8015b7a:	4862      	ldr	r0, [pc, #392]	; (8015d04 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x328>)
 8015b7c:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8015b80:	f003 fc5e 	bl	8019440 <__assert_func>
 8015b84:	f04f 0c00 	mov.w	ip, #0
 8015b88:	4661      	mov	r1, ip
 8015b8a:	e76a      	b.n	8015a62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x86>
 8015b8c:	2400      	movs	r4, #0
 8015b8e:	46a4      	mov	ip, r4
 8015b90:	4623      	mov	r3, r4
 8015b92:	4621      	mov	r1, r4
 8015b94:	e791      	b.n	8015aba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8015b96:	2400      	movs	r4, #0
 8015b98:	4623      	mov	r3, r4
 8015b9a:	e78e      	b.n	8015aba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8015b9c:	4604      	mov	r4, r0
 8015b9e:	4603      	mov	r3, r0
 8015ba0:	e78b      	b.n	8015aba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xde>
 8015ba2:	2500      	movs	r5, #0
 8015ba4:	46ab      	mov	fp, r5
 8015ba6:	e7ba      	b.n	8015b1e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x142>
 8015ba8:	2700      	movs	r7, #0
 8015baa:	463d      	mov	r5, r7
 8015bac:	463a      	mov	r2, r7
 8015bae:	46bb      	mov	fp, r7
 8015bb0:	e7df      	b.n	8015b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8015bb2:	2700      	movs	r7, #0
 8015bb4:	463a      	mov	r2, r7
 8015bb6:	e7dc      	b.n	8015b72 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x196>
 8015bb8:	4607      	mov	r7, r0
 8015bba:	4602      	mov	r2, r0
 8015bbc:	f1be 0f0f 	cmp.w	lr, #15
 8015bc0:	d8d9      	bhi.n	8015b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8015bc2:	b286      	uxth	r6, r0
 8015bc4:	fa1f f98e 	uxth.w	r9, lr
 8015bc8:	fb06 f809 	mul.w	r8, r6, r9
 8015bcc:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8015bd0:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8015bd4:	0136      	lsls	r6, r6, #4
 8015bd6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015bda:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8015bde:	9601      	str	r6, [sp, #4]
 8015be0:	ea4a 0101 	orr.w	r1, sl, r1
 8015be4:	fa1f f689 	uxth.w	r6, r9
 8015be8:	ea4f 4a03 	mov.w	sl, r3, lsl #16
 8015bec:	fb10 f90e 	smulbb	r9, r0, lr
 8015bf0:	ea4f 09e9 	mov.w	r9, r9, asr #3
 8015bf4:	9602      	str	r6, [sp, #8]
 8015bf6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015bfa:	460e      	mov	r6, r1
 8015bfc:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8015c00:	f1ce 0110 	rsb	r1, lr, #16
 8015c04:	1a09      	subs	r1, r1, r0
 8015c06:	ea4a 0303 	orr.w	r3, sl, r3
 8015c0a:	ebc9 0040 	rsb	r0, r9, r0, lsl #1
 8015c0e:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8015c12:	4343      	muls	r3, r0
 8015c14:	eb09 0141 	add.w	r1, r9, r1, lsl #1
 8015c18:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015c1c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015c20:	fb01 3106 	mla	r1, r1, r6, r3
 8015c24:	ea4a 0202 	orr.w	r2, sl, r2
 8015c28:	fb09 1302 	mla	r3, r9, r2, r1
 8015c2c:	9a03      	ldr	r2, [sp, #12]
 8015c2e:	9802      	ldr	r0, [sp, #8]
 8015c30:	8811      	ldrh	r1, [r2, #0]
 8015c32:	9a01      	ldr	r2, [sp, #4]
 8015c34:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8015c38:	1a12      	subs	r2, r2, r0
 8015c3a:	9801      	ldr	r0, [sp, #4]
 8015c3c:	eba0 0608 	sub.w	r6, r0, r8
 8015c40:	b2b6      	uxth	r6, r6
 8015c42:	b292      	uxth	r2, r2
 8015c44:	4374      	muls	r4, r6
 8015c46:	fb0c 4402 	mla	r4, ip, r2, r4
 8015c4a:	ea4f 4a0b 	mov.w	sl, fp, lsl #16
 8015c4e:	9a02      	ldr	r2, [sp, #8]
 8015c50:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015c54:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8015c58:	fb02 4505 	mla	r5, r2, r5, r4
 8015c5c:	ea4a 0b0b 	orr.w	fp, sl, fp
 8015c60:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8015c64:	fb0e 3e0b 	mla	lr, lr, fp, r3
 8015c68:	fb08 5707 	mla	r7, r8, r7, r5
 8015c6c:	ea4f 535e 	mov.w	r3, lr, lsr #21
 8015c70:	120a      	asrs	r2, r1, #8
 8015c72:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015c76:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8015c7a:	b2ff      	uxtb	r7, r7
 8015c7c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8015c80:	10c8      	asrs	r0, r1, #3
 8015c82:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015c86:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 8015c8a:	00c9      	lsls	r1, r1, #3
 8015c8c:	437a      	muls	r2, r7
 8015c8e:	ea43 0e0e 	orr.w	lr, r3, lr
 8015c92:	b2c9      	uxtb	r1, r1
 8015c94:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8015c98:	fa1f f38e 	uxth.w	r3, lr
 8015c9c:	4378      	muls	r0, r7
 8015c9e:	434f      	muls	r7, r1
 8015ca0:	1c51      	adds	r1, r2, #1
 8015ca2:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8015ca6:	121a      	asrs	r2, r3, #8
 8015ca8:	f022 0207 	bic.w	r2, r2, #7
 8015cac:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8015cb0:	1c41      	adds	r1, r0, #1
 8015cb2:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8015cb6:	10d9      	asrs	r1, r3, #3
 8015cb8:	f021 0103 	bic.w	r1, r1, #3
 8015cbc:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8015cc0:	0212      	lsls	r2, r2, #8
 8015cc2:	00c9      	lsls	r1, r1, #3
 8015cc4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8015cc8:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8015ccc:	430a      	orrs	r2, r1
 8015cce:	1c79      	adds	r1, r7, #1
 8015cd0:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8015cd4:	00db      	lsls	r3, r3, #3
 8015cd6:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8015cda:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8015cde:	4313      	orrs	r3, r2
 8015ce0:	9a03      	ldr	r2, [sp, #12]
 8015ce2:	8013      	strh	r3, [r2, #0]
 8015ce4:	b005      	add	sp, #20
 8015ce6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015cea:	280f      	cmp	r0, #15
 8015cec:	f63f af43 	bhi.w	8015b76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x19a>
 8015cf0:	4677      	mov	r7, lr
 8015cf2:	4675      	mov	r5, lr
 8015cf4:	4672      	mov	r2, lr
 8015cf6:	46f3      	mov	fp, lr
 8015cf8:	e763      	b.n	8015bc2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x1e6>
 8015cfa:	bf00      	nop
 8015cfc:	0801ce3e 	.word	0x0801ce3e
 8015d00:	0801d40a 	.word	0x0801d40a
 8015d04:	0801cec2 	.word	0x0801cec2

08015d08 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8015d08:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015d0c:	ed2d 8b08 	vpush	{d8-d11}
 8015d10:	b093      	sub	sp, #76	; 0x4c
 8015d12:	eeb0 aa40 	vmov.f32	s20, s0
 8015d16:	9210      	str	r2, [sp, #64]	; 0x40
 8015d18:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8015d1a:	910e      	str	r1, [sp, #56]	; 0x38
 8015d1c:	9306      	str	r3, [sp, #24]
 8015d1e:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8015d22:	9011      	str	r0, [sp, #68]	; 0x44
 8015d24:	6850      	ldr	r0, [r2, #4]
 8015d26:	6812      	ldr	r2, [r2, #0]
 8015d28:	fb00 1303 	mla	r3, r0, r3, r1
 8015d2c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8015d30:	9307      	str	r3, [sp, #28]
 8015d32:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015d34:	681b      	ldr	r3, [r3, #0]
 8015d36:	9308      	str	r3, [sp, #32]
 8015d38:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015d3a:	685b      	ldr	r3, [r3, #4]
 8015d3c:	9309      	str	r3, [sp, #36]	; 0x24
 8015d3e:	eef0 9a60 	vmov.f32	s19, s1
 8015d42:	eeb0 9a41 	vmov.f32	s18, s2
 8015d46:	eeb0 8a62 	vmov.f32	s16, s5
 8015d4a:	eef0 8a43 	vmov.f32	s17, s6
 8015d4e:	eef0 ba44 	vmov.f32	s23, s8
 8015d52:	eeb0 ba64 	vmov.f32	s22, s9
 8015d56:	eef0 aa45 	vmov.f32	s21, s10
 8015d5a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8015d5c:	2b00      	cmp	r3, #0
 8015d5e:	dc03      	bgt.n	8015d68 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8015d60:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8015d62:	2b00      	cmp	r3, #0
 8015d64:	f340 83b7 	ble.w	80164d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 8015d68:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015d6a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8015d6e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8015d72:	1e48      	subs	r0, r1, #1
 8015d74:	1e55      	subs	r5, r2, #1
 8015d76:	9b06      	ldr	r3, [sp, #24]
 8015d78:	2b00      	cmp	r3, #0
 8015d7a:	f340 819a 	ble.w	80160b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3aa>
 8015d7e:	9e25      	ldr	r6, [sp, #148]	; 0x94
 8015d80:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015d82:	1436      	asrs	r6, r6, #16
 8015d84:	ea4f 4323 	mov.w	r3, r3, asr #16
 8015d88:	d406      	bmi.n	8015d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015d8a:	4286      	cmp	r6, r0
 8015d8c:	da04      	bge.n	8015d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015d8e:	2b00      	cmp	r3, #0
 8015d90:	db02      	blt.n	8015d98 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8015d92:	42ab      	cmp	r3, r5
 8015d94:	f2c0 818e 	blt.w	80160b4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 8015d98:	3601      	adds	r6, #1
 8015d9a:	f100 817b 	bmi.w	8016094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8015d9e:	42b1      	cmp	r1, r6
 8015da0:	f2c0 8178 	blt.w	8016094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8015da4:	3301      	adds	r3, #1
 8015da6:	f100 8175 	bmi.w	8016094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8015daa:	429a      	cmp	r2, r3
 8015dac:	f2c0 8172 	blt.w	8016094 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8015db0:	9b06      	ldr	r3, [sp, #24]
 8015db2:	9f07      	ldr	r7, [sp, #28]
 8015db4:	930f      	str	r3, [sp, #60]	; 0x3c
 8015db6:	f64f 061f 	movw	r6, #63519	; 0xf81f
 8015dba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8015dbc:	2b00      	cmp	r3, #0
 8015dbe:	f340 819b 	ble.w	80160f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f0>
 8015dc2:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015dc4:	9d25      	ldr	r5, [sp, #148]	; 0x94
 8015dc6:	1418      	asrs	r0, r3, #16
 8015dc8:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8015dca:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8015dce:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8015dd0:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8015dd4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8015dd6:	142d      	asrs	r5, r5, #16
 8015dd8:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8015ddc:	f100 81ef 	bmi.w	80161be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8015de0:	f102 3eff 	add.w	lr, r2, #4294967295
 8015de4:	4575      	cmp	r5, lr
 8015de6:	f280 81ea 	bge.w	80161be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8015dea:	2800      	cmp	r0, #0
 8015dec:	f2c0 81e7 	blt.w	80161be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8015df0:	f103 3eff 	add.w	lr, r3, #4294967295
 8015df4:	4570      	cmp	r0, lr
 8015df6:	f280 81e2 	bge.w	80161be <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b6>
 8015dfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8015dfc:	b212      	sxth	r2, r2
 8015dfe:	fb00 5002 	mla	r0, r0, r2, r5
 8015e02:	fa1f fe81 	uxth.w	lr, r1
 8015e06:	eb03 0a00 	add.w	sl, r3, r0
 8015e0a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 8015e0e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8015e12:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8015e16:	f5c5 7380 	rsb	r3, r5, #256	; 0x100
 8015e1a:	b29b      	uxth	r3, r3
 8015e1c:	f1bc 0f00 	cmp.w	ip, #0
 8015e20:	f000 81b0 	beq.w	8016184 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x47c>
 8015e24:	f81a 4002 	ldrb.w	r4, [sl, r2]
 8015e28:	940a      	str	r4, [sp, #40]	; 0x28
 8015e2a:	eb0a 0b02 	add.w	fp, sl, r2
 8015e2e:	fa1f fa8c 	uxth.w	sl, ip
 8015e32:	fb0a fe0e 	mul.w	lr, sl, lr
 8015e36:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 8015e3a:	fa1f fa8a 	uxth.w	sl, sl
 8015e3e:	eba5 050e 	sub.w	r5, r5, lr
 8015e42:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8015e46:	940b      	str	r4, [sp, #44]	; 0x2c
 8015e48:	eba3 030a 	sub.w	r3, r3, sl
 8015e4c:	b2ad      	uxth	r5, r5
 8015e4e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015e50:	b29b      	uxth	r3, r3
 8015e52:	fb08 f505 	mul.w	r5, r8, r5
 8015e56:	fb09 5303 	mla	r3, r9, r3, r5
 8015e5a:	fb0a 3304 	mla	r3, sl, r4, r3
 8015e5e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015e60:	fb0e 3304 	mla	r3, lr, r4, r3
 8015e64:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8015e68:	2b00      	cmp	r3, #0
 8015e6a:	f000 8106 	beq.w	801607a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 8015e6e:	9c08      	ldr	r4, [sp, #32]
 8015e70:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8015e74:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8015e78:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8015e7c:	f000 8187 	beq.w	801618e <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 8015e80:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8015e84:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8015e88:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015e8c:	fb09 f000 	mul.w	r0, r9, r0
 8015e90:	fb0a fe0e 	mul.w	lr, sl, lr
 8015e94:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8015e98:	f100 0b20 	add.w	fp, r0, #32
 8015e9c:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015ea0:	44ce      	add	lr, r9
 8015ea2:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8015ea6:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8015eaa:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8015eae:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 8015eb2:	ea4e 0909 	orr.w	r9, lr, r9
 8015eb6:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8015eba:	8868      	ldrh	r0, [r5, #2]
 8015ebc:	d019      	beq.n	8015ef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 8015ebe:	f420 6efc 	bic.w	lr, r0, #2016	; 0x7e0
 8015ec2:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8015ec6:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015eca:	fb08 f800 	mul.w	r8, r8, r0
 8015ece:	fb0a fe0e 	mul.w	lr, sl, lr
 8015ed2:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8015ed6:	f108 0b20 	add.w	fp, r8, #32
 8015eda:	f60e 0e01 	addw	lr, lr, #2049	; 0x801
 8015ede:	4486      	add	lr, r0
 8015ee0:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8015ee4:	0a00      	lsrs	r0, r0, #8
 8015ee6:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8015eea:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8015eee:	ea4e 0000 	orr.w	r0, lr, r0
 8015ef2:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8015ef6:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8015efa:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8015efe:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 8015f02:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015f06:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8015f0a:	ea4e 0909 	orr.w	r9, lr, r9
 8015f0e:	ea4a 0000 	orr.w	r0, sl, r0
 8015f12:	f1bc 0f00 	cmp.w	ip, #0
 8015f16:	f000 813c 	beq.w	8016192 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48a>
 8015f1a:	f102 4200 	add.w	r2, r2, #2147483648	; 0x80000000
 8015f1e:	3a01      	subs	r2, #1
 8015f20:	0052      	lsls	r2, r2, #1
 8015f22:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8015f24:	3202      	adds	r2, #2
 8015f26:	2cff      	cmp	r4, #255	; 0xff
 8015f28:	eb05 0e02 	add.w	lr, r5, r2
 8015f2c:	5aaa      	ldrh	r2, [r5, r2]
 8015f2e:	d018      	beq.n	8015f62 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8015f30:	f422 65fc 	bic.w	r5, r2, #2016	; 0x7e0
 8015f34:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015f38:	fb04 fa02 	mul.w	sl, r4, r2
 8015f3c:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015f40:	fb08 f805 	mul.w	r8, r8, r5
 8015f44:	f10a 0520 	add.w	r5, sl, #32
 8015f48:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8015f4c:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8015f50:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015f54:	4442      	add	r2, r8
 8015f56:	0a2d      	lsrs	r5, r5, #8
 8015f58:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8015f5c:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015f60:	432a      	orrs	r2, r5
 8015f62:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8015f64:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8015f68:	2cff      	cmp	r4, #255	; 0xff
 8015f6a:	d01a      	beq.n	8015fa2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8015f6c:	f425 6efc 	bic.w	lr, r5, #2016	; 0x7e0
 8015f70:	f405 65fc 	and.w	r5, r5, #2016	; 0x7e0
 8015f74:	fb04 fa05 	mul.w	sl, r4, r5
 8015f78:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8015f7c:	fb08 f80e 	mul.w	r8, r8, lr
 8015f80:	f10a 0e20 	add.w	lr, sl, #32
 8015f84:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8015f88:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8015f8c:	f608 0801 	addw	r8, r8, #2049	; 0x801
 8015f90:	4445      	add	r5, r8
 8015f92:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8015f96:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8015f9a:	f40e 6efc 	and.w	lr, lr, #2016	; 0x7e0
 8015f9e:	ea45 050e 	orr.w	r5, r5, lr
 8015fa2:	fb1c fe01 	smulbb	lr, ip, r1
 8015fa6:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8015faa:	f1cc 0810 	rsb	r8, ip, #16
 8015fae:	eba8 0801 	sub.w	r8, r8, r1
 8015fb2:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8015fb6:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8015fba:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8015fbe:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8015fc2:	4341      	muls	r1, r0
 8015fc4:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 8015fc8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8015fcc:	ea4a 0202 	orr.w	r2, sl, r2
 8015fd0:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8015fd4:	fb09 1108 	mla	r1, r9, r8, r1
 8015fd8:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8015fdc:	f425 65fc 	bic.w	r5, r5, #2016	; 0x7e0
 8015fe0:	fb0c 1102 	mla	r1, ip, r2, r1
 8015fe4:	ea4b 0505 	orr.w	r5, fp, r5
 8015fe8:	fb0e 1e05 	mla	lr, lr, r5, r1
 8015fec:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8015ff0:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8015ff4:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8015ff8:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 8015ffc:	ea42 0e0e 	orr.w	lr, r2, lr
 8016000:	fa1f f28e 	uxth.w	r2, lr
 8016004:	2bff      	cmp	r3, #255	; 0xff
 8016006:	f000 80d8 	beq.w	80161ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801600a:	f8b7 c000 	ldrh.w	ip, [r7]
 801600e:	43db      	mvns	r3, r3
 8016010:	ea4f 202c 	mov.w	r0, ip, asr #8
 8016014:	fa5f fe83 	uxtb.w	lr, r3
 8016018:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801601c:	fb00 f00e 	mul.w	r0, r0, lr
 8016020:	1c41      	adds	r1, r0, #1
 8016022:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8016026:	1211      	asrs	r1, r2, #8
 8016028:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801602c:	f021 0107 	bic.w	r1, r1, #7
 8016030:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8016034:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016038:	486f      	ldr	r0, [pc, #444]	; (80161f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>)
 801603a:	fb05 f50e 	mul.w	r5, r5, lr
 801603e:	b2c9      	uxtb	r1, r1
 8016040:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8016044:	1c69      	adds	r1, r5, #1
 8016046:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801604a:	10d1      	asrs	r1, r2, #3
 801604c:	f021 0103 	bic.w	r1, r1, #3
 8016050:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8016054:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8016058:	b2db      	uxtb	r3, r3
 801605a:	00c9      	lsls	r1, r1, #3
 801605c:	fb03 f30e 	mul.w	r3, r3, lr
 8016060:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016064:	4301      	orrs	r1, r0
 8016066:	1c58      	adds	r0, r3, #1
 8016068:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 801606c:	00d3      	lsls	r3, r2, #3
 801606e:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8016072:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8016076:	4319      	orrs	r1, r3
 8016078:	8039      	strh	r1, [r7, #0]
 801607a:	9b25      	ldr	r3, [sp, #148]	; 0x94
 801607c:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 801607e:	4413      	add	r3, r2
 8016080:	9325      	str	r3, [sp, #148]	; 0x94
 8016082:	9a26      	ldr	r2, [sp, #152]	; 0x98
 8016084:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016086:	441a      	add	r2, r3
 8016088:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801608a:	9226      	str	r2, [sp, #152]	; 0x98
 801608c:	3b01      	subs	r3, #1
 801608e:	3702      	adds	r7, #2
 8016090:	930f      	str	r3, [sp, #60]	; 0x3c
 8016092:	e692      	b.n	8015dba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8016094:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016096:	9e27      	ldr	r6, [sp, #156]	; 0x9c
 8016098:	9c26      	ldr	r4, [sp, #152]	; 0x98
 801609a:	4433      	add	r3, r6
 801609c:	9325      	str	r3, [sp, #148]	; 0x94
 801609e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80160a0:	441c      	add	r4, r3
 80160a2:	9b06      	ldr	r3, [sp, #24]
 80160a4:	9426      	str	r4, [sp, #152]	; 0x98
 80160a6:	3b01      	subs	r3, #1
 80160a8:	9306      	str	r3, [sp, #24]
 80160aa:	9b07      	ldr	r3, [sp, #28]
 80160ac:	3302      	adds	r3, #2
 80160ae:	9307      	str	r3, [sp, #28]
 80160b0:	e661      	b.n	8015d76 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80160b2:	d028      	beq.n	8016106 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3fe>
 80160b4:	9b06      	ldr	r3, [sp, #24]
 80160b6:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80160b8:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80160ba:	3b01      	subs	r3, #1
 80160bc:	fb00 5003 	mla	r0, r0, r3, r5
 80160c0:	1400      	asrs	r0, r0, #16
 80160c2:	f53f ae75 	bmi.w	8015db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80160c6:	3901      	subs	r1, #1
 80160c8:	4288      	cmp	r0, r1
 80160ca:	f6bf ae71 	bge.w	8015db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80160ce:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80160d0:	9826      	ldr	r0, [sp, #152]	; 0x98
 80160d2:	fb01 0303 	mla	r3, r1, r3, r0
 80160d6:	141b      	asrs	r3, r3, #16
 80160d8:	f53f ae6a 	bmi.w	8015db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80160dc:	3a01      	subs	r2, #1
 80160de:	4293      	cmp	r3, r2
 80160e0:	f6bf ae66 	bge.w	8015db0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 80160e4:	9b06      	ldr	r3, [sp, #24]
 80160e6:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80160ea:	930f      	str	r3, [sp, #60]	; 0x3c
 80160ec:	f64f 061f 	movw	r6, #63519	; 0xf81f
 80160f0:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80160f2:	2b00      	cmp	r3, #0
 80160f4:	f300 8082 	bgt.w	80161fc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 80160f8:	9b06      	ldr	r3, [sp, #24]
 80160fa:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80160fe:	9b07      	ldr	r3, [sp, #28]
 8016100:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8016104:	9307      	str	r3, [sp, #28]
 8016106:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016108:	2b00      	cmp	r3, #0
 801610a:	f340 81e4 	ble.w	80164d6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ce>
 801610e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016112:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016116:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801611a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801611c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016120:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016124:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016128:	eef0 6a48 	vmov.f32	s13, s16
 801612c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016130:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016134:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016138:	edcd 6a25 	vstr	s13, [sp, #148]	; 0x94
 801613c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016140:	eef0 6a68 	vmov.f32	s13, s17
 8016144:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016148:	ee18 2a10 	vmov	r2, s16
 801614c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016150:	fb92 f3f3 	sdiv	r3, r2, r3
 8016154:	ee18 2a90 	vmov	r2, s17
 8016158:	9327      	str	r3, [sp, #156]	; 0x9c
 801615a:	9b24      	ldr	r3, [sp, #144]	; 0x90
 801615c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016160:	9328      	str	r3, [sp, #160]	; 0xa0
 8016162:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8016164:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8016166:	3b01      	subs	r3, #1
 8016168:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801616c:	930e      	str	r3, [sp, #56]	; 0x38
 801616e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016170:	edcd 6a26 	vstr	s13, [sp, #152]	; 0x98
 8016174:	bf08      	it	eq
 8016176:	4613      	moveq	r3, r2
 8016178:	9306      	str	r3, [sp, #24]
 801617a:	eef0 8a67 	vmov.f32	s17, s15
 801617e:	eeb0 8a47 	vmov.f32	s16, s14
 8016182:	e5ea      	b.n	8015d5a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8016184:	fb08 f505 	mul.w	r5, r8, r5
 8016188:	fb09 5303 	mla	r3, r9, r3, r5
 801618c:	e66a      	b.n	8015e64 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 801618e:	4681      	mov	r9, r0
 8016190:	e691      	b.n	8015eb6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 8016192:	f1c1 0210 	rsb	r2, r1, #16
 8016196:	4341      	muls	r1, r0
 8016198:	fb09 1902 	mla	r9, r9, r2, r1
 801619c:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80161a0:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80161a4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80161a8:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80161ac:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 80161b0:	ea42 0909 	orr.w	r9, r2, r9
 80161b4:	fa1f f289 	uxth.w	r2, r9
 80161b8:	e724      	b.n	8016004 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 80161ba:	803a      	strh	r2, [r7, #0]
 80161bc:	e75d      	b.n	801607a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80161be:	f115 0e01 	adds.w	lr, r5, #1
 80161c2:	f53f af5a 	bmi.w	801607a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80161c6:	4572      	cmp	r2, lr
 80161c8:	f6ff af57 	blt.w	801607a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80161cc:	f110 0e01 	adds.w	lr, r0, #1
 80161d0:	f53f af53 	bmi.w	801607a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80161d4:	4573      	cmp	r3, lr
 80161d6:	f6ff af50 	blt.w	801607a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80161da:	b21b      	sxth	r3, r3
 80161dc:	b212      	sxth	r2, r2
 80161de:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 80161e2:	e9cd 5002 	strd	r5, r0, [sp, #8]
 80161e6:	9301      	str	r3, [sp, #4]
 80161e8:	9200      	str	r2, [sp, #0]
 80161ea:	4639      	mov	r1, r7
 80161ec:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 80161f0:	9811      	ldr	r0, [sp, #68]	; 0x44
 80161f2:	f7ff fbf3 	bl	80159dc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 80161f6:	e740      	b.n	801607a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80161f8:	fffff800 	.word	0xfffff800
 80161fc:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80161fe:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8016202:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016204:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8016208:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801620a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801620e:	9b26      	ldr	r3, [sp, #152]	; 0x98
 8016210:	141f      	asrs	r7, r3, #16
 8016212:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016214:	141b      	asrs	r3, r3, #16
 8016216:	fb01 3707 	mla	r7, r1, r7, r3
 801621a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801621c:	fa1f fc82 	uxth.w	ip, r2
 8016220:	eb03 0a07 	add.w	sl, r3, r7
 8016224:	ea4f 100c 	mov.w	r0, ip, lsl #4
 8016228:	f813 9007 	ldrb.w	r9, [r3, r7]
 801622c:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8016230:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 8016234:	b29b      	uxth	r3, r3
 8016236:	2d00      	cmp	r5, #0
 8016238:	f000 8132 	beq.w	80164a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x798>
 801623c:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8016240:	940c      	str	r4, [sp, #48]	; 0x30
 8016242:	eb0a 0b01 	add.w	fp, sl, r1
 8016246:	fa1f fa85 	uxth.w	sl, r5
 801624a:	fb0a fc0c 	mul.w	ip, sl, ip
 801624e:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8016252:	fa1f fa8a 	uxth.w	sl, sl
 8016256:	eba0 000c 	sub.w	r0, r0, ip
 801625a:	eba3 030a 	sub.w	r3, r3, sl
 801625e:	b280      	uxth	r0, r0
 8016260:	fb08 f000 	mul.w	r0, r8, r0
 8016264:	b29b      	uxth	r3, r3
 8016266:	fb09 0303 	mla	r3, r9, r3, r0
 801626a:	980c      	ldr	r0, [sp, #48]	; 0x30
 801626c:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8016270:	940d      	str	r4, [sp, #52]	; 0x34
 8016272:	fb0a 3300 	mla	r3, sl, r0, r3
 8016276:	fb0c 3304 	mla	r3, ip, r4, r3
 801627a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801627e:	2b00      	cmp	r3, #0
 8016280:	f000 8100 	beq.w	8016484 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 8016284:	9808      	ldr	r0, [sp, #32]
 8016286:	9c08      	ldr	r4, [sp, #32]
 8016288:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 801628c:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8016290:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8016294:	f000 8109 	beq.w	80164aa <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a2>
 8016298:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 801629c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 80162a0:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80162a4:	fb09 f707 	mul.w	r7, r9, r7
 80162a8:	fb0a fc0c 	mul.w	ip, sl, ip
 80162ac:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 80162b0:	f107 0b20 	add.w	fp, r7, #32
 80162b4:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80162b8:	44cc      	add	ip, r9
 80162ba:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 80162be:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80162c2:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 80162c6:	f409 69fc 	and.w	r9, r9, #2016	; 0x7e0
 80162ca:	ea4c 0909 	orr.w	r9, ip, r9
 80162ce:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 80162d2:	8847      	ldrh	r7, [r0, #2]
 80162d4:	d019      	beq.n	801630a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x602>
 80162d6:	f427 6cfc 	bic.w	ip, r7, #2016	; 0x7e0
 80162da:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 80162de:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 80162e2:	fb08 f807 	mul.w	r8, r8, r7
 80162e6:	fb0a fc0c 	mul.w	ip, sl, ip
 80162ea:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 80162ee:	f108 0b20 	add.w	fp, r8, #32
 80162f2:	f60c 0c01 	addw	ip, ip, #2049	; 0x801
 80162f6:	44bc      	add	ip, r7
 80162f8:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 80162fc:	0a3f      	lsrs	r7, r7, #8
 80162fe:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8016302:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 8016306:	ea4c 0707 	orr.w	r7, ip, r7
 801630a:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 801630e:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8016312:	f00c 6cfc 	and.w	ip, ip, #132120576	; 0x7e00000
 8016316:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801631a:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 801631e:	f427 67fc 	bic.w	r7, r7, #2016	; 0x7e0
 8016322:	ea4c 0909 	orr.w	r9, ip, r9
 8016326:	ea4a 0707 	orr.w	r7, sl, r7
 801632a:	2d00      	cmp	r5, #0
 801632c:	f000 80bf 	beq.w	80164ae <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a6>
 8016330:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 8016334:	3901      	subs	r1, #1
 8016336:	0049      	lsls	r1, r1, #1
 8016338:	3102      	adds	r1, #2
 801633a:	eb00 0c01 	add.w	ip, r0, r1
 801633e:	5a41      	ldrh	r1, [r0, r1]
 8016340:	980c      	ldr	r0, [sp, #48]	; 0x30
 8016342:	28ff      	cmp	r0, #255	; 0xff
 8016344:	d019      	beq.n	801637a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x672>
 8016346:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8016348:	f421 60fc 	bic.w	r0, r1, #2016	; 0x7e0
 801634c:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016350:	fb04 fa01 	mul.w	sl, r4, r1
 8016354:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016358:	fb08 f800 	mul.w	r8, r8, r0
 801635c:	f10a 0020 	add.w	r0, sl, #32
 8016360:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8016364:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8016368:	f608 0801 	addw	r8, r8, #2049	; 0x801
 801636c:	4441      	add	r1, r8
 801636e:	0a00      	lsrs	r0, r0, #8
 8016370:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8016374:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8016378:	4301      	orrs	r1, r0
 801637a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 801637c:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8016380:	2cff      	cmp	r4, #255	; 0xff
 8016382:	d01a      	beq.n	80163ba <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b2>
 8016384:	f420 6cfc 	bic.w	ip, r0, #2016	; 0x7e0
 8016388:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 801638c:	fb04 fa00 	mul.w	sl, r4, r0
 8016390:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8016394:	fb08 f80c 	mul.w	r8, r8, ip
 8016398:	f10a 0c20 	add.w	ip, sl, #32
 801639c:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 80163a0:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 80163a4:	f608 0801 	addw	r8, r8, #2049	; 0x801
 80163a8:	4440      	add	r0, r8
 80163aa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80163ae:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 80163b2:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 80163b6:	ea40 000c 	orr.w	r0, r0, ip
 80163ba:	fb15 fc02 	smulbb	ip, r5, r2
 80163be:	ea4f 0cec 	mov.w	ip, ip, asr #3
 80163c2:	f1c5 0810 	rsb	r8, r5, #16
 80163c6:	eba8 0802 	sub.w	r8, r8, r2
 80163ca:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80163ce:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 80163d2:	437a      	muls	r2, r7
 80163d4:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 80163d8:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 80163dc:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80163e0:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80163e4:	fb09 2208 	mla	r2, r9, r8, r2
 80163e8:	ea4a 0101 	orr.w	r1, sl, r1
 80163ec:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 80163f0:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 80163f4:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 80163f8:	fb05 2201 	mla	r2, r5, r1, r2
 80163fc:	ea4b 0000 	orr.w	r0, fp, r0
 8016400:	fb0c 2200 	mla	r2, ip, r0, r2
 8016404:	0d57      	lsrs	r7, r2, #21
 8016406:	0952      	lsrs	r2, r2, #5
 8016408:	f407 67fc 	and.w	r7, r7, #2016	; 0x7e0
 801640c:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016410:	433a      	orrs	r2, r7
 8016412:	2bff      	cmp	r3, #255	; 0xff
 8016414:	b292      	uxth	r2, r2
 8016416:	d05b      	beq.n	80164d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c8>
 8016418:	f8be 7000 	ldrh.w	r7, [lr]
 801641c:	4c30      	ldr	r4, [pc, #192]	; (80164e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>)
 801641e:	43db      	mvns	r3, r3
 8016420:	1238      	asrs	r0, r7, #8
 8016422:	fa5f fc83 	uxtb.w	ip, r3
 8016426:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801642a:	10fd      	asrs	r5, r7, #3
 801642c:	fb00 f00c 	mul.w	r0, r0, ip
 8016430:	f005 05fc 	and.w	r5, r5, #252	; 0xfc
 8016434:	fb05 f10c 	mul.w	r1, r5, ip
 8016438:	1c45      	adds	r5, r0, #1
 801643a:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 801643e:	1215      	asrs	r5, r2, #8
 8016440:	f025 0507 	bic.w	r5, r5, #7
 8016444:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8016448:	1c4d      	adds	r5, r1, #1
 801644a:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 801644e:	10d1      	asrs	r1, r2, #3
 8016450:	f021 0103 	bic.w	r1, r1, #3
 8016454:	00fb      	lsls	r3, r7, #3
 8016456:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 801645a:	b2db      	uxtb	r3, r3
 801645c:	b2c0      	uxtb	r0, r0
 801645e:	00c9      	lsls	r1, r1, #3
 8016460:	fb03 f30c 	mul.w	r3, r3, ip
 8016464:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016468:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 801646c:	4308      	orrs	r0, r1
 801646e:	1c59      	adds	r1, r3, #1
 8016470:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8016474:	00d2      	lsls	r2, r2, #3
 8016476:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 801647a:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 801647e:	4318      	orrs	r0, r3
 8016480:	f8ae 0000 	strh.w	r0, [lr]
 8016484:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016486:	9a27      	ldr	r2, [sp, #156]	; 0x9c
 8016488:	4413      	add	r3, r2
 801648a:	9325      	str	r3, [sp, #148]	; 0x94
 801648c:	9a26      	ldr	r2, [sp, #152]	; 0x98
 801648e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016490:	441a      	add	r2, r3
 8016492:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8016494:	9226      	str	r2, [sp, #152]	; 0x98
 8016496:	3b01      	subs	r3, #1
 8016498:	f10e 0e02 	add.w	lr, lr, #2
 801649c:	930f      	str	r3, [sp, #60]	; 0x3c
 801649e:	e627      	b.n	80160f0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e8>
 80164a0:	fb08 f000 	mul.w	r0, r8, r0
 80164a4:	fb09 0303 	mla	r3, r9, r3, r0
 80164a8:	e6e7      	b.n	801627a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x572>
 80164aa:	46b9      	mov	r9, r7
 80164ac:	e70f      	b.n	80162ce <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c6>
 80164ae:	f1c2 0110 	rsb	r1, r2, #16
 80164b2:	437a      	muls	r2, r7
 80164b4:	fb09 2901 	mla	r9, r9, r1, r2
 80164b8:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80164bc:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80164c0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80164c4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 80164c8:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80164cc:	4302      	orrs	r2, r0
 80164ce:	e7a0      	b.n	8016412 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70a>
 80164d0:	f8ae 2000 	strh.w	r2, [lr]
 80164d4:	e7d6      	b.n	8016484 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>
 80164d6:	b013      	add	sp, #76	; 0x4c
 80164d8:	ecbd 8b08 	vpop	{d8-d11}
 80164dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80164e0:	fffff800 	.word	0xfffff800

080164e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 80164e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80164e8:	e9dd 4c09 	ldrd	r4, ip, [sp, #36]	; 0x24
 80164ec:	fb0c 4e03 	mla	lr, ip, r3, r4
 80164f0:	f1bc 0f00 	cmp.w	ip, #0
 80164f4:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 80164f8:	f89d 702c 	ldrb.w	r7, [sp, #44]	; 0x2c
 80164fc:	f89d 6030 	ldrb.w	r6, [sp, #48]	; 0x30
 8016500:	f89d 5034 	ldrb.w	r5, [sp, #52]	; 0x34
 8016504:	8808      	ldrh	r0, [r1, #0]
 8016506:	eb02 084e 	add.w	r8, r2, lr, lsl #1
 801650a:	db2f      	blt.n	801656c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 801650c:	45e2      	cmp	sl, ip
 801650e:	dd2d      	ble.n	801656c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x88>
 8016510:	2c00      	cmp	r4, #0
 8016512:	db29      	blt.n	8016568 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8016514:	42a3      	cmp	r3, r4
 8016516:	dd27      	ble.n	8016568 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x84>
 8016518:	f832 901e 	ldrh.w	r9, [r2, lr, lsl #1]
 801651c:	1c62      	adds	r2, r4, #1
 801651e:	d428      	bmi.n	8016572 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016520:	4293      	cmp	r3, r2
 8016522:	dd26      	ble.n	8016572 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016524:	b32f      	cbz	r7, 8016572 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x8e>
 8016526:	f8b8 e002 	ldrh.w	lr, [r8, #2]
 801652a:	f11c 0c01 	adds.w	ip, ip, #1
 801652e:	d424      	bmi.n	801657a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8016530:	45e2      	cmp	sl, ip
 8016532:	dd22      	ble.n	801657a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x96>
 8016534:	2e00      	cmp	r6, #0
 8016536:	f000 809d 	beq.w	8016674 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x190>
 801653a:	2c00      	cmp	r4, #0
 801653c:	db1b      	blt.n	8016576 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 801653e:	42a3      	cmp	r3, r4
 8016540:	dd19      	ble.n	8016576 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x92>
 8016542:	f838 c013 	ldrh.w	ip, [r8, r3, lsl #1]
 8016546:	3401      	adds	r4, #1
 8016548:	d41a      	bmi.n	8016580 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801654a:	42a3      	cmp	r3, r4
 801654c:	dd18      	ble.n	8016580 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x9c>
 801654e:	b1cf      	cbz	r7, 8016584 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa0>
 8016550:	3301      	adds	r3, #1
 8016552:	f838 3013 	ldrh.w	r3, [r8, r3, lsl #1]
 8016556:	2f0f      	cmp	r7, #15
 8016558:	d915      	bls.n	8016586 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa2>
 801655a:	4b49      	ldr	r3, [pc, #292]	; (8016680 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x19c>)
 801655c:	4a49      	ldr	r2, [pc, #292]	; (8016684 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a0>)
 801655e:	484a      	ldr	r0, [pc, #296]	; (8016688 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x1a4>)
 8016560:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8016564:	f002 ff6c 	bl	8019440 <__assert_func>
 8016568:	4681      	mov	r9, r0
 801656a:	e7d7      	b.n	801651c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x38>
 801656c:	4686      	mov	lr, r0
 801656e:	4681      	mov	r9, r0
 8016570:	e7db      	b.n	801652a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8016572:	4686      	mov	lr, r0
 8016574:	e7d9      	b.n	801652a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x46>
 8016576:	4684      	mov	ip, r0
 8016578:	e7e5      	b.n	8016546 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x62>
 801657a:	4603      	mov	r3, r0
 801657c:	4684      	mov	ip, r0
 801657e:	e7ea      	b.n	8016556 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8016580:	4603      	mov	r3, r0
 8016582:	e7e8      	b.n	8016556 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x72>
 8016584:	4603      	mov	r3, r0
 8016586:	2e0f      	cmp	r6, #15
 8016588:	d8e7      	bhi.n	801655a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801658a:	ea4f 4409 	mov.w	r4, r9, lsl #16
 801658e:	fb17 f806 	smulbb	r8, r7, r6
 8016592:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016596:	ea4f 4a0e 	mov.w	sl, lr, lsl #16
 801659a:	f429 69fc 	bic.w	r9, r9, #2016	; 0x7e0
 801659e:	ea4f 08e8 	mov.w	r8, r8, asr #3
 80165a2:	ea44 0909 	orr.w	r9, r4, r9
 80165a6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80165aa:	f1c6 0410 	rsb	r4, r6, #16
 80165ae:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80165b2:	1be4      	subs	r4, r4, r7
 80165b4:	041a      	lsls	r2, r3, #16
 80165b6:	ebc8 0747 	rsb	r7, r8, r7, lsl #1
 80165ba:	ea4a 0e0e 	orr.w	lr, sl, lr
 80165be:	fb07 fe0e 	mul.w	lr, r7, lr
 80165c2:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80165c6:	eb08 0444 	add.w	r4, r8, r4, lsl #1
 80165ca:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 80165ce:	fb04 e409 	mla	r4, r4, r9, lr
 80165d2:	4313      	orrs	r3, r2
 80165d4:	ea4f 420c 	mov.w	r2, ip, lsl #16
 80165d8:	fb08 4303 	mla	r3, r8, r3, r4
 80165dc:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 80165e0:	f42c 64fc 	bic.w	r4, ip, #2016	; 0x7e0
 80165e4:	4322      	orrs	r2, r4
 80165e6:	ebc8 0646 	rsb	r6, r8, r6, lsl #1
 80165ea:	fb06 3202 	mla	r2, r6, r2, r3
 80165ee:	0d53      	lsrs	r3, r2, #21
 80165f0:	0952      	lsrs	r2, r2, #5
 80165f2:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 80165f6:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80165fa:	431a      	orrs	r2, r3
 80165fc:	b293      	uxth	r3, r2
 80165fe:	b2af      	uxth	r7, r5
 8016600:	1202      	asrs	r2, r0, #8
 8016602:	43ed      	mvns	r5, r5
 8016604:	b2ed      	uxtb	r5, r5
 8016606:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801660a:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801660e:	fb12 f205 	smulbb	r2, r2, r5
 8016612:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016616:	fb0c 2c07 	mla	ip, ip, r7, r2
 801661a:	00dc      	lsls	r4, r3, #3
 801661c:	10da      	asrs	r2, r3, #3
 801661e:	10c6      	asrs	r6, r0, #3
 8016620:	00c3      	lsls	r3, r0, #3
 8016622:	f006 06fc 	and.w	r6, r6, #252	; 0xfc
 8016626:	b2db      	uxtb	r3, r3
 8016628:	fb16 f605 	smulbb	r6, r6, r5
 801662c:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8016630:	b2e4      	uxtb	r4, r4
 8016632:	fb13 f305 	smulbb	r3, r3, r5
 8016636:	fa1f fc8c 	uxth.w	ip, ip
 801663a:	fb02 6207 	mla	r2, r2, r7, r6
 801663e:	fb04 3307 	mla	r3, r4, r7, r3
 8016642:	b296      	uxth	r6, r2
 8016644:	b29a      	uxth	r2, r3
 8016646:	f10c 0301 	add.w	r3, ip, #1
 801664a:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801664e:	1c53      	adds	r3, r2, #1
 8016650:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016654:	1c72      	adds	r2, r6, #1
 8016656:	eb02 2216 	add.w	r2, r2, r6, lsr #8
 801665a:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801665e:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8016662:	0952      	lsrs	r2, r2, #5
 8016664:	ea43 030c 	orr.w	r3, r3, ip
 8016668:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801666c:	4313      	orrs	r3, r2
 801666e:	800b      	strh	r3, [r1, #0]
 8016670:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016674:	2f0f      	cmp	r7, #15
 8016676:	f63f af70 	bhi.w	801655a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x76>
 801667a:	4603      	mov	r3, r0
 801667c:	4684      	mov	ip, r0
 801667e:	e784      	b.n	801658a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0xa6>
 8016680:	0801ce3e 	.word	0x0801ce3e
 8016684:	0801d4b3 	.word	0x0801d4b3
 8016688:	0801cec2 	.word	0x0801cec2

0801668c <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801668c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016690:	ed2d 8b08 	vpush	{d8-d11}
 8016694:	b093      	sub	sp, #76	; 0x4c
 8016696:	461d      	mov	r5, r3
 8016698:	9210      	str	r2, [sp, #64]	; 0x40
 801669a:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 801669c:	f89d 20b4 	ldrb.w	r2, [sp, #180]	; 0xb4
 80166a0:	920b      	str	r2, [sp, #44]	; 0x2c
 80166a2:	e9dd 272a 	ldrd	r2, r7, [sp, #168]	; 0xa8
 80166a6:	910a      	str	r1, [sp, #40]	; 0x28
 80166a8:	6859      	ldr	r1, [r3, #4]
 80166aa:	681b      	ldr	r3, [r3, #0]
 80166ac:	9011      	str	r0, [sp, #68]	; 0x44
 80166ae:	fb01 2707 	mla	r7, r1, r7, r2
 80166b2:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 80166b6:	9307      	str	r3, [sp, #28]
 80166b8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80166ba:	681b      	ldr	r3, [r3, #0]
 80166bc:	9309      	str	r3, [sp, #36]	; 0x24
 80166be:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80166c0:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 80166c4:	43db      	mvns	r3, r3
 80166c6:	b2db      	uxtb	r3, r3
 80166c8:	eeb0 aa40 	vmov.f32	s20, s0
 80166cc:	eef0 9a60 	vmov.f32	s19, s1
 80166d0:	eeb0 9a41 	vmov.f32	s18, s2
 80166d4:	eeb0 8a62 	vmov.f32	s16, s5
 80166d8:	eef0 8a43 	vmov.f32	s17, s6
 80166dc:	eef0 ba44 	vmov.f32	s23, s8
 80166e0:	eeb0 ba64 	vmov.f32	s22, s9
 80166e4:	eef0 aa45 	vmov.f32	s21, s10
 80166e8:	9308      	str	r3, [sp, #32]
 80166ea:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80166ec:	2b00      	cmp	r3, #0
 80166ee:	dc03      	bgt.n	80166f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 80166f0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80166f2:	2b00      	cmp	r3, #0
 80166f4:	f340 8203 	ble.w	8016afe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 80166f8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80166fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80166fe:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016702:	1e48      	subs	r0, r1, #1
 8016704:	f102 3cff 	add.w	ip, r2, #4294967295
 8016708:	2d00      	cmp	r5, #0
 801670a:	f340 80da 	ble.w	80168c2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 801670e:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8016712:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016716:	d406      	bmi.n	8016726 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016718:	4586      	cmp	lr, r0
 801671a:	da04      	bge.n	8016726 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801671c:	2b00      	cmp	r3, #0
 801671e:	db02      	blt.n	8016726 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 8016720:	4563      	cmp	r3, ip
 8016722:	f2c0 80cf 	blt.w	80168c4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 8016726:	f11e 0e01 	adds.w	lr, lr, #1
 801672a:	f100 80c1 	bmi.w	80168b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801672e:	4571      	cmp	r1, lr
 8016730:	f2c0 80be 	blt.w	80168b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8016734:	3301      	adds	r3, #1
 8016736:	f100 80bb 	bmi.w	80168b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 801673a:	429a      	cmp	r2, r3
 801673c:	f2c0 80b8 	blt.w	80168b0 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x224>
 8016740:	f8dd 801c 	ldr.w	r8, [sp, #28]
 8016744:	46a9      	mov	r9, r5
 8016746:	f1b9 0f00 	cmp.w	r9, #0
 801674a:	f340 80d8 	ble.w	80168fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801674e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8016750:	1421      	asrs	r1, r4, #16
 8016752:	ea4f 4026 	mov.w	r0, r6, asr #16
 8016756:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801675a:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 801675e:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8016762:	f100 8111 	bmi.w	8016988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8016766:	f10e 3aff 	add.w	sl, lr, #4294967295
 801676a:	4551      	cmp	r1, sl
 801676c:	f280 810c 	bge.w	8016988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8016770:	2800      	cmp	r0, #0
 8016772:	f2c0 8109 	blt.w	8016988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8016776:	f103 3aff 	add.w	sl, r3, #4294967295
 801677a:	4550      	cmp	r0, sl
 801677c:	f280 8104 	bge.w	8016988 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fc>
 8016780:	fa0f f38e 	sxth.w	r3, lr
 8016784:	fb00 1103 	mla	r1, r0, r3, r1
 8016788:	9809      	ldr	r0, [sp, #36]	; 0x24
 801678a:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 801678e:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 8016792:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 8016796:	f1bc 0f00 	cmp.w	ip, #0
 801679a:	d007      	beq.n	80167ac <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x120>
 801679c:	005b      	lsls	r3, r3, #1
 801679e:	eb0a 0003 	add.w	r0, sl, r3
 80167a2:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80167a6:	930c      	str	r3, [sp, #48]	; 0x30
 80167a8:	8843      	ldrh	r3, [r0, #2]
 80167aa:	930d      	str	r3, [sp, #52]	; 0x34
 80167ac:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80167b0:	fb12 f30c 	smulbb	r3, r2, ip
 80167b4:	f42e 6efc 	bic.w	lr, lr, #2016	; 0x7e0
 80167b8:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80167bc:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80167c0:	10db      	asrs	r3, r3, #3
 80167c2:	ea40 000e 	orr.w	r0, r0, lr
 80167c6:	f00a 6afc 	and.w	sl, sl, #132120576	; 0x7e00000
 80167ca:	f1cc 0e10 	rsb	lr, ip, #16
 80167ce:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 80167d2:	ebae 0e02 	sub.w	lr, lr, r2
 80167d6:	ea4a 0101 	orr.w	r1, sl, r1
 80167da:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 80167de:	4351      	muls	r1, r2
 80167e0:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80167e2:	9f08      	ldr	r7, [sp, #32]
 80167e4:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 80167e8:	fb0e 1e00 	mla	lr, lr, r0, r1
 80167ec:	0410      	lsls	r0, r2, #16
 80167ee:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 80167f2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 80167f6:	4310      	orrs	r0, r2
 80167f8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80167fa:	990c      	ldr	r1, [sp, #48]	; 0x30
 80167fc:	0412      	lsls	r2, r2, #16
 80167fe:	fb03 e000 	mla	r0, r3, r0, lr
 8016802:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016806:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 801680a:	ea42 020e 	orr.w	r2, r2, lr
 801680e:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8016812:	fb03 0302 	mla	r3, r3, r2, r0
 8016816:	0d5a      	lsrs	r2, r3, #21
 8016818:	095b      	lsrs	r3, r3, #5
 801681a:	f8b8 0000 	ldrh.w	r0, [r8]
 801681e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016822:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016826:	4313      	orrs	r3, r2
 8016828:	b29b      	uxth	r3, r3
 801682a:	1201      	asrs	r1, r0, #8
 801682c:	f8bd 202c 	ldrh.w	r2, [sp, #44]	; 0x2c
 8016830:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8016834:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016838:	fb11 f107 	smulbb	r1, r1, r7
 801683c:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8016840:	f00c 0cf8 	and.w	ip, ip, #248	; 0xf8
 8016844:	00c0      	lsls	r0, r0, #3
 8016846:	fb0c 1c02 	mla	ip, ip, r2, r1
 801684a:	b2c0      	uxtb	r0, r0
 801684c:	10d9      	asrs	r1, r3, #3
 801684e:	00db      	lsls	r3, r3, #3
 8016850:	f00e 0efc 	and.w	lr, lr, #252	; 0xfc
 8016854:	b2db      	uxtb	r3, r3
 8016856:	fb10 f007 	smulbb	r0, r0, r7
 801685a:	fa1f fc8c 	uxth.w	ip, ip
 801685e:	fb03 0302 	mla	r3, r3, r2, r0
 8016862:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016866:	fb1e fe07 	smulbb	lr, lr, r7
 801686a:	fb01 e102 	mla	r1, r1, r2, lr
 801686e:	b29a      	uxth	r2, r3
 8016870:	f10c 0301 	add.w	r3, ip, #1
 8016874:	b289      	uxth	r1, r1
 8016876:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801687a:	1c53      	adds	r3, r2, #1
 801687c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8016880:	1c4a      	adds	r2, r1, #1
 8016882:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8016886:	f40c 4c78 	and.w	ip, ip, #63488	; 0xf800
 801688a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801688e:	0949      	lsrs	r1, r1, #5
 8016890:	ea43 030c 	orr.w	r3, r3, ip
 8016894:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8016898:	430b      	orrs	r3, r1
 801689a:	f8a8 3000 	strh.w	r3, [r8]
 801689e:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80168a0:	441c      	add	r4, r3
 80168a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80168a4:	f108 0802 	add.w	r8, r8, #2
 80168a8:	441e      	add	r6, r3
 80168aa:	f109 39ff 	add.w	r9, r9, #4294967295
 80168ae:	e74a      	b.n	8016746 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xba>
 80168b0:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 80168b2:	441c      	add	r4, r3
 80168b4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80168b6:	441e      	add	r6, r3
 80168b8:	9b07      	ldr	r3, [sp, #28]
 80168ba:	3302      	adds	r3, #2
 80168bc:	3d01      	subs	r5, #1
 80168be:	9307      	str	r3, [sp, #28]
 80168c0:	e722      	b.n	8016708 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 80168c2:	d022      	beq.n	801690a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27e>
 80168c4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 80168c6:	1e6b      	subs	r3, r5, #1
 80168c8:	fb00 4003 	mla	r0, r0, r3, r4
 80168cc:	1400      	asrs	r0, r0, #16
 80168ce:	f53f af37 	bmi.w	8016740 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80168d2:	3901      	subs	r1, #1
 80168d4:	4288      	cmp	r0, r1
 80168d6:	f6bf af33 	bge.w	8016740 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80168da:	9928      	ldr	r1, [sp, #160]	; 0xa0
 80168dc:	fb01 6303 	mla	r3, r1, r3, r6
 80168e0:	141b      	asrs	r3, r3, #16
 80168e2:	f53f af2d 	bmi.w	8016740 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80168e6:	3a01      	subs	r2, #1
 80168e8:	4293      	cmp	r3, r2
 80168ea:	f6bf af29 	bge.w	8016740 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb4>
 80168ee:	f8dd 901c 	ldr.w	r9, [sp, #28]
 80168f2:	f8bd a02c 	ldrh.w	sl, [sp, #44]	; 0x2c
 80168f6:	46a8      	mov	r8, r5
 80168f8:	f1b8 0f00 	cmp.w	r8, #0
 80168fc:	dc5e      	bgt.n	80169bc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 80168fe:	9b07      	ldr	r3, [sp, #28]
 8016900:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8016904:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8016908:	9307      	str	r3, [sp, #28]
 801690a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801690c:	2b00      	cmp	r3, #0
 801690e:	f340 80f6 	ble.w	8016afe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x472>
 8016912:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016916:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801691a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801691e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016920:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016924:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016928:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801692c:	eef0 6a48 	vmov.f32	s13, s16
 8016930:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016934:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016938:	ee37 8a48 	vsub.f32	s16, s14, s16
 801693c:	ee16 4a90 	vmov	r4, s13
 8016940:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016944:	eef0 6a68 	vmov.f32	s13, s17
 8016948:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801694c:	ee18 2a10 	vmov	r2, s16
 8016950:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016954:	fb92 f3f3 	sdiv	r3, r2, r3
 8016958:	ee18 2a90 	vmov	r2, s17
 801695c:	9327      	str	r3, [sp, #156]	; 0x9c
 801695e:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016960:	fb92 f3f3 	sdiv	r3, r2, r3
 8016964:	9328      	str	r3, [sp, #160]	; 0xa0
 8016966:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8016968:	9a10      	ldr	r2, [sp, #64]	; 0x40
 801696a:	3b01      	subs	r3, #1
 801696c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016970:	930a      	str	r3, [sp, #40]	; 0x28
 8016972:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016974:	ee16 6a90 	vmov	r6, s13
 8016978:	bf14      	ite	ne
 801697a:	461d      	movne	r5, r3
 801697c:	4615      	moveq	r5, r2
 801697e:	eef0 8a67 	vmov.f32	s17, s15
 8016982:	eeb0 8a47 	vmov.f32	s16, s14
 8016986:	e6b0      	b.n	80166ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8016988:	f111 0a01 	adds.w	sl, r1, #1
 801698c:	d487      	bmi.n	801689e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801698e:	45d6      	cmp	lr, sl
 8016990:	db85      	blt.n	801689e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8016992:	f110 0a01 	adds.w	sl, r0, #1
 8016996:	d482      	bmi.n	801689e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8016998:	4553      	cmp	r3, sl
 801699a:	db80      	blt.n	801689e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 801699c:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 801699e:	9101      	str	r1, [sp, #4]
 80169a0:	b21b      	sxth	r3, r3
 80169a2:	e9cd 0202 	strd	r0, r2, [sp, #8]
 80169a6:	9300      	str	r3, [sp, #0]
 80169a8:	e9cd c704 	strd	ip, r7, [sp, #16]
 80169ac:	fa0f f38e 	sxth.w	r3, lr
 80169b0:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80169b2:	9811      	ldr	r0, [sp, #68]	; 0x44
 80169b4:	4641      	mov	r1, r8
 80169b6:	f7ff fd95 	bl	80164e4 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 80169ba:	e770      	b.n	801689e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 80169bc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80169be:	9f09      	ldr	r7, [sp, #36]	; 0x24
 80169c0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80169c4:	1430      	asrs	r0, r6, #16
 80169c6:	1423      	asrs	r3, r4, #16
 80169c8:	fb01 3000 	mla	r0, r1, r0, r3
 80169cc:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80169ce:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 80169d2:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 80169d6:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80169da:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80169de:	8858      	ldrh	r0, [r3, #2]
 80169e0:	f1be 0f00 	cmp.w	lr, #0
 80169e4:	d00b      	beq.n	80169fe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x372>
 80169e6:	f101 4100 	add.w	r1, r1, #2147483648	; 0x80000000
 80169ea:	3901      	subs	r1, #1
 80169ec:	0049      	lsls	r1, r1, #1
 80169ee:	3102      	adds	r1, #2
 80169f0:	eb03 0b01 	add.w	fp, r3, r1
 80169f4:	5a5b      	ldrh	r3, [r3, r1]
 80169f6:	930e      	str	r3, [sp, #56]	; 0x38
 80169f8:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80169fc:	930f      	str	r3, [sp, #60]	; 0x3c
 80169fe:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8016a02:	fb12 f30e 	smulbb	r3, r2, lr
 8016a06:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016a0a:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8016a0e:	f001 61fc 	and.w	r1, r1, #132120576	; 0x7e00000
 8016a12:	10db      	asrs	r3, r3, #3
 8016a14:	ea41 010c 	orr.w	r1, r1, ip
 8016a18:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016a1c:	f1ce 0c10 	rsb	ip, lr, #16
 8016a20:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016a24:	ebac 0c02 	sub.w	ip, ip, r2
 8016a28:	ea4b 0000 	orr.w	r0, fp, r0
 8016a2c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8016a30:	4350      	muls	r0, r2
 8016a32:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8016a34:	9f08      	ldr	r7, [sp, #32]
 8016a36:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8016a3a:	fb0c 0c01 	mla	ip, ip, r1, r0
 8016a3e:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8016a42:	f422 61fc 	bic.w	r1, r2, #2016	; 0x7e0
 8016a46:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8016a48:	980e      	ldr	r0, [sp, #56]	; 0x38
 8016a4a:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016a4e:	0412      	lsls	r2, r2, #16
 8016a50:	ea4b 0101 	orr.w	r1, fp, r1
 8016a54:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016a58:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016a5c:	fb03 c101 	mla	r1, r3, r1, ip
 8016a60:	4302      	orrs	r2, r0
 8016a62:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8016a66:	fb03 1202 	mla	r2, r3, r2, r1
 8016a6a:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8016a6e:	0952      	lsrs	r2, r2, #5
 8016a70:	f422 63fc 	bic.w	r3, r2, #2016	; 0x7e0
 8016a74:	f40b 6bfc 	and.w	fp, fp, #2016	; 0x7e0
 8016a78:	f8b9 2000 	ldrh.w	r2, [r9]
 8016a7c:	ea4b 0303 	orr.w	r3, fp, r3
 8016a80:	b29b      	uxth	r3, r3
 8016a82:	1211      	asrs	r1, r2, #8
 8016a84:	1218      	asrs	r0, r3, #8
 8016a86:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8016a8a:	fb11 f107 	smulbb	r1, r1, r7
 8016a8e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8016a92:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8016a96:	00d2      	lsls	r2, r2, #3
 8016a98:	fb00 100a 	mla	r0, r0, sl, r1
 8016a9c:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8016aa0:	10d9      	asrs	r1, r3, #3
 8016aa2:	b2d2      	uxtb	r2, r2
 8016aa4:	00db      	lsls	r3, r3, #3
 8016aa6:	fb1c fc07 	smulbb	ip, ip, r7
 8016aaa:	fb12 f207 	smulbb	r2, r2, r7
 8016aae:	f001 01fc 	and.w	r1, r1, #252	; 0xfc
 8016ab2:	b2db      	uxtb	r3, r3
 8016ab4:	b280      	uxth	r0, r0
 8016ab6:	fb01 c10a 	mla	r1, r1, sl, ip
 8016aba:	fb03 230a 	mla	r3, r3, sl, r2
 8016abe:	b29b      	uxth	r3, r3
 8016ac0:	b289      	uxth	r1, r1
 8016ac2:	1c42      	adds	r2, r0, #1
 8016ac4:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8016ac8:	f101 0c01 	add.w	ip, r1, #1
 8016acc:	1c5a      	adds	r2, r3, #1
 8016ace:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8016ad2:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8016ad6:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8016ad8:	f400 4078 	and.w	r0, r0, #63488	; 0xf800
 8016adc:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8016ae0:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8016ae4:	4310      	orrs	r0, r2
 8016ae6:	f40c 6cfc 	and.w	ip, ip, #2016	; 0x7e0
 8016aea:	441c      	add	r4, r3
 8016aec:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016aee:	ea40 000c 	orr.w	r0, r0, ip
 8016af2:	f829 0b02 	strh.w	r0, [r9], #2
 8016af6:	441e      	add	r6, r3
 8016af8:	f108 38ff 	add.w	r8, r8, #4294967295
 8016afc:	e6fc      	b.n	80168f8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8016afe:	b013      	add	sp, #76	; 0x4c
 8016b00:	ecbd 8b08 	vpop	{d8-d11}
 8016b04:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016b08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8016b08:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8016b0c:	e9dd 5607 	ldrd	r5, r6, [sp, #28]
 8016b10:	fb06 5c03 	mla	ip, r6, r3, r5
 8016b14:	2e00      	cmp	r6, #0
 8016b16:	f9bd 8018 	ldrsh.w	r8, [sp, #24]
 8016b1a:	f89d 4024 	ldrb.w	r4, [sp, #36]	; 0x24
 8016b1e:	f89d 7028 	ldrb.w	r7, [sp, #40]	; 0x28
 8016b22:	8808      	ldrh	r0, [r1, #0]
 8016b24:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8016b28:	db2e      	blt.n	8016b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8016b2a:	45b0      	cmp	r8, r6
 8016b2c:	dd2c      	ble.n	8016b88 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x80>
 8016b2e:	2d00      	cmp	r5, #0
 8016b30:	db28      	blt.n	8016b84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8016b32:	42ab      	cmp	r3, r5
 8016b34:	dd26      	ble.n	8016b84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x7c>
 8016b36:	f832 c01c 	ldrh.w	ip, [r2, ip, lsl #1]
 8016b3a:	1c6a      	adds	r2, r5, #1
 8016b3c:	d427      	bmi.n	8016b8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016b3e:	4293      	cmp	r3, r2
 8016b40:	dd25      	ble.n	8016b8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016b42:	b324      	cbz	r4, 8016b8e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x86>
 8016b44:	f8be 2002 	ldrh.w	r2, [lr, #2]
 8016b48:	3601      	adds	r6, #1
 8016b4a:	d424      	bmi.n	8016b96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8016b4c:	45b0      	cmp	r8, r6
 8016b4e:	dd22      	ble.n	8016b96 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8e>
 8016b50:	b31f      	cbz	r7, 8016b9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x92>
 8016b52:	2d00      	cmp	r5, #0
 8016b54:	db1d      	blt.n	8016b92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8016b56:	42ab      	cmp	r3, r5
 8016b58:	dd1b      	ble.n	8016b92 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x8a>
 8016b5a:	f83e 6013 	ldrh.w	r6, [lr, r3, lsl #1]
 8016b5e:	3501      	adds	r5, #1
 8016b60:	d405      	bmi.n	8016b6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8016b62:	42ab      	cmp	r3, r5
 8016b64:	dd03      	ble.n	8016b6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8016b66:	b124      	cbz	r4, 8016b72 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6a>
 8016b68:	3301      	adds	r3, #1
 8016b6a:	f83e 0013 	ldrh.w	r0, [lr, r3, lsl #1]
 8016b6e:	2c0f      	cmp	r4, #15
 8016b70:	d801      	bhi.n	8016b76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8016b72:	2f0f      	cmp	r7, #15
 8016b74:	d914      	bls.n	8016ba0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x98>
 8016b76:	4b27      	ldr	r3, [pc, #156]	; (8016c14 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x10c>)
 8016b78:	4a27      	ldr	r2, [pc, #156]	; (8016c18 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x110>)
 8016b7a:	4828      	ldr	r0, [pc, #160]	; (8016c1c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x114>)
 8016b7c:	f44f 71e6 	mov.w	r1, #460	; 0x1cc
 8016b80:	f002 fc5e 	bl	8019440 <__assert_func>
 8016b84:	4684      	mov	ip, r0
 8016b86:	e7d8      	b.n	8016b3a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x32>
 8016b88:	4602      	mov	r2, r0
 8016b8a:	4684      	mov	ip, r0
 8016b8c:	e7dc      	b.n	8016b48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8016b8e:	4602      	mov	r2, r0
 8016b90:	e7da      	b.n	8016b48 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x40>
 8016b92:	4606      	mov	r6, r0
 8016b94:	e7e3      	b.n	8016b5e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x56>
 8016b96:	4606      	mov	r6, r0
 8016b98:	e7e9      	b.n	8016b6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x66>
 8016b9a:	2c0f      	cmp	r4, #15
 8016b9c:	d8eb      	bhi.n	8016b76 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8016b9e:	4606      	mov	r6, r0
 8016ba0:	ea4f 450c 	mov.w	r5, ip, lsl #16
 8016ba4:	fb14 f307 	smulbb	r3, r4, r7
 8016ba8:	f005 65fc 	and.w	r5, r5, #132120576	; 0x7e00000
 8016bac:	ea4f 4e02 	mov.w	lr, r2, lsl #16
 8016bb0:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016bb4:	10db      	asrs	r3, r3, #3
 8016bb6:	ea45 0c0c 	orr.w	ip, r5, ip
 8016bba:	f00e 6efc 	and.w	lr, lr, #132120576	; 0x7e00000
 8016bbe:	f1c7 0510 	rsb	r5, r7, #16
 8016bc2:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016bc6:	1b2d      	subs	r5, r5, r4
 8016bc8:	ea4e 0202 	orr.w	r2, lr, r2
 8016bcc:	ebc3 0444 	rsb	r4, r3, r4, lsl #1
 8016bd0:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 8016bd4:	4354      	muls	r4, r2
 8016bd6:	fb05 450c 	mla	r5, r5, ip, r4
 8016bda:	0404      	lsls	r4, r0, #16
 8016bdc:	f004 64fc 	and.w	r4, r4, #132120576	; 0x7e00000
 8016be0:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016be4:	4320      	orrs	r0, r4
 8016be6:	fb03 5400 	mla	r4, r3, r0, r5
 8016bea:	0430      	lsls	r0, r6, #16
 8016bec:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016bf0:	f426 66fc 	bic.w	r6, r6, #2016	; 0x7e0
 8016bf4:	ebc3 0747 	rsb	r7, r3, r7, lsl #1
 8016bf8:	4330      	orrs	r0, r6
 8016bfa:	fb07 4000 	mla	r0, r7, r0, r4
 8016bfe:	0d43      	lsrs	r3, r0, #21
 8016c00:	0940      	lsrs	r0, r0, #5
 8016c02:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016c06:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016c0a:	4318      	orrs	r0, r3
 8016c0c:	8008      	strh	r0, [r1, #0]
 8016c0e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016c12:	bf00      	nop
 8016c14:	0801ce3e 	.word	0x0801ce3e
 8016c18:	0801d4b3 	.word	0x0801d4b3
 8016c1c:	0801cec2 	.word	0x0801cec2

08016c20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8016c20:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016c24:	ed2d 8b08 	vpush	{d8-d11}
 8016c28:	b08f      	sub	sp, #60	; 0x3c
 8016c2a:	461d      	mov	r5, r3
 8016c2c:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8016c2e:	920c      	str	r2, [sp, #48]	; 0x30
 8016c30:	e9dd 2726 	ldrd	r2, r7, [sp, #152]	; 0x98
 8016c34:	9107      	str	r1, [sp, #28]
 8016c36:	6859      	ldr	r1, [r3, #4]
 8016c38:	681b      	ldr	r3, [r3, #0]
 8016c3a:	900d      	str	r0, [sp, #52]	; 0x34
 8016c3c:	fb01 2707 	mla	r7, r1, r7, r2
 8016c40:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8016c44:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016c46:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	; 0x84
 8016c4a:	f8d3 8000 	ldr.w	r8, [r3]
 8016c4e:	eeb0 aa40 	vmov.f32	s20, s0
 8016c52:	eef0 9a60 	vmov.f32	s19, s1
 8016c56:	eeb0 9a41 	vmov.f32	s18, s2
 8016c5a:	eeb0 8a62 	vmov.f32	s16, s5
 8016c5e:	eef0 8a43 	vmov.f32	s17, s6
 8016c62:	eef0 ba44 	vmov.f32	s23, s8
 8016c66:	eeb0 ba64 	vmov.f32	s22, s9
 8016c6a:	eef0 aa45 	vmov.f32	s21, s10
 8016c6e:	9b07      	ldr	r3, [sp, #28]
 8016c70:	2b00      	cmp	r3, #0
 8016c72:	dc03      	bgt.n	8016c7c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8016c74:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8016c76:	2b00      	cmp	r3, #0
 8016c78:	f340 8181 	ble.w	8016f7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8016c7c:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016c7e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8016c82:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8016c86:	1e48      	subs	r0, r1, #1
 8016c88:	f102 3cff 	add.w	ip, r2, #4294967295
 8016c8c:	2d00      	cmp	r5, #0
 8016c8e:	f340 809b 	ble.w	8016dc8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a8>
 8016c92:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8016c96:	ea4f 4326 	mov.w	r3, r6, asr #16
 8016c9a:	d406      	bmi.n	8016caa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016c9c:	4586      	cmp	lr, r0
 8016c9e:	da04      	bge.n	8016caa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016ca0:	2b00      	cmp	r3, #0
 8016ca2:	db02      	blt.n	8016caa <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8016ca4:	4563      	cmp	r3, ip
 8016ca6:	f2c0 8090 	blt.w	8016dca <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1aa>
 8016caa:	f11e 0e01 	adds.w	lr, lr, #1
 8016cae:	f100 8084 	bmi.w	8016dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8016cb2:	4571      	cmp	r1, lr
 8016cb4:	f2c0 8081 	blt.w	8016dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8016cb8:	3301      	adds	r3, #1
 8016cba:	d47e      	bmi.n	8016dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8016cbc:	429a      	cmp	r2, r3
 8016cbe:	db7c      	blt.n	8016dba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 8016cc0:	46aa      	mov	sl, r5
 8016cc2:	46b9      	mov	r9, r7
 8016cc4:	f1ba 0f00 	cmp.w	sl, #0
 8016cc8:	f340 8099 	ble.w	8016dfe <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1de>
 8016ccc:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016cce:	1421      	asrs	r1, r4, #16
 8016cd0:	ea4f 4026 	mov.w	r0, r6, asr #16
 8016cd4:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8016cd8:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8016cdc:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8016ce0:	f100 80d0 	bmi.w	8016e84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8016ce4:	f10e 3bff 	add.w	fp, lr, #4294967295
 8016ce8:	4559      	cmp	r1, fp
 8016cea:	f280 80cb 	bge.w	8016e84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8016cee:	2800      	cmp	r0, #0
 8016cf0:	f2c0 80c8 	blt.w	8016e84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8016cf4:	f103 3bff 	add.w	fp, r3, #4294967295
 8016cf8:	4558      	cmp	r0, fp
 8016cfa:	f280 80c3 	bge.w	8016e84 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x264>
 8016cfe:	fa0f fe8e 	sxth.w	lr, lr
 8016d02:	fb00 110e 	mla	r1, r0, lr, r1
 8016d06:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8016d0a:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8016d0e:	8841      	ldrh	r1, [r0, #2]
 8016d10:	f1bc 0f00 	cmp.w	ip, #0
 8016d14:	d00b      	beq.n	8016d2e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 8016d16:	f10e 4300 	add.w	r3, lr, #2147483648	; 0x80000000
 8016d1a:	3b01      	subs	r3, #1
 8016d1c:	005b      	lsls	r3, r3, #1
 8016d1e:	3302      	adds	r3, #2
 8016d20:	eb00 0e03 	add.w	lr, r0, r3
 8016d24:	5ac3      	ldrh	r3, [r0, r3]
 8016d26:	9308      	str	r3, [sp, #32]
 8016d28:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8016d2c:	9309      	str	r3, [sp, #36]	; 0x24
 8016d2e:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8016d32:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016d36:	f42b 6bfc 	bic.w	fp, fp, #2016	; 0x7e0
 8016d3a:	ea40 000b 	orr.w	r0, r0, fp
 8016d3e:	fb12 f30c 	smulbb	r3, r2, ip
 8016d42:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016d46:	10db      	asrs	r3, r3, #3
 8016d48:	f1cc 0e10 	rsb	lr, ip, #16
 8016d4c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016d50:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016d54:	ebae 0e02 	sub.w	lr, lr, r2
 8016d58:	ea4b 0101 	orr.w	r1, fp, r1
 8016d5c:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8016d60:	4351      	muls	r1, r2
 8016d62:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8016d64:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8016d68:	fb0e 1e00 	mla	lr, lr, r0, r1
 8016d6c:	0410      	lsls	r0, r2, #16
 8016d6e:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016d72:	f422 62fc 	bic.w	r2, r2, #2016	; 0x7e0
 8016d76:	4310      	orrs	r0, r2
 8016d78:	9a08      	ldr	r2, [sp, #32]
 8016d7a:	9908      	ldr	r1, [sp, #32]
 8016d7c:	0412      	lsls	r2, r2, #16
 8016d7e:	fb03 e000 	mla	r0, r3, r0, lr
 8016d82:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016d86:	f421 6efc 	bic.w	lr, r1, #2016	; 0x7e0
 8016d8a:	ea42 020e 	orr.w	r2, r2, lr
 8016d8e:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8016d92:	fb03 0302 	mla	r3, r3, r2, r0
 8016d96:	0d5a      	lsrs	r2, r3, #21
 8016d98:	095b      	lsrs	r3, r3, #5
 8016d9a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8016d9e:	f423 63fc 	bic.w	r3, r3, #2016	; 0x7e0
 8016da2:	4313      	orrs	r3, r2
 8016da4:	f8a9 3000 	strh.w	r3, [r9]
 8016da8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016daa:	441c      	add	r4, r3
 8016dac:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016dae:	f109 0902 	add.w	r9, r9, #2
 8016db2:	441e      	add	r6, r3
 8016db4:	f10a 3aff 	add.w	sl, sl, #4294967295
 8016db8:	e784      	b.n	8016cc4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8016dba:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016dbc:	441c      	add	r4, r3
 8016dbe:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016dc0:	3d01      	subs	r5, #1
 8016dc2:	441e      	add	r6, r3
 8016dc4:	3702      	adds	r7, #2
 8016dc6:	e761      	b.n	8016c8c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8016dc8:	d01d      	beq.n	8016e06 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 8016dca:	9823      	ldr	r0, [sp, #140]	; 0x8c
 8016dcc:	1e6b      	subs	r3, r5, #1
 8016dce:	fb00 4003 	mla	r0, r0, r3, r4
 8016dd2:	1400      	asrs	r0, r0, #16
 8016dd4:	f53f af74 	bmi.w	8016cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016dd8:	3901      	subs	r1, #1
 8016dda:	4288      	cmp	r0, r1
 8016ddc:	f6bf af70 	bge.w	8016cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016de0:	9924      	ldr	r1, [sp, #144]	; 0x90
 8016de2:	fb01 6303 	mla	r3, r1, r3, r6
 8016de6:	141b      	asrs	r3, r3, #16
 8016de8:	f53f af6a 	bmi.w	8016cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016dec:	3a01      	subs	r2, #1
 8016dee:	4293      	cmp	r3, r2
 8016df0:	f6bf af66 	bge.w	8016cc0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8016df4:	46a9      	mov	r9, r5
 8016df6:	46ba      	mov	sl, r7
 8016df8:	f1b9 0f00 	cmp.w	r9, #0
 8016dfc:	dc5a      	bgt.n	8016eb4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8016dfe:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8016e02:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8016e06:	9b07      	ldr	r3, [sp, #28]
 8016e08:	2b00      	cmp	r3, #0
 8016e0a:	f340 80b8 	ble.w	8016f7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8016e0e:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8016e12:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8016e16:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8016e1a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016e1c:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8016e20:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8016e24:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8016e28:	eef0 6a48 	vmov.f32	s13, s16
 8016e2c:	ee69 7a27 	vmul.f32	s15, s18, s15
 8016e30:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016e34:	ee37 8a48 	vsub.f32	s16, s14, s16
 8016e38:	ee16 4a90 	vmov	r4, s13
 8016e3c:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8016e40:	eef0 6a68 	vmov.f32	s13, s17
 8016e44:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8016e48:	ee18 2a10 	vmov	r2, s16
 8016e4c:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8016e50:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e54:	ee18 2a90 	vmov	r2, s17
 8016e58:	9323      	str	r3, [sp, #140]	; 0x8c
 8016e5a:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016e5c:	fb92 f3f3 	sdiv	r3, r2, r3
 8016e60:	9324      	str	r3, [sp, #144]	; 0x90
 8016e62:	9b07      	ldr	r3, [sp, #28]
 8016e64:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8016e66:	3b01      	subs	r3, #1
 8016e68:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8016e6c:	9307      	str	r3, [sp, #28]
 8016e6e:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8016e70:	ee16 6a90 	vmov	r6, s13
 8016e74:	bf14      	ite	ne
 8016e76:	461d      	movne	r5, r3
 8016e78:	4615      	moveq	r5, r2
 8016e7a:	eef0 8a67 	vmov.f32	s17, s15
 8016e7e:	eeb0 8a47 	vmov.f32	s16, s14
 8016e82:	e6f4      	b.n	8016c6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 8016e84:	f111 0b01 	adds.w	fp, r1, #1
 8016e88:	d48e      	bmi.n	8016da8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8016e8a:	45de      	cmp	lr, fp
 8016e8c:	db8c      	blt.n	8016da8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8016e8e:	f110 0b01 	adds.w	fp, r0, #1
 8016e92:	d489      	bmi.n	8016da8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8016e94:	455b      	cmp	r3, fp
 8016e96:	db87      	blt.n	8016da8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8016e98:	b21b      	sxth	r3, r3
 8016e9a:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8016e9e:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8016ea2:	9300      	str	r3, [sp, #0]
 8016ea4:	4642      	mov	r2, r8
 8016ea6:	fa0f f38e 	sxth.w	r3, lr
 8016eaa:	4649      	mov	r1, r9
 8016eac:	980d      	ldr	r0, [sp, #52]	; 0x34
 8016eae:	f7ff fe2b 	bl	8016b08 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 8016eb2:	e779      	b.n	8016da8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 8016eb4:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8016eb6:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 8016eba:	1420      	asrs	r0, r4, #16
 8016ebc:	1431      	asrs	r1, r6, #16
 8016ebe:	fb03 0101 	mla	r1, r3, r1, r0
 8016ec2:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8016ec6:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8016eca:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 8016ece:	8841      	ldrh	r1, [r0, #2]
 8016ed0:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8016ed4:	f1be 0f00 	cmp.w	lr, #0
 8016ed8:	d00b      	beq.n	8016ef2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d2>
 8016eda:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8016ede:	3b01      	subs	r3, #1
 8016ee0:	005b      	lsls	r3, r3, #1
 8016ee2:	3302      	adds	r3, #2
 8016ee4:	eb00 0b03 	add.w	fp, r0, r3
 8016ee8:	5ac3      	ldrh	r3, [r0, r3]
 8016eea:	930a      	str	r3, [sp, #40]	; 0x28
 8016eec:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8016ef0:	930b      	str	r3, [sp, #44]	; 0x2c
 8016ef2:	ea4f 400c 	mov.w	r0, ip, lsl #16
 8016ef6:	fb12 f30e 	smulbb	r3, r2, lr
 8016efa:	f42c 6cfc 	bic.w	ip, ip, #2016	; 0x7e0
 8016efe:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8016f02:	f000 60fc 	and.w	r0, r0, #132120576	; 0x7e00000
 8016f06:	10db      	asrs	r3, r3, #3
 8016f08:	ea40 000c 	orr.w	r0, r0, ip
 8016f0c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016f10:	f1ce 0c10 	rsb	ip, lr, #16
 8016f14:	f421 61fc 	bic.w	r1, r1, #2016	; 0x7e0
 8016f18:	ebac 0c02 	sub.w	ip, ip, r2
 8016f1c:	ea4b 0101 	orr.w	r1, fp, r1
 8016f20:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8016f24:	4351      	muls	r1, r2
 8016f26:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8016f28:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8016f2c:	fb0c 1c00 	mla	ip, ip, r0, r1
 8016f30:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8016f34:	f422 60fc 	bic.w	r0, r2, #2016	; 0x7e0
 8016f38:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8016f3a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8016f3c:	f00b 6bfc 	and.w	fp, fp, #132120576	; 0x7e00000
 8016f40:	0412      	lsls	r2, r2, #16
 8016f42:	ea4b 0000 	orr.w	r0, fp, r0
 8016f46:	f002 62fc 	and.w	r2, r2, #132120576	; 0x7e00000
 8016f4a:	f421 6bfc 	bic.w	fp, r1, #2016	; 0x7e0
 8016f4e:	fb03 c000 	mla	r0, r3, r0, ip
 8016f52:	ea42 0b0b 	orr.w	fp, r2, fp
 8016f56:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8016f5a:	fb03 000b 	mla	r0, r3, fp, r0
 8016f5e:	0d43      	lsrs	r3, r0, #21
 8016f60:	0940      	lsrs	r0, r0, #5
 8016f62:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8016f66:	f420 60fc 	bic.w	r0, r0, #2016	; 0x7e0
 8016f6a:	4318      	orrs	r0, r3
 8016f6c:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8016f6e:	f82a 0b02 	strh.w	r0, [sl], #2
 8016f72:	441c      	add	r4, r3
 8016f74:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8016f76:	f109 39ff 	add.w	r9, r9, #4294967295
 8016f7a:	441e      	add	r6, r3
 8016f7c:	e73c      	b.n	8016df8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8016f7e:	b00f      	add	sp, #60	; 0x3c
 8016f80:	ecbd 8b08 	vpop	{d8-d11}
 8016f84:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8016f88:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016f8c:	880e      	ldrh	r6, [r1, #0]
 8016f8e:	b085      	sub	sp, #20
 8016f90:	ea4f 2c26 	mov.w	ip, r6, asr #8
 8016f94:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 8016f98:	4690      	mov	r8, r2
 8016f9a:	f00c 02f8 	and.w	r2, ip, #248	; 0xf8
 8016f9e:	ea4f 0ce6 	mov.w	ip, r6, asr #3
 8016fa2:	9200      	str	r2, [sp, #0]
 8016fa4:	00f6      	lsls	r6, r6, #3
 8016fa6:	f00c 02fc 	and.w	r2, ip, #252	; 0xfc
 8016faa:	9201      	str	r2, [sp, #4]
 8016fac:	2c00      	cmp	r4, #0
 8016fae:	b2f2      	uxtb	r2, r6
 8016fb0:	fb04 5603 	mla	r6, r4, r3, r5
 8016fb4:	f9bd e038 	ldrsh.w	lr, [sp, #56]	; 0x38
 8016fb8:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 8016fbc:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 8016fc0:	9202      	str	r2, [sp, #8]
 8016fc2:	eb08 0c86 	add.w	ip, r8, r6, lsl #2
 8016fc6:	db36      	blt.n	8017036 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8016fc8:	45a6      	cmp	lr, r4
 8016fca:	dd34      	ble.n	8017036 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xae>
 8016fcc:	2d00      	cmp	r5, #0
 8016fce:	db30      	blt.n	8017032 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8016fd0:	42ab      	cmp	r3, r5
 8016fd2:	dd2e      	ble.n	8017032 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xaa>
 8016fd4:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 8016fd8:	1c6e      	adds	r6, r5, #1
 8016fda:	d42f      	bmi.n	801703c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8016fdc:	42b3      	cmp	r3, r6
 8016fde:	dd2d      	ble.n	801703c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb4>
 8016fe0:	b370      	cbz	r0, 8017040 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xb8>
 8016fe2:	f8dc 6004 	ldr.w	r6, [ip, #4]
 8016fe6:	3401      	adds	r4, #1
 8016fe8:	d42e      	bmi.n	8017048 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8016fea:	45a6      	cmp	lr, r4
 8016fec:	dd2c      	ble.n	8017048 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc0>
 8016fee:	b377      	cbz	r7, 801704e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xc6>
 8016ff0:	2d00      	cmp	r5, #0
 8016ff2:	db27      	blt.n	8017044 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 8016ff4:	42ab      	cmp	r3, r5
 8016ff6:	dd25      	ble.n	8017044 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xbc>
 8016ff8:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8016ffc:	3501      	adds	r5, #1
 8016ffe:	d429      	bmi.n	8017054 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8017000:	42ab      	cmp	r3, r5
 8017002:	dd27      	ble.n	8017054 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xcc>
 8017004:	b340      	cbz	r0, 8017058 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd0>
 8017006:	3301      	adds	r3, #1
 8017008:	f85c 3023 	ldr.w	r3, [ip, r3, lsl #2]
 801700c:	280f      	cmp	r0, #15
 801700e:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017012:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017016:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801701a:	ea4f 6813 	mov.w	r8, r3, lsr #24
 801701e:	d801      	bhi.n	8017024 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x9c>
 8017020:	2f0f      	cmp	r7, #15
 8017022:	d91b      	bls.n	801705c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0xd4>
 8017024:	4b84      	ldr	r3, [pc, #528]	; (8017238 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b0>)
 8017026:	4a85      	ldr	r2, [pc, #532]	; (801723c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b4>)
 8017028:	4885      	ldr	r0, [pc, #532]	; (8017240 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x2b8>)
 801702a:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801702e:	f002 fa07 	bl	8019440 <__assert_func>
 8017032:	2200      	movs	r2, #0
 8017034:	e7d0      	b.n	8016fd8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x50>
 8017036:	2600      	movs	r6, #0
 8017038:	4632      	mov	r2, r6
 801703a:	e7d4      	b.n	8016fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 801703c:	2600      	movs	r6, #0
 801703e:	e7d2      	b.n	8016fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8017040:	4606      	mov	r6, r0
 8017042:	e7d0      	b.n	8016fe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x5e>
 8017044:	2400      	movs	r4, #0
 8017046:	e7d9      	b.n	8016ffc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 8017048:	2300      	movs	r3, #0
 801704a:	461c      	mov	r4, r3
 801704c:	e7de      	b.n	801700c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801704e:	463b      	mov	r3, r7
 8017050:	463c      	mov	r4, r7
 8017052:	e7db      	b.n	801700c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8017054:	2300      	movs	r3, #0
 8017056:	e7d9      	b.n	801700c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 8017058:	4603      	mov	r3, r0
 801705a:	e7d7      	b.n	801700c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x84>
 801705c:	b280      	uxth	r0, r0
 801705e:	b2bf      	uxth	r7, r7
 8017060:	fb00 fe07 	mul.w	lr, r0, r7
 8017064:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017068:	0100      	lsls	r0, r0, #4
 801706a:	eba0 0c0e 	sub.w	ip, r0, lr
 801706e:	b2bf      	uxth	r7, r7
 8017070:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8017074:	fa1f fc8c 	uxth.w	ip, ip
 8017078:	1bed      	subs	r5, r5, r7
 801707a:	b2ad      	uxth	r5, r5
 801707c:	fb0c f00a 	mul.w	r0, ip, sl
 8017080:	fb05 000b 	mla	r0, r5, fp, r0
 8017084:	fb07 0009 	mla	r0, r7, r9, r0
 8017088:	fb0e 0008 	mla	r0, lr, r8, r0
 801708c:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017090:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017094:	9003      	str	r0, [sp, #12]
 8017096:	d018      	beq.n	80170ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x142>
 8017098:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 801709c:	fb0b f000 	mul.w	r0, fp, r0
 80170a0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80170a4:	fb0b fb02 	mul.w	fp, fp, r2
 80170a8:	0a02      	lsrs	r2, r0, #8
 80170aa:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80170ae:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 80170b2:	4402      	add	r2, r0
 80170b4:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 80170b8:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80170bc:	0a12      	lsrs	r2, r2, #8
 80170be:	0a00      	lsrs	r0, r0, #8
 80170c0:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80170c4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80170c8:	4302      	orrs	r2, r0
 80170ca:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 80170ce:	d019      	beq.n	8017104 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x17c>
 80170d0:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 80170d4:	fb0a fb0b 	mul.w	fp, sl, fp
 80170d8:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 80170dc:	fb0a fa06 	mul.w	sl, sl, r6
 80170e0:	ea4f 261b 	mov.w	r6, fp, lsr #8
 80170e4:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80170e8:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80170ec:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 80170f0:	445e      	add	r6, fp
 80170f2:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80170f6:	0a36      	lsrs	r6, r6, #8
 80170f8:	0a00      	lsrs	r0, r0, #8
 80170fa:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 80170fe:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017102:	4306      	orrs	r6, r0
 8017104:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017108:	d019      	beq.n	801713e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1b6>
 801710a:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 801710e:	fb09 fa0a 	mul.w	sl, r9, sl
 8017112:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017116:	fb09 f904 	mul.w	r9, r9, r4
 801711a:	ea4f 241a 	mov.w	r4, sl, lsr #8
 801711e:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017122:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017126:	f509 7080 	add.w	r0, r9, #256	; 0x100
 801712a:	4454      	add	r4, sl
 801712c:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8017130:	0a24      	lsrs	r4, r4, #8
 8017132:	0a00      	lsrs	r0, r0, #8
 8017134:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017138:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 801713c:	4304      	orrs	r4, r0
 801713e:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017142:	d019      	beq.n	8017178 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x1f0>
 8017144:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8017148:	fb08 f909 	mul.w	r9, r8, r9
 801714c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017150:	fb08 f803 	mul.w	r8, r8, r3
 8017154:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8017158:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 801715c:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017160:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8017164:	444b      	add	r3, r9
 8017166:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 801716a:	0a1b      	lsrs	r3, r3, #8
 801716c:	0a00      	lsrs	r0, r0, #8
 801716e:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017172:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017176:	4303      	orrs	r3, r0
 8017178:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 801717c:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017180:	fb0c f808 	mul.w	r8, ip, r8
 8017184:	fb05 8800 	mla	r8, r5, r0, r8
 8017188:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 801718c:	fb07 8800 	mla	r8, r7, r0, r8
 8017190:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8017194:	fb0e 8000 	mla	r0, lr, r0, r8
 8017198:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 801719c:	fb0c f606 	mul.w	r6, ip, r6
 80171a0:	0a00      	lsrs	r0, r0, #8
 80171a2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80171a6:	fb05 6202 	mla	r2, r5, r2, r6
 80171aa:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 80171ae:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 80171b2:	fb07 2700 	mla	r7, r7, r0, r2
 80171b6:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 80171ba:	f89d 304c 	ldrb.w	r3, [sp, #76]	; 0x4c
 80171be:	9c03      	ldr	r4, [sp, #12]
 80171c0:	9e01      	ldr	r6, [sp, #4]
 80171c2:	b29b      	uxth	r3, r3
 80171c4:	435c      	muls	r4, r3
 80171c6:	fb0e 7000 	mla	r0, lr, r0, r7
 80171ca:	1c62      	adds	r2, r4, #1
 80171cc:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80171d0:	0a00      	lsrs	r0, r0, #8
 80171d2:	9c00      	ldr	r4, [sp, #0]
 80171d4:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 80171d8:	ea6f 2212 	mvn.w	r2, r2, lsr #8
 80171dc:	ea48 0000 	orr.w	r0, r8, r0
 80171e0:	b2d2      	uxtb	r2, r2
 80171e2:	fb14 f402 	smulbb	r4, r4, r2
 80171e6:	0c05      	lsrs	r5, r0, #16
 80171e8:	fb05 4503 	mla	r5, r5, r3, r4
 80171ec:	fb16 f602 	smulbb	r6, r6, r2
 80171f0:	f3c0 2407 	ubfx	r4, r0, #8, #8
 80171f4:	fb04 6403 	mla	r4, r4, r3, r6
 80171f8:	9e02      	ldr	r6, [sp, #8]
 80171fa:	b2c0      	uxtb	r0, r0
 80171fc:	fb16 f202 	smulbb	r2, r6, r2
 8017200:	fb00 2303 	mla	r3, r0, r3, r2
 8017204:	b2ad      	uxth	r5, r5
 8017206:	b298      	uxth	r0, r3
 8017208:	1c43      	adds	r3, r0, #1
 801720a:	1c6a      	adds	r2, r5, #1
 801720c:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8017210:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8017214:	b2a4      	uxth	r4, r4
 8017216:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801721a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801721e:	4313      	orrs	r3, r2
 8017220:	1c62      	adds	r2, r4, #1
 8017222:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8017226:	0952      	lsrs	r2, r2, #5
 8017228:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 801722c:	4313      	orrs	r3, r2
 801722e:	800b      	strh	r3, [r1, #0]
 8017230:	b005      	add	sp, #20
 8017232:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017236:	bf00      	nop
 8017238:	0801ce3e 	.word	0x0801ce3e
 801723c:	0801d40a 	.word	0x0801d40a
 8017240:	0801cec2 	.word	0x0801cec2

08017244 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017244:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017248:	ed2d 8b08 	vpush	{d8-d11}
 801724c:	b09d      	sub	sp, #116	; 0x74
 801724e:	e9dd 462f 	ldrd	r4, r6, [sp, #188]	; 0xbc
 8017252:	9219      	str	r2, [sp, #100]	; 0x64
 8017254:	9307      	str	r3, [sp, #28]
 8017256:	9a33      	ldr	r2, [sp, #204]	; 0xcc
 8017258:	f89d 30dc 	ldrb.w	r3, [sp, #220]	; 0xdc
 801725c:	931a      	str	r3, [sp, #104]	; 0x68
 801725e:	9117      	str	r1, [sp, #92]	; 0x5c
 8017260:	e9dd 1334 	ldrd	r1, r3, [sp, #208]	; 0xd0
 8017264:	901b      	str	r0, [sp, #108]	; 0x6c
 8017266:	6850      	ldr	r0, [r2, #4]
 8017268:	6812      	ldr	r2, [r2, #0]
 801726a:	fb00 1303 	mla	r3, r0, r3, r1
 801726e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017272:	930a      	str	r3, [sp, #40]	; 0x28
 8017274:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8017276:	681b      	ldr	r3, [r3, #0]
 8017278:	9310      	str	r3, [sp, #64]	; 0x40
 801727a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	; 0x68
 801727e:	930b      	str	r3, [sp, #44]	; 0x2c
 8017280:	eeb0 aa40 	vmov.f32	s20, s0
 8017284:	eef0 9a60 	vmov.f32	s19, s1
 8017288:	eeb0 9a41 	vmov.f32	s18, s2
 801728c:	eeb0 8a62 	vmov.f32	s16, s5
 8017290:	eef0 8a43 	vmov.f32	s17, s6
 8017294:	eef0 ba44 	vmov.f32	s23, s8
 8017298:	eeb0 ba64 	vmov.f32	s22, s9
 801729c:	eef0 aa45 	vmov.f32	s21, s10
 80172a0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80172a2:	2b00      	cmp	r3, #0
 80172a4:	dc03      	bgt.n	80172ae <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 80172a6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80172a8:	2b00      	cmp	r3, #0
 80172aa:	f340 8375 	ble.w	8017998 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 80172ae:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80172b0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80172b4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 80172b8:	1e48      	subs	r0, r1, #1
 80172ba:	1e57      	subs	r7, r2, #1
 80172bc:	9b07      	ldr	r3, [sp, #28]
 80172be:	2b00      	cmp	r3, #0
 80172c0:	f340 818e 	ble.w	80175e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 80172c4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 80172c8:	ea4f 4326 	mov.w	r3, r6, asr #16
 80172cc:	d406      	bmi.n	80172dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80172ce:	4584      	cmp	ip, r0
 80172d0:	da04      	bge.n	80172dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80172d2:	2b00      	cmp	r3, #0
 80172d4:	db02      	blt.n	80172dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80172d6:	42bb      	cmp	r3, r7
 80172d8:	f2c0 8183 	blt.w	80175e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39e>
 80172dc:	f11c 0c01 	adds.w	ip, ip, #1
 80172e0:	f100 8173 	bmi.w	80175ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80172e4:	4561      	cmp	r1, ip
 80172e6:	f2c0 8170 	blt.w	80175ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80172ea:	3301      	adds	r3, #1
 80172ec:	f100 816d 	bmi.w	80175ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80172f0:	429a      	cmp	r2, r3
 80172f2:	f2c0 816a 	blt.w	80175ca <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 80172f6:	9b07      	ldr	r3, [sp, #28]
 80172f8:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 80172fa:	9318      	str	r3, [sp, #96]	; 0x60
 80172fc:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80172fe:	2b00      	cmp	r3, #0
 8017300:	f340 818c 	ble.w	801761c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d8>
 8017304:	9a36      	ldr	r2, [sp, #216]	; 0xd8
 8017306:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 8017308:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801730c:	689b      	ldr	r3, [r3, #8]
 801730e:	1422      	asrs	r2, r4, #16
 8017310:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8017314:	f3c4 3003 	ubfx	r0, r4, #12, #4
 8017318:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801731c:	f100 81cd 	bmi.w	80176ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8017320:	f103 38ff 	add.w	r8, r3, #4294967295
 8017324:	4542      	cmp	r2, r8
 8017326:	f280 81c8 	bge.w	80176ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801732a:	f1bc 0f00 	cmp.w	ip, #0
 801732e:	f2c0 81c4 	blt.w	80176ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 8017332:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017336:	45c4      	cmp	ip, r8
 8017338:	f280 81bf 	bge.w	80176ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 801733c:	b21b      	sxth	r3, r3
 801733e:	fb0c 2203 	mla	r2, ip, r3, r2
 8017342:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8017344:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8017348:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 801734c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8017350:	2800      	cmp	r0, #0
 8017352:	f000 81a9 	beq.w	80176a8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8017356:	f8d8 5004 	ldr.w	r5, [r8, #4]
 801735a:	950c      	str	r5, [sp, #48]	; 0x30
 801735c:	0e2d      	lsrs	r5, r5, #24
 801735e:	9513      	str	r5, [sp, #76]	; 0x4c
 8017360:	b181      	cbz	r1, 8017384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 8017362:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8017366:	3b01      	subs	r3, #1
 8017368:	009b      	lsls	r3, r3, #2
 801736a:	3304      	adds	r3, #4
 801736c:	eb08 0c03 	add.w	ip, r8, r3
 8017370:	f858 3003 	ldr.w	r3, [r8, r3]
 8017374:	9308      	str	r3, [sp, #32]
 8017376:	0e1b      	lsrs	r3, r3, #24
 8017378:	9311      	str	r3, [sp, #68]	; 0x44
 801737a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 801737e:	930d      	str	r3, [sp, #52]	; 0x34
 8017380:	0e1b      	lsrs	r3, r3, #24
 8017382:	9314      	str	r3, [sp, #80]	; 0x50
 8017384:	b280      	uxth	r0, r0
 8017386:	b289      	uxth	r1, r1
 8017388:	fb00 f901 	mul.w	r9, r0, r1
 801738c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8017390:	0100      	lsls	r0, r0, #4
 8017392:	eba0 0809 	sub.w	r8, r0, r9
 8017396:	b289      	uxth	r1, r1
 8017398:	f5c0 7380 	rsb	r3, r0, #256	; 0x100
 801739c:	9813      	ldr	r0, [sp, #76]	; 0x4c
 801739e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80173a0:	fa1f f888 	uxth.w	r8, r8
 80173a4:	1a5b      	subs	r3, r3, r1
 80173a6:	b29b      	uxth	r3, r3
 80173a8:	fb08 f000 	mul.w	r0, r8, r0
 80173ac:	fb03 000e 	mla	r0, r3, lr, r0
 80173b0:	fb01 0005 	mla	r0, r1, r5, r0
 80173b4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80173b6:	fb09 0005 	mla	r0, r9, r5, r0
 80173ba:	f3c0 2007 	ubfx	r0, r0, #8, #8
 80173be:	2800      	cmp	r0, #0
 80173c0:	f000 80fa 	beq.w	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80173c4:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 80173c8:	d01b      	beq.n	8017402 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1be>
 80173ca:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 80173ce:	fb0e fa0a 	mul.w	sl, lr, sl
 80173d2:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 80173d6:	fb0e fe02 	mul.w	lr, lr, r2
 80173da:	ea4f 221a 	mov.w	r2, sl, lsr #8
 80173de:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80173e2:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80173e6:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 80173ea:	4452      	add	r2, sl
 80173ec:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 80173f0:	0a12      	lsrs	r2, r2, #8
 80173f2:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80173f6:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 80173fa:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80173fe:	ea42 020c 	orr.w	r2, r2, ip
 8017402:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017404:	2dff      	cmp	r5, #255	; 0xff
 8017406:	d021      	beq.n	801744c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 8017408:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 801740a:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 801740e:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017410:	fb05 fb0b 	mul.w	fp, r5, fp
 8017414:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017416:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801741a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 801741c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017420:	fb05 fa0a 	mul.w	sl, r5, sl
 8017424:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017428:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 801742c:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017430:	44de      	add	lr, fp
 8017432:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017436:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 801743a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801743e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017442:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017446:	ea4e 050a 	orr.w	r5, lr, sl
 801744a:	950c      	str	r5, [sp, #48]	; 0x30
 801744c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801744e:	2dff      	cmp	r5, #255	; 0xff
 8017450:	d021      	beq.n	8017496 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8017452:	9d08      	ldr	r5, [sp, #32]
 8017454:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8017458:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801745a:	fb05 fb0b 	mul.w	fp, r5, fp
 801745e:	9d08      	ldr	r5, [sp, #32]
 8017460:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8017464:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8017466:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 801746a:	fb05 fa0a 	mul.w	sl, r5, sl
 801746e:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017472:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017476:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 801747a:	44de      	add	lr, fp
 801747c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017480:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017484:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017488:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 801748c:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017490:	ea4e 050a 	orr.w	r5, lr, sl
 8017494:	9508      	str	r5, [sp, #32]
 8017496:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8017498:	2dff      	cmp	r5, #255	; 0xff
 801749a:	d021      	beq.n	80174e0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801749c:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 801749e:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 80174a2:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80174a4:	fb05 fb0b 	mul.w	fp, r5, fp
 80174a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80174aa:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80174ae:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80174b0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80174b4:	fb05 fa0a 	mul.w	sl, r5, sl
 80174b8:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80174bc:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 80174c0:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 80174c4:	44de      	add	lr, fp
 80174c6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80174ca:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80174ce:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80174d2:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 80174d6:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 80174da:	ea4e 050a 	orr.w	r5, lr, sl
 80174de:	950d      	str	r5, [sp, #52]	; 0x34
 80174e0:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80174e2:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80174e6:	9d08      	ldr	r5, [sp, #32]
 80174e8:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 80174ec:	fb08 fc0c 	mul.w	ip, r8, ip
 80174f0:	fb03 cc0e 	mla	ip, r3, lr, ip
 80174f4:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 80174f8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80174fa:	fb01 cc0e 	mla	ip, r1, lr, ip
 80174fe:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8017502:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017504:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017508:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 801750c:	fb08 f80e 	mul.w	r8, r8, lr
 8017510:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017514:	fb03 8202 	mla	r2, r3, r2, r8
 8017518:	9b08      	ldr	r3, [sp, #32]
 801751a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 801751c:	f403 4a7f 	and.w	sl, r3, #65280	; 0xff00
 8017520:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8017522:	fb01 220a 	mla	r2, r1, sl, r2
 8017526:	f403 417f 	and.w	r1, r3, #65280	; 0xff00
 801752a:	fb09 2901 	mla	r9, r9, r1, r2
 801752e:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8017530:	883b      	ldrh	r3, [r7, #0]
 8017532:	4342      	muls	r2, r0
 8017534:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017538:	ea4f 2919 	mov.w	r9, r9, lsr #8
 801753c:	1c50      	adds	r0, r2, #1
 801753e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017542:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017546:	ea4c 0c09 	orr.w	ip, ip, r9
 801754a:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801754e:	1219      	asrs	r1, r3, #8
 8017550:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8017554:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 8017558:	b2c0      	uxtb	r0, r0
 801755a:	fb12 f205 	smulbb	r2, r2, r5
 801755e:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8017562:	fb01 2100 	mla	r1, r1, r0, r2
 8017566:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 801756a:	10da      	asrs	r2, r3, #3
 801756c:	fa5f fc8c 	uxtb.w	ip, ip
 8017570:	00db      	lsls	r3, r3, #3
 8017572:	fb1c fc05 	smulbb	ip, ip, r5
 8017576:	b2db      	uxtb	r3, r3
 8017578:	b289      	uxth	r1, r1
 801757a:	fb03 c300 	mla	r3, r3, r0, ip
 801757e:	fa1f fc83 	uxth.w	ip, r3
 8017582:	1c4b      	adds	r3, r1, #1
 8017584:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8017588:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801758c:	fb1e fe05 	smulbb	lr, lr, r5
 8017590:	f10c 0301 	add.w	r3, ip, #1
 8017594:	fb02 e200 	mla	r2, r2, r0, lr
 8017598:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 801759c:	b292      	uxth	r2, r2
 801759e:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 80175a2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80175a6:	430b      	orrs	r3, r1
 80175a8:	1c51      	adds	r1, r2, #1
 80175aa:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80175ae:	0952      	lsrs	r2, r2, #5
 80175b0:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80175b4:	4313      	orrs	r3, r2
 80175b6:	803b      	strh	r3, [r7, #0]
 80175b8:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80175ba:	441c      	add	r4, r3
 80175bc:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80175be:	441e      	add	r6, r3
 80175c0:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80175c2:	3b01      	subs	r3, #1
 80175c4:	3702      	adds	r7, #2
 80175c6:	9318      	str	r3, [sp, #96]	; 0x60
 80175c8:	e698      	b.n	80172fc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 80175ca:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 80175cc:	441c      	add	r4, r3
 80175ce:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 80175d0:	441e      	add	r6, r3
 80175d2:	9b07      	ldr	r3, [sp, #28]
 80175d4:	3b01      	subs	r3, #1
 80175d6:	9307      	str	r3, [sp, #28]
 80175d8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80175da:	3302      	adds	r3, #2
 80175dc:	930a      	str	r3, [sp, #40]	; 0x28
 80175de:	e66d      	b.n	80172bc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80175e0:	d023      	beq.n	801762a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 80175e2:	9b07      	ldr	r3, [sp, #28]
 80175e4:	9831      	ldr	r0, [sp, #196]	; 0xc4
 80175e6:	3b01      	subs	r3, #1
 80175e8:	fb00 4003 	mla	r0, r0, r3, r4
 80175ec:	1400      	asrs	r0, r0, #16
 80175ee:	f53f ae82 	bmi.w	80172f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80175f2:	3901      	subs	r1, #1
 80175f4:	4288      	cmp	r0, r1
 80175f6:	f6bf ae7e 	bge.w	80172f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 80175fa:	9932      	ldr	r1, [sp, #200]	; 0xc8
 80175fc:	fb01 6303 	mla	r3, r1, r3, r6
 8017600:	141b      	asrs	r3, r3, #16
 8017602:	f53f ae78 	bmi.w	80172f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8017606:	3a01      	subs	r2, #1
 8017608:	4293      	cmp	r3, r2
 801760a:	f6bf ae74 	bge.w	80172f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 801760e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8017612:	f8dd 9028 	ldr.w	r9, [sp, #40]	; 0x28
 8017616:	f1bb 0f00 	cmp.w	fp, #0
 801761a:	dc6c      	bgt.n	80176f6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b2>
 801761c:	9b07      	ldr	r3, [sp, #28]
 801761e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8017622:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017624:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8017628:	930a      	str	r3, [sp, #40]	; 0x28
 801762a:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 801762c:	2b00      	cmp	r3, #0
 801762e:	f340 81b3 	ble.w	8017998 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8017632:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8017636:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801763a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801763e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017640:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8017644:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8017648:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801764c:	eef0 6a48 	vmov.f32	s13, s16
 8017650:	ee69 7a27 	vmul.f32	s15, s18, s15
 8017654:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017658:	ee37 8a48 	vsub.f32	s16, s14, s16
 801765c:	ee16 4a90 	vmov	r4, s13
 8017660:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8017664:	eef0 6a68 	vmov.f32	s13, s17
 8017668:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801766c:	ee18 2a10 	vmov	r2, s16
 8017670:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8017674:	fb92 f3f3 	sdiv	r3, r2, r3
 8017678:	ee18 2a90 	vmov	r2, s17
 801767c:	9331      	str	r3, [sp, #196]	; 0xc4
 801767e:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017680:	fb92 f3f3 	sdiv	r3, r2, r3
 8017684:	9332      	str	r3, [sp, #200]	; 0xc8
 8017686:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017688:	9a19      	ldr	r2, [sp, #100]	; 0x64
 801768a:	3b01      	subs	r3, #1
 801768c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017690:	9317      	str	r3, [sp, #92]	; 0x5c
 8017692:	9b2e      	ldr	r3, [sp, #184]	; 0xb8
 8017694:	bf08      	it	eq
 8017696:	4613      	moveq	r3, r2
 8017698:	ee16 6a90 	vmov	r6, s13
 801769c:	9307      	str	r3, [sp, #28]
 801769e:	eef0 8a67 	vmov.f32	s17, s15
 80176a2:	eeb0 8a47 	vmov.f32	s16, s14
 80176a6:	e5fb      	b.n	80172a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 80176a8:	2900      	cmp	r1, #0
 80176aa:	f43f ae6b 	beq.w	8017384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80176ae:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80176b2:	9308      	str	r3, [sp, #32]
 80176b4:	0e1b      	lsrs	r3, r3, #24
 80176b6:	9311      	str	r3, [sp, #68]	; 0x44
 80176b8:	e664      	b.n	8017384 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x140>
 80176ba:	f112 0801 	adds.w	r8, r2, #1
 80176be:	f53f af7b 	bmi.w	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80176c2:	4543      	cmp	r3, r8
 80176c4:	f6ff af78 	blt.w	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80176c8:	f11c 0801 	adds.w	r8, ip, #1
 80176cc:	f53f af74 	bmi.w	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80176d0:	45c6      	cmp	lr, r8
 80176d2:	f6ff af71 	blt.w	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80176d6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80176d8:	9201      	str	r2, [sp, #4]
 80176da:	fa0f f28e 	sxth.w	r2, lr
 80176de:	e9cd 1504 	strd	r1, r5, [sp, #16]
 80176e2:	e9cd c002 	strd	ip, r0, [sp, #8]
 80176e6:	9200      	str	r2, [sp, #0]
 80176e8:	b21b      	sxth	r3, r3
 80176ea:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80176ec:	981b      	ldr	r0, [sp, #108]	; 0x6c
 80176ee:	4639      	mov	r1, r7
 80176f0:	f7ff fc4a 	bl	8016f88 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 80176f4:	e760      	b.n	80175b8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 80176f6:	9b36      	ldr	r3, [sp, #216]	; 0xd8
 80176f8:	9d10      	ldr	r5, [sp, #64]	; 0x40
 80176fa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80176fe:	1427      	asrs	r7, r4, #16
 8017700:	1433      	asrs	r3, r6, #16
 8017702:	fb01 7303 	mla	r3, r1, r3, r7
 8017706:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 801770a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 801770e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8017712:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017716:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801771a:	2a00      	cmp	r2, #0
 801771c:	f000 8133 	beq.w	8017986 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8017720:	687d      	ldr	r5, [r7, #4]
 8017722:	950e      	str	r5, [sp, #56]	; 0x38
 8017724:	0e2d      	lsrs	r5, r5, #24
 8017726:	9515      	str	r5, [sp, #84]	; 0x54
 8017728:	b178      	cbz	r0, 801774a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801772a:	f101 4180 	add.w	r1, r1, #1073741824	; 0x40000000
 801772e:	3901      	subs	r1, #1
 8017730:	0089      	lsls	r1, r1, #2
 8017732:	3104      	adds	r1, #4
 8017734:	eb07 0e01 	add.w	lr, r7, r1
 8017738:	5879      	ldr	r1, [r7, r1]
 801773a:	9109      	str	r1, [sp, #36]	; 0x24
 801773c:	0e09      	lsrs	r1, r1, #24
 801773e:	9112      	str	r1, [sp, #72]	; 0x48
 8017740:	f8de 1004 	ldr.w	r1, [lr, #4]
 8017744:	910f      	str	r1, [sp, #60]	; 0x3c
 8017746:	0e09      	lsrs	r1, r1, #24
 8017748:	9116      	str	r1, [sp, #88]	; 0x58
 801774a:	b292      	uxth	r2, r2
 801774c:	b280      	uxth	r0, r0
 801774e:	fb02 f800 	mul.w	r8, r2, r0
 8017752:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8017756:	0112      	lsls	r2, r2, #4
 8017758:	eba2 0e08 	sub.w	lr, r2, r8
 801775c:	b280      	uxth	r0, r0
 801775e:	f5c2 7280 	rsb	r2, r2, #256	; 0x100
 8017762:	9915      	ldr	r1, [sp, #84]	; 0x54
 8017764:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017766:	fa1f fe8e 	uxth.w	lr, lr
 801776a:	1a12      	subs	r2, r2, r0
 801776c:	b292      	uxth	r2, r2
 801776e:	fb0e f101 	mul.w	r1, lr, r1
 8017772:	fb02 110c 	mla	r1, r2, ip, r1
 8017776:	fb00 1105 	mla	r1, r0, r5, r1
 801777a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801777c:	fb08 1105 	mla	r1, r8, r5, r1
 8017780:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8017784:	2900      	cmp	r1, #0
 8017786:	f000 80f5 	beq.w	8017974 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801778a:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 801778e:	d019      	beq.n	80177c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 8017790:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8017794:	fb0c fa0a 	mul.w	sl, ip, sl
 8017798:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 801779c:	fb0c fc03 	mul.w	ip, ip, r3
 80177a0:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80177a4:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80177a8:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80177ac:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80177b0:	4453      	add	r3, sl
 80177b2:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80177b6:	0a1b      	lsrs	r3, r3, #8
 80177b8:	0a3f      	lsrs	r7, r7, #8
 80177ba:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80177be:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80177c2:	433b      	orrs	r3, r7
 80177c4:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80177c6:	2dff      	cmp	r5, #255	; 0xff
 80177c8:	d020      	beq.n	801780c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 80177ca:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80177cc:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80177d0:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80177d2:	436f      	muls	r7, r5
 80177d4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80177d6:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80177da:	9d15      	ldr	r5, [sp, #84]	; 0x54
 80177dc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80177e0:	fb05 fa0a 	mul.w	sl, r5, sl
 80177e4:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80177e8:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80177ec:	44bc      	add	ip, r7
 80177ee:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80177f2:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80177f6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80177fa:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80177fe:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017802:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017806:	ea4c 050a 	orr.w	r5, ip, sl
 801780a:	950e      	str	r5, [sp, #56]	; 0x38
 801780c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801780e:	2dff      	cmp	r5, #255	; 0xff
 8017810:	d020      	beq.n	8017854 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 8017812:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8017814:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8017818:	9d12      	ldr	r5, [sp, #72]	; 0x48
 801781a:	436f      	muls	r7, r5
 801781c:	9d09      	ldr	r5, [sp, #36]	; 0x24
 801781e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8017822:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017824:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017828:	fb05 fa0a 	mul.w	sl, r5, sl
 801782c:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017830:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017834:	44bc      	add	ip, r7
 8017836:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801783a:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801783e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017842:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017846:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801784a:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801784e:	ea4c 050a 	orr.w	r5, ip, sl
 8017852:	9509      	str	r5, [sp, #36]	; 0x24
 8017854:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8017856:	2dff      	cmp	r5, #255	; 0xff
 8017858:	d020      	beq.n	801789c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 801785a:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 801785c:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8017860:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8017862:	436f      	muls	r7, r5
 8017864:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8017866:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801786a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 801786c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8017870:	fb05 fa0a 	mul.w	sl, r5, sl
 8017874:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8017878:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801787c:	44bc      	add	ip, r7
 801787e:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8017882:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8017886:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801788a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801788e:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017892:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017896:	ea4c 050a 	orr.w	r5, ip, sl
 801789a:	950f      	str	r5, [sp, #60]	; 0x3c
 801789c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801789e:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80178a2:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80178a4:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80178a8:	fb0e f707 	mul.w	r7, lr, r7
 80178ac:	fb02 770c 	mla	r7, r2, ip, r7
 80178b0:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80178b4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80178b6:	fb00 770c 	mla	r7, r0, ip, r7
 80178ba:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80178be:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80178c0:	fb08 770c 	mla	r7, r8, ip, r7
 80178c4:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80178c8:	fb0e fe0c 	mul.w	lr, lr, ip
 80178cc:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80178d0:	fb02 e303 	mla	r3, r2, r3, lr
 80178d4:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80178d6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80178d8:	f402 4a7f 	and.w	sl, r2, #65280	; 0xff00
 80178dc:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80178de:	fb00 330a 	mla	r3, r0, sl, r3
 80178e2:	f402 4c7f 	and.w	ip, r2, #65280	; 0xff00
 80178e6:	fb08 3c0c 	mla	ip, r8, ip, r3
 80178ea:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80178ec:	f8b9 0000 	ldrh.w	r0, [r9]
 80178f0:	4359      	muls	r1, r3
 80178f2:	0a3f      	lsrs	r7, r7, #8
 80178f4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80178f8:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80178fc:	1c4b      	adds	r3, r1, #1
 80178fe:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 8017902:	ea47 070c 	orr.w	r7, r7, ip
 8017906:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 801790a:	1202      	asrs	r2, r0, #8
 801790c:	0c3b      	lsrs	r3, r7, #16
 801790e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8017912:	b2c9      	uxtb	r1, r1
 8017914:	fb13 f305 	smulbb	r3, r3, r5
 8017918:	f002 02f8 	and.w	r2, r2, #248	; 0xf8
 801791c:	fb02 3201 	mla	r2, r2, r1, r3
 8017920:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8017924:	10c3      	asrs	r3, r0, #3
 8017926:	b2ff      	uxtb	r7, r7
 8017928:	00c0      	lsls	r0, r0, #3
 801792a:	b2c0      	uxtb	r0, r0
 801792c:	fb17 f705 	smulbb	r7, r7, r5
 8017930:	fb00 7001 	mla	r0, r0, r1, r7
 8017934:	b292      	uxth	r2, r2
 8017936:	fb1c fc05 	smulbb	ip, ip, r5
 801793a:	b280      	uxth	r0, r0
 801793c:	f003 03fc 	and.w	r3, r3, #252	; 0xfc
 8017940:	fb03 c301 	mla	r3, r3, r1, ip
 8017944:	1c51      	adds	r1, r2, #1
 8017946:	f100 0c01 	add.w	ip, r0, #1
 801794a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801794e:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8017952:	b29b      	uxth	r3, r3
 8017954:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8017958:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 801795c:	ea4c 0202 	orr.w	r2, ip, r2
 8017960:	f103 0c01 	add.w	ip, r3, #1
 8017964:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8017968:	095b      	lsrs	r3, r3, #5
 801796a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 801796e:	431a      	orrs	r2, r3
 8017970:	f8a9 2000 	strh.w	r2, [r9]
 8017974:	9b31      	ldr	r3, [sp, #196]	; 0xc4
 8017976:	441c      	add	r4, r3
 8017978:	9b32      	ldr	r3, [sp, #200]	; 0xc8
 801797a:	f109 0902 	add.w	r9, r9, #2
 801797e:	441e      	add	r6, r3
 8017980:	f10b 3bff 	add.w	fp, fp, #4294967295
 8017984:	e647      	b.n	8017616 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d2>
 8017986:	2800      	cmp	r0, #0
 8017988:	f43f aedf 	beq.w	801774a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 801798c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8017990:	9109      	str	r1, [sp, #36]	; 0x24
 8017992:	0e09      	lsrs	r1, r1, #24
 8017994:	9112      	str	r1, [sp, #72]	; 0x48
 8017996:	e6d8      	b.n	801774a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8017998:	b01d      	add	sp, #116	; 0x74
 801799a:	ecbd 8b08 	vpop	{d8-d11}
 801799e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

080179a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 80179a4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80179a8:	880e      	ldrh	r6, [r1, #0]
 80179aa:	b085      	sub	sp, #20
 80179ac:	ea4f 2e26 	mov.w	lr, r6, asr #8
 80179b0:	e9dd 540f 	ldrd	r5, r4, [sp, #60]	; 0x3c
 80179b4:	4690      	mov	r8, r2
 80179b6:	f00e 02f8 	and.w	r2, lr, #248	; 0xf8
 80179ba:	ea4f 0ee6 	mov.w	lr, r6, asr #3
 80179be:	9200      	str	r2, [sp, #0]
 80179c0:	00f6      	lsls	r6, r6, #3
 80179c2:	f00e 02fc 	and.w	r2, lr, #252	; 0xfc
 80179c6:	9201      	str	r2, [sp, #4]
 80179c8:	2c00      	cmp	r4, #0
 80179ca:	b2f2      	uxtb	r2, r6
 80179cc:	fb04 5603 	mla	r6, r4, r3, r5
 80179d0:	f9bd c038 	ldrsh.w	ip, [sp, #56]	; 0x38
 80179d4:	f89d 0044 	ldrb.w	r0, [sp, #68]	; 0x44
 80179d8:	f89d 7048 	ldrb.w	r7, [sp, #72]	; 0x48
 80179dc:	9202      	str	r2, [sp, #8]
 80179de:	eb08 0e86 	add.w	lr, r8, r6, lsl #2
 80179e2:	db37      	blt.n	8017a54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 80179e4:	45a4      	cmp	ip, r4
 80179e6:	dd35      	ble.n	8017a54 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb0>
 80179e8:	2d00      	cmp	r5, #0
 80179ea:	db31      	blt.n	8017a50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 80179ec:	42ab      	cmp	r3, r5
 80179ee:	dd2f      	ble.n	8017a50 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xac>
 80179f0:	f858 2026 	ldr.w	r2, [r8, r6, lsl #2]
 80179f4:	1c6e      	adds	r6, r5, #1
 80179f6:	d430      	bmi.n	8017a5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 80179f8:	42b3      	cmp	r3, r6
 80179fa:	dd2e      	ble.n	8017a5a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xb6>
 80179fc:	b378      	cbz	r0, 8017a5e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xba>
 80179fe:	f8de 6004 	ldr.w	r6, [lr, #4]
 8017a02:	3401      	adds	r4, #1
 8017a04:	d42f      	bmi.n	8017a66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8017a06:	45a4      	cmp	ip, r4
 8017a08:	dd2d      	ble.n	8017a66 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc2>
 8017a0a:	b37f      	cbz	r7, 8017a6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xc8>
 8017a0c:	2d00      	cmp	r5, #0
 8017a0e:	eb0e 0c83 	add.w	ip, lr, r3, lsl #2
 8017a12:	db26      	blt.n	8017a62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8017a14:	42ab      	cmp	r3, r5
 8017a16:	dd24      	ble.n	8017a62 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xbe>
 8017a18:	f85e 4023 	ldr.w	r4, [lr, r3, lsl #2]
 8017a1c:	3501      	adds	r5, #1
 8017a1e:	d428      	bmi.n	8017a72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 8017a20:	42ab      	cmp	r3, r5
 8017a22:	dd26      	ble.n	8017a72 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xce>
 8017a24:	b338      	cbz	r0, 8017a76 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd2>
 8017a26:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8017a2a:	280f      	cmp	r0, #15
 8017a2c:	ea4f 6b12 	mov.w	fp, r2, lsr #24
 8017a30:	ea4f 6a16 	mov.w	sl, r6, lsr #24
 8017a34:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8017a38:	ea4f 6813 	mov.w	r8, r3, lsr #24
 8017a3c:	d801      	bhi.n	8017a42 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x9e>
 8017a3e:	2f0f      	cmp	r7, #15
 8017a40:	d91b      	bls.n	8017a7a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0xd6>
 8017a42:	4b7d      	ldr	r3, [pc, #500]	; (8017c38 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x294>)
 8017a44:	4a7d      	ldr	r2, [pc, #500]	; (8017c3c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x298>)
 8017a46:	487e      	ldr	r0, [pc, #504]	; (8017c40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x29c>)
 8017a48:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8017a4c:	f001 fcf8 	bl	8019440 <__assert_func>
 8017a50:	2200      	movs	r2, #0
 8017a52:	e7cf      	b.n	80179f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x50>
 8017a54:	2600      	movs	r6, #0
 8017a56:	4632      	mov	r2, r6
 8017a58:	e7d3      	b.n	8017a02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8017a5a:	2600      	movs	r6, #0
 8017a5c:	e7d1      	b.n	8017a02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8017a5e:	4606      	mov	r6, r0
 8017a60:	e7cf      	b.n	8017a02 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x5e>
 8017a62:	2400      	movs	r4, #0
 8017a64:	e7da      	b.n	8017a1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8017a66:	2300      	movs	r3, #0
 8017a68:	461c      	mov	r4, r3
 8017a6a:	e7de      	b.n	8017a2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8017a6c:	463b      	mov	r3, r7
 8017a6e:	463c      	mov	r4, r7
 8017a70:	e7db      	b.n	8017a2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8017a72:	2300      	movs	r3, #0
 8017a74:	e7d9      	b.n	8017a2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8017a76:	4603      	mov	r3, r0
 8017a78:	e7d7      	b.n	8017a2a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x86>
 8017a7a:	b280      	uxth	r0, r0
 8017a7c:	b2bf      	uxth	r7, r7
 8017a7e:	fb00 fe07 	mul.w	lr, r0, r7
 8017a82:	ebce 1707 	rsb	r7, lr, r7, lsl #4
 8017a86:	0100      	lsls	r0, r0, #4
 8017a88:	eba0 0c0e 	sub.w	ip, r0, lr
 8017a8c:	b2bf      	uxth	r7, r7
 8017a8e:	f5c0 7580 	rsb	r5, r0, #256	; 0x100
 8017a92:	fa1f fc8c 	uxth.w	ip, ip
 8017a96:	1bed      	subs	r5, r5, r7
 8017a98:	b2ad      	uxth	r5, r5
 8017a9a:	fb0c f00a 	mul.w	r0, ip, sl
 8017a9e:	fb05 000b 	mla	r0, r5, fp, r0
 8017aa2:	fb07 0009 	mla	r0, r7, r9, r0
 8017aa6:	fb0e 0008 	mla	r0, lr, r8, r0
 8017aaa:	f3c0 2007 	ubfx	r0, r0, #8, #8
 8017aae:	f1bb 0fff 	cmp.w	fp, #255	; 0xff
 8017ab2:	9003      	str	r0, [sp, #12]
 8017ab4:	d018      	beq.n	8017ae8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x144>
 8017ab6:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017aba:	fb0b f000 	mul.w	r0, fp, r0
 8017abe:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017ac2:	fb0b fb02 	mul.w	fp, fp, r2
 8017ac6:	0a02      	lsrs	r2, r0, #8
 8017ac8:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017acc:	f100 1001 	add.w	r0, r0, #65537	; 0x10001
 8017ad0:	4402      	add	r2, r0
 8017ad2:	f50b 7080 	add.w	r0, fp, #256	; 0x100
 8017ad6:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 8017ada:	0a12      	lsrs	r2, r2, #8
 8017adc:	0a00      	lsrs	r0, r0, #8
 8017ade:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017ae2:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017ae6:	4302      	orrs	r2, r0
 8017ae8:	f1ba 0fff 	cmp.w	sl, #255	; 0xff
 8017aec:	d019      	beq.n	8017b22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x17e>
 8017aee:	f006 1bff 	and.w	fp, r6, #16711935	; 0xff00ff
 8017af2:	fb0a fb0b 	mul.w	fp, sl, fp
 8017af6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017afa:	fb0a fa06 	mul.w	sl, sl, r6
 8017afe:	ea4f 261b 	mov.w	r6, fp, lsr #8
 8017b02:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017b06:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017b0a:	f50a 7080 	add.w	r0, sl, #256	; 0x100
 8017b0e:	445e      	add	r6, fp
 8017b10:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8017b14:	0a36      	lsrs	r6, r6, #8
 8017b16:	0a00      	lsrs	r0, r0, #8
 8017b18:	f006 16ff 	and.w	r6, r6, #16711935	; 0xff00ff
 8017b1c:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017b20:	4306      	orrs	r6, r0
 8017b22:	f1b9 0fff 	cmp.w	r9, #255	; 0xff
 8017b26:	d019      	beq.n	8017b5c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1b8>
 8017b28:	f004 1aff 	and.w	sl, r4, #16711935	; 0xff00ff
 8017b2c:	fb09 fa0a 	mul.w	sl, r9, sl
 8017b30:	f404 447f 	and.w	r4, r4, #65280	; 0xff00
 8017b34:	fb09 f904 	mul.w	r9, r9, r4
 8017b38:	ea4f 241a 	mov.w	r4, sl, lsr #8
 8017b3c:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017b40:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017b44:	f509 7080 	add.w	r0, r9, #256	; 0x100
 8017b48:	4454      	add	r4, sl
 8017b4a:	eb00 2019 	add.w	r0, r0, r9, lsr #8
 8017b4e:	0a24      	lsrs	r4, r4, #8
 8017b50:	0a00      	lsrs	r0, r0, #8
 8017b52:	f004 14ff 	and.w	r4, r4, #16711935	; 0xff00ff
 8017b56:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017b5a:	4304      	orrs	r4, r0
 8017b5c:	f1b8 0fff 	cmp.w	r8, #255	; 0xff
 8017b60:	d019      	beq.n	8017b96 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x1f2>
 8017b62:	f003 19ff 	and.w	r9, r3, #16711935	; 0xff00ff
 8017b66:	fb08 f909 	mul.w	r9, r8, r9
 8017b6a:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 8017b6e:	fb08 f803 	mul.w	r8, r8, r3
 8017b72:	ea4f 2319 	mov.w	r3, r9, lsr #8
 8017b76:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017b7a:	f109 1901 	add.w	r9, r9, #65537	; 0x10001
 8017b7e:	f508 7080 	add.w	r0, r8, #256	; 0x100
 8017b82:	444b      	add	r3, r9
 8017b84:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8017b88:	0a1b      	lsrs	r3, r3, #8
 8017b8a:	0a00      	lsrs	r0, r0, #8
 8017b8c:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 8017b90:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017b94:	4303      	orrs	r3, r0
 8017b96:	f006 18ff 	and.w	r8, r6, #16711935	; 0xff00ff
 8017b9a:	f002 10ff 	and.w	r0, r2, #16711935	; 0xff00ff
 8017b9e:	fb0c f808 	mul.w	r8, ip, r8
 8017ba2:	fb05 8800 	mla	r8, r5, r0, r8
 8017ba6:	f004 10ff 	and.w	r0, r4, #16711935	; 0xff00ff
 8017baa:	fb07 8800 	mla	r8, r7, r0, r8
 8017bae:	f003 10ff 	and.w	r0, r3, #16711935	; 0xff00ff
 8017bb2:	fb0e 8000 	mla	r0, lr, r0, r8
 8017bb6:	f406 467f 	and.w	r6, r6, #65280	; 0xff00
 8017bba:	fb0c f606 	mul.w	r6, ip, r6
 8017bbe:	0a00      	lsrs	r0, r0, #8
 8017bc0:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017bc4:	fb05 6202 	mla	r2, r5, r2, r6
 8017bc8:	f000 18ff 	and.w	r8, r0, #16711935	; 0xff00ff
 8017bcc:	f404 407f 	and.w	r0, r4, #65280	; 0xff00
 8017bd0:	fb07 2700 	mla	r7, r7, r0, r2
 8017bd4:	f403 407f 	and.w	r0, r3, #65280	; 0xff00
 8017bd8:	9b03      	ldr	r3, [sp, #12]
 8017bda:	9d00      	ldr	r5, [sp, #0]
 8017bdc:	9a02      	ldr	r2, [sp, #8]
 8017bde:	fb0e 7000 	mla	r0, lr, r0, r7
 8017be2:	43dc      	mvns	r4, r3
 8017be4:	9b01      	ldr	r3, [sp, #4]
 8017be6:	b2e4      	uxtb	r4, r4
 8017be8:	0a00      	lsrs	r0, r0, #8
 8017bea:	4363      	muls	r3, r4
 8017bec:	4365      	muls	r5, r4
 8017bee:	4362      	muls	r2, r4
 8017bf0:	f400 407f 	and.w	r0, r0, #65280	; 0xff00
 8017bf4:	ea48 0000 	orr.w	r0, r8, r0
 8017bf8:	4614      	mov	r4, r2
 8017bfa:	1c5e      	adds	r6, r3, #1
 8017bfc:	1c6a      	adds	r2, r5, #1
 8017bfe:	eb06 2613 	add.w	r6, r6, r3, lsr #8
 8017c02:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 8017c06:	0a03      	lsrs	r3, r0, #8
 8017c08:	0c02      	lsrs	r2, r0, #16
 8017c0a:	eb03 2316 	add.w	r3, r3, r6, lsr #8
 8017c0e:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 8017c12:	00db      	lsls	r3, r3, #3
 8017c14:	0212      	lsls	r2, r2, #8
 8017c16:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8017c1a:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8017c1e:	4313      	orrs	r3, r2
 8017c20:	1c62      	adds	r2, r4, #1
 8017c22:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8017c26:	eb00 2014 	add.w	r0, r0, r4, lsr #8
 8017c2a:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 8017c2e:	4318      	orrs	r0, r3
 8017c30:	8008      	strh	r0, [r1, #0]
 8017c32:	b005      	add	sp, #20
 8017c34:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017c38:	0801ce3e 	.word	0x0801ce3e
 8017c3c:	0801d40a 	.word	0x0801d40a
 8017c40:	0801cec2 	.word	0x0801cec2

08017c44 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017c44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c48:	ed2d 8b08 	vpush	{d8-d11}
 8017c4c:	b09b      	sub	sp, #108	; 0x6c
 8017c4e:	e9dd 462d 	ldrd	r4, r6, [sp, #180]	; 0xb4
 8017c52:	9218      	str	r2, [sp, #96]	; 0x60
 8017c54:	9a31      	ldr	r2, [sp, #196]	; 0xc4
 8017c56:	9116      	str	r1, [sp, #88]	; 0x58
 8017c58:	9307      	str	r3, [sp, #28]
 8017c5a:	e9dd 1332 	ldrd	r1, r3, [sp, #200]	; 0xc8
 8017c5e:	9019      	str	r0, [sp, #100]	; 0x64
 8017c60:	6850      	ldr	r0, [r2, #4]
 8017c62:	6812      	ldr	r2, [r2, #0]
 8017c64:	fb00 1303 	mla	r3, r0, r3, r1
 8017c68:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017c6c:	930a      	str	r3, [sp, #40]	; 0x28
 8017c6e:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017c70:	681b      	ldr	r3, [r3, #0]
 8017c72:	930f      	str	r3, [sp, #60]	; 0x3c
 8017c74:	eeb0 aa40 	vmov.f32	s20, s0
 8017c78:	eef0 9a60 	vmov.f32	s19, s1
 8017c7c:	eeb0 9a41 	vmov.f32	s18, s2
 8017c80:	eeb0 8a62 	vmov.f32	s16, s5
 8017c84:	eef0 8a43 	vmov.f32	s17, s6
 8017c88:	eef0 ba44 	vmov.f32	s23, s8
 8017c8c:	eeb0 ba64 	vmov.f32	s22, s9
 8017c90:	eef0 aa45 	vmov.f32	s21, s10
 8017c94:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8017c96:	2b00      	cmp	r3, #0
 8017c98:	dc03      	bgt.n	8017ca2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8017c9a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8017c9c:	2b00      	cmp	r3, #0
 8017c9e:	f340 8389 	ble.w	80183b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 8017ca2:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017ca4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8017ca8:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8017cac:	1e48      	subs	r0, r1, #1
 8017cae:	1e57      	subs	r7, r2, #1
 8017cb0:	9b07      	ldr	r3, [sp, #28]
 8017cb2:	2b00      	cmp	r3, #0
 8017cb4:	f340 818b 	ble.w	8017fce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 8017cb8:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8017cbc:	ea4f 4326 	mov.w	r3, r6, asr #16
 8017cc0:	d406      	bmi.n	8017cd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017cc2:	4584      	cmp	ip, r0
 8017cc4:	da04      	bge.n	8017cd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017cc6:	2b00      	cmp	r3, #0
 8017cc8:	db02      	blt.n	8017cd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8017cca:	42bb      	cmp	r3, r7
 8017ccc:	f2c0 8180 	blt.w	8017fd0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8017cd0:	f11c 0c01 	adds.w	ip, ip, #1
 8017cd4:	f100 8170 	bmi.w	8017fb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8017cd8:	4561      	cmp	r1, ip
 8017cda:	f2c0 816d 	blt.w	8017fb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8017cde:	3301      	adds	r3, #1
 8017ce0:	f100 816a 	bmi.w	8017fb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8017ce4:	429a      	cmp	r2, r3
 8017ce6:	f2c0 8167 	blt.w	8017fb8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8017cea:	9b07      	ldr	r3, [sp, #28]
 8017cec:	9f0a      	ldr	r7, [sp, #40]	; 0x28
 8017cee:	9317      	str	r3, [sp, #92]	; 0x5c
 8017cf0:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017cf2:	2b00      	cmp	r3, #0
 8017cf4:	f340 8189 	ble.w	801800a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c6>
 8017cf8:	9a34      	ldr	r2, [sp, #208]	; 0xd0
 8017cfa:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 8017cfc:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8017d00:	689b      	ldr	r3, [r3, #8]
 8017d02:	1422      	asrs	r2, r4, #16
 8017d04:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8017d08:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8017d0c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8017d10:	f100 81d4 	bmi.w	80180bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017d14:	f103 38ff 	add.w	r8, r3, #4294967295
 8017d18:	4542      	cmp	r2, r8
 8017d1a:	f280 81cf 	bge.w	80180bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017d1e:	f1bc 0f00 	cmp.w	ip, #0
 8017d22:	f2c0 81cb 	blt.w	80180bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017d26:	f10e 38ff 	add.w	r8, lr, #4294967295
 8017d2a:	45c4      	cmp	ip, r8
 8017d2c:	f280 81c6 	bge.w	80180bc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x478>
 8017d30:	b21b      	sxth	r3, r3
 8017d32:	fb0c 2203 	mla	r2, ip, r3, r2
 8017d36:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8017d38:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8017d3c:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8017d40:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8017d44:	2900      	cmp	r1, #0
 8017d46:	f000 81a6 	beq.w	8018096 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 8017d4a:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8017d4e:	950b      	str	r5, [sp, #44]	; 0x2c
 8017d50:	0e2d      	lsrs	r5, r5, #24
 8017d52:	9512      	str	r5, [sp, #72]	; 0x48
 8017d54:	b180      	cbz	r0, 8017d78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 8017d56:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 8017d5a:	3b01      	subs	r3, #1
 8017d5c:	009b      	lsls	r3, r3, #2
 8017d5e:	3304      	adds	r3, #4
 8017d60:	eb08 0c03 	add.w	ip, r8, r3
 8017d64:	f858 3003 	ldr.w	r3, [r8, r3]
 8017d68:	9308      	str	r3, [sp, #32]
 8017d6a:	0e1b      	lsrs	r3, r3, #24
 8017d6c:	9310      	str	r3, [sp, #64]	; 0x40
 8017d6e:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8017d72:	930c      	str	r3, [sp, #48]	; 0x30
 8017d74:	0e1b      	lsrs	r3, r3, #24
 8017d76:	9313      	str	r3, [sp, #76]	; 0x4c
 8017d78:	b289      	uxth	r1, r1
 8017d7a:	b280      	uxth	r0, r0
 8017d7c:	fb01 f900 	mul.w	r9, r1, r0
 8017d80:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8017d84:	0109      	lsls	r1, r1, #4
 8017d86:	eba1 0809 	sub.w	r8, r1, r9
 8017d8a:	b280      	uxth	r0, r0
 8017d8c:	f5c1 7180 	rsb	r1, r1, #256	; 0x100
 8017d90:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8017d92:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8017d94:	fa1f f888 	uxth.w	r8, r8
 8017d98:	1a09      	subs	r1, r1, r0
 8017d9a:	b289      	uxth	r1, r1
 8017d9c:	fb08 f303 	mul.w	r3, r8, r3
 8017da0:	fb01 330e 	mla	r3, r1, lr, r3
 8017da4:	fb00 3305 	mla	r3, r0, r5, r3
 8017da8:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017daa:	fb09 3305 	mla	r3, r9, r5, r3
 8017dae:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8017db2:	2b00      	cmp	r3, #0
 8017db4:	f000 80f7 	beq.w	8017fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8017db8:	f1be 0fff 	cmp.w	lr, #255	; 0xff
 8017dbc:	d01b      	beq.n	8017df6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b2>
 8017dbe:	f002 1aff 	and.w	sl, r2, #16711935	; 0xff00ff
 8017dc2:	fb0e fa0a 	mul.w	sl, lr, sl
 8017dc6:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017dca:	fb0e fe02 	mul.w	lr, lr, r2
 8017dce:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8017dd2:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017dd6:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 8017dda:	f50e 7c80 	add.w	ip, lr, #256	; 0x100
 8017dde:	4452      	add	r2, sl
 8017de0:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8017de4:	0a12      	lsrs	r2, r2, #8
 8017de6:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017dea:	f002 12ff 	and.w	r2, r2, #16711935	; 0xff00ff
 8017dee:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 8017df2:	ea42 020c 	orr.w	r2, r2, ip
 8017df6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017df8:	2dff      	cmp	r5, #255	; 0xff
 8017dfa:	d021      	beq.n	8017e40 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8017dfc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8017dfe:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8017e02:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017e04:	fb05 fb0b 	mul.w	fp, r5, fp
 8017e08:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8017e0a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8017e0e:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8017e10:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017e14:	fb05 fa0a 	mul.w	sl, r5, sl
 8017e18:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e1c:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017e20:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017e24:	44de      	add	lr, fp
 8017e26:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017e2a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e2e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e32:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e36:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e3a:	ea4e 050a 	orr.w	r5, lr, sl
 8017e3e:	950b      	str	r5, [sp, #44]	; 0x2c
 8017e40:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8017e42:	2dff      	cmp	r5, #255	; 0xff
 8017e44:	d021      	beq.n	8017e8a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8017e46:	9d08      	ldr	r5, [sp, #32]
 8017e48:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8017e4c:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8017e4e:	fb05 fb0b 	mul.w	fp, r5, fp
 8017e52:	9d08      	ldr	r5, [sp, #32]
 8017e54:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8017e58:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8017e5a:	fb05 fa0e 	mul.w	sl, r5, lr
 8017e5e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017e62:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e66:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017e6a:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017e6e:	44de      	add	lr, fp
 8017e70:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017e74:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017e78:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017e7c:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017e80:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017e84:	ea4e 050a 	orr.w	r5, lr, sl
 8017e88:	9508      	str	r5, [sp, #32]
 8017e8a:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017e8c:	2dff      	cmp	r5, #255	; 0xff
 8017e8e:	d021      	beq.n	8017ed4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8017e90:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017e92:	f005 1bff 	and.w	fp, r5, #16711935	; 0xff00ff
 8017e96:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017e98:	fb05 fb0b 	mul.w	fp, r5, fp
 8017e9c:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017e9e:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 8017ea2:	9d13      	ldr	r5, [sp, #76]	; 0x4c
 8017ea4:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8017ea8:	fb05 fa0a 	mul.w	sl, r5, sl
 8017eac:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017eb0:	f10b 1b01 	add.w	fp, fp, #65537	; 0x10001
 8017eb4:	f50a 7c80 	add.w	ip, sl, #256	; 0x100
 8017eb8:	44de      	add	lr, fp
 8017eba:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8017ebe:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8017ec2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8017ec6:	f00e 1eff 	and.w	lr, lr, #16711935	; 0xff00ff
 8017eca:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8017ece:	ea4e 050a 	orr.w	r5, lr, sl
 8017ed2:	950c      	str	r5, [sp, #48]	; 0x30
 8017ed4:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8017ed6:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 8017eda:	9d08      	ldr	r5, [sp, #32]
 8017edc:	f002 1eff 	and.w	lr, r2, #16711935	; 0xff00ff
 8017ee0:	fb08 fc0c 	mul.w	ip, r8, ip
 8017ee4:	fb01 cc0e 	mla	ip, r1, lr, ip
 8017ee8:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8017eec:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8017eee:	fb00 cc0e 	mla	ip, r0, lr, ip
 8017ef2:	f005 1eff 	and.w	lr, r5, #16711935	; 0xff00ff
 8017ef6:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8017ef8:	fb09 cc0e 	mla	ip, r9, lr, ip
 8017efc:	f405 4e7f 	and.w	lr, r5, #65280	; 0xff00
 8017f00:	f402 427f 	and.w	r2, r2, #65280	; 0xff00
 8017f04:	fb08 f80e 	mul.w	r8, r8, lr
 8017f08:	fb01 8202 	mla	r2, r1, r2, r8
 8017f0c:	9908      	ldr	r1, [sp, #32]
 8017f0e:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 8017f12:	990c      	ldr	r1, [sp, #48]	; 0x30
 8017f14:	fb00 220a 	mla	r2, r0, sl, r2
 8017f18:	f401 407f 	and.w	r0, r1, #65280	; 0xff00
 8017f1c:	fb09 2900 	mla	r9, r9, r0, r2
 8017f20:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8017f24:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8017f28:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8017f2c:	f409 497f 	and.w	r9, r9, #65280	; 0xff00
 8017f30:	ea4c 0c09 	orr.w	ip, ip, r9
 8017f34:	2bff      	cmp	r3, #255	; 0xff
 8017f36:	ea4f 201c 	mov.w	r0, ip, lsr #8
 8017f3a:	f000 80b5 	beq.w	80180a8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x464>
 8017f3e:	8839      	ldrh	r1, [r7, #0]
 8017f40:	43db      	mvns	r3, r3
 8017f42:	ea4f 2821 	mov.w	r8, r1, asr #8
 8017f46:	fa5f f983 	uxtb.w	r9, r3
 8017f4a:	10ca      	asrs	r2, r1, #3
 8017f4c:	f008 08f8 	and.w	r8, r8, #248	; 0xf8
 8017f50:	fb08 f809 	mul.w	r8, r8, r9
 8017f54:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8017f58:	fb02 fe09 	mul.w	lr, r2, r9
 8017f5c:	f108 0201 	add.w	r2, r8, #1
 8017f60:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8017f64:	ea4f 421c 	mov.w	r2, ip, lsr #16
 8017f68:	00cb      	lsls	r3, r1, #3
 8017f6a:	eb02 2218 	add.w	r2, r2, r8, lsr #8
 8017f6e:	4961      	ldr	r1, [pc, #388]	; (80180f4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>)
 8017f70:	b2d2      	uxtb	r2, r2
 8017f72:	ea01 2102 	and.w	r1, r1, r2, lsl #8
 8017f76:	f10e 0201 	add.w	r2, lr, #1
 8017f7a:	eb02 221e 	add.w	r2, r2, lr, lsr #8
 8017f7e:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 8017f82:	b2db      	uxtb	r3, r3
 8017f84:	00d2      	lsls	r2, r2, #3
 8017f86:	fb03 f309 	mul.w	r3, r3, r9
 8017f8a:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8017f8e:	430a      	orrs	r2, r1
 8017f90:	1c59      	adds	r1, r3, #1
 8017f92:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 8017f96:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 8017f9a:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8017f9e:	ea42 0c0c 	orr.w	ip, r2, ip
 8017fa2:	f8a7 c000 	strh.w	ip, [r7]
 8017fa6:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8017fa8:	441c      	add	r4, r3
 8017faa:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017fac:	441e      	add	r6, r3
 8017fae:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8017fb0:	3b01      	subs	r3, #1
 8017fb2:	3702      	adds	r7, #2
 8017fb4:	9317      	str	r3, [sp, #92]	; 0x5c
 8017fb6:	e69b      	b.n	8017cf0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xac>
 8017fb8:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8017fba:	441c      	add	r4, r3
 8017fbc:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8017fbe:	441e      	add	r6, r3
 8017fc0:	9b07      	ldr	r3, [sp, #28]
 8017fc2:	3b01      	subs	r3, #1
 8017fc4:	9307      	str	r3, [sp, #28]
 8017fc6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8017fc8:	3302      	adds	r3, #2
 8017fca:	930a      	str	r3, [sp, #40]	; 0x28
 8017fcc:	e670      	b.n	8017cb0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8017fce:	d023      	beq.n	8018018 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d4>
 8017fd0:	9b07      	ldr	r3, [sp, #28]
 8017fd2:	982f      	ldr	r0, [sp, #188]	; 0xbc
 8017fd4:	3b01      	subs	r3, #1
 8017fd6:	fb00 4003 	mla	r0, r0, r3, r4
 8017fda:	1400      	asrs	r0, r0, #16
 8017fdc:	f53f ae85 	bmi.w	8017cea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017fe0:	3901      	subs	r1, #1
 8017fe2:	4288      	cmp	r0, r1
 8017fe4:	f6bf ae81 	bge.w	8017cea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017fe8:	9930      	ldr	r1, [sp, #192]	; 0xc0
 8017fea:	fb01 6303 	mla	r3, r1, r3, r6
 8017fee:	141b      	asrs	r3, r3, #16
 8017ff0:	f53f ae7b 	bmi.w	8017cea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017ff4:	3a01      	subs	r2, #1
 8017ff6:	4293      	cmp	r3, r2
 8017ff8:	f6bf ae77 	bge.w	8017cea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017ffc:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8018000:	f8dd 8028 	ldr.w	r8, [sp, #40]	; 0x28
 8018004:	f1bb 0f00 	cmp.w	fp, #0
 8018008:	dc76      	bgt.n	80180f8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b4>
 801800a:	9b07      	ldr	r3, [sp, #28]
 801800c:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018010:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018012:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018016:	930a      	str	r3, [sp, #40]	; 0x28
 8018018:	9b16      	ldr	r3, [sp, #88]	; 0x58
 801801a:	2b00      	cmp	r3, #0
 801801c:	f340 81ca 	ble.w	80183b4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x770>
 8018020:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018024:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018028:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801802c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801802e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018032:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018036:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801803a:	eef0 6a48 	vmov.f32	s13, s16
 801803e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018042:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018046:	ee37 8a48 	vsub.f32	s16, s14, s16
 801804a:	ee16 4a90 	vmov	r4, s13
 801804e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018052:	eef0 6a68 	vmov.f32	s13, s17
 8018056:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801805a:	ee18 2a10 	vmov	r2, s16
 801805e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018062:	fb92 f3f3 	sdiv	r3, r2, r3
 8018066:	ee18 2a90 	vmov	r2, s17
 801806a:	932f      	str	r3, [sp, #188]	; 0xbc
 801806c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 801806e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018072:	9330      	str	r3, [sp, #192]	; 0xc0
 8018074:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8018076:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8018078:	3b01      	subs	r3, #1
 801807a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801807e:	9316      	str	r3, [sp, #88]	; 0x58
 8018080:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018082:	bf08      	it	eq
 8018084:	4613      	moveq	r3, r2
 8018086:	ee16 6a90 	vmov	r6, s13
 801808a:	9307      	str	r3, [sp, #28]
 801808c:	eef0 8a67 	vmov.f32	s17, s15
 8018090:	eeb0 8a47 	vmov.f32	s16, s14
 8018094:	e5fe      	b.n	8017c94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 8018096:	2800      	cmp	r0, #0
 8018098:	f43f ae6e 	beq.w	8017d78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 801809c:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 80180a0:	9308      	str	r3, [sp, #32]
 80180a2:	0e1b      	lsrs	r3, r3, #24
 80180a4:	9310      	str	r3, [sp, #64]	; 0x40
 80180a6:	e667      	b.n	8017d78 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x134>
 80180a8:	ea4f 125c 	mov.w	r2, ip, lsr #5
 80180ac:	f402 63fc 	and.w	r3, r2, #2016	; 0x7e0
 80180b0:	f420 62ff 	bic.w	r2, r0, #2040	; 0x7f8
 80180b4:	f022 0207 	bic.w	r2, r2, #7
 80180b8:	431a      	orrs	r2, r3
 80180ba:	e76e      	b.n	8017f9a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80180bc:	f112 0801 	adds.w	r8, r2, #1
 80180c0:	f53f af71 	bmi.w	8017fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80180c4:	4543      	cmp	r3, r8
 80180c6:	f6ff af6e 	blt.w	8017fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80180ca:	f11c 0801 	adds.w	r8, ip, #1
 80180ce:	f53f af6a 	bmi.w	8017fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80180d2:	45c6      	cmp	lr, r8
 80180d4:	f6ff af67 	blt.w	8017fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80180d8:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 80180dc:	fa0f f28e 	sxth.w	r2, lr
 80180e0:	e9cd 1003 	strd	r1, r0, [sp, #12]
 80180e4:	9200      	str	r2, [sp, #0]
 80180e6:	b21b      	sxth	r3, r3
 80180e8:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80180ea:	9819      	ldr	r0, [sp, #100]	; 0x64
 80180ec:	4639      	mov	r1, r7
 80180ee:	f7ff fc59 	bl	80179a4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 80180f2:	e758      	b.n	8017fa6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 80180f4:	fffff800 	.word	0xfffff800
 80180f8:	9b34      	ldr	r3, [sp, #208]	; 0xd0
 80180fa:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80180fc:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 8018100:	1421      	asrs	r1, r4, #16
 8018102:	1433      	asrs	r3, r6, #16
 8018104:	fb07 1303 	mla	r3, r7, r3, r1
 8018108:	990f      	ldr	r1, [sp, #60]	; 0x3c
 801810a:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 801810e:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 8018112:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8018116:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801811a:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 801811e:	2a00      	cmp	r2, #0
 8018120:	f000 8131 	beq.w	8018386 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x742>
 8018124:	684d      	ldr	r5, [r1, #4]
 8018126:	950d      	str	r5, [sp, #52]	; 0x34
 8018128:	0e2d      	lsrs	r5, r5, #24
 801812a:	9514      	str	r5, [sp, #80]	; 0x50
 801812c:	b178      	cbz	r0, 801814e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801812e:	f107 4780 	add.w	r7, r7, #1073741824	; 0x40000000
 8018132:	3f01      	subs	r7, #1
 8018134:	00bf      	lsls	r7, r7, #2
 8018136:	3704      	adds	r7, #4
 8018138:	eb01 0e07 	add.w	lr, r1, r7
 801813c:	59c9      	ldr	r1, [r1, r7]
 801813e:	9109      	str	r1, [sp, #36]	; 0x24
 8018140:	0e09      	lsrs	r1, r1, #24
 8018142:	9111      	str	r1, [sp, #68]	; 0x44
 8018144:	f8de 1004 	ldr.w	r1, [lr, #4]
 8018148:	910e      	str	r1, [sp, #56]	; 0x38
 801814a:	0e09      	lsrs	r1, r1, #24
 801814c:	9115      	str	r1, [sp, #84]	; 0x54
 801814e:	b292      	uxth	r2, r2
 8018150:	b280      	uxth	r0, r0
 8018152:	fb02 f900 	mul.w	r9, r2, r0
 8018156:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 801815a:	0112      	lsls	r2, r2, #4
 801815c:	eba2 0e09 	sub.w	lr, r2, r9
 8018160:	b280      	uxth	r0, r0
 8018162:	f5c2 7180 	rsb	r1, r2, #256	; 0x100
 8018166:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8018168:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801816a:	fa1f fe8e 	uxth.w	lr, lr
 801816e:	1a09      	subs	r1, r1, r0
 8018170:	b289      	uxth	r1, r1
 8018172:	fb0e f202 	mul.w	r2, lr, r2
 8018176:	fb01 220c 	mla	r2, r1, ip, r2
 801817a:	fb00 2205 	mla	r2, r0, r5, r2
 801817e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018180:	fb09 2205 	mla	r2, r9, r5, r2
 8018184:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8018188:	2a00      	cmp	r2, #0
 801818a:	f000 80f3 	beq.w	8018374 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 801818e:	f1bc 0fff 	cmp.w	ip, #255	; 0xff
 8018192:	d019      	beq.n	80181c8 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x584>
 8018194:	f003 1aff 	and.w	sl, r3, #16711935	; 0xff00ff
 8018198:	fb0c fa0a 	mul.w	sl, ip, sl
 801819c:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80181a0:	fb0c fc03 	mul.w	ip, ip, r3
 80181a4:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80181a8:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80181ac:	f10a 1a01 	add.w	sl, sl, #65537	; 0x10001
 80181b0:	f50c 7780 	add.w	r7, ip, #256	; 0x100
 80181b4:	4453      	add	r3, sl
 80181b6:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80181ba:	0a1b      	lsrs	r3, r3, #8
 80181bc:	0a3f      	lsrs	r7, r7, #8
 80181be:	f003 13ff 	and.w	r3, r3, #16711935	; 0xff00ff
 80181c2:	f407 477f 	and.w	r7, r7, #65280	; 0xff00
 80181c6:	433b      	orrs	r3, r7
 80181c8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80181ca:	2dff      	cmp	r5, #255	; 0xff
 80181cc:	d020      	beq.n	8018210 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5cc>
 80181ce:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80181d0:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80181d4:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80181d6:	436f      	muls	r7, r5
 80181d8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80181da:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 80181de:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80181e0:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80181e4:	fb05 fa0a 	mul.w	sl, r5, sl
 80181e8:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 80181ec:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 80181f0:	44bc      	add	ip, r7
 80181f2:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 80181f6:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80181fa:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80181fe:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018202:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018206:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801820a:	ea4c 050a 	orr.w	r5, ip, sl
 801820e:	950d      	str	r5, [sp, #52]	; 0x34
 8018210:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018212:	2dff      	cmp	r5, #255	; 0xff
 8018214:	d020      	beq.n	8018258 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x614>
 8018216:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018218:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 801821c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 801821e:	436f      	muls	r7, r5
 8018220:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8018222:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 8018226:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8018228:	fb05 fa0c 	mul.w	sl, r5, ip
 801822c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018230:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018234:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 8018238:	44bc      	add	ip, r7
 801823a:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 801823e:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8018242:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8018246:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801824a:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 801824e:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 8018252:	ea4c 050a 	orr.w	r5, ip, sl
 8018256:	9509      	str	r5, [sp, #36]	; 0x24
 8018258:	9d15      	ldr	r5, [sp, #84]	; 0x54
 801825a:	2dff      	cmp	r5, #255	; 0xff
 801825c:	d020      	beq.n	80182a0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x65c>
 801825e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8018260:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 8018264:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018266:	436f      	muls	r7, r5
 8018268:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 801826a:	f405 4a7f 	and.w	sl, r5, #65280	; 0xff00
 801826e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8018270:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8018274:	fb05 fa0a 	mul.w	sl, r5, sl
 8018278:	f107 1701 	add.w	r7, r7, #65537	; 0x10001
 801827c:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018280:	44bc      	add	ip, r7
 8018282:	f50a 7780 	add.w	r7, sl, #256	; 0x100
 8018286:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 801828a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801828e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8018292:	f00c 1cff 	and.w	ip, ip, #16711935	; 0xff00ff
 8018296:	f40a 4a7f 	and.w	sl, sl, #65280	; 0xff00
 801829a:	ea4c 050a 	orr.w	r5, ip, sl
 801829e:	950e      	str	r5, [sp, #56]	; 0x38
 80182a0:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80182a2:	f005 17ff 	and.w	r7, r5, #16711935	; 0xff00ff
 80182a6:	9d09      	ldr	r5, [sp, #36]	; 0x24
 80182a8:	f003 1cff 	and.w	ip, r3, #16711935	; 0xff00ff
 80182ac:	fb0e f707 	mul.w	r7, lr, r7
 80182b0:	fb01 770c 	mla	r7, r1, ip, r7
 80182b4:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80182b8:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80182ba:	fb00 770c 	mla	r7, r0, ip, r7
 80182be:	f005 1cff 	and.w	ip, r5, #16711935	; 0xff00ff
 80182c2:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80182c4:	fb09 770c 	mla	r7, r9, ip, r7
 80182c8:	f405 4c7f 	and.w	ip, r5, #65280	; 0xff00
 80182cc:	fb0e fe0c 	mul.w	lr, lr, ip
 80182d0:	f403 437f 	and.w	r3, r3, #65280	; 0xff00
 80182d4:	fb01 e303 	mla	r3, r1, r3, lr
 80182d8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80182da:	f401 4a7f 	and.w	sl, r1, #65280	; 0xff00
 80182de:	990e      	ldr	r1, [sp, #56]	; 0x38
 80182e0:	fb00 330a 	mla	r3, r0, sl, r3
 80182e4:	f401 4c7f 	and.w	ip, r1, #65280	; 0xff00
 80182e8:	fb09 3c0c 	mla	ip, r9, ip, r3
 80182ec:	0a3f      	lsrs	r7, r7, #8
 80182ee:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80182f2:	f007 17ff 	and.w	r7, r7, #16711935	; 0xff00ff
 80182f6:	f40c 4c7f 	and.w	ip, ip, #65280	; 0xff00
 80182fa:	ea47 070c 	orr.w	r7, r7, ip
 80182fe:	2aff      	cmp	r2, #255	; 0xff
 8018300:	ea4f 2017 	mov.w	r0, r7, lsr #8
 8018304:	d048      	beq.n	8018398 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x754>
 8018306:	f8b8 1000 	ldrh.w	r1, [r8]
 801830a:	43d2      	mvns	r2, r2
 801830c:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8018310:	fa5f f982 	uxtb.w	r9, r2
 8018314:	f00e 0ef8 	and.w	lr, lr, #248	; 0xf8
 8018318:	fb0e fe09 	mul.w	lr, lr, r9
 801831c:	f10e 0301 	add.w	r3, lr, #1
 8018320:	ea4f 0ce1 	mov.w	ip, r1, asr #3
 8018324:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 8018328:	0c3b      	lsrs	r3, r7, #16
 801832a:	eb03 2e1e 	add.w	lr, r3, lr, lsr #8
 801832e:	f00c 0cfc 	and.w	ip, ip, #252	; 0xfc
 8018332:	4b23      	ldr	r3, [pc, #140]	; (80183c0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x77c>)
 8018334:	fb0c fc09 	mul.w	ip, ip, r9
 8018338:	00ca      	lsls	r2, r1, #3
 801833a:	fa5f fe8e 	uxtb.w	lr, lr
 801833e:	ea03 2e0e 	and.w	lr, r3, lr, lsl #8
 8018342:	b2d2      	uxtb	r2, r2
 8018344:	f10c 0301 	add.w	r3, ip, #1
 8018348:	fb02 f209 	mul.w	r2, r2, r9
 801834c:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 8018350:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 8018354:	1c51      	adds	r1, r2, #1
 8018356:	00db      	lsls	r3, r3, #3
 8018358:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801835c:	f403 63fc 	and.w	r3, r3, #2016	; 0x7e0
 8018360:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8018364:	ea4e 0e03 	orr.w	lr, lr, r3
 8018368:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 801836c:	ea47 0e0e 	orr.w	lr, r7, lr
 8018370:	f8a8 e000 	strh.w	lr, [r8]
 8018374:	9b2f      	ldr	r3, [sp, #188]	; 0xbc
 8018376:	441c      	add	r4, r3
 8018378:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801837a:	f108 0802 	add.w	r8, r8, #2
 801837e:	441e      	add	r6, r3
 8018380:	f10b 3bff 	add.w	fp, fp, #4294967295
 8018384:	e63e      	b.n	8018004 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8018386:	2800      	cmp	r0, #0
 8018388:	f43f aee1 	beq.w	801814e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 801838c:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8018390:	9109      	str	r1, [sp, #36]	; 0x24
 8018392:	0e09      	lsrs	r1, r1, #24
 8018394:	9111      	str	r1, [sp, #68]	; 0x44
 8018396:	e6da      	b.n	801814e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50a>
 8018398:	097a      	lsrs	r2, r7, #5
 801839a:	f420 60ff 	bic.w	r0, r0, #2040	; 0x7f8
 801839e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80183a2:	f020 0007 	bic.w	r0, r0, #7
 80183a6:	4310      	orrs	r0, r2
 80183a8:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80183ac:	4307      	orrs	r7, r0
 80183ae:	f8a8 7000 	strh.w	r7, [r8]
 80183b2:	e7df      	b.n	8018374 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80183b4:	b01b      	add	sp, #108	; 0x6c
 80183b6:	ecbd 8b08 	vpop	{d8-d11}
 80183ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80183be:	bf00      	nop
 80183c0:	fffff800 	.word	0xfffff800

080183c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80183c4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80183c8:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 80183cc:	2c00      	cmp	r4, #0
 80183ce:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80183d2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 80183d6:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 80183da:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 80183de:	fb04 ce03 	mla	lr, r4, r3, ip
 80183e2:	db60      	blt.n	80184a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80183e4:	45a1      	cmp	r9, r4
 80183e6:	dd5e      	ble.n	80184a6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe2>
 80183e8:	f1bc 0f00 	cmp.w	ip, #0
 80183ec:	db59      	blt.n	80184a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80183ee:	45e0      	cmp	r8, ip
 80183f0:	dd57      	ble.n	80184a2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xde>
 80183f2:	ea4f 005e 	mov.w	r0, lr, lsr #1
 80183f6:	f01e 0f01 	tst.w	lr, #1
 80183fa:	5c16      	ldrb	r6, [r2, r0]
 80183fc:	bf0c      	ite	eq
 80183fe:	f006 060f 	andeq.w	r6, r6, #15
 8018402:	1136      	asrne	r6, r6, #4
 8018404:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8018408:	b2f6      	uxtb	r6, r6
 801840a:	f11c 0001 	adds.w	r0, ip, #1
 801840e:	d44d      	bmi.n	80184ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8018410:	4580      	cmp	r8, r0
 8018412:	dd4b      	ble.n	80184ac <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xe8>
 8018414:	2d00      	cmp	r5, #0
 8018416:	d04b      	beq.n	80184b0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xec>
 8018418:	f10e 0a01 	add.w	sl, lr, #1
 801841c:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8018420:	f01a 0f01 	tst.w	sl, #1
 8018424:	5c10      	ldrb	r0, [r2, r0]
 8018426:	bf0c      	ite	eq
 8018428:	f000 000f 	andeq.w	r0, r0, #15
 801842c:	1100      	asrne	r0, r0, #4
 801842e:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018432:	b2c0      	uxtb	r0, r0
 8018434:	3401      	adds	r4, #1
 8018436:	d43f      	bmi.n	80184b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 8018438:	45a1      	cmp	r9, r4
 801843a:	dd3d      	ble.n	80184b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf4>
 801843c:	2f00      	cmp	r7, #0
 801843e:	f000 809b 	beq.w	8018578 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b4>
 8018442:	f1bc 0f00 	cmp.w	ip, #0
 8018446:	db35      	blt.n	80184b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 8018448:	45e0      	cmp	r8, ip
 801844a:	dd33      	ble.n	80184b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xf0>
 801844c:	eb03 090e 	add.w	r9, r3, lr
 8018450:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8018454:	f019 0f01 	tst.w	r9, #1
 8018458:	5d14      	ldrb	r4, [r2, r4]
 801845a:	bf0c      	ite	eq
 801845c:	f004 040f 	andeq.w	r4, r4, #15
 8018460:	1124      	asrne	r4, r4, #4
 8018462:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8018466:	b2e4      	uxtb	r4, r4
 8018468:	f11c 0c01 	adds.w	ip, ip, #1
 801846c:	d427      	bmi.n	80184be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 801846e:	45e0      	cmp	r8, ip
 8018470:	dd25      	ble.n	80184be <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfa>
 8018472:	b335      	cbz	r5, 80184c2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xfe>
 8018474:	3301      	adds	r3, #1
 8018476:	449e      	add	lr, r3
 8018478:	ea4f 035e 	mov.w	r3, lr, lsr #1
 801847c:	f01e 0f01 	tst.w	lr, #1
 8018480:	5cd2      	ldrb	r2, [r2, r3]
 8018482:	bf0c      	ite	eq
 8018484:	f002 020f 	andeq.w	r2, r2, #15
 8018488:	1112      	asrne	r2, r2, #4
 801848a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801848e:	b2d3      	uxtb	r3, r2
 8018490:	2d0f      	cmp	r5, #15
 8018492:	d917      	bls.n	80184c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x100>
 8018494:	4b3b      	ldr	r3, [pc, #236]	; (8018584 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c0>)
 8018496:	4a3c      	ldr	r2, [pc, #240]	; (8018588 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c4>)
 8018498:	483c      	ldr	r0, [pc, #240]	; (801858c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 801849a:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 801849e:	f000 ffcf 	bl	8019440 <__assert_func>
 80184a2:	2600      	movs	r6, #0
 80184a4:	e7b1      	b.n	801840a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x46>
 80184a6:	2000      	movs	r0, #0
 80184a8:	4606      	mov	r6, r0
 80184aa:	e7c3      	b.n	8018434 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 80184ac:	2000      	movs	r0, #0
 80184ae:	e7c1      	b.n	8018434 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 80184b0:	4628      	mov	r0, r5
 80184b2:	e7bf      	b.n	8018434 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x70>
 80184b4:	2400      	movs	r4, #0
 80184b6:	e7d7      	b.n	8018468 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa4>
 80184b8:	2300      	movs	r3, #0
 80184ba:	461c      	mov	r4, r3
 80184bc:	e7e8      	b.n	8018490 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 80184be:	2300      	movs	r3, #0
 80184c0:	e7e6      	b.n	8018490 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xcc>
 80184c2:	462b      	mov	r3, r5
 80184c4:	2f0f      	cmp	r7, #15
 80184c6:	d8e5      	bhi.n	8018494 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 80184c8:	b2ad      	uxth	r5, r5
 80184ca:	b2bf      	uxth	r7, r7
 80184cc:	fb05 fc07 	mul.w	ip, r5, r7
 80184d0:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 80184d4:	012d      	lsls	r5, r5, #4
 80184d6:	b2bf      	uxth	r7, r7
 80184d8:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 80184dc:	eba5 050c 	sub.w	r5, r5, ip
 80184e0:	1bd2      	subs	r2, r2, r7
 80184e2:	b2ad      	uxth	r5, r5
 80184e4:	b292      	uxth	r2, r2
 80184e6:	4368      	muls	r0, r5
 80184e8:	fb06 0002 	mla	r0, r6, r2, r0
 80184ec:	fb07 0404 	mla	r4, r7, r4, r0
 80184f0:	fb0c 4303 	mla	r3, ip, r3, r4
 80184f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80184f8:	2b00      	cmp	r3, #0
 80184fa:	d03b      	beq.n	8018574 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1b0>
 80184fc:	4a24      	ldr	r2, [pc, #144]	; (8018590 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 80184fe:	880e      	ldrh	r6, [r1, #0]
 8018500:	6815      	ldr	r5, [r2, #0]
 8018502:	f89d 2038 	ldrb.w	r2, [sp, #56]	; 0x38
 8018506:	435a      	muls	r2, r3
 8018508:	1c53      	adds	r3, r2, #1
 801850a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801850e:	121b      	asrs	r3, r3, #8
 8018510:	b29a      	uxth	r2, r3
 8018512:	1234      	asrs	r4, r6, #8
 8018514:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8018518:	43db      	mvns	r3, r3
 801851a:	b2db      	uxtb	r3, r3
 801851c:	fb10 f002 	smulbb	r0, r0, r2
 8018520:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8018524:	fb04 0403 	mla	r4, r4, r3, r0
 8018528:	f3c5 2707 	ubfx	r7, r5, #8, #8
 801852c:	10f0      	asrs	r0, r6, #3
 801852e:	b2ed      	uxtb	r5, r5
 8018530:	00f6      	lsls	r6, r6, #3
 8018532:	fb17 f702 	smulbb	r7, r7, r2
 8018536:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 801853a:	fb15 f202 	smulbb	r2, r5, r2
 801853e:	b2f6      	uxtb	r6, r6
 8018540:	b2a4      	uxth	r4, r4
 8018542:	fb00 7003 	mla	r0, r0, r3, r7
 8018546:	fb06 2303 	mla	r3, r6, r3, r2
 801854a:	b29a      	uxth	r2, r3
 801854c:	1c63      	adds	r3, r4, #1
 801854e:	b280      	uxth	r0, r0
 8018550:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8018554:	1c53      	adds	r3, r2, #1
 8018556:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801855a:	1c42      	adds	r2, r0, #1
 801855c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018560:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8018564:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018568:	0940      	lsrs	r0, r0, #5
 801856a:	4323      	orrs	r3, r4
 801856c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018570:	4303      	orrs	r3, r0
 8018572:	800b      	strh	r3, [r1, #0]
 8018574:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018578:	2d0f      	cmp	r5, #15
 801857a:	d88b      	bhi.n	8018494 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xd0>
 801857c:	463b      	mov	r3, r7
 801857e:	463c      	mov	r4, r7
 8018580:	e7a2      	b.n	80184c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x104>
 8018582:	bf00      	nop
 8018584:	0801ce3e 	.word	0x0801ce3e
 8018588:	0801d40a 	.word	0x0801d40a
 801858c:	0801cec2 	.word	0x0801cec2
 8018590:	2000a0f4 	.word	0x2000a0f4

08018594 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018594:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018598:	ed2d 8b08 	vpush	{d8-d11}
 801859c:	b097      	sub	sp, #92	; 0x5c
 801859e:	e9dd 4629 	ldrd	r4, r6, [sp, #164]	; 0xa4
 80185a2:	9214      	str	r2, [sp, #80]	; 0x50
 80185a4:	9309      	str	r3, [sp, #36]	; 0x24
 80185a6:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80185a8:	f89d 30c4 	ldrb.w	r3, [sp, #196]	; 0xc4
 80185ac:	910e      	str	r1, [sp, #56]	; 0x38
 80185ae:	930f      	str	r3, [sp, #60]	; 0x3c
 80185b0:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	; 0xb8
 80185b4:	9015      	str	r0, [sp, #84]	; 0x54
 80185b6:	6850      	ldr	r0, [r2, #4]
 80185b8:	6812      	ldr	r2, [r2, #0]
 80185ba:	fb00 1303 	mla	r3, r0, r3, r1
 80185be:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80185c2:	930a      	str	r3, [sp, #40]	; 0x28
 80185c4:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80185c6:	689b      	ldr	r3, [r3, #8]
 80185c8:	3301      	adds	r3, #1
 80185ca:	f023 0301 	bic.w	r3, r3, #1
 80185ce:	930b      	str	r3, [sp, #44]	; 0x2c
 80185d0:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 80185d2:	681f      	ldr	r7, [r3, #0]
 80185d4:	eeb0 aa40 	vmov.f32	s20, s0
 80185d8:	eef0 9a60 	vmov.f32	s19, s1
 80185dc:	eeb0 9a41 	vmov.f32	s18, s2
 80185e0:	eeb0 8a62 	vmov.f32	s16, s5
 80185e4:	eef0 8a43 	vmov.f32	s17, s6
 80185e8:	eef0 ba44 	vmov.f32	s23, s8
 80185ec:	eeb0 ba64 	vmov.f32	s22, s9
 80185f0:	eef0 aa45 	vmov.f32	s21, s10
 80185f4:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80185f6:	2b00      	cmp	r3, #0
 80185f8:	dc03      	bgt.n	8018602 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80185fa:	9b14      	ldr	r3, [sp, #80]	; 0x50
 80185fc:	2b00      	cmp	r3, #0
 80185fe:	f340 8257 	ble.w	8018ab0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 8018602:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 8018604:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018608:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801860c:	1e48      	subs	r0, r1, #1
 801860e:	f102 3cff 	add.w	ip, r2, #4294967295
 8018612:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018614:	2b00      	cmp	r3, #0
 8018616:	f340 80eb 	ble.w	80187f0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25c>
 801861a:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801861e:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018622:	d406      	bmi.n	8018632 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018624:	4586      	cmp	lr, r0
 8018626:	da04      	bge.n	8018632 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018628:	2b00      	cmp	r3, #0
 801862a:	db02      	blt.n	8018632 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801862c:	4563      	cmp	r3, ip
 801862e:	f2c0 80e0 	blt.w	80187f2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25e>
 8018632:	f11e 0e01 	adds.w	lr, lr, #1
 8018636:	f100 80d0 	bmi.w	80187da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801863a:	4571      	cmp	r1, lr
 801863c:	f2c0 80cd 	blt.w	80187da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8018640:	3301      	adds	r3, #1
 8018642:	f100 80ca 	bmi.w	80187da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 8018646:	429a      	cmp	r2, r3
 8018648:	f2c0 80c7 	blt.w	80187da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x246>
 801864c:	e9dd 9809 	ldrd	r9, r8, [sp, #36]	; 0x24
 8018650:	f9bd a02c 	ldrsh.w	sl, [sp, #44]	; 0x2c
 8018654:	f1b9 0f00 	cmp.w	r9, #0
 8018658:	f340 80e8 	ble.w	801882c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801865c:	9b30      	ldr	r3, [sp, #192]	; 0xc0
 801865e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8018662:	1423      	asrs	r3, r4, #16
 8018664:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018668:	f3c4 3203 	ubfx	r2, r4, #12, #4
 801866c:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018670:	f100 8133 	bmi.w	80188da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8018674:	f10c 3bff 	add.w	fp, ip, #4294967295
 8018678:	455b      	cmp	r3, fp
 801867a:	f280 812e 	bge.w	80188da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801867e:	2800      	cmp	r0, #0
 8018680:	f2c0 812b 	blt.w	80188da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 8018684:	f10e 3bff 	add.w	fp, lr, #4294967295
 8018688:	4558      	cmp	r0, fp
 801868a:	f280 8126 	bge.w	80188da <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x346>
 801868e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018690:	fb00 3305 	mla	r3, r0, r5, r3
 8018694:	0858      	lsrs	r0, r3, #1
 8018696:	07dd      	lsls	r5, r3, #31
 8018698:	f817 c000 	ldrb.w	ip, [r7, r0]
 801869c:	bf54      	ite	pl
 801869e:	f00c 0c0f 	andpl.w	ip, ip, #15
 80186a2:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80186a6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80186aa:	fa5f fc8c 	uxtb.w	ip, ip
 80186ae:	2a00      	cmp	r2, #0
 80186b0:	f000 8102 	beq.w	80188b8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>
 80186b4:	1c58      	adds	r0, r3, #1
 80186b6:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80186ba:	07c0      	lsls	r0, r0, #31
 80186bc:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80186c0:	bf54      	ite	pl
 80186c2:	f00e 0e0f 	andpl.w	lr, lr, #15
 80186c6:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80186ca:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80186ce:	fa5f f08e 	uxtb.w	r0, lr
 80186d2:	9010      	str	r0, [sp, #64]	; 0x40
 80186d4:	b1c9      	cbz	r1, 801870a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80186d6:	4453      	add	r3, sl
 80186d8:	0858      	lsrs	r0, r3, #1
 80186da:	07dd      	lsls	r5, r3, #31
 80186dc:	5c38      	ldrb	r0, [r7, r0]
 80186de:	bf54      	ite	pl
 80186e0:	f000 000f 	andpl.w	r0, r0, #15
 80186e4:	1100      	asrmi	r0, r0, #4
 80186e6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80186ea:	3301      	adds	r3, #1
 80186ec:	b2c0      	uxtb	r0, r0
 80186ee:	900c      	str	r0, [sp, #48]	; 0x30
 80186f0:	0858      	lsrs	r0, r3, #1
 80186f2:	07dd      	lsls	r5, r3, #31
 80186f4:	f817 e000 	ldrb.w	lr, [r7, r0]
 80186f8:	bf54      	ite	pl
 80186fa:	f00e 030f 	andpl.w	r3, lr, #15
 80186fe:	ea4f 132e 	movmi.w	r3, lr, asr #4
 8018702:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8018706:	b2db      	uxtb	r3, r3
 8018708:	9311      	str	r3, [sp, #68]	; 0x44
 801870a:	b292      	uxth	r2, r2
 801870c:	b289      	uxth	r1, r1
 801870e:	fb02 f301 	mul.w	r3, r2, r1
 8018712:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8018716:	0112      	lsls	r2, r2, #4
 8018718:	b289      	uxth	r1, r1
 801871a:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 801871e:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8018720:	1ad2      	subs	r2, r2, r3
 8018722:	1a40      	subs	r0, r0, r1
 8018724:	b292      	uxth	r2, r2
 8018726:	436a      	muls	r2, r5
 8018728:	b280      	uxth	r0, r0
 801872a:	fb0c 2c00 	mla	ip, ip, r0, r2
 801872e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018730:	fb01 c102 	mla	r1, r1, r2, ip
 8018734:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8018736:	fb03 1302 	mla	r3, r3, r2, r1
 801873a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801873e:	2b00      	cmp	r3, #0
 8018740:	d042      	beq.n	80187c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8018742:	4a76      	ldr	r2, [pc, #472]	; (801891c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x388>)
 8018744:	f8b8 c000 	ldrh.w	ip, [r8]
 8018748:	6810      	ldr	r0, [r2, #0]
 801874a:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801874c:	4353      	muls	r3, r2
 801874e:	1c5a      	adds	r2, r3, #1
 8018750:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018754:	121b      	asrs	r3, r3, #8
 8018756:	fa1f fe83 	uxth.w	lr, r3
 801875a:	ea4f 212c 	mov.w	r1, ip, asr #8
 801875e:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8018762:	43db      	mvns	r3, r3
 8018764:	b2db      	uxtb	r3, r3
 8018766:	fb12 f20e 	smulbb	r2, r2, lr
 801876a:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 801876e:	fb01 2103 	mla	r1, r1, r3, r2
 8018772:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8018776:	ea4f 02ec 	mov.w	r2, ip, asr #3
 801877a:	b2c0      	uxtb	r0, r0
 801877c:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018780:	fb1b fb0e 	smulbb	fp, fp, lr
 8018784:	b289      	uxth	r1, r1
 8018786:	fb10 fe0e 	smulbb	lr, r0, lr
 801878a:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 801878e:	fa5f fc8c 	uxtb.w	ip, ip
 8018792:	fb02 b203 	mla	r2, r2, r3, fp
 8018796:	1c48      	adds	r0, r1, #1
 8018798:	fb0c e303 	mla	r3, ip, r3, lr
 801879c:	b292      	uxth	r2, r2
 801879e:	b29b      	uxth	r3, r3
 80187a0:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80187a4:	f401 4078 	and.w	r0, r1, #63488	; 0xf800
 80187a8:	f102 0b01 	add.w	fp, r2, #1
 80187ac:	1c59      	adds	r1, r3, #1
 80187ae:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80187b2:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80187b6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80187ba:	0952      	lsrs	r2, r2, #5
 80187bc:	4301      	orrs	r1, r0
 80187be:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 80187c2:	4311      	orrs	r1, r2
 80187c4:	f8a8 1000 	strh.w	r1, [r8]
 80187c8:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80187ca:	441c      	add	r4, r3
 80187cc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80187ce:	f108 0802 	add.w	r8, r8, #2
 80187d2:	441e      	add	r6, r3
 80187d4:	f109 39ff 	add.w	r9, r9, #4294967295
 80187d8:	e73c      	b.n	8018654 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xc0>
 80187da:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 80187dc:	441c      	add	r4, r3
 80187de:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80187e0:	441e      	add	r6, r3
 80187e2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187e4:	3b01      	subs	r3, #1
 80187e6:	9309      	str	r3, [sp, #36]	; 0x24
 80187e8:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80187ea:	3302      	adds	r3, #2
 80187ec:	930a      	str	r3, [sp, #40]	; 0x28
 80187ee:	e710      	b.n	8018612 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 80187f0:	d023      	beq.n	801883a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a6>
 80187f2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80187f4:	982b      	ldr	r0, [sp, #172]	; 0xac
 80187f6:	3b01      	subs	r3, #1
 80187f8:	fb00 4003 	mla	r0, r0, r3, r4
 80187fc:	1400      	asrs	r0, r0, #16
 80187fe:	f53f af25 	bmi.w	801864c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018802:	3901      	subs	r1, #1
 8018804:	4288      	cmp	r0, r1
 8018806:	f6bf af21 	bge.w	801864c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801880a:	992c      	ldr	r1, [sp, #176]	; 0xb0
 801880c:	fb01 6303 	mla	r3, r1, r3, r6
 8018810:	141b      	asrs	r3, r3, #16
 8018812:	f53f af1b 	bmi.w	801864c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 8018816:	3a01      	subs	r2, #1
 8018818:	4293      	cmp	r3, r2
 801881a:	f6bf af17 	bge.w	801864c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb8>
 801881e:	e9dd 8e09 	ldrd	r8, lr, [sp, #36]	; 0x24
 8018822:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	; 0x2c
 8018826:	f1b8 0f00 	cmp.w	r8, #0
 801882a:	dc79      	bgt.n	8018920 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 801882c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801882e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 8018832:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8018834:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8018838:	930a      	str	r3, [sp, #40]	; 0x28
 801883a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 801883c:	2b00      	cmp	r3, #0
 801883e:	f340 8137 	ble.w	8018ab0 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51c>
 8018842:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018846:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 801884a:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 801884e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018850:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018854:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018858:	ee29 7aa7 	vmul.f32	s14, s19, s15
 801885c:	eef0 6a48 	vmov.f32	s13, s16
 8018860:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018864:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018868:	ee37 8a48 	vsub.f32	s16, s14, s16
 801886c:	ee16 4a90 	vmov	r4, s13
 8018870:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018874:	eef0 6a68 	vmov.f32	s13, s17
 8018878:	ee77 8ae8 	vsub.f32	s17, s15, s17
 801887c:	ee18 2a10 	vmov	r2, s16
 8018880:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018884:	fb92 f3f3 	sdiv	r3, r2, r3
 8018888:	ee18 2a90 	vmov	r2, s17
 801888c:	932b      	str	r3, [sp, #172]	; 0xac
 801888e:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018890:	fb92 f3f3 	sdiv	r3, r2, r3
 8018894:	932c      	str	r3, [sp, #176]	; 0xb0
 8018896:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8018898:	9a14      	ldr	r2, [sp, #80]	; 0x50
 801889a:	3b01      	subs	r3, #1
 801889c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80188a0:	930e      	str	r3, [sp, #56]	; 0x38
 80188a2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 80188a4:	bf08      	it	eq
 80188a6:	4613      	moveq	r3, r2
 80188a8:	ee16 6a90 	vmov	r6, s13
 80188ac:	9309      	str	r3, [sp, #36]	; 0x24
 80188ae:	eef0 8a67 	vmov.f32	s17, s15
 80188b2:	eeb0 8a47 	vmov.f32	s16, s14
 80188b6:	e69d      	b.n	80185f4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80188b8:	2900      	cmp	r1, #0
 80188ba:	f43f af26 	beq.w	801870a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80188be:	eb0a 0003 	add.w	r0, sl, r3
 80188c2:	0843      	lsrs	r3, r0, #1
 80188c4:	07c0      	lsls	r0, r0, #31
 80188c6:	5cfb      	ldrb	r3, [r7, r3]
 80188c8:	bf54      	ite	pl
 80188ca:	f003 030f 	andpl.w	r3, r3, #15
 80188ce:	111b      	asrmi	r3, r3, #4
 80188d0:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 80188d4:	b2db      	uxtb	r3, r3
 80188d6:	930c      	str	r3, [sp, #48]	; 0x30
 80188d8:	e717      	b.n	801870a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 80188da:	f113 0b01 	adds.w	fp, r3, #1
 80188de:	f53f af73 	bmi.w	80187c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80188e2:	45dc      	cmp	ip, fp
 80188e4:	f6ff af70 	blt.w	80187c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80188e8:	f110 0b01 	adds.w	fp, r0, #1
 80188ec:	f53f af6c 	bmi.w	80187c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80188f0:	45de      	cmp	lr, fp
 80188f2:	f6ff af69 	blt.w	80187c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 80188f6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80188f8:	9302      	str	r3, [sp, #8]
 80188fa:	fa0f f38e 	sxth.w	r3, lr
 80188fe:	9301      	str	r3, [sp, #4]
 8018900:	fa0f f38c 	sxth.w	r3, ip
 8018904:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8018908:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801890c:	9300      	str	r3, [sp, #0]
 801890e:	463a      	mov	r2, r7
 8018910:	4653      	mov	r3, sl
 8018912:	4641      	mov	r1, r8
 8018914:	9815      	ldr	r0, [sp, #84]	; 0x54
 8018916:	f7ff fd55 	bl	80183c4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 801891a:	e755      	b.n	80187c8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801891c:	2000a0f4 	.word	0x2000a0f4
 8018920:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8018922:	1422      	asrs	r2, r4, #16
 8018924:	1433      	asrs	r3, r6, #16
 8018926:	fb05 2303 	mla	r3, r5, r3, r2
 801892a:	085a      	lsrs	r2, r3, #1
 801892c:	07dd      	lsls	r5, r3, #31
 801892e:	5cba      	ldrb	r2, [r7, r2]
 8018930:	bf54      	ite	pl
 8018932:	f002 020f 	andpl.w	r2, r2, #15
 8018936:	1112      	asrmi	r2, r2, #4
 8018938:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 801893c:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8018940:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8018944:	b2d2      	uxtb	r2, r2
 8018946:	2900      	cmp	r1, #0
 8018948:	f000 809f 	beq.w	8018a8a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f6>
 801894c:	f103 0901 	add.w	r9, r3, #1
 8018950:	ea4f 0c59 	mov.w	ip, r9, lsr #1
 8018954:	f019 0f01 	tst.w	r9, #1
 8018958:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801895c:	bf0c      	ite	eq
 801895e:	f00c 0c0f 	andeq.w	ip, ip, #15
 8018962:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8018966:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801896a:	fa5f f58c 	uxtb.w	r5, ip
 801896e:	9512      	str	r5, [sp, #72]	; 0x48
 8018970:	b1f8      	cbz	r0, 80189b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 8018972:	445b      	add	r3, fp
 8018974:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018978:	07dd      	lsls	r5, r3, #31
 801897a:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801897e:	bf54      	ite	pl
 8018980:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018984:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018988:	3301      	adds	r3, #1
 801898a:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 801898e:	fa5f f58c 	uxtb.w	r5, ip
 8018992:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018996:	950d      	str	r5, [sp, #52]	; 0x34
 8018998:	f817 c00c 	ldrb.w	ip, [r7, ip]
 801899c:	07dd      	lsls	r5, r3, #31
 801899e:	bf54      	ite	pl
 80189a0:	f00c 0c0f 	andpl.w	ip, ip, #15
 80189a4:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80189a8:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80189ac:	fa5f f38c 	uxtb.w	r3, ip
 80189b0:	9313      	str	r3, [sp, #76]	; 0x4c
 80189b2:	b289      	uxth	r1, r1
 80189b4:	b280      	uxth	r0, r0
 80189b6:	fb01 f300 	mul.w	r3, r1, r0
 80189ba:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 80189be:	0109      	lsls	r1, r1, #4
 80189c0:	b280      	uxth	r0, r0
 80189c2:	f5c1 7c80 	rsb	ip, r1, #256	; 0x100
 80189c6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 80189c8:	1ac9      	subs	r1, r1, r3
 80189ca:	ebac 0c00 	sub.w	ip, ip, r0
 80189ce:	b289      	uxth	r1, r1
 80189d0:	4369      	muls	r1, r5
 80189d2:	fa1f fc8c 	uxth.w	ip, ip
 80189d6:	fb02 120c 	mla	r2, r2, ip, r1
 80189da:	990d      	ldr	r1, [sp, #52]	; 0x34
 80189dc:	fb00 2001 	mla	r0, r0, r1, r2
 80189e0:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 80189e2:	fb03 0302 	mla	r3, r3, r2, r0
 80189e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80189ea:	2b00      	cmp	r3, #0
 80189ec:	d044      	beq.n	8018a78 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 80189ee:	4a33      	ldr	r2, [pc, #204]	; (8018abc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x528>)
 80189f0:	f8be c000 	ldrh.w	ip, [lr]
 80189f4:	6810      	ldr	r0, [r2, #0]
 80189f6:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 80189f8:	4353      	muls	r3, r2
 80189fa:	1c5a      	adds	r2, r3, #1
 80189fc:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8018a00:	121b      	asrs	r3, r3, #8
 8018a02:	fa1f f983 	uxth.w	r9, r3
 8018a06:	ea4f 212c 	mov.w	r1, ip, asr #8
 8018a0a:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8018a0e:	43db      	mvns	r3, r3
 8018a10:	b2db      	uxtb	r3, r3
 8018a12:	fb12 f209 	smulbb	r2, r2, r9
 8018a16:	f001 01f8 	and.w	r1, r1, #248	; 0xf8
 8018a1a:	fb01 2103 	mla	r1, r1, r3, r2
 8018a1e:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 8018a22:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8018a26:	b2c0      	uxtb	r0, r0
 8018a28:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018a2c:	fa5f fc8c 	uxtb.w	ip, ip
 8018a30:	fb10 f009 	smulbb	r0, r0, r9
 8018a34:	fb0c 0003 	mla	r0, ip, r3, r0
 8018a38:	b289      	uxth	r1, r1
 8018a3a:	fb1a fa09 	smulbb	sl, sl, r9
 8018a3e:	b280      	uxth	r0, r0
 8018a40:	f002 02fc 	and.w	r2, r2, #252	; 0xfc
 8018a44:	fb02 a203 	mla	r2, r2, r3, sl
 8018a48:	1c4b      	adds	r3, r1, #1
 8018a4a:	f100 0a01 	add.w	sl, r0, #1
 8018a4e:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8018a52:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 8018a56:	b292      	uxth	r2, r2
 8018a58:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018a5c:	f401 4178 	and.w	r1, r1, #63488	; 0xf800
 8018a60:	ea4a 0101 	orr.w	r1, sl, r1
 8018a64:	f102 0a01 	add.w	sl, r2, #1
 8018a68:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 8018a6c:	0952      	lsrs	r2, r2, #5
 8018a6e:	f402 62fc 	and.w	r2, r2, #2016	; 0x7e0
 8018a72:	4311      	orrs	r1, r2
 8018a74:	f8ae 1000 	strh.w	r1, [lr]
 8018a78:	9b2b      	ldr	r3, [sp, #172]	; 0xac
 8018a7a:	441c      	add	r4, r3
 8018a7c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018a7e:	f10e 0e02 	add.w	lr, lr, #2
 8018a82:	441e      	add	r6, r3
 8018a84:	f108 38ff 	add.w	r8, r8, #4294967295
 8018a88:	e6cd      	b.n	8018826 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8018a8a:	2800      	cmp	r0, #0
 8018a8c:	d091      	beq.n	80189b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 8018a8e:	445b      	add	r3, fp
 8018a90:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8018a94:	07db      	lsls	r3, r3, #31
 8018a96:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8018a9a:	bf54      	ite	pl
 8018a9c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018aa0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018aa4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018aa8:	fa5f f38c 	uxtb.w	r3, ip
 8018aac:	930d      	str	r3, [sp, #52]	; 0x34
 8018aae:	e780      	b.n	80189b2 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x41e>
 8018ab0:	b017      	add	sp, #92	; 0x5c
 8018ab2:	ecbd 8b08 	vpop	{d8-d11}
 8018ab6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018aba:	bf00      	nop
 8018abc:	2000a0f4 	.word	0x2000a0f4

08018ac0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8018ac0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8018ac4:	e9dd c40a 	ldrd	ip, r4, [sp, #40]	; 0x28
 8018ac8:	2c00      	cmp	r4, #0
 8018aca:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8018ace:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	; 0x24
 8018ad2:	f89d 5030 	ldrb.w	r5, [sp, #48]	; 0x30
 8018ad6:	f89d 7034 	ldrb.w	r7, [sp, #52]	; 0x34
 8018ada:	fb04 ce03 	mla	lr, r4, r3, ip
 8018ade:	db60      	blt.n	8018ba2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8018ae0:	45a1      	cmp	r9, r4
 8018ae2:	dd5e      	ble.n	8018ba2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe2>
 8018ae4:	f1bc 0f00 	cmp.w	ip, #0
 8018ae8:	db59      	blt.n	8018b9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8018aea:	45e0      	cmp	r8, ip
 8018aec:	dd57      	ble.n	8018b9e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xde>
 8018aee:	ea4f 005e 	mov.w	r0, lr, lsr #1
 8018af2:	f01e 0f01 	tst.w	lr, #1
 8018af6:	5c16      	ldrb	r6, [r2, r0]
 8018af8:	bf0c      	ite	eq
 8018afa:	f006 060f 	andeq.w	r6, r6, #15
 8018afe:	1136      	asrne	r6, r6, #4
 8018b00:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8018b04:	b2f6      	uxtb	r6, r6
 8018b06:	f11c 0001 	adds.w	r0, ip, #1
 8018b0a:	d44d      	bmi.n	8018ba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8018b0c:	4580      	cmp	r8, r0
 8018b0e:	dd4b      	ble.n	8018ba8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xe8>
 8018b10:	2d00      	cmp	r5, #0
 8018b12:	d04b      	beq.n	8018bac <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xec>
 8018b14:	f10e 0a01 	add.w	sl, lr, #1
 8018b18:	ea4f 005a 	mov.w	r0, sl, lsr #1
 8018b1c:	f01a 0f01 	tst.w	sl, #1
 8018b20:	5c10      	ldrb	r0, [r2, r0]
 8018b22:	bf0c      	ite	eq
 8018b24:	f000 000f 	andeq.w	r0, r0, #15
 8018b28:	1100      	asrne	r0, r0, #4
 8018b2a:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018b2e:	b2c0      	uxtb	r0, r0
 8018b30:	3401      	adds	r4, #1
 8018b32:	d43f      	bmi.n	8018bb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8018b34:	45a1      	cmp	r9, r4
 8018b36:	dd3d      	ble.n	8018bb4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf4>
 8018b38:	2f00      	cmp	r7, #0
 8018b3a:	f000 8093 	beq.w	8018c64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8018b3e:	f1bc 0f00 	cmp.w	ip, #0
 8018b42:	db35      	blt.n	8018bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8018b44:	45e0      	cmp	r8, ip
 8018b46:	dd33      	ble.n	8018bb0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xf0>
 8018b48:	eb03 090e 	add.w	r9, r3, lr
 8018b4c:	ea4f 0459 	mov.w	r4, r9, lsr #1
 8018b50:	f019 0f01 	tst.w	r9, #1
 8018b54:	5d14      	ldrb	r4, [r2, r4]
 8018b56:	bf0c      	ite	eq
 8018b58:	f004 040f 	andeq.w	r4, r4, #15
 8018b5c:	1124      	asrne	r4, r4, #4
 8018b5e:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8018b62:	b2e4      	uxtb	r4, r4
 8018b64:	f11c 0c01 	adds.w	ip, ip, #1
 8018b68:	d427      	bmi.n	8018bba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8018b6a:	45e0      	cmp	r8, ip
 8018b6c:	dd25      	ble.n	8018bba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfa>
 8018b6e:	b335      	cbz	r5, 8018bbe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xfe>
 8018b70:	3301      	adds	r3, #1
 8018b72:	449e      	add	lr, r3
 8018b74:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8018b78:	f01e 0f01 	tst.w	lr, #1
 8018b7c:	5cd2      	ldrb	r2, [r2, r3]
 8018b7e:	bf0c      	ite	eq
 8018b80:	f002 020f 	andeq.w	r2, r2, #15
 8018b84:	1112      	asrne	r2, r2, #4
 8018b86:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8018b8a:	b2d3      	uxtb	r3, r2
 8018b8c:	2d0f      	cmp	r5, #15
 8018b8e:	d917      	bls.n	8018bc0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x100>
 8018b90:	4b37      	ldr	r3, [pc, #220]	; (8018c70 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b0>)
 8018b92:	4a38      	ldr	r2, [pc, #224]	; (8018c74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b4>)
 8018b94:	4838      	ldr	r0, [pc, #224]	; (8018c78 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1b8>)
 8018b96:	f44f 71f5 	mov.w	r1, #490	; 0x1ea
 8018b9a:	f000 fc51 	bl	8019440 <__assert_func>
 8018b9e:	2600      	movs	r6, #0
 8018ba0:	e7b1      	b.n	8018b06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x46>
 8018ba2:	2000      	movs	r0, #0
 8018ba4:	4606      	mov	r6, r0
 8018ba6:	e7c3      	b.n	8018b30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018ba8:	2000      	movs	r0, #0
 8018baa:	e7c1      	b.n	8018b30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018bac:	4628      	mov	r0, r5
 8018bae:	e7bf      	b.n	8018b30 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x70>
 8018bb0:	2400      	movs	r4, #0
 8018bb2:	e7d7      	b.n	8018b64 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xa4>
 8018bb4:	2300      	movs	r3, #0
 8018bb6:	461c      	mov	r4, r3
 8018bb8:	e7e8      	b.n	8018b8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8018bba:	2300      	movs	r3, #0
 8018bbc:	e7e6      	b.n	8018b8c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xcc>
 8018bbe:	462b      	mov	r3, r5
 8018bc0:	2f0f      	cmp	r7, #15
 8018bc2:	d8e5      	bhi.n	8018b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8018bc4:	b2ad      	uxth	r5, r5
 8018bc6:	b2bf      	uxth	r7, r7
 8018bc8:	fb05 fc07 	mul.w	ip, r5, r7
 8018bcc:	ebcc 1707 	rsb	r7, ip, r7, lsl #4
 8018bd0:	012d      	lsls	r5, r5, #4
 8018bd2:	b2bf      	uxth	r7, r7
 8018bd4:	f5c5 7280 	rsb	r2, r5, #256	; 0x100
 8018bd8:	eba5 050c 	sub.w	r5, r5, ip
 8018bdc:	1bd2      	subs	r2, r2, r7
 8018bde:	b2ad      	uxth	r5, r5
 8018be0:	b292      	uxth	r2, r2
 8018be2:	4368      	muls	r0, r5
 8018be4:	fb06 0002 	mla	r0, r6, r2, r0
 8018be8:	fb07 0404 	mla	r4, r7, r4, r0
 8018bec:	fb0c 4303 	mla	r3, ip, r3, r4
 8018bf0:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018bf4:	b3a3      	cbz	r3, 8018c60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8018bf6:	4a21      	ldr	r2, [pc, #132]	; (8018c7c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1bc>)
 8018bf8:	880e      	ldrh	r6, [r1, #0]
 8018bfa:	6815      	ldr	r5, [r2, #0]
 8018bfc:	1234      	asrs	r4, r6, #8
 8018bfe:	b29a      	uxth	r2, r3
 8018c00:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8018c04:	43db      	mvns	r3, r3
 8018c06:	b2db      	uxtb	r3, r3
 8018c08:	fb10 f002 	smulbb	r0, r0, r2
 8018c0c:	f004 04f8 	and.w	r4, r4, #248	; 0xf8
 8018c10:	fb04 0403 	mla	r4, r4, r3, r0
 8018c14:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8018c18:	10f0      	asrs	r0, r6, #3
 8018c1a:	b2ed      	uxtb	r5, r5
 8018c1c:	00f6      	lsls	r6, r6, #3
 8018c1e:	fb17 f702 	smulbb	r7, r7, r2
 8018c22:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018c26:	fb15 f202 	smulbb	r2, r5, r2
 8018c2a:	b2f6      	uxtb	r6, r6
 8018c2c:	b2a4      	uxth	r4, r4
 8018c2e:	fb00 7003 	mla	r0, r0, r3, r7
 8018c32:	fb06 2303 	mla	r3, r6, r3, r2
 8018c36:	b29a      	uxth	r2, r3
 8018c38:	1c63      	adds	r3, r4, #1
 8018c3a:	b280      	uxth	r0, r0
 8018c3c:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8018c40:	1c53      	adds	r3, r2, #1
 8018c42:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8018c46:	1c42      	adds	r2, r0, #1
 8018c48:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8018c4c:	f404 4478 	and.w	r4, r4, #63488	; 0xf800
 8018c50:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8018c54:	0940      	lsrs	r0, r0, #5
 8018c56:	4323      	orrs	r3, r4
 8018c58:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018c5c:	4303      	orrs	r3, r0
 8018c5e:	800b      	strh	r3, [r1, #0]
 8018c60:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8018c64:	2d0f      	cmp	r5, #15
 8018c66:	d893      	bhi.n	8018b90 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xd0>
 8018c68:	463b      	mov	r3, r7
 8018c6a:	463c      	mov	r4, r7
 8018c6c:	e7aa      	b.n	8018bc4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x104>
 8018c6e:	bf00      	nop
 8018c70:	0801ce3e 	.word	0x0801ce3e
 8018c74:	0801d40a 	.word	0x0801d40a
 8018c78:	0801cec2 	.word	0x0801cec2
 8018c7c:	2000a0f4 	.word	0x2000a0f4

08018c80 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018c80:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018c84:	ed2d 8b08 	vpush	{d8-d11}
 8018c88:	b093      	sub	sp, #76	; 0x4c
 8018c8a:	461d      	mov	r5, r3
 8018c8c:	920c      	str	r2, [sp, #48]	; 0x30
 8018c8e:	9a29      	ldr	r2, [sp, #164]	; 0xa4
 8018c90:	9107      	str	r1, [sp, #28]
 8018c92:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	; 0xa8
 8018c96:	9011      	str	r0, [sp, #68]	; 0x44
 8018c98:	6850      	ldr	r0, [r2, #4]
 8018c9a:	6812      	ldr	r2, [r2, #0]
 8018c9c:	fb00 1303 	mla	r3, r0, r3, r1
 8018ca0:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8018ca4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ca6:	689b      	ldr	r3, [r3, #8]
 8018ca8:	3301      	adds	r3, #1
 8018caa:	f023 0301 	bic.w	r3, r3, #1
 8018cae:	9306      	str	r3, [sp, #24]
 8018cb0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018cb2:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	; 0x94
 8018cb6:	681f      	ldr	r7, [r3, #0]
 8018cb8:	eeb0 aa40 	vmov.f32	s20, s0
 8018cbc:	eef0 9a60 	vmov.f32	s19, s1
 8018cc0:	eeb0 9a41 	vmov.f32	s18, s2
 8018cc4:	eeb0 8a62 	vmov.f32	s16, s5
 8018cc8:	eef0 8a43 	vmov.f32	s17, s6
 8018ccc:	eef0 ba44 	vmov.f32	s23, s8
 8018cd0:	eeb0 ba64 	vmov.f32	s22, s9
 8018cd4:	eef0 aa45 	vmov.f32	s21, s10
 8018cd8:	9b07      	ldr	r3, [sp, #28]
 8018cda:	2b00      	cmp	r3, #0
 8018cdc:	dc03      	bgt.n	8018ce6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018cde:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8018ce0:	2b00      	cmp	r3, #0
 8018ce2:	f340 8267 	ble.w	80191b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 8018ce6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018ce8:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8018cec:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8018cf0:	1e48      	subs	r0, r1, #1
 8018cf2:	f102 3cff 	add.w	ip, r2, #4294967295
 8018cf6:	2d00      	cmp	r5, #0
 8018cf8:	f340 80eb 	ble.w	8018ed2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8018cfc:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8018d00:	ea4f 4326 	mov.w	r3, r6, asr #16
 8018d04:	d406      	bmi.n	8018d14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018d06:	4586      	cmp	lr, r0
 8018d08:	da04      	bge.n	8018d14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018d0a:	2b00      	cmp	r3, #0
 8018d0c:	db02      	blt.n	8018d14 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8018d0e:	4563      	cmp	r3, ip
 8018d10:	f2c0 80e0 	blt.w	8018ed4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 8018d14:	f11e 0e01 	adds.w	lr, lr, #1
 8018d18:	f100 80d3 	bmi.w	8018ec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8018d1c:	4571      	cmp	r1, lr
 8018d1e:	f2c0 80d0 	blt.w	8018ec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8018d22:	3301      	adds	r3, #1
 8018d24:	f100 80cd 	bmi.w	8018ec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8018d28:	429a      	cmp	r2, r3
 8018d2a:	f2c0 80ca 	blt.w	8018ec2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8018d2e:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8018d32:	9509      	str	r5, [sp, #36]	; 0x24
 8018d34:	46c8      	mov	r8, r9
 8018d36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018d38:	2b00      	cmp	r3, #0
 8018d3a:	f340 80e9 	ble.w	8018f10 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 8018d3e:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8018d42:	9308      	str	r3, [sp, #32]
 8018d44:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8018d46:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8018d4a:	1423      	asrs	r3, r4, #16
 8018d4c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8018d50:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8018d54:	f100 813d 	bmi.w	8018fd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8018d58:	f10c 3bff 	add.w	fp, ip, #4294967295
 8018d5c:	455b      	cmp	r3, fp
 8018d5e:	f280 8138 	bge.w	8018fd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8018d62:	2800      	cmp	r0, #0
 8018d64:	f2c0 8135 	blt.w	8018fd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8018d68:	f10e 3bff 	add.w	fp, lr, #4294967295
 8018d6c:	4558      	cmp	r0, fp
 8018d6e:	f280 8130 	bge.w	8018fd2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 8018d72:	9a06      	ldr	r2, [sp, #24]
 8018d74:	fb00 3302 	mla	r3, r0, r2, r3
 8018d78:	0858      	lsrs	r0, r3, #1
 8018d7a:	07da      	lsls	r2, r3, #31
 8018d7c:	f817 c000 	ldrb.w	ip, [r7, r0]
 8018d80:	9a08      	ldr	r2, [sp, #32]
 8018d82:	bf54      	ite	pl
 8018d84:	f00c 0c0f 	andpl.w	ip, ip, #15
 8018d88:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8018d8c:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8018d90:	fa5f fc8c 	uxtb.w	ip, ip
 8018d94:	2a00      	cmp	r2, #0
 8018d96:	f000 80fe 	beq.w	8018f96 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x316>
 8018d9a:	1c58      	adds	r0, r3, #1
 8018d9c:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8018da0:	07c0      	lsls	r0, r0, #31
 8018da2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8018da6:	bf54      	ite	pl
 8018da8:	f00e 0e0f 	andpl.w	lr, lr, #15
 8018dac:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8018db0:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8018db4:	fa5f fe8e 	uxtb.w	lr, lr
 8018db8:	f8cd e034 	str.w	lr, [sp, #52]	; 0x34
 8018dbc:	b1b9      	cbz	r1, 8018dee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018dbe:	4453      	add	r3, sl
 8018dc0:	0858      	lsrs	r0, r3, #1
 8018dc2:	07da      	lsls	r2, r3, #31
 8018dc4:	5c38      	ldrb	r0, [r7, r0]
 8018dc6:	bf54      	ite	pl
 8018dc8:	f000 000f 	andpl.w	r0, r0, #15
 8018dcc:	1100      	asrmi	r0, r0, #4
 8018dce:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8018dd2:	b2c0      	uxtb	r0, r0
 8018dd4:	900a      	str	r0, [sp, #40]	; 0x28
 8018dd6:	1c58      	adds	r0, r3, #1
 8018dd8:	0843      	lsrs	r3, r0, #1
 8018dda:	07c2      	lsls	r2, r0, #31
 8018ddc:	5cfb      	ldrb	r3, [r7, r3]
 8018dde:	bf54      	ite	pl
 8018de0:	f003 030f 	andpl.w	r3, r3, #15
 8018de4:	111b      	asrmi	r3, r3, #4
 8018de6:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8018dea:	b2db      	uxtb	r3, r3
 8018dec:	930e      	str	r3, [sp, #56]	; 0x38
 8018dee:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8018df2:	b289      	uxth	r1, r1
 8018df4:	fb02 f301 	mul.w	r3, r2, r1
 8018df8:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8018dfc:	0112      	lsls	r2, r2, #4
 8018dfe:	b289      	uxth	r1, r1
 8018e00:	f5c2 7080 	rsb	r0, r2, #256	; 0x100
 8018e04:	1a40      	subs	r0, r0, r1
 8018e06:	fa1f fe80 	uxth.w	lr, r0
 8018e0a:	1ad2      	subs	r2, r2, r3
 8018e0c:	980d      	ldr	r0, [sp, #52]	; 0x34
 8018e0e:	b292      	uxth	r2, r2
 8018e10:	4342      	muls	r2, r0
 8018e12:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8018e16:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8018e18:	fb01 c102 	mla	r1, r1, r2, ip
 8018e1c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8018e1e:	fb03 1302 	mla	r3, r3, r2, r1
 8018e22:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8018e26:	2b00      	cmp	r3, #0
 8018e28:	d041      	beq.n	8018eae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8018e2a:	4a7a      	ldr	r2, [pc, #488]	; (8019014 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x394>)
 8018e2c:	6810      	ldr	r0, [r2, #0]
 8018e2e:	2bff      	cmp	r3, #255	; 0xff
 8018e30:	ea4f 4210 	mov.w	r2, r0, lsr #16
 8018e34:	ea4f 2110 	mov.w	r1, r0, lsr #8
 8018e38:	fa5f fe80 	uxtb.w	lr, r0
 8018e3c:	f000 80bc 	beq.w	8018fb8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 8018e40:	f8b8 c000 	ldrh.w	ip, [r8]
 8018e44:	fa1f fb83 	uxth.w	fp, r3
 8018e48:	ea4f 202c 	mov.w	r0, ip, asr #8
 8018e4c:	43db      	mvns	r3, r3
 8018e4e:	b2d2      	uxtb	r2, r2
 8018e50:	b2db      	uxtb	r3, r3
 8018e52:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 8018e56:	fb12 f20b 	smulbb	r2, r2, fp
 8018e5a:	fb00 2203 	mla	r2, r0, r3, r2
 8018e5e:	b2c9      	uxtb	r1, r1
 8018e60:	ea4f 00ec 	mov.w	r0, ip, asr #3
 8018e64:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018e68:	b292      	uxth	r2, r2
 8018e6a:	fb11 f10b 	smulbb	r1, r1, fp
 8018e6e:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8018e72:	fa5f fc8c 	uxtb.w	ip, ip
 8018e76:	fb1e fe0b 	smulbb	lr, lr, fp
 8018e7a:	fb00 1003 	mla	r0, r0, r3, r1
 8018e7e:	1c51      	adds	r1, r2, #1
 8018e80:	fb0c e303 	mla	r3, ip, r3, lr
 8018e84:	b29b      	uxth	r3, r3
 8018e86:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8018e8a:	f402 4178 	and.w	r1, r2, #63488	; 0xf800
 8018e8e:	1c5a      	adds	r2, r3, #1
 8018e90:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8018e94:	b280      	uxth	r0, r0
 8018e96:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8018e9a:	430a      	orrs	r2, r1
 8018e9c:	1c41      	adds	r1, r0, #1
 8018e9e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8018ea2:	0940      	lsrs	r0, r0, #5
 8018ea4:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8018ea8:	4302      	orrs	r2, r0
 8018eaa:	f8a8 2000 	strh.w	r2, [r8]
 8018eae:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018eb0:	441c      	add	r4, r3
 8018eb2:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018eb4:	441e      	add	r6, r3
 8018eb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8018eb8:	3b01      	subs	r3, #1
 8018eba:	f108 0802 	add.w	r8, r8, #2
 8018ebe:	9309      	str	r3, [sp, #36]	; 0x24
 8018ec0:	e739      	b.n	8018d36 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb6>
 8018ec2:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8018ec4:	441c      	add	r4, r3
 8018ec6:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 8018ec8:	3d01      	subs	r5, #1
 8018eca:	441e      	add	r6, r3
 8018ecc:	f109 0902 	add.w	r9, r9, #2
 8018ed0:	e711      	b.n	8018cf6 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018ed2:	d021      	beq.n	8018f18 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 8018ed4:	9827      	ldr	r0, [sp, #156]	; 0x9c
 8018ed6:	1e6b      	subs	r3, r5, #1
 8018ed8:	fb00 4003 	mla	r0, r0, r3, r4
 8018edc:	1400      	asrs	r0, r0, #16
 8018ede:	f53f af26 	bmi.w	8018d2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018ee2:	3901      	subs	r1, #1
 8018ee4:	4288      	cmp	r0, r1
 8018ee6:	f6bf af22 	bge.w	8018d2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018eea:	9928      	ldr	r1, [sp, #160]	; 0xa0
 8018eec:	fb01 6303 	mla	r3, r1, r3, r6
 8018ef0:	141b      	asrs	r3, r3, #16
 8018ef2:	f53f af1c 	bmi.w	8018d2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018ef6:	3a01      	subs	r2, #1
 8018ef8:	4293      	cmp	r3, r2
 8018efa:	f6bf af18 	bge.w	8018d2e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 8018efe:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8018f02:	9308      	str	r3, [sp, #32]
 8018f04:	46aa      	mov	sl, r5
 8018f06:	46c8      	mov	r8, r9
 8018f08:	f1ba 0f00 	cmp.w	sl, #0
 8018f0c:	f300 8086 	bgt.w	801901c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x39c>
 8018f10:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8018f14:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8018f18:	9b07      	ldr	r3, [sp, #28]
 8018f1a:	2b00      	cmp	r3, #0
 8018f1c:	f340 814a 	ble.w	80191b4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x534>
 8018f20:	ee3a aa2b 	vadd.f32	s20, s20, s23
 8018f24:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8018f28:	eec7 7a0a 	vdiv.f32	s15, s14, s20
 8018f2c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018f2e:	ee79 9a8b 	vadd.f32	s19, s19, s22
 8018f32:	ee39 9a2a 	vadd.f32	s18, s18, s21
 8018f36:	ee29 7aa7 	vmul.f32	s14, s19, s15
 8018f3a:	eef0 6a48 	vmov.f32	s13, s16
 8018f3e:	ee69 7a27 	vmul.f32	s15, s18, s15
 8018f42:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f46:	ee37 8a48 	vsub.f32	s16, s14, s16
 8018f4a:	ee16 4a90 	vmov	r4, s13
 8018f4e:	eebe 8ac8 	vcvt.s32.f32	s16, s16, #16
 8018f52:	eef0 6a68 	vmov.f32	s13, s17
 8018f56:	ee77 8ae8 	vsub.f32	s17, s15, s17
 8018f5a:	ee18 2a10 	vmov	r2, s16
 8018f5e:	eefe 8ac8 	vcvt.s32.f32	s17, s17, #16
 8018f62:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f66:	ee18 2a90 	vmov	r2, s17
 8018f6a:	9327      	str	r3, [sp, #156]	; 0x9c
 8018f6c:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018f6e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018f72:	9328      	str	r3, [sp, #160]	; 0xa0
 8018f74:	9b07      	ldr	r3, [sp, #28]
 8018f76:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8018f78:	3b01      	subs	r3, #1
 8018f7a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018f7e:	9307      	str	r3, [sp, #28]
 8018f80:	9b24      	ldr	r3, [sp, #144]	; 0x90
 8018f82:	ee16 6a90 	vmov	r6, s13
 8018f86:	bf14      	ite	ne
 8018f88:	461d      	movne	r5, r3
 8018f8a:	4615      	moveq	r5, r2
 8018f8c:	eef0 8a67 	vmov.f32	s17, s15
 8018f90:	eeb0 8a47 	vmov.f32	s16, s14
 8018f94:	e6a0      	b.n	8018cd8 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8018f96:	2900      	cmp	r1, #0
 8018f98:	f43f af29 	beq.w	8018dee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018f9c:	eb0a 0003 	add.w	r0, sl, r3
 8018fa0:	0843      	lsrs	r3, r0, #1
 8018fa2:	07c0      	lsls	r0, r0, #31
 8018fa4:	5cfb      	ldrb	r3, [r7, r3]
 8018fa6:	bf54      	ite	pl
 8018fa8:	f003 030f 	andpl.w	r3, r3, #15
 8018fac:	111b      	asrmi	r3, r3, #4
 8018fae:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8018fb2:	b2db      	uxtb	r3, r3
 8018fb4:	930a      	str	r3, [sp, #40]	; 0x28
 8018fb6:	e71a      	b.n	8018dee <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 8018fb8:	4b17      	ldr	r3, [pc, #92]	; (8019018 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>)
 8018fba:	00c9      	lsls	r1, r1, #3
 8018fbc:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 8018fc0:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 8018fc4:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 8018fc8:	ea4e 0e01 	orr.w	lr, lr, r1
 8018fcc:	f8a8 e000 	strh.w	lr, [r8]
 8018fd0:	e76d      	b.n	8018eae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8018fd2:	f113 0b01 	adds.w	fp, r3, #1
 8018fd6:	f53f af6a 	bmi.w	8018eae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8018fda:	45dc      	cmp	ip, fp
 8018fdc:	f6ff af67 	blt.w	8018eae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8018fe0:	f110 0b01 	adds.w	fp, r0, #1
 8018fe4:	f53f af63 	bmi.w	8018eae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8018fe8:	45de      	cmp	lr, fp
 8018fea:	f6ff af60 	blt.w	8018eae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8018fee:	9a08      	ldr	r2, [sp, #32]
 8018ff0:	9302      	str	r3, [sp, #8]
 8018ff2:	fa0f f38e 	sxth.w	r3, lr
 8018ff6:	9301      	str	r3, [sp, #4]
 8018ff8:	fa0f f38c 	sxth.w	r3, ip
 8018ffc:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8019000:	9105      	str	r1, [sp, #20]
 8019002:	9300      	str	r3, [sp, #0]
 8019004:	463a      	mov	r2, r7
 8019006:	4653      	mov	r3, sl
 8019008:	4641      	mov	r1, r8
 801900a:	9811      	ldr	r0, [sp, #68]	; 0x44
 801900c:	f7ff fd58 	bl	8018ac0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 8019010:	e74d      	b.n	8018eae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 8019012:	bf00      	nop
 8019014:	2000a0f4 	.word	0x2000a0f4
 8019018:	fffff800 	.word	0xfffff800
 801901c:	9906      	ldr	r1, [sp, #24]
 801901e:	1422      	asrs	r2, r4, #16
 8019020:	1433      	asrs	r3, r6, #16
 8019022:	fb01 2303 	mla	r3, r1, r3, r2
 8019026:	085a      	lsrs	r2, r3, #1
 8019028:	07d9      	lsls	r1, r3, #31
 801902a:	5cba      	ldrb	r2, [r7, r2]
 801902c:	bf54      	ite	pl
 801902e:	f002 020f 	andpl.w	r2, r2, #15
 8019032:	1112      	asrmi	r2, r2, #4
 8019034:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019038:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801903c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8019040:	b2d2      	uxtb	r2, r2
 8019042:	2800      	cmp	r0, #0
 8019044:	f000 8098 	beq.w	8019178 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f8>
 8019048:	f103 0e01 	add.w	lr, r3, #1
 801904c:	ea4f 015e 	mov.w	r1, lr, lsr #1
 8019050:	f01e 0f01 	tst.w	lr, #1
 8019054:	5c79      	ldrb	r1, [r7, r1]
 8019056:	bf0c      	ite	eq
 8019058:	f001 010f 	andeq.w	r1, r1, #15
 801905c:	1109      	asrne	r1, r1, #4
 801905e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019062:	b2c9      	uxtb	r1, r1
 8019064:	910f      	str	r1, [sp, #60]	; 0x3c
 8019066:	f1bc 0f00 	cmp.w	ip, #0
 801906a:	d019      	beq.n	80190a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801906c:	9908      	ldr	r1, [sp, #32]
 801906e:	440b      	add	r3, r1
 8019070:	0859      	lsrs	r1, r3, #1
 8019072:	f013 0f01 	tst.w	r3, #1
 8019076:	5c79      	ldrb	r1, [r7, r1]
 8019078:	bf0c      	ite	eq
 801907a:	f001 010f 	andeq.w	r1, r1, #15
 801907e:	1109      	asrne	r1, r1, #4
 8019080:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019084:	b2c9      	uxtb	r1, r1
 8019086:	3301      	adds	r3, #1
 8019088:	910b      	str	r1, [sp, #44]	; 0x2c
 801908a:	0859      	lsrs	r1, r3, #1
 801908c:	07db      	lsls	r3, r3, #31
 801908e:	5c79      	ldrb	r1, [r7, r1]
 8019090:	bf54      	ite	pl
 8019092:	f001 010f 	andpl.w	r1, r1, #15
 8019096:	1109      	asrmi	r1, r1, #4
 8019098:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 801909c:	b2c9      	uxtb	r1, r1
 801909e:	9110      	str	r1, [sp, #64]	; 0x40
 80190a0:	b280      	uxth	r0, r0
 80190a2:	fa1f fc8c 	uxth.w	ip, ip
 80190a6:	fb00 f30c 	mul.w	r3, r0, ip
 80190aa:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80190ae:	0100      	lsls	r0, r0, #4
 80190b0:	fa1f fc8c 	uxth.w	ip, ip
 80190b4:	f5c0 7180 	rsb	r1, r0, #256	; 0x100
 80190b8:	eba1 010c 	sub.w	r1, r1, ip
 80190bc:	fa1f fe81 	uxth.w	lr, r1
 80190c0:	1ac0      	subs	r0, r0, r3
 80190c2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80190c4:	b280      	uxth	r0, r0
 80190c6:	4348      	muls	r0, r1
 80190c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80190ca:	fb02 020e 	mla	r2, r2, lr, r0
 80190ce:	fb0c 2c01 	mla	ip, ip, r1, r2
 80190d2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80190d4:	fb03 c302 	mla	r3, r3, r2, ip
 80190d8:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80190dc:	2b00      	cmp	r3, #0
 80190de:	d042      	beq.n	8019166 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 80190e0:	4a37      	ldr	r2, [pc, #220]	; (80191c0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x540>)
 80190e2:	6810      	ldr	r0, [r2, #0]
 80190e4:	2bff      	cmp	r3, #255	; 0xff
 80190e6:	ea4f 4210 	mov.w	r2, r0, lsr #16
 80190ea:	ea4f 2110 	mov.w	r1, r0, lsr #8
 80190ee:	fa5f fe80 	uxtb.w	lr, r0
 80190f2:	d052      	beq.n	801919a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x51a>
 80190f4:	f8b8 c000 	ldrh.w	ip, [r8]
 80190f8:	fa1f fb83 	uxth.w	fp, r3
 80190fc:	ea4f 202c 	mov.w	r0, ip, asr #8
 8019100:	43db      	mvns	r3, r3
 8019102:	b2d2      	uxtb	r2, r2
 8019104:	b2db      	uxtb	r3, r3
 8019106:	f000 00f8 	and.w	r0, r0, #248	; 0xf8
 801910a:	fb12 f20b 	smulbb	r2, r2, fp
 801910e:	fb00 2203 	mla	r2, r0, r3, r2
 8019112:	ea4f 00ec 	mov.w	r0, ip, asr #3
 8019116:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801911a:	fa5f fc8c 	uxtb.w	ip, ip
 801911e:	fb1e fe0b 	smulbb	lr, lr, fp
 8019122:	fb0c ee03 	mla	lr, ip, r3, lr
 8019126:	b2c9      	uxtb	r1, r1
 8019128:	b292      	uxth	r2, r2
 801912a:	fb11 f10b 	smulbb	r1, r1, fp
 801912e:	fa1f fe8e 	uxth.w	lr, lr
 8019132:	f000 00fc 	and.w	r0, r0, #252	; 0xfc
 8019136:	fb00 1003 	mla	r0, r0, r3, r1
 801913a:	1c53      	adds	r3, r2, #1
 801913c:	f10e 0101 	add.w	r1, lr, #1
 8019140:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8019144:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 8019148:	b280      	uxth	r0, r0
 801914a:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 801914e:	f402 4278 	and.w	r2, r2, #63488	; 0xf800
 8019152:	430a      	orrs	r2, r1
 8019154:	1c41      	adds	r1, r0, #1
 8019156:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 801915a:	0940      	lsrs	r0, r0, #5
 801915c:	f400 60fc 	and.w	r0, r0, #2016	; 0x7e0
 8019160:	4302      	orrs	r2, r0
 8019162:	f8a8 2000 	strh.w	r2, [r8]
 8019166:	9b27      	ldr	r3, [sp, #156]	; 0x9c
 8019168:	441c      	add	r4, r3
 801916a:	9b28      	ldr	r3, [sp, #160]	; 0xa0
 801916c:	f108 0802 	add.w	r8, r8, #2
 8019170:	441e      	add	r6, r3
 8019172:	f10a 3aff 	add.w	sl, sl, #4294967295
 8019176:	e6c7      	b.n	8018f08 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 8019178:	f1bc 0f00 	cmp.w	ip, #0
 801917c:	d090      	beq.n	80190a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801917e:	9908      	ldr	r1, [sp, #32]
 8019180:	440b      	add	r3, r1
 8019182:	0859      	lsrs	r1, r3, #1
 8019184:	07db      	lsls	r3, r3, #31
 8019186:	5c79      	ldrb	r1, [r7, r1]
 8019188:	bf54      	ite	pl
 801918a:	f001 010f 	andpl.w	r1, r1, #15
 801918e:	1109      	asrmi	r1, r1, #4
 8019190:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8019194:	b2c9      	uxtb	r1, r1
 8019196:	910b      	str	r1, [sp, #44]	; 0x2c
 8019198:	e782      	b.n	80190a0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 801919a:	4b0a      	ldr	r3, [pc, #40]	; (80191c4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x544>)
 801919c:	00c9      	lsls	r1, r1, #3
 801919e:	ea03 2202 	and.w	r2, r3, r2, lsl #8
 80191a2:	ea42 0ede 	orr.w	lr, r2, lr, lsr #3
 80191a6:	f401 61fc 	and.w	r1, r1, #2016	; 0x7e0
 80191aa:	ea4e 0e01 	orr.w	lr, lr, r1
 80191ae:	f8a8 e000 	strh.w	lr, [r8]
 80191b2:	e7d8      	b.n	8019166 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e6>
 80191b4:	b013      	add	sp, #76	; 0x4c
 80191b6:	ecbd 8b08 	vpop	{d8-d11}
 80191ba:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80191be:	bf00      	nop
 80191c0:	2000a0f4 	.word	0x2000a0f4
 80191c4:	fffff800 	.word	0xfffff800

080191c8 <CRC_Lock>:
 80191c8:	b530      	push	{r4, r5, lr}
 80191ca:	4a20      	ldr	r2, [pc, #128]	; (801924c <CRC_Lock+0x84>)
 80191cc:	6813      	ldr	r3, [r2, #0]
 80191ce:	f023 0301 	bic.w	r3, r3, #1
 80191d2:	6013      	str	r3, [r2, #0]
 80191d4:	4b1e      	ldr	r3, [pc, #120]	; (8019250 <CRC_Lock+0x88>)
 80191d6:	681a      	ldr	r2, [r3, #0]
 80191d8:	f64f 74f0 	movw	r4, #65520	; 0xfff0
 80191dc:	4022      	ands	r2, r4
 80191de:	f24c 2540 	movw	r5, #49728	; 0xc240
 80191e2:	42aa      	cmp	r2, r5
 80191e4:	d005      	beq.n	80191f2 <CRC_Lock+0x2a>
 80191e6:	681b      	ldr	r3, [r3, #0]
 80191e8:	f24c 2270 	movw	r2, #49776	; 0xc270
 80191ec:	4023      	ands	r3, r4
 80191ee:	4293      	cmp	r3, r2
 80191f0:	d124      	bne.n	801923c <CRC_Lock+0x74>
 80191f2:	4b18      	ldr	r3, [pc, #96]	; (8019254 <CRC_Lock+0x8c>)
 80191f4:	681b      	ldr	r3, [r3, #0]
 80191f6:	bb0b      	cbnz	r3, 801923c <CRC_Lock+0x74>
 80191f8:	4b17      	ldr	r3, [pc, #92]	; (8019258 <CRC_Lock+0x90>)
 80191fa:	681a      	ldr	r2, [r3, #0]
 80191fc:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8019200:	f5b2 6f8a 	cmp.w	r2, #1104	; 0x450
 8019204:	d00d      	beq.n	8019222 <CRC_Lock+0x5a>
 8019206:	681a      	ldr	r2, [r3, #0]
 8019208:	f240 4483 	movw	r4, #1155	; 0x483
 801920c:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8019210:	42a2      	cmp	r2, r4
 8019212:	d006      	beq.n	8019222 <CRC_Lock+0x5a>
 8019214:	681b      	ldr	r3, [r3, #0]
 8019216:	f240 4285 	movw	r2, #1157	; 0x485
 801921a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801921e:	4293      	cmp	r3, r2
 8019220:	d10c      	bne.n	801923c <CRC_Lock+0x74>
 8019222:	4b0e      	ldr	r3, [pc, #56]	; (801925c <CRC_Lock+0x94>)
 8019224:	2201      	movs	r2, #1
 8019226:	601a      	str	r2, [r3, #0]
 8019228:	681a      	ldr	r2, [r3, #0]
 801922a:	2a00      	cmp	r2, #0
 801922c:	d1fc      	bne.n	8019228 <CRC_Lock+0x60>
 801922e:	4b0c      	ldr	r3, [pc, #48]	; (8019260 <CRC_Lock+0x98>)
 8019230:	6018      	str	r0, [r3, #0]
 8019232:	6818      	ldr	r0, [r3, #0]
 8019234:	1a43      	subs	r3, r0, r1
 8019236:	4258      	negs	r0, r3
 8019238:	4158      	adcs	r0, r3
 801923a:	bd30      	pop	{r4, r5, pc}
 801923c:	4b09      	ldr	r3, [pc, #36]	; (8019264 <CRC_Lock+0x9c>)
 801923e:	2201      	movs	r2, #1
 8019240:	601a      	str	r2, [r3, #0]
 8019242:	681a      	ldr	r2, [r3, #0]
 8019244:	2a00      	cmp	r2, #0
 8019246:	d1fc      	bne.n	8019242 <CRC_Lock+0x7a>
 8019248:	4b07      	ldr	r3, [pc, #28]	; (8019268 <CRC_Lock+0xa0>)
 801924a:	e7f1      	b.n	8019230 <CRC_Lock+0x68>
 801924c:	e0002000 	.word	0xe0002000
 8019250:	e000ed00 	.word	0xe000ed00
 8019254:	e0042000 	.word	0xe0042000
 8019258:	5c001000 	.word	0x5c001000
 801925c:	58024c08 	.word	0x58024c08
 8019260:	58024c00 	.word	0x58024c00
 8019264:	40023008 	.word	0x40023008
 8019268:	40023000 	.word	0x40023000

0801926c <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 801926c:	6101      	str	r1, [r0, #16]
 801926e:	4770      	bx	lr

08019270 <_ZN8touchgfx8Gestures4tickEv>:
 8019270:	7b83      	ldrb	r3, [r0, #14]
 8019272:	b14b      	cbz	r3, 8019288 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8019274:	8903      	ldrh	r3, [r0, #8]
 8019276:	3301      	adds	r3, #1
 8019278:	b29b      	uxth	r3, r3
 801927a:	2b07      	cmp	r3, #7
 801927c:	8103      	strh	r3, [r0, #8]
 801927e:	bf81      	itttt	hi
 8019280:	2300      	movhi	r3, #0
 8019282:	8143      	strhhi	r3, [r0, #10]
 8019284:	8183      	strhhi	r3, [r0, #12]
 8019286:	7383      	strbhi	r3, [r0, #14]
 8019288:	4770      	bx	lr
	...

0801928c <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 801928c:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8019290:	4604      	mov	r4, r0
 8019292:	8880      	ldrh	r0, [r0, #4]
 8019294:	f8ad 0006 	strh.w	r0, [sp, #6]
 8019298:	4698      	mov	r8, r3
 801929a:	eba8 0000 	sub.w	r0, r8, r0
 801929e:	4b1c      	ldr	r3, [pc, #112]	; (8019310 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x84>)
 80192a0:	9300      	str	r3, [sp, #0]
 80192a2:	b280      	uxth	r0, r0
 80192a4:	2300      	movs	r3, #0
 80192a6:	f88d 3004 	strb.w	r3, [sp, #4]
 80192aa:	b203      	sxth	r3, r0
 80192ac:	2b00      	cmp	r3, #0
 80192ae:	bfb8      	it	lt
 80192b0:	4240      	neglt	r0, r0
 80192b2:	4617      	mov	r7, r2
 80192b4:	8aa2      	ldrh	r2, [r4, #20]
 80192b6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	; 0x28
 80192ba:	f8ad 800a 	strh.w	r8, [sp, #10]
 80192be:	bfb8      	it	lt
 80192c0:	b203      	sxthlt	r3, r0
 80192c2:	460e      	mov	r6, r1
 80192c4:	4293      	cmp	r3, r2
 80192c6:	88e1      	ldrh	r1, [r4, #6]
 80192c8:	f8ad 1008 	strh.w	r1, [sp, #8]
 80192cc:	f8ad 500c 	strh.w	r5, [sp, #12]
 80192d0:	dc08      	bgt.n	80192e4 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x58>
 80192d2:	1a69      	subs	r1, r5, r1
 80192d4:	b289      	uxth	r1, r1
 80192d6:	b20b      	sxth	r3, r1
 80192d8:	2b00      	cmp	r3, #0
 80192da:	bfbc      	itt	lt
 80192dc:	4249      	neglt	r1, r1
 80192de:	b20b      	sxthlt	r3, r1
 80192e0:	429a      	cmp	r2, r3
 80192e2:	da13      	bge.n	801930c <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x80>
 80192e4:	6920      	ldr	r0, [r4, #16]
 80192e6:	6803      	ldr	r3, [r0, #0]
 80192e8:	4669      	mov	r1, sp
 80192ea:	685b      	ldr	r3, [r3, #4]
 80192ec:	4798      	blx	r3
 80192ee:	eba8 0606 	sub.w	r6, r8, r6
 80192f2:	2300      	movs	r3, #0
 80192f4:	1bef      	subs	r7, r5, r7
 80192f6:	2001      	movs	r0, #1
 80192f8:	8123      	strh	r3, [r4, #8]
 80192fa:	8166      	strh	r6, [r4, #10]
 80192fc:	81a7      	strh	r7, [r4, #12]
 80192fe:	f8a4 8004 	strh.w	r8, [r4, #4]
 8019302:	80e5      	strh	r5, [r4, #6]
 8019304:	73a0      	strb	r0, [r4, #14]
 8019306:	b004      	add	sp, #16
 8019308:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801930c:	2000      	movs	r0, #0
 801930e:	e7fa      	b.n	8019306 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7a>
 8019310:	0801c2d4 	.word	0x0801c2d4

08019314 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8019314:	b5f0      	push	{r4, r5, r6, r7, lr}
 8019316:	461e      	mov	r6, r3
 8019318:	1e4b      	subs	r3, r1, #1
 801931a:	2b01      	cmp	r3, #1
 801931c:	b085      	sub	sp, #20
 801931e:	4604      	mov	r4, r0
 8019320:	460d      	mov	r5, r1
 8019322:	4617      	mov	r7, r2
 8019324:	d84b      	bhi.n	80193be <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8019326:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 801932a:	1cd3      	adds	r3, r2, #3
 801932c:	b29b      	uxth	r3, r3
 801932e:	2b06      	cmp	r3, #6
 8019330:	d916      	bls.n	8019360 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8019332:	f8df c0a0 	ldr.w	ip, [pc, #160]	; 80193d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8019336:	f8cd c004 	str.w	ip, [sp, #4]
 801933a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801933e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8019342:	6900      	ldr	r0, [r0, #16]
 8019344:	f8ad 100c 	strh.w	r1, [sp, #12]
 8019348:	f04f 0c00 	mov.w	ip, #0
 801934c:	f88d c008 	strb.w	ip, [sp, #8]
 8019350:	f8ad 200a 	strh.w	r2, [sp, #10]
 8019354:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019358:	6803      	ldr	r3, [r0, #0]
 801935a:	a901      	add	r1, sp, #4
 801935c:	689b      	ldr	r3, [r3, #8]
 801935e:	4798      	blx	r3
 8019360:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8019364:	1cd3      	adds	r3, r2, #3
 8019366:	b29b      	uxth	r3, r3
 8019368:	2b06      	cmp	r3, #6
 801936a:	d916      	bls.n	801939a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 801936c:	f8df c064 	ldr.w	ip, [pc, #100]	; 80193d4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8019370:	f8cd c004 	str.w	ip, [sp, #4]
 8019374:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8019378:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 801937c:	6920      	ldr	r0, [r4, #16]
 801937e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8019382:	f04f 0c01 	mov.w	ip, #1
 8019386:	f88d c008 	strb.w	ip, [sp, #8]
 801938a:	f8ad 200a 	strh.w	r2, [sp, #10]
 801938e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8019392:	6803      	ldr	r3, [r0, #0]
 8019394:	a901      	add	r1, sp, #4
 8019396:	689b      	ldr	r3, [r3, #8]
 8019398:	4798      	blx	r3
 801939a:	4b0d      	ldr	r3, [pc, #52]	; (80193d0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 801939c:	9301      	str	r3, [sp, #4]
 801939e:	6920      	ldr	r0, [r4, #16]
 80193a0:	f88d 5008 	strb.w	r5, [sp, #8]
 80193a4:	2300      	movs	r3, #0
 80193a6:	f8ad 700a 	strh.w	r7, [sp, #10]
 80193aa:	f8ad 600c 	strh.w	r6, [sp, #12]
 80193ae:	f8ad 300e 	strh.w	r3, [sp, #14]
 80193b2:	6803      	ldr	r3, [r0, #0]
 80193b4:	a901      	add	r1, sp, #4
 80193b6:	681b      	ldr	r3, [r3, #0]
 80193b8:	4798      	blx	r3
 80193ba:	b005      	add	sp, #20
 80193bc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80193be:	2900      	cmp	r1, #0
 80193c0:	d1eb      	bne.n	801939a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80193c2:	80a2      	strh	r2, [r4, #4]
 80193c4:	80c6      	strh	r6, [r0, #6]
 80193c6:	60a1      	str	r1, [r4, #8]
 80193c8:	81a1      	strh	r1, [r4, #12]
 80193ca:	73a1      	strb	r1, [r4, #14]
 80193cc:	e7e5      	b.n	801939a <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 80193ce:	bf00      	nop
 80193d0:	0801c2c0 	.word	0x0801c2c0
 80193d4:	0801c2e8 	.word	0x0801c2e8

080193d8 <__aeabi_atexit>:
 80193d8:	460b      	mov	r3, r1
 80193da:	4601      	mov	r1, r0
 80193dc:	4618      	mov	r0, r3
 80193de:	f000 b853 	b.w	8019488 <__cxa_atexit>

080193e2 <_ZdlPvj>:
 80193e2:	f000 b812 	b.w	801940a <_ZdlPv>

080193e6 <__cxa_guard_acquire>:
 80193e6:	6803      	ldr	r3, [r0, #0]
 80193e8:	07db      	lsls	r3, r3, #31
 80193ea:	d406      	bmi.n	80193fa <__cxa_guard_acquire+0x14>
 80193ec:	7843      	ldrb	r3, [r0, #1]
 80193ee:	b103      	cbz	r3, 80193f2 <__cxa_guard_acquire+0xc>
 80193f0:	deff      	udf	#255	; 0xff
 80193f2:	2301      	movs	r3, #1
 80193f4:	7043      	strb	r3, [r0, #1]
 80193f6:	4618      	mov	r0, r3
 80193f8:	4770      	bx	lr
 80193fa:	2000      	movs	r0, #0
 80193fc:	4770      	bx	lr

080193fe <__cxa_guard_release>:
 80193fe:	2301      	movs	r3, #1
 8019400:	6003      	str	r3, [r0, #0]
 8019402:	4770      	bx	lr

08019404 <__cxa_pure_virtual>:
 8019404:	b508      	push	{r3, lr}
 8019406:	f000 f80f 	bl	8019428 <_ZSt9terminatev>

0801940a <_ZdlPv>:
 801940a:	f000 b989 	b.w	8019720 <free>

0801940e <_ZN10__cxxabiv111__terminateEPFvvE>:
 801940e:	b508      	push	{r3, lr}
 8019410:	4780      	blx	r0
 8019412:	f000 f80e 	bl	8019432 <abort>
	...

08019418 <_ZSt13get_terminatev>:
 8019418:	4b02      	ldr	r3, [pc, #8]	; (8019424 <_ZSt13get_terminatev+0xc>)
 801941a:	6818      	ldr	r0, [r3, #0]
 801941c:	f3bf 8f5b 	dmb	ish
 8019420:	4770      	bx	lr
 8019422:	bf00      	nop
 8019424:	200000d4 	.word	0x200000d4

08019428 <_ZSt9terminatev>:
 8019428:	b508      	push	{r3, lr}
 801942a:	f7ff fff5 	bl	8019418 <_ZSt13get_terminatev>
 801942e:	f7ff ffee 	bl	801940e <_ZN10__cxxabiv111__terminateEPFvvE>

08019432 <abort>:
 8019432:	b508      	push	{r3, lr}
 8019434:	2006      	movs	r0, #6
 8019436:	f000 fdcb 	bl	8019fd0 <raise>
 801943a:	2001      	movs	r0, #1
 801943c:	f7e8 fd58 	bl	8001ef0 <_exit>

08019440 <__assert_func>:
 8019440:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8019442:	4614      	mov	r4, r2
 8019444:	461a      	mov	r2, r3
 8019446:	4b09      	ldr	r3, [pc, #36]	; (801946c <__assert_func+0x2c>)
 8019448:	681b      	ldr	r3, [r3, #0]
 801944a:	4605      	mov	r5, r0
 801944c:	68d8      	ldr	r0, [r3, #12]
 801944e:	b14c      	cbz	r4, 8019464 <__assert_func+0x24>
 8019450:	4b07      	ldr	r3, [pc, #28]	; (8019470 <__assert_func+0x30>)
 8019452:	9100      	str	r1, [sp, #0]
 8019454:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8019458:	4906      	ldr	r1, [pc, #24]	; (8019474 <__assert_func+0x34>)
 801945a:	462b      	mov	r3, r5
 801945c:	f000 f8fe 	bl	801965c <fiprintf>
 8019460:	f7ff ffe7 	bl	8019432 <abort>
 8019464:	4b04      	ldr	r3, [pc, #16]	; (8019478 <__assert_func+0x38>)
 8019466:	461c      	mov	r4, r3
 8019468:	e7f3      	b.n	8019452 <__assert_func+0x12>
 801946a:	bf00      	nop
 801946c:	200000d8 	.word	0x200000d8
 8019470:	0801d645 	.word	0x0801d645
 8019474:	0801d652 	.word	0x0801d652
 8019478:	0801d680 	.word	0x0801d680

0801947c <atexit>:
 801947c:	2300      	movs	r3, #0
 801947e:	4601      	mov	r1, r0
 8019480:	461a      	mov	r2, r3
 8019482:	4618      	mov	r0, r3
 8019484:	f000 bed6 	b.w	801a234 <__register_exitproc>

08019488 <__cxa_atexit>:
 8019488:	b510      	push	{r4, lr}
 801948a:	4c05      	ldr	r4, [pc, #20]	; (80194a0 <__cxa_atexit+0x18>)
 801948c:	4613      	mov	r3, r2
 801948e:	b12c      	cbz	r4, 801949c <__cxa_atexit+0x14>
 8019490:	460a      	mov	r2, r1
 8019492:	4601      	mov	r1, r0
 8019494:	2002      	movs	r0, #2
 8019496:	f000 fecd 	bl	801a234 <__register_exitproc>
 801949a:	bd10      	pop	{r4, pc}
 801949c:	4620      	mov	r0, r4
 801949e:	e7fc      	b.n	801949a <__cxa_atexit+0x12>
 80194a0:	0801a235 	.word	0x0801a235

080194a4 <__errno>:
 80194a4:	4b01      	ldr	r3, [pc, #4]	; (80194ac <__errno+0x8>)
 80194a6:	6818      	ldr	r0, [r3, #0]
 80194a8:	4770      	bx	lr
 80194aa:	bf00      	nop
 80194ac:	200000d8 	.word	0x200000d8

080194b0 <std>:
 80194b0:	2300      	movs	r3, #0
 80194b2:	b510      	push	{r4, lr}
 80194b4:	4604      	mov	r4, r0
 80194b6:	e9c0 3300 	strd	r3, r3, [r0]
 80194ba:	e9c0 3304 	strd	r3, r3, [r0, #16]
 80194be:	6083      	str	r3, [r0, #8]
 80194c0:	8181      	strh	r1, [r0, #12]
 80194c2:	6643      	str	r3, [r0, #100]	; 0x64
 80194c4:	81c2      	strh	r2, [r0, #14]
 80194c6:	6183      	str	r3, [r0, #24]
 80194c8:	4619      	mov	r1, r3
 80194ca:	2208      	movs	r2, #8
 80194cc:	305c      	adds	r0, #92	; 0x5c
 80194ce:	f000 f93d 	bl	801974c <memset>
 80194d2:	4b05      	ldr	r3, [pc, #20]	; (80194e8 <std+0x38>)
 80194d4:	6263      	str	r3, [r4, #36]	; 0x24
 80194d6:	4b05      	ldr	r3, [pc, #20]	; (80194ec <std+0x3c>)
 80194d8:	62a3      	str	r3, [r4, #40]	; 0x28
 80194da:	4b05      	ldr	r3, [pc, #20]	; (80194f0 <std+0x40>)
 80194dc:	62e3      	str	r3, [r4, #44]	; 0x2c
 80194de:	4b05      	ldr	r3, [pc, #20]	; (80194f4 <std+0x44>)
 80194e0:	6224      	str	r4, [r4, #32]
 80194e2:	6323      	str	r3, [r4, #48]	; 0x30
 80194e4:	bd10      	pop	{r4, pc}
 80194e6:	bf00      	nop
 80194e8:	0801a009 	.word	0x0801a009
 80194ec:	0801a02b 	.word	0x0801a02b
 80194f0:	0801a063 	.word	0x0801a063
 80194f4:	0801a087 	.word	0x0801a087

080194f8 <_cleanup_r>:
 80194f8:	4901      	ldr	r1, [pc, #4]	; (8019500 <_cleanup_r+0x8>)
 80194fa:	f000 b8c1 	b.w	8019680 <_fwalk_reent>
 80194fe:	bf00      	nop
 8019500:	0801a425 	.word	0x0801a425

08019504 <__sfmoreglue>:
 8019504:	b570      	push	{r4, r5, r6, lr}
 8019506:	1e4a      	subs	r2, r1, #1
 8019508:	2568      	movs	r5, #104	; 0x68
 801950a:	4355      	muls	r5, r2
 801950c:	460e      	mov	r6, r1
 801950e:	f105 0174 	add.w	r1, r5, #116	; 0x74
 8019512:	f000 f973 	bl	80197fc <_malloc_r>
 8019516:	4604      	mov	r4, r0
 8019518:	b140      	cbz	r0, 801952c <__sfmoreglue+0x28>
 801951a:	2100      	movs	r1, #0
 801951c:	e9c0 1600 	strd	r1, r6, [r0]
 8019520:	300c      	adds	r0, #12
 8019522:	60a0      	str	r0, [r4, #8]
 8019524:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8019528:	f000 f910 	bl	801974c <memset>
 801952c:	4620      	mov	r0, r4
 801952e:	bd70      	pop	{r4, r5, r6, pc}

08019530 <__sfp_lock_acquire>:
 8019530:	4801      	ldr	r0, [pc, #4]	; (8019538 <__sfp_lock_acquire+0x8>)
 8019532:	f000 b8ea 	b.w	801970a <__retarget_lock_acquire_recursive>
 8019536:	bf00      	nop
 8019538:	2000a650 	.word	0x2000a650

0801953c <__sfp_lock_release>:
 801953c:	4801      	ldr	r0, [pc, #4]	; (8019544 <__sfp_lock_release+0x8>)
 801953e:	f000 b8e6 	b.w	801970e <__retarget_lock_release_recursive>
 8019542:	bf00      	nop
 8019544:	2000a650 	.word	0x2000a650

08019548 <__sinit_lock_acquire>:
 8019548:	4801      	ldr	r0, [pc, #4]	; (8019550 <__sinit_lock_acquire+0x8>)
 801954a:	f000 b8de 	b.w	801970a <__retarget_lock_acquire_recursive>
 801954e:	bf00      	nop
 8019550:	2000a64b 	.word	0x2000a64b

08019554 <__sinit_lock_release>:
 8019554:	4801      	ldr	r0, [pc, #4]	; (801955c <__sinit_lock_release+0x8>)
 8019556:	f000 b8da 	b.w	801970e <__retarget_lock_release_recursive>
 801955a:	bf00      	nop
 801955c:	2000a64b 	.word	0x2000a64b

08019560 <__sinit>:
 8019560:	b510      	push	{r4, lr}
 8019562:	4604      	mov	r4, r0
 8019564:	f7ff fff0 	bl	8019548 <__sinit_lock_acquire>
 8019568:	69a3      	ldr	r3, [r4, #24]
 801956a:	b11b      	cbz	r3, 8019574 <__sinit+0x14>
 801956c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8019570:	f7ff bff0 	b.w	8019554 <__sinit_lock_release>
 8019574:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8019578:	6523      	str	r3, [r4, #80]	; 0x50
 801957a:	4b13      	ldr	r3, [pc, #76]	; (80195c8 <__sinit+0x68>)
 801957c:	4a13      	ldr	r2, [pc, #76]	; (80195cc <__sinit+0x6c>)
 801957e:	681b      	ldr	r3, [r3, #0]
 8019580:	62a2      	str	r2, [r4, #40]	; 0x28
 8019582:	42a3      	cmp	r3, r4
 8019584:	bf04      	itt	eq
 8019586:	2301      	moveq	r3, #1
 8019588:	61a3      	streq	r3, [r4, #24]
 801958a:	4620      	mov	r0, r4
 801958c:	f000 f820 	bl	80195d0 <__sfp>
 8019590:	6060      	str	r0, [r4, #4]
 8019592:	4620      	mov	r0, r4
 8019594:	f000 f81c 	bl	80195d0 <__sfp>
 8019598:	60a0      	str	r0, [r4, #8]
 801959a:	4620      	mov	r0, r4
 801959c:	f000 f818 	bl	80195d0 <__sfp>
 80195a0:	2200      	movs	r2, #0
 80195a2:	60e0      	str	r0, [r4, #12]
 80195a4:	2104      	movs	r1, #4
 80195a6:	6860      	ldr	r0, [r4, #4]
 80195a8:	f7ff ff82 	bl	80194b0 <std>
 80195ac:	68a0      	ldr	r0, [r4, #8]
 80195ae:	2201      	movs	r2, #1
 80195b0:	2109      	movs	r1, #9
 80195b2:	f7ff ff7d 	bl	80194b0 <std>
 80195b6:	68e0      	ldr	r0, [r4, #12]
 80195b8:	2202      	movs	r2, #2
 80195ba:	2112      	movs	r1, #18
 80195bc:	f7ff ff78 	bl	80194b0 <std>
 80195c0:	2301      	movs	r3, #1
 80195c2:	61a3      	str	r3, [r4, #24]
 80195c4:	e7d2      	b.n	801956c <__sinit+0xc>
 80195c6:	bf00      	nop
 80195c8:	0801d6e4 	.word	0x0801d6e4
 80195cc:	080194f9 	.word	0x080194f9

080195d0 <__sfp>:
 80195d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80195d2:	4607      	mov	r7, r0
 80195d4:	f7ff ffac 	bl	8019530 <__sfp_lock_acquire>
 80195d8:	4b1e      	ldr	r3, [pc, #120]	; (8019654 <__sfp+0x84>)
 80195da:	681e      	ldr	r6, [r3, #0]
 80195dc:	69b3      	ldr	r3, [r6, #24]
 80195de:	b913      	cbnz	r3, 80195e6 <__sfp+0x16>
 80195e0:	4630      	mov	r0, r6
 80195e2:	f7ff ffbd 	bl	8019560 <__sinit>
 80195e6:	3648      	adds	r6, #72	; 0x48
 80195e8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80195ec:	3b01      	subs	r3, #1
 80195ee:	d503      	bpl.n	80195f8 <__sfp+0x28>
 80195f0:	6833      	ldr	r3, [r6, #0]
 80195f2:	b30b      	cbz	r3, 8019638 <__sfp+0x68>
 80195f4:	6836      	ldr	r6, [r6, #0]
 80195f6:	e7f7      	b.n	80195e8 <__sfp+0x18>
 80195f8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80195fc:	b9d5      	cbnz	r5, 8019634 <__sfp+0x64>
 80195fe:	4b16      	ldr	r3, [pc, #88]	; (8019658 <__sfp+0x88>)
 8019600:	60e3      	str	r3, [r4, #12]
 8019602:	f104 0058 	add.w	r0, r4, #88	; 0x58
 8019606:	6665      	str	r5, [r4, #100]	; 0x64
 8019608:	f000 f87e 	bl	8019708 <__retarget_lock_init_recursive>
 801960c:	f7ff ff96 	bl	801953c <__sfp_lock_release>
 8019610:	e9c4 5501 	strd	r5, r5, [r4, #4]
 8019614:	e9c4 5504 	strd	r5, r5, [r4, #16]
 8019618:	6025      	str	r5, [r4, #0]
 801961a:	61a5      	str	r5, [r4, #24]
 801961c:	2208      	movs	r2, #8
 801961e:	4629      	mov	r1, r5
 8019620:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8019624:	f000 f892 	bl	801974c <memset>
 8019628:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 801962c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8019630:	4620      	mov	r0, r4
 8019632:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8019634:	3468      	adds	r4, #104	; 0x68
 8019636:	e7d9      	b.n	80195ec <__sfp+0x1c>
 8019638:	2104      	movs	r1, #4
 801963a:	4638      	mov	r0, r7
 801963c:	f7ff ff62 	bl	8019504 <__sfmoreglue>
 8019640:	4604      	mov	r4, r0
 8019642:	6030      	str	r0, [r6, #0]
 8019644:	2800      	cmp	r0, #0
 8019646:	d1d5      	bne.n	80195f4 <__sfp+0x24>
 8019648:	f7ff ff78 	bl	801953c <__sfp_lock_release>
 801964c:	230c      	movs	r3, #12
 801964e:	603b      	str	r3, [r7, #0]
 8019650:	e7ee      	b.n	8019630 <__sfp+0x60>
 8019652:	bf00      	nop
 8019654:	0801d6e4 	.word	0x0801d6e4
 8019658:	ffff0001 	.word	0xffff0001

0801965c <fiprintf>:
 801965c:	b40e      	push	{r1, r2, r3}
 801965e:	b503      	push	{r0, r1, lr}
 8019660:	4601      	mov	r1, r0
 8019662:	ab03      	add	r3, sp, #12
 8019664:	4805      	ldr	r0, [pc, #20]	; (801967c <fiprintf+0x20>)
 8019666:	f853 2b04 	ldr.w	r2, [r3], #4
 801966a:	6800      	ldr	r0, [r0, #0]
 801966c:	9301      	str	r3, [sp, #4]
 801966e:	f000 f949 	bl	8019904 <_vfiprintf_r>
 8019672:	b002      	add	sp, #8
 8019674:	f85d eb04 	ldr.w	lr, [sp], #4
 8019678:	b003      	add	sp, #12
 801967a:	4770      	bx	lr
 801967c:	200000d8 	.word	0x200000d8

08019680 <_fwalk_reent>:
 8019680:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8019684:	4606      	mov	r6, r0
 8019686:	4688      	mov	r8, r1
 8019688:	f100 0448 	add.w	r4, r0, #72	; 0x48
 801968c:	2700      	movs	r7, #0
 801968e:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8019692:	f1b9 0901 	subs.w	r9, r9, #1
 8019696:	d505      	bpl.n	80196a4 <_fwalk_reent+0x24>
 8019698:	6824      	ldr	r4, [r4, #0]
 801969a:	2c00      	cmp	r4, #0
 801969c:	d1f7      	bne.n	801968e <_fwalk_reent+0xe>
 801969e:	4638      	mov	r0, r7
 80196a0:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80196a4:	89ab      	ldrh	r3, [r5, #12]
 80196a6:	2b01      	cmp	r3, #1
 80196a8:	d907      	bls.n	80196ba <_fwalk_reent+0x3a>
 80196aa:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80196ae:	3301      	adds	r3, #1
 80196b0:	d003      	beq.n	80196ba <_fwalk_reent+0x3a>
 80196b2:	4629      	mov	r1, r5
 80196b4:	4630      	mov	r0, r6
 80196b6:	47c0      	blx	r8
 80196b8:	4307      	orrs	r7, r0
 80196ba:	3568      	adds	r5, #104	; 0x68
 80196bc:	e7e9      	b.n	8019692 <_fwalk_reent+0x12>
	...

080196c0 <__libc_init_array>:
 80196c0:	b570      	push	{r4, r5, r6, lr}
 80196c2:	4d0d      	ldr	r5, [pc, #52]	; (80196f8 <__libc_init_array+0x38>)
 80196c4:	4c0d      	ldr	r4, [pc, #52]	; (80196fc <__libc_init_array+0x3c>)
 80196c6:	1b64      	subs	r4, r4, r5
 80196c8:	10a4      	asrs	r4, r4, #2
 80196ca:	2600      	movs	r6, #0
 80196cc:	42a6      	cmp	r6, r4
 80196ce:	d109      	bne.n	80196e4 <__libc_init_array+0x24>
 80196d0:	4d0b      	ldr	r5, [pc, #44]	; (8019700 <__libc_init_array+0x40>)
 80196d2:	4c0c      	ldr	r4, [pc, #48]	; (8019704 <__libc_init_array+0x44>)
 80196d4:	f000 ff98 	bl	801a608 <_init>
 80196d8:	1b64      	subs	r4, r4, r5
 80196da:	10a4      	asrs	r4, r4, #2
 80196dc:	2600      	movs	r6, #0
 80196de:	42a6      	cmp	r6, r4
 80196e0:	d105      	bne.n	80196ee <__libc_init_array+0x2e>
 80196e2:	bd70      	pop	{r4, r5, r6, pc}
 80196e4:	f855 3b04 	ldr.w	r3, [r5], #4
 80196e8:	4798      	blx	r3
 80196ea:	3601      	adds	r6, #1
 80196ec:	e7ee      	b.n	80196cc <__libc_init_array+0xc>
 80196ee:	f855 3b04 	ldr.w	r3, [r5], #4
 80196f2:	4798      	blx	r3
 80196f4:	3601      	adds	r6, #1
 80196f6:	e7f2      	b.n	80196de <__libc_init_array+0x1e>
 80196f8:	0801d734 	.word	0x0801d734
 80196fc:	0801d734 	.word	0x0801d734
 8019700:	0801d734 	.word	0x0801d734
 8019704:	0801d74c 	.word	0x0801d74c

08019708 <__retarget_lock_init_recursive>:
 8019708:	4770      	bx	lr

0801970a <__retarget_lock_acquire_recursive>:
 801970a:	4770      	bx	lr

0801970c <__retarget_lock_release>:
 801970c:	4770      	bx	lr

0801970e <__retarget_lock_release_recursive>:
 801970e:	4770      	bx	lr

08019710 <malloc>:
 8019710:	4b02      	ldr	r3, [pc, #8]	; (801971c <malloc+0xc>)
 8019712:	4601      	mov	r1, r0
 8019714:	6818      	ldr	r0, [r3, #0]
 8019716:	f000 b871 	b.w	80197fc <_malloc_r>
 801971a:	bf00      	nop
 801971c:	200000d8 	.word	0x200000d8

08019720 <free>:
 8019720:	4b02      	ldr	r3, [pc, #8]	; (801972c <free+0xc>)
 8019722:	4601      	mov	r1, r0
 8019724:	6818      	ldr	r0, [r3, #0]
 8019726:	f000 b819 	b.w	801975c <_free_r>
 801972a:	bf00      	nop
 801972c:	200000d8 	.word	0x200000d8

08019730 <memcpy>:
 8019730:	440a      	add	r2, r1
 8019732:	4291      	cmp	r1, r2
 8019734:	f100 33ff 	add.w	r3, r0, #4294967295
 8019738:	d100      	bne.n	801973c <memcpy+0xc>
 801973a:	4770      	bx	lr
 801973c:	b510      	push	{r4, lr}
 801973e:	f811 4b01 	ldrb.w	r4, [r1], #1
 8019742:	f803 4f01 	strb.w	r4, [r3, #1]!
 8019746:	4291      	cmp	r1, r2
 8019748:	d1f9      	bne.n	801973e <memcpy+0xe>
 801974a:	bd10      	pop	{r4, pc}

0801974c <memset>:
 801974c:	4402      	add	r2, r0
 801974e:	4603      	mov	r3, r0
 8019750:	4293      	cmp	r3, r2
 8019752:	d100      	bne.n	8019756 <memset+0xa>
 8019754:	4770      	bx	lr
 8019756:	f803 1b01 	strb.w	r1, [r3], #1
 801975a:	e7f9      	b.n	8019750 <memset+0x4>

0801975c <_free_r>:
 801975c:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801975e:	2900      	cmp	r1, #0
 8019760:	d048      	beq.n	80197f4 <_free_r+0x98>
 8019762:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8019766:	9001      	str	r0, [sp, #4]
 8019768:	2b00      	cmp	r3, #0
 801976a:	f1a1 0404 	sub.w	r4, r1, #4
 801976e:	bfb8      	it	lt
 8019770:	18e4      	addlt	r4, r4, r3
 8019772:	f000 ff09 	bl	801a588 <__malloc_lock>
 8019776:	4a20      	ldr	r2, [pc, #128]	; (80197f8 <_free_r+0x9c>)
 8019778:	9801      	ldr	r0, [sp, #4]
 801977a:	6813      	ldr	r3, [r2, #0]
 801977c:	4615      	mov	r5, r2
 801977e:	b933      	cbnz	r3, 801978e <_free_r+0x32>
 8019780:	6063      	str	r3, [r4, #4]
 8019782:	6014      	str	r4, [r2, #0]
 8019784:	b003      	add	sp, #12
 8019786:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 801978a:	f000 bf03 	b.w	801a594 <__malloc_unlock>
 801978e:	42a3      	cmp	r3, r4
 8019790:	d90b      	bls.n	80197aa <_free_r+0x4e>
 8019792:	6821      	ldr	r1, [r4, #0]
 8019794:	1862      	adds	r2, r4, r1
 8019796:	4293      	cmp	r3, r2
 8019798:	bf04      	itt	eq
 801979a:	681a      	ldreq	r2, [r3, #0]
 801979c:	685b      	ldreq	r3, [r3, #4]
 801979e:	6063      	str	r3, [r4, #4]
 80197a0:	bf04      	itt	eq
 80197a2:	1852      	addeq	r2, r2, r1
 80197a4:	6022      	streq	r2, [r4, #0]
 80197a6:	602c      	str	r4, [r5, #0]
 80197a8:	e7ec      	b.n	8019784 <_free_r+0x28>
 80197aa:	461a      	mov	r2, r3
 80197ac:	685b      	ldr	r3, [r3, #4]
 80197ae:	b10b      	cbz	r3, 80197b4 <_free_r+0x58>
 80197b0:	42a3      	cmp	r3, r4
 80197b2:	d9fa      	bls.n	80197aa <_free_r+0x4e>
 80197b4:	6811      	ldr	r1, [r2, #0]
 80197b6:	1855      	adds	r5, r2, r1
 80197b8:	42a5      	cmp	r5, r4
 80197ba:	d10b      	bne.n	80197d4 <_free_r+0x78>
 80197bc:	6824      	ldr	r4, [r4, #0]
 80197be:	4421      	add	r1, r4
 80197c0:	1854      	adds	r4, r2, r1
 80197c2:	42a3      	cmp	r3, r4
 80197c4:	6011      	str	r1, [r2, #0]
 80197c6:	d1dd      	bne.n	8019784 <_free_r+0x28>
 80197c8:	681c      	ldr	r4, [r3, #0]
 80197ca:	685b      	ldr	r3, [r3, #4]
 80197cc:	6053      	str	r3, [r2, #4]
 80197ce:	4421      	add	r1, r4
 80197d0:	6011      	str	r1, [r2, #0]
 80197d2:	e7d7      	b.n	8019784 <_free_r+0x28>
 80197d4:	d902      	bls.n	80197dc <_free_r+0x80>
 80197d6:	230c      	movs	r3, #12
 80197d8:	6003      	str	r3, [r0, #0]
 80197da:	e7d3      	b.n	8019784 <_free_r+0x28>
 80197dc:	6825      	ldr	r5, [r4, #0]
 80197de:	1961      	adds	r1, r4, r5
 80197e0:	428b      	cmp	r3, r1
 80197e2:	bf04      	itt	eq
 80197e4:	6819      	ldreq	r1, [r3, #0]
 80197e6:	685b      	ldreq	r3, [r3, #4]
 80197e8:	6063      	str	r3, [r4, #4]
 80197ea:	bf04      	itt	eq
 80197ec:	1949      	addeq	r1, r1, r5
 80197ee:	6021      	streq	r1, [r4, #0]
 80197f0:	6054      	str	r4, [r2, #4]
 80197f2:	e7c7      	b.n	8019784 <_free_r+0x28>
 80197f4:	b003      	add	sp, #12
 80197f6:	bd30      	pop	{r4, r5, pc}
 80197f8:	2000a1e8 	.word	0x2000a1e8

080197fc <_malloc_r>:
 80197fc:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80197fe:	1ccd      	adds	r5, r1, #3
 8019800:	f025 0503 	bic.w	r5, r5, #3
 8019804:	3508      	adds	r5, #8
 8019806:	2d0c      	cmp	r5, #12
 8019808:	bf38      	it	cc
 801980a:	250c      	movcc	r5, #12
 801980c:	2d00      	cmp	r5, #0
 801980e:	4606      	mov	r6, r0
 8019810:	db01      	blt.n	8019816 <_malloc_r+0x1a>
 8019812:	42a9      	cmp	r1, r5
 8019814:	d903      	bls.n	801981e <_malloc_r+0x22>
 8019816:	230c      	movs	r3, #12
 8019818:	6033      	str	r3, [r6, #0]
 801981a:	2000      	movs	r0, #0
 801981c:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801981e:	f000 feb3 	bl	801a588 <__malloc_lock>
 8019822:	4921      	ldr	r1, [pc, #132]	; (80198a8 <_malloc_r+0xac>)
 8019824:	680a      	ldr	r2, [r1, #0]
 8019826:	4614      	mov	r4, r2
 8019828:	b99c      	cbnz	r4, 8019852 <_malloc_r+0x56>
 801982a:	4f20      	ldr	r7, [pc, #128]	; (80198ac <_malloc_r+0xb0>)
 801982c:	683b      	ldr	r3, [r7, #0]
 801982e:	b923      	cbnz	r3, 801983a <_malloc_r+0x3e>
 8019830:	4621      	mov	r1, r4
 8019832:	4630      	mov	r0, r6
 8019834:	f000 fb94 	bl	8019f60 <_sbrk_r>
 8019838:	6038      	str	r0, [r7, #0]
 801983a:	4629      	mov	r1, r5
 801983c:	4630      	mov	r0, r6
 801983e:	f000 fb8f 	bl	8019f60 <_sbrk_r>
 8019842:	1c43      	adds	r3, r0, #1
 8019844:	d123      	bne.n	801988e <_malloc_r+0x92>
 8019846:	230c      	movs	r3, #12
 8019848:	6033      	str	r3, [r6, #0]
 801984a:	4630      	mov	r0, r6
 801984c:	f000 fea2 	bl	801a594 <__malloc_unlock>
 8019850:	e7e3      	b.n	801981a <_malloc_r+0x1e>
 8019852:	6823      	ldr	r3, [r4, #0]
 8019854:	1b5b      	subs	r3, r3, r5
 8019856:	d417      	bmi.n	8019888 <_malloc_r+0x8c>
 8019858:	2b0b      	cmp	r3, #11
 801985a:	d903      	bls.n	8019864 <_malloc_r+0x68>
 801985c:	6023      	str	r3, [r4, #0]
 801985e:	441c      	add	r4, r3
 8019860:	6025      	str	r5, [r4, #0]
 8019862:	e004      	b.n	801986e <_malloc_r+0x72>
 8019864:	6863      	ldr	r3, [r4, #4]
 8019866:	42a2      	cmp	r2, r4
 8019868:	bf0c      	ite	eq
 801986a:	600b      	streq	r3, [r1, #0]
 801986c:	6053      	strne	r3, [r2, #4]
 801986e:	4630      	mov	r0, r6
 8019870:	f000 fe90 	bl	801a594 <__malloc_unlock>
 8019874:	f104 000b 	add.w	r0, r4, #11
 8019878:	1d23      	adds	r3, r4, #4
 801987a:	f020 0007 	bic.w	r0, r0, #7
 801987e:	1ac2      	subs	r2, r0, r3
 8019880:	d0cc      	beq.n	801981c <_malloc_r+0x20>
 8019882:	1a1b      	subs	r3, r3, r0
 8019884:	50a3      	str	r3, [r4, r2]
 8019886:	e7c9      	b.n	801981c <_malloc_r+0x20>
 8019888:	4622      	mov	r2, r4
 801988a:	6864      	ldr	r4, [r4, #4]
 801988c:	e7cc      	b.n	8019828 <_malloc_r+0x2c>
 801988e:	1cc4      	adds	r4, r0, #3
 8019890:	f024 0403 	bic.w	r4, r4, #3
 8019894:	42a0      	cmp	r0, r4
 8019896:	d0e3      	beq.n	8019860 <_malloc_r+0x64>
 8019898:	1a21      	subs	r1, r4, r0
 801989a:	4630      	mov	r0, r6
 801989c:	f000 fb60 	bl	8019f60 <_sbrk_r>
 80198a0:	3001      	adds	r0, #1
 80198a2:	d1dd      	bne.n	8019860 <_malloc_r+0x64>
 80198a4:	e7cf      	b.n	8019846 <_malloc_r+0x4a>
 80198a6:	bf00      	nop
 80198a8:	2000a1e8 	.word	0x2000a1e8
 80198ac:	2000a1ec 	.word	0x2000a1ec

080198b0 <__sfputc_r>:
 80198b0:	6893      	ldr	r3, [r2, #8]
 80198b2:	3b01      	subs	r3, #1
 80198b4:	2b00      	cmp	r3, #0
 80198b6:	b410      	push	{r4}
 80198b8:	6093      	str	r3, [r2, #8]
 80198ba:	da08      	bge.n	80198ce <__sfputc_r+0x1e>
 80198bc:	6994      	ldr	r4, [r2, #24]
 80198be:	42a3      	cmp	r3, r4
 80198c0:	db01      	blt.n	80198c6 <__sfputc_r+0x16>
 80198c2:	290a      	cmp	r1, #10
 80198c4:	d103      	bne.n	80198ce <__sfputc_r+0x1e>
 80198c6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80198ca:	f000 bbe1 	b.w	801a090 <__swbuf_r>
 80198ce:	6813      	ldr	r3, [r2, #0]
 80198d0:	1c58      	adds	r0, r3, #1
 80198d2:	6010      	str	r0, [r2, #0]
 80198d4:	7019      	strb	r1, [r3, #0]
 80198d6:	4608      	mov	r0, r1
 80198d8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80198dc:	4770      	bx	lr

080198de <__sfputs_r>:
 80198de:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80198e0:	4606      	mov	r6, r0
 80198e2:	460f      	mov	r7, r1
 80198e4:	4614      	mov	r4, r2
 80198e6:	18d5      	adds	r5, r2, r3
 80198e8:	42ac      	cmp	r4, r5
 80198ea:	d101      	bne.n	80198f0 <__sfputs_r+0x12>
 80198ec:	2000      	movs	r0, #0
 80198ee:	e007      	b.n	8019900 <__sfputs_r+0x22>
 80198f0:	f814 1b01 	ldrb.w	r1, [r4], #1
 80198f4:	463a      	mov	r2, r7
 80198f6:	4630      	mov	r0, r6
 80198f8:	f7ff ffda 	bl	80198b0 <__sfputc_r>
 80198fc:	1c43      	adds	r3, r0, #1
 80198fe:	d1f3      	bne.n	80198e8 <__sfputs_r+0xa>
 8019900:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08019904 <_vfiprintf_r>:
 8019904:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019908:	460d      	mov	r5, r1
 801990a:	b09d      	sub	sp, #116	; 0x74
 801990c:	4614      	mov	r4, r2
 801990e:	4698      	mov	r8, r3
 8019910:	4606      	mov	r6, r0
 8019912:	b118      	cbz	r0, 801991c <_vfiprintf_r+0x18>
 8019914:	6983      	ldr	r3, [r0, #24]
 8019916:	b90b      	cbnz	r3, 801991c <_vfiprintf_r+0x18>
 8019918:	f7ff fe22 	bl	8019560 <__sinit>
 801991c:	4b89      	ldr	r3, [pc, #548]	; (8019b44 <_vfiprintf_r+0x240>)
 801991e:	429d      	cmp	r5, r3
 8019920:	d11b      	bne.n	801995a <_vfiprintf_r+0x56>
 8019922:	6875      	ldr	r5, [r6, #4]
 8019924:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8019926:	07d9      	lsls	r1, r3, #31
 8019928:	d405      	bmi.n	8019936 <_vfiprintf_r+0x32>
 801992a:	89ab      	ldrh	r3, [r5, #12]
 801992c:	059a      	lsls	r2, r3, #22
 801992e:	d402      	bmi.n	8019936 <_vfiprintf_r+0x32>
 8019930:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8019932:	f7ff feea 	bl	801970a <__retarget_lock_acquire_recursive>
 8019936:	89ab      	ldrh	r3, [r5, #12]
 8019938:	071b      	lsls	r3, r3, #28
 801993a:	d501      	bpl.n	8019940 <_vfiprintf_r+0x3c>
 801993c:	692b      	ldr	r3, [r5, #16]
 801993e:	b9eb      	cbnz	r3, 801997c <_vfiprintf_r+0x78>
 8019940:	4629      	mov	r1, r5
 8019942:	4630      	mov	r0, r6
 8019944:	f000 fc08 	bl	801a158 <__swsetup_r>
 8019948:	b1c0      	cbz	r0, 801997c <_vfiprintf_r+0x78>
 801994a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 801994c:	07dc      	lsls	r4, r3, #31
 801994e:	d50e      	bpl.n	801996e <_vfiprintf_r+0x6a>
 8019950:	f04f 30ff 	mov.w	r0, #4294967295
 8019954:	b01d      	add	sp, #116	; 0x74
 8019956:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801995a:	4b7b      	ldr	r3, [pc, #492]	; (8019b48 <_vfiprintf_r+0x244>)
 801995c:	429d      	cmp	r5, r3
 801995e:	d101      	bne.n	8019964 <_vfiprintf_r+0x60>
 8019960:	68b5      	ldr	r5, [r6, #8]
 8019962:	e7df      	b.n	8019924 <_vfiprintf_r+0x20>
 8019964:	4b79      	ldr	r3, [pc, #484]	; (8019b4c <_vfiprintf_r+0x248>)
 8019966:	429d      	cmp	r5, r3
 8019968:	bf08      	it	eq
 801996a:	68f5      	ldreq	r5, [r6, #12]
 801996c:	e7da      	b.n	8019924 <_vfiprintf_r+0x20>
 801996e:	89ab      	ldrh	r3, [r5, #12]
 8019970:	0598      	lsls	r0, r3, #22
 8019972:	d4ed      	bmi.n	8019950 <_vfiprintf_r+0x4c>
 8019974:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8019976:	f7ff feca 	bl	801970e <__retarget_lock_release_recursive>
 801997a:	e7e9      	b.n	8019950 <_vfiprintf_r+0x4c>
 801997c:	2300      	movs	r3, #0
 801997e:	9309      	str	r3, [sp, #36]	; 0x24
 8019980:	2320      	movs	r3, #32
 8019982:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8019986:	f8cd 800c 	str.w	r8, [sp, #12]
 801998a:	2330      	movs	r3, #48	; 0x30
 801998c:	f8df 81c0 	ldr.w	r8, [pc, #448]	; 8019b50 <_vfiprintf_r+0x24c>
 8019990:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8019994:	f04f 0901 	mov.w	r9, #1
 8019998:	4623      	mov	r3, r4
 801999a:	469a      	mov	sl, r3
 801999c:	f813 2b01 	ldrb.w	r2, [r3], #1
 80199a0:	b10a      	cbz	r2, 80199a6 <_vfiprintf_r+0xa2>
 80199a2:	2a25      	cmp	r2, #37	; 0x25
 80199a4:	d1f9      	bne.n	801999a <_vfiprintf_r+0x96>
 80199a6:	ebba 0b04 	subs.w	fp, sl, r4
 80199aa:	d00b      	beq.n	80199c4 <_vfiprintf_r+0xc0>
 80199ac:	465b      	mov	r3, fp
 80199ae:	4622      	mov	r2, r4
 80199b0:	4629      	mov	r1, r5
 80199b2:	4630      	mov	r0, r6
 80199b4:	f7ff ff93 	bl	80198de <__sfputs_r>
 80199b8:	3001      	adds	r0, #1
 80199ba:	f000 80aa 	beq.w	8019b12 <_vfiprintf_r+0x20e>
 80199be:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80199c0:	445a      	add	r2, fp
 80199c2:	9209      	str	r2, [sp, #36]	; 0x24
 80199c4:	f89a 3000 	ldrb.w	r3, [sl]
 80199c8:	2b00      	cmp	r3, #0
 80199ca:	f000 80a2 	beq.w	8019b12 <_vfiprintf_r+0x20e>
 80199ce:	2300      	movs	r3, #0
 80199d0:	f04f 32ff 	mov.w	r2, #4294967295
 80199d4:	e9cd 2305 	strd	r2, r3, [sp, #20]
 80199d8:	f10a 0a01 	add.w	sl, sl, #1
 80199dc:	9304      	str	r3, [sp, #16]
 80199de:	9307      	str	r3, [sp, #28]
 80199e0:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 80199e4:	931a      	str	r3, [sp, #104]	; 0x68
 80199e6:	4654      	mov	r4, sl
 80199e8:	2205      	movs	r2, #5
 80199ea:	f814 1b01 	ldrb.w	r1, [r4], #1
 80199ee:	4858      	ldr	r0, [pc, #352]	; (8019b50 <_vfiprintf_r+0x24c>)
 80199f0:	f7e6 fc06 	bl	8000200 <memchr>
 80199f4:	9a04      	ldr	r2, [sp, #16]
 80199f6:	b9d8      	cbnz	r0, 8019a30 <_vfiprintf_r+0x12c>
 80199f8:	06d1      	lsls	r1, r2, #27
 80199fa:	bf44      	itt	mi
 80199fc:	2320      	movmi	r3, #32
 80199fe:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8019a02:	0713      	lsls	r3, r2, #28
 8019a04:	bf44      	itt	mi
 8019a06:	232b      	movmi	r3, #43	; 0x2b
 8019a08:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8019a0c:	f89a 3000 	ldrb.w	r3, [sl]
 8019a10:	2b2a      	cmp	r3, #42	; 0x2a
 8019a12:	d015      	beq.n	8019a40 <_vfiprintf_r+0x13c>
 8019a14:	9a07      	ldr	r2, [sp, #28]
 8019a16:	4654      	mov	r4, sl
 8019a18:	2000      	movs	r0, #0
 8019a1a:	f04f 0c0a 	mov.w	ip, #10
 8019a1e:	4621      	mov	r1, r4
 8019a20:	f811 3b01 	ldrb.w	r3, [r1], #1
 8019a24:	3b30      	subs	r3, #48	; 0x30
 8019a26:	2b09      	cmp	r3, #9
 8019a28:	d94e      	bls.n	8019ac8 <_vfiprintf_r+0x1c4>
 8019a2a:	b1b0      	cbz	r0, 8019a5a <_vfiprintf_r+0x156>
 8019a2c:	9207      	str	r2, [sp, #28]
 8019a2e:	e014      	b.n	8019a5a <_vfiprintf_r+0x156>
 8019a30:	eba0 0308 	sub.w	r3, r0, r8
 8019a34:	fa09 f303 	lsl.w	r3, r9, r3
 8019a38:	4313      	orrs	r3, r2
 8019a3a:	9304      	str	r3, [sp, #16]
 8019a3c:	46a2      	mov	sl, r4
 8019a3e:	e7d2      	b.n	80199e6 <_vfiprintf_r+0xe2>
 8019a40:	9b03      	ldr	r3, [sp, #12]
 8019a42:	1d19      	adds	r1, r3, #4
 8019a44:	681b      	ldr	r3, [r3, #0]
 8019a46:	9103      	str	r1, [sp, #12]
 8019a48:	2b00      	cmp	r3, #0
 8019a4a:	bfbb      	ittet	lt
 8019a4c:	425b      	neglt	r3, r3
 8019a4e:	f042 0202 	orrlt.w	r2, r2, #2
 8019a52:	9307      	strge	r3, [sp, #28]
 8019a54:	9307      	strlt	r3, [sp, #28]
 8019a56:	bfb8      	it	lt
 8019a58:	9204      	strlt	r2, [sp, #16]
 8019a5a:	7823      	ldrb	r3, [r4, #0]
 8019a5c:	2b2e      	cmp	r3, #46	; 0x2e
 8019a5e:	d10c      	bne.n	8019a7a <_vfiprintf_r+0x176>
 8019a60:	7863      	ldrb	r3, [r4, #1]
 8019a62:	2b2a      	cmp	r3, #42	; 0x2a
 8019a64:	d135      	bne.n	8019ad2 <_vfiprintf_r+0x1ce>
 8019a66:	9b03      	ldr	r3, [sp, #12]
 8019a68:	1d1a      	adds	r2, r3, #4
 8019a6a:	681b      	ldr	r3, [r3, #0]
 8019a6c:	9203      	str	r2, [sp, #12]
 8019a6e:	2b00      	cmp	r3, #0
 8019a70:	bfb8      	it	lt
 8019a72:	f04f 33ff 	movlt.w	r3, #4294967295
 8019a76:	3402      	adds	r4, #2
 8019a78:	9305      	str	r3, [sp, #20]
 8019a7a:	f8df a0e4 	ldr.w	sl, [pc, #228]	; 8019b60 <_vfiprintf_r+0x25c>
 8019a7e:	7821      	ldrb	r1, [r4, #0]
 8019a80:	2203      	movs	r2, #3
 8019a82:	4650      	mov	r0, sl
 8019a84:	f7e6 fbbc 	bl	8000200 <memchr>
 8019a88:	b140      	cbz	r0, 8019a9c <_vfiprintf_r+0x198>
 8019a8a:	2340      	movs	r3, #64	; 0x40
 8019a8c:	eba0 000a 	sub.w	r0, r0, sl
 8019a90:	fa03 f000 	lsl.w	r0, r3, r0
 8019a94:	9b04      	ldr	r3, [sp, #16]
 8019a96:	4303      	orrs	r3, r0
 8019a98:	3401      	adds	r4, #1
 8019a9a:	9304      	str	r3, [sp, #16]
 8019a9c:	f814 1b01 	ldrb.w	r1, [r4], #1
 8019aa0:	482c      	ldr	r0, [pc, #176]	; (8019b54 <_vfiprintf_r+0x250>)
 8019aa2:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8019aa6:	2206      	movs	r2, #6
 8019aa8:	f7e6 fbaa 	bl	8000200 <memchr>
 8019aac:	2800      	cmp	r0, #0
 8019aae:	d03f      	beq.n	8019b30 <_vfiprintf_r+0x22c>
 8019ab0:	4b29      	ldr	r3, [pc, #164]	; (8019b58 <_vfiprintf_r+0x254>)
 8019ab2:	bb1b      	cbnz	r3, 8019afc <_vfiprintf_r+0x1f8>
 8019ab4:	9b03      	ldr	r3, [sp, #12]
 8019ab6:	3307      	adds	r3, #7
 8019ab8:	f023 0307 	bic.w	r3, r3, #7
 8019abc:	3308      	adds	r3, #8
 8019abe:	9303      	str	r3, [sp, #12]
 8019ac0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8019ac2:	443b      	add	r3, r7
 8019ac4:	9309      	str	r3, [sp, #36]	; 0x24
 8019ac6:	e767      	b.n	8019998 <_vfiprintf_r+0x94>
 8019ac8:	fb0c 3202 	mla	r2, ip, r2, r3
 8019acc:	460c      	mov	r4, r1
 8019ace:	2001      	movs	r0, #1
 8019ad0:	e7a5      	b.n	8019a1e <_vfiprintf_r+0x11a>
 8019ad2:	2300      	movs	r3, #0
 8019ad4:	3401      	adds	r4, #1
 8019ad6:	9305      	str	r3, [sp, #20]
 8019ad8:	4619      	mov	r1, r3
 8019ada:	f04f 0c0a 	mov.w	ip, #10
 8019ade:	4620      	mov	r0, r4
 8019ae0:	f810 2b01 	ldrb.w	r2, [r0], #1
 8019ae4:	3a30      	subs	r2, #48	; 0x30
 8019ae6:	2a09      	cmp	r2, #9
 8019ae8:	d903      	bls.n	8019af2 <_vfiprintf_r+0x1ee>
 8019aea:	2b00      	cmp	r3, #0
 8019aec:	d0c5      	beq.n	8019a7a <_vfiprintf_r+0x176>
 8019aee:	9105      	str	r1, [sp, #20]
 8019af0:	e7c3      	b.n	8019a7a <_vfiprintf_r+0x176>
 8019af2:	fb0c 2101 	mla	r1, ip, r1, r2
 8019af6:	4604      	mov	r4, r0
 8019af8:	2301      	movs	r3, #1
 8019afa:	e7f0      	b.n	8019ade <_vfiprintf_r+0x1da>
 8019afc:	ab03      	add	r3, sp, #12
 8019afe:	9300      	str	r3, [sp, #0]
 8019b00:	462a      	mov	r2, r5
 8019b02:	4b16      	ldr	r3, [pc, #88]	; (8019b5c <_vfiprintf_r+0x258>)
 8019b04:	a904      	add	r1, sp, #16
 8019b06:	4630      	mov	r0, r6
 8019b08:	f3af 8000 	nop.w
 8019b0c:	4607      	mov	r7, r0
 8019b0e:	1c78      	adds	r0, r7, #1
 8019b10:	d1d6      	bne.n	8019ac0 <_vfiprintf_r+0x1bc>
 8019b12:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8019b14:	07d9      	lsls	r1, r3, #31
 8019b16:	d405      	bmi.n	8019b24 <_vfiprintf_r+0x220>
 8019b18:	89ab      	ldrh	r3, [r5, #12]
 8019b1a:	059a      	lsls	r2, r3, #22
 8019b1c:	d402      	bmi.n	8019b24 <_vfiprintf_r+0x220>
 8019b1e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8019b20:	f7ff fdf5 	bl	801970e <__retarget_lock_release_recursive>
 8019b24:	89ab      	ldrh	r3, [r5, #12]
 8019b26:	065b      	lsls	r3, r3, #25
 8019b28:	f53f af12 	bmi.w	8019950 <_vfiprintf_r+0x4c>
 8019b2c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8019b2e:	e711      	b.n	8019954 <_vfiprintf_r+0x50>
 8019b30:	ab03      	add	r3, sp, #12
 8019b32:	9300      	str	r3, [sp, #0]
 8019b34:	462a      	mov	r2, r5
 8019b36:	4b09      	ldr	r3, [pc, #36]	; (8019b5c <_vfiprintf_r+0x258>)
 8019b38:	a904      	add	r1, sp, #16
 8019b3a:	4630      	mov	r0, r6
 8019b3c:	f000 f880 	bl	8019c40 <_printf_i>
 8019b40:	e7e4      	b.n	8019b0c <_vfiprintf_r+0x208>
 8019b42:	bf00      	nop
 8019b44:	0801d6a4 	.word	0x0801d6a4
 8019b48:	0801d6c4 	.word	0x0801d6c4
 8019b4c:	0801d684 	.word	0x0801d684
 8019b50:	0801d6e8 	.word	0x0801d6e8
 8019b54:	0801d6f2 	.word	0x0801d6f2
 8019b58:	00000000 	.word	0x00000000
 8019b5c:	080198df 	.word	0x080198df
 8019b60:	0801d6ee 	.word	0x0801d6ee

08019b64 <_printf_common>:
 8019b64:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8019b68:	4616      	mov	r6, r2
 8019b6a:	4699      	mov	r9, r3
 8019b6c:	688a      	ldr	r2, [r1, #8]
 8019b6e:	690b      	ldr	r3, [r1, #16]
 8019b70:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8019b74:	4293      	cmp	r3, r2
 8019b76:	bfb8      	it	lt
 8019b78:	4613      	movlt	r3, r2
 8019b7a:	6033      	str	r3, [r6, #0]
 8019b7c:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8019b80:	4607      	mov	r7, r0
 8019b82:	460c      	mov	r4, r1
 8019b84:	b10a      	cbz	r2, 8019b8a <_printf_common+0x26>
 8019b86:	3301      	adds	r3, #1
 8019b88:	6033      	str	r3, [r6, #0]
 8019b8a:	6823      	ldr	r3, [r4, #0]
 8019b8c:	0699      	lsls	r1, r3, #26
 8019b8e:	bf42      	ittt	mi
 8019b90:	6833      	ldrmi	r3, [r6, #0]
 8019b92:	3302      	addmi	r3, #2
 8019b94:	6033      	strmi	r3, [r6, #0]
 8019b96:	6825      	ldr	r5, [r4, #0]
 8019b98:	f015 0506 	ands.w	r5, r5, #6
 8019b9c:	d106      	bne.n	8019bac <_printf_common+0x48>
 8019b9e:	f104 0a19 	add.w	sl, r4, #25
 8019ba2:	68e3      	ldr	r3, [r4, #12]
 8019ba4:	6832      	ldr	r2, [r6, #0]
 8019ba6:	1a9b      	subs	r3, r3, r2
 8019ba8:	42ab      	cmp	r3, r5
 8019baa:	dc26      	bgt.n	8019bfa <_printf_common+0x96>
 8019bac:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8019bb0:	1e13      	subs	r3, r2, #0
 8019bb2:	6822      	ldr	r2, [r4, #0]
 8019bb4:	bf18      	it	ne
 8019bb6:	2301      	movne	r3, #1
 8019bb8:	0692      	lsls	r2, r2, #26
 8019bba:	d42b      	bmi.n	8019c14 <_printf_common+0xb0>
 8019bbc:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8019bc0:	4649      	mov	r1, r9
 8019bc2:	4638      	mov	r0, r7
 8019bc4:	47c0      	blx	r8
 8019bc6:	3001      	adds	r0, #1
 8019bc8:	d01e      	beq.n	8019c08 <_printf_common+0xa4>
 8019bca:	6823      	ldr	r3, [r4, #0]
 8019bcc:	68e5      	ldr	r5, [r4, #12]
 8019bce:	6832      	ldr	r2, [r6, #0]
 8019bd0:	f003 0306 	and.w	r3, r3, #6
 8019bd4:	2b04      	cmp	r3, #4
 8019bd6:	bf08      	it	eq
 8019bd8:	1aad      	subeq	r5, r5, r2
 8019bda:	68a3      	ldr	r3, [r4, #8]
 8019bdc:	6922      	ldr	r2, [r4, #16]
 8019bde:	bf0c      	ite	eq
 8019be0:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 8019be4:	2500      	movne	r5, #0
 8019be6:	4293      	cmp	r3, r2
 8019be8:	bfc4      	itt	gt
 8019bea:	1a9b      	subgt	r3, r3, r2
 8019bec:	18ed      	addgt	r5, r5, r3
 8019bee:	2600      	movs	r6, #0
 8019bf0:	341a      	adds	r4, #26
 8019bf2:	42b5      	cmp	r5, r6
 8019bf4:	d11a      	bne.n	8019c2c <_printf_common+0xc8>
 8019bf6:	2000      	movs	r0, #0
 8019bf8:	e008      	b.n	8019c0c <_printf_common+0xa8>
 8019bfa:	2301      	movs	r3, #1
 8019bfc:	4652      	mov	r2, sl
 8019bfe:	4649      	mov	r1, r9
 8019c00:	4638      	mov	r0, r7
 8019c02:	47c0      	blx	r8
 8019c04:	3001      	adds	r0, #1
 8019c06:	d103      	bne.n	8019c10 <_printf_common+0xac>
 8019c08:	f04f 30ff 	mov.w	r0, #4294967295
 8019c0c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019c10:	3501      	adds	r5, #1
 8019c12:	e7c6      	b.n	8019ba2 <_printf_common+0x3e>
 8019c14:	18e1      	adds	r1, r4, r3
 8019c16:	1c5a      	adds	r2, r3, #1
 8019c18:	2030      	movs	r0, #48	; 0x30
 8019c1a:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8019c1e:	4422      	add	r2, r4
 8019c20:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8019c24:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 8019c28:	3302      	adds	r3, #2
 8019c2a:	e7c7      	b.n	8019bbc <_printf_common+0x58>
 8019c2c:	2301      	movs	r3, #1
 8019c2e:	4622      	mov	r2, r4
 8019c30:	4649      	mov	r1, r9
 8019c32:	4638      	mov	r0, r7
 8019c34:	47c0      	blx	r8
 8019c36:	3001      	adds	r0, #1
 8019c38:	d0e6      	beq.n	8019c08 <_printf_common+0xa4>
 8019c3a:	3601      	adds	r6, #1
 8019c3c:	e7d9      	b.n	8019bf2 <_printf_common+0x8e>
	...

08019c40 <_printf_i>:
 8019c40:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8019c44:	460c      	mov	r4, r1
 8019c46:	4691      	mov	r9, r2
 8019c48:	7e27      	ldrb	r7, [r4, #24]
 8019c4a:	990c      	ldr	r1, [sp, #48]	; 0x30
 8019c4c:	2f78      	cmp	r7, #120	; 0x78
 8019c4e:	4680      	mov	r8, r0
 8019c50:	469a      	mov	sl, r3
 8019c52:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8019c56:	d807      	bhi.n	8019c68 <_printf_i+0x28>
 8019c58:	2f62      	cmp	r7, #98	; 0x62
 8019c5a:	d80a      	bhi.n	8019c72 <_printf_i+0x32>
 8019c5c:	2f00      	cmp	r7, #0
 8019c5e:	f000 80d8 	beq.w	8019e12 <_printf_i+0x1d2>
 8019c62:	2f58      	cmp	r7, #88	; 0x58
 8019c64:	f000 80a3 	beq.w	8019dae <_printf_i+0x16e>
 8019c68:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8019c6c:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 8019c70:	e03a      	b.n	8019ce8 <_printf_i+0xa8>
 8019c72:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 8019c76:	2b15      	cmp	r3, #21
 8019c78:	d8f6      	bhi.n	8019c68 <_printf_i+0x28>
 8019c7a:	a001      	add	r0, pc, #4	; (adr r0, 8019c80 <_printf_i+0x40>)
 8019c7c:	f850 f023 	ldr.w	pc, [r0, r3, lsl #2]
 8019c80:	08019cd9 	.word	0x08019cd9
 8019c84:	08019ced 	.word	0x08019ced
 8019c88:	08019c69 	.word	0x08019c69
 8019c8c:	08019c69 	.word	0x08019c69
 8019c90:	08019c69 	.word	0x08019c69
 8019c94:	08019c69 	.word	0x08019c69
 8019c98:	08019ced 	.word	0x08019ced
 8019c9c:	08019c69 	.word	0x08019c69
 8019ca0:	08019c69 	.word	0x08019c69
 8019ca4:	08019c69 	.word	0x08019c69
 8019ca8:	08019c69 	.word	0x08019c69
 8019cac:	08019df9 	.word	0x08019df9
 8019cb0:	08019d1d 	.word	0x08019d1d
 8019cb4:	08019ddb 	.word	0x08019ddb
 8019cb8:	08019c69 	.word	0x08019c69
 8019cbc:	08019c69 	.word	0x08019c69
 8019cc0:	08019e1b 	.word	0x08019e1b
 8019cc4:	08019c69 	.word	0x08019c69
 8019cc8:	08019d1d 	.word	0x08019d1d
 8019ccc:	08019c69 	.word	0x08019c69
 8019cd0:	08019c69 	.word	0x08019c69
 8019cd4:	08019de3 	.word	0x08019de3
 8019cd8:	680b      	ldr	r3, [r1, #0]
 8019cda:	1d1a      	adds	r2, r3, #4
 8019cdc:	681b      	ldr	r3, [r3, #0]
 8019cde:	600a      	str	r2, [r1, #0]
 8019ce0:	f104 0642 	add.w	r6, r4, #66	; 0x42
 8019ce4:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 8019ce8:	2301      	movs	r3, #1
 8019cea:	e0a3      	b.n	8019e34 <_printf_i+0x1f4>
 8019cec:	6825      	ldr	r5, [r4, #0]
 8019cee:	6808      	ldr	r0, [r1, #0]
 8019cf0:	062e      	lsls	r6, r5, #24
 8019cf2:	f100 0304 	add.w	r3, r0, #4
 8019cf6:	d50a      	bpl.n	8019d0e <_printf_i+0xce>
 8019cf8:	6805      	ldr	r5, [r0, #0]
 8019cfa:	600b      	str	r3, [r1, #0]
 8019cfc:	2d00      	cmp	r5, #0
 8019cfe:	da03      	bge.n	8019d08 <_printf_i+0xc8>
 8019d00:	232d      	movs	r3, #45	; 0x2d
 8019d02:	426d      	negs	r5, r5
 8019d04:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8019d08:	485e      	ldr	r0, [pc, #376]	; (8019e84 <_printf_i+0x244>)
 8019d0a:	230a      	movs	r3, #10
 8019d0c:	e019      	b.n	8019d42 <_printf_i+0x102>
 8019d0e:	f015 0f40 	tst.w	r5, #64	; 0x40
 8019d12:	6805      	ldr	r5, [r0, #0]
 8019d14:	600b      	str	r3, [r1, #0]
 8019d16:	bf18      	it	ne
 8019d18:	b22d      	sxthne	r5, r5
 8019d1a:	e7ef      	b.n	8019cfc <_printf_i+0xbc>
 8019d1c:	680b      	ldr	r3, [r1, #0]
 8019d1e:	6825      	ldr	r5, [r4, #0]
 8019d20:	1d18      	adds	r0, r3, #4
 8019d22:	6008      	str	r0, [r1, #0]
 8019d24:	0628      	lsls	r0, r5, #24
 8019d26:	d501      	bpl.n	8019d2c <_printf_i+0xec>
 8019d28:	681d      	ldr	r5, [r3, #0]
 8019d2a:	e002      	b.n	8019d32 <_printf_i+0xf2>
 8019d2c:	0669      	lsls	r1, r5, #25
 8019d2e:	d5fb      	bpl.n	8019d28 <_printf_i+0xe8>
 8019d30:	881d      	ldrh	r5, [r3, #0]
 8019d32:	4854      	ldr	r0, [pc, #336]	; (8019e84 <_printf_i+0x244>)
 8019d34:	2f6f      	cmp	r7, #111	; 0x6f
 8019d36:	bf0c      	ite	eq
 8019d38:	2308      	moveq	r3, #8
 8019d3a:	230a      	movne	r3, #10
 8019d3c:	2100      	movs	r1, #0
 8019d3e:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8019d42:	6866      	ldr	r6, [r4, #4]
 8019d44:	60a6      	str	r6, [r4, #8]
 8019d46:	2e00      	cmp	r6, #0
 8019d48:	bfa2      	ittt	ge
 8019d4a:	6821      	ldrge	r1, [r4, #0]
 8019d4c:	f021 0104 	bicge.w	r1, r1, #4
 8019d50:	6021      	strge	r1, [r4, #0]
 8019d52:	b90d      	cbnz	r5, 8019d58 <_printf_i+0x118>
 8019d54:	2e00      	cmp	r6, #0
 8019d56:	d04d      	beq.n	8019df4 <_printf_i+0x1b4>
 8019d58:	4616      	mov	r6, r2
 8019d5a:	fbb5 f1f3 	udiv	r1, r5, r3
 8019d5e:	fb03 5711 	mls	r7, r3, r1, r5
 8019d62:	5dc7      	ldrb	r7, [r0, r7]
 8019d64:	f806 7d01 	strb.w	r7, [r6, #-1]!
 8019d68:	462f      	mov	r7, r5
 8019d6a:	42bb      	cmp	r3, r7
 8019d6c:	460d      	mov	r5, r1
 8019d6e:	d9f4      	bls.n	8019d5a <_printf_i+0x11a>
 8019d70:	2b08      	cmp	r3, #8
 8019d72:	d10b      	bne.n	8019d8c <_printf_i+0x14c>
 8019d74:	6823      	ldr	r3, [r4, #0]
 8019d76:	07df      	lsls	r7, r3, #31
 8019d78:	d508      	bpl.n	8019d8c <_printf_i+0x14c>
 8019d7a:	6923      	ldr	r3, [r4, #16]
 8019d7c:	6861      	ldr	r1, [r4, #4]
 8019d7e:	4299      	cmp	r1, r3
 8019d80:	bfde      	ittt	le
 8019d82:	2330      	movle	r3, #48	; 0x30
 8019d84:	f806 3c01 	strble.w	r3, [r6, #-1]
 8019d88:	f106 36ff 	addle.w	r6, r6, #4294967295
 8019d8c:	1b92      	subs	r2, r2, r6
 8019d8e:	6122      	str	r2, [r4, #16]
 8019d90:	f8cd a000 	str.w	sl, [sp]
 8019d94:	464b      	mov	r3, r9
 8019d96:	aa03      	add	r2, sp, #12
 8019d98:	4621      	mov	r1, r4
 8019d9a:	4640      	mov	r0, r8
 8019d9c:	f7ff fee2 	bl	8019b64 <_printf_common>
 8019da0:	3001      	adds	r0, #1
 8019da2:	d14c      	bne.n	8019e3e <_printf_i+0x1fe>
 8019da4:	f04f 30ff 	mov.w	r0, #4294967295
 8019da8:	b004      	add	sp, #16
 8019daa:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8019dae:	4835      	ldr	r0, [pc, #212]	; (8019e84 <_printf_i+0x244>)
 8019db0:	f884 7045 	strb.w	r7, [r4, #69]	; 0x45
 8019db4:	6823      	ldr	r3, [r4, #0]
 8019db6:	680e      	ldr	r6, [r1, #0]
 8019db8:	061f      	lsls	r7, r3, #24
 8019dba:	f856 5b04 	ldr.w	r5, [r6], #4
 8019dbe:	600e      	str	r6, [r1, #0]
 8019dc0:	d514      	bpl.n	8019dec <_printf_i+0x1ac>
 8019dc2:	07d9      	lsls	r1, r3, #31
 8019dc4:	bf44      	itt	mi
 8019dc6:	f043 0320 	orrmi.w	r3, r3, #32
 8019dca:	6023      	strmi	r3, [r4, #0]
 8019dcc:	b91d      	cbnz	r5, 8019dd6 <_printf_i+0x196>
 8019dce:	6823      	ldr	r3, [r4, #0]
 8019dd0:	f023 0320 	bic.w	r3, r3, #32
 8019dd4:	6023      	str	r3, [r4, #0]
 8019dd6:	2310      	movs	r3, #16
 8019dd8:	e7b0      	b.n	8019d3c <_printf_i+0xfc>
 8019dda:	6823      	ldr	r3, [r4, #0]
 8019ddc:	f043 0320 	orr.w	r3, r3, #32
 8019de0:	6023      	str	r3, [r4, #0]
 8019de2:	2378      	movs	r3, #120	; 0x78
 8019de4:	4828      	ldr	r0, [pc, #160]	; (8019e88 <_printf_i+0x248>)
 8019de6:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8019dea:	e7e3      	b.n	8019db4 <_printf_i+0x174>
 8019dec:	065e      	lsls	r6, r3, #25
 8019dee:	bf48      	it	mi
 8019df0:	b2ad      	uxthmi	r5, r5
 8019df2:	e7e6      	b.n	8019dc2 <_printf_i+0x182>
 8019df4:	4616      	mov	r6, r2
 8019df6:	e7bb      	b.n	8019d70 <_printf_i+0x130>
 8019df8:	680b      	ldr	r3, [r1, #0]
 8019dfa:	6826      	ldr	r6, [r4, #0]
 8019dfc:	6960      	ldr	r0, [r4, #20]
 8019dfe:	1d1d      	adds	r5, r3, #4
 8019e00:	600d      	str	r5, [r1, #0]
 8019e02:	0635      	lsls	r5, r6, #24
 8019e04:	681b      	ldr	r3, [r3, #0]
 8019e06:	d501      	bpl.n	8019e0c <_printf_i+0x1cc>
 8019e08:	6018      	str	r0, [r3, #0]
 8019e0a:	e002      	b.n	8019e12 <_printf_i+0x1d2>
 8019e0c:	0671      	lsls	r1, r6, #25
 8019e0e:	d5fb      	bpl.n	8019e08 <_printf_i+0x1c8>
 8019e10:	8018      	strh	r0, [r3, #0]
 8019e12:	2300      	movs	r3, #0
 8019e14:	6123      	str	r3, [r4, #16]
 8019e16:	4616      	mov	r6, r2
 8019e18:	e7ba      	b.n	8019d90 <_printf_i+0x150>
 8019e1a:	680b      	ldr	r3, [r1, #0]
 8019e1c:	1d1a      	adds	r2, r3, #4
 8019e1e:	600a      	str	r2, [r1, #0]
 8019e20:	681e      	ldr	r6, [r3, #0]
 8019e22:	6862      	ldr	r2, [r4, #4]
 8019e24:	2100      	movs	r1, #0
 8019e26:	4630      	mov	r0, r6
 8019e28:	f7e6 f9ea 	bl	8000200 <memchr>
 8019e2c:	b108      	cbz	r0, 8019e32 <_printf_i+0x1f2>
 8019e2e:	1b80      	subs	r0, r0, r6
 8019e30:	6060      	str	r0, [r4, #4]
 8019e32:	6863      	ldr	r3, [r4, #4]
 8019e34:	6123      	str	r3, [r4, #16]
 8019e36:	2300      	movs	r3, #0
 8019e38:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8019e3c:	e7a8      	b.n	8019d90 <_printf_i+0x150>
 8019e3e:	6923      	ldr	r3, [r4, #16]
 8019e40:	4632      	mov	r2, r6
 8019e42:	4649      	mov	r1, r9
 8019e44:	4640      	mov	r0, r8
 8019e46:	47d0      	blx	sl
 8019e48:	3001      	adds	r0, #1
 8019e4a:	d0ab      	beq.n	8019da4 <_printf_i+0x164>
 8019e4c:	6823      	ldr	r3, [r4, #0]
 8019e4e:	079b      	lsls	r3, r3, #30
 8019e50:	d413      	bmi.n	8019e7a <_printf_i+0x23a>
 8019e52:	68e0      	ldr	r0, [r4, #12]
 8019e54:	9b03      	ldr	r3, [sp, #12]
 8019e56:	4298      	cmp	r0, r3
 8019e58:	bfb8      	it	lt
 8019e5a:	4618      	movlt	r0, r3
 8019e5c:	e7a4      	b.n	8019da8 <_printf_i+0x168>
 8019e5e:	2301      	movs	r3, #1
 8019e60:	4632      	mov	r2, r6
 8019e62:	4649      	mov	r1, r9
 8019e64:	4640      	mov	r0, r8
 8019e66:	47d0      	blx	sl
 8019e68:	3001      	adds	r0, #1
 8019e6a:	d09b      	beq.n	8019da4 <_printf_i+0x164>
 8019e6c:	3501      	adds	r5, #1
 8019e6e:	68e3      	ldr	r3, [r4, #12]
 8019e70:	9903      	ldr	r1, [sp, #12]
 8019e72:	1a5b      	subs	r3, r3, r1
 8019e74:	42ab      	cmp	r3, r5
 8019e76:	dcf2      	bgt.n	8019e5e <_printf_i+0x21e>
 8019e78:	e7eb      	b.n	8019e52 <_printf_i+0x212>
 8019e7a:	2500      	movs	r5, #0
 8019e7c:	f104 0619 	add.w	r6, r4, #25
 8019e80:	e7f5      	b.n	8019e6e <_printf_i+0x22e>
 8019e82:	bf00      	nop
 8019e84:	0801d6f9 	.word	0x0801d6f9
 8019e88:	0801d70a 	.word	0x0801d70a

08019e8c <cleanup_glue>:
 8019e8c:	b538      	push	{r3, r4, r5, lr}
 8019e8e:	460c      	mov	r4, r1
 8019e90:	6809      	ldr	r1, [r1, #0]
 8019e92:	4605      	mov	r5, r0
 8019e94:	b109      	cbz	r1, 8019e9a <cleanup_glue+0xe>
 8019e96:	f7ff fff9 	bl	8019e8c <cleanup_glue>
 8019e9a:	4621      	mov	r1, r4
 8019e9c:	4628      	mov	r0, r5
 8019e9e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019ea2:	f7ff bc5b 	b.w	801975c <_free_r>
	...

08019ea8 <_reclaim_reent>:
 8019ea8:	4b2c      	ldr	r3, [pc, #176]	; (8019f5c <_reclaim_reent+0xb4>)
 8019eaa:	681b      	ldr	r3, [r3, #0]
 8019eac:	4283      	cmp	r3, r0
 8019eae:	b570      	push	{r4, r5, r6, lr}
 8019eb0:	4604      	mov	r4, r0
 8019eb2:	d051      	beq.n	8019f58 <_reclaim_reent+0xb0>
 8019eb4:	6a43      	ldr	r3, [r0, #36]	; 0x24
 8019eb6:	b143      	cbz	r3, 8019eca <_reclaim_reent+0x22>
 8019eb8:	68db      	ldr	r3, [r3, #12]
 8019eba:	2b00      	cmp	r3, #0
 8019ebc:	d14a      	bne.n	8019f54 <_reclaim_reent+0xac>
 8019ebe:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8019ec0:	6819      	ldr	r1, [r3, #0]
 8019ec2:	b111      	cbz	r1, 8019eca <_reclaim_reent+0x22>
 8019ec4:	4620      	mov	r0, r4
 8019ec6:	f7ff fc49 	bl	801975c <_free_r>
 8019eca:	6961      	ldr	r1, [r4, #20]
 8019ecc:	b111      	cbz	r1, 8019ed4 <_reclaim_reent+0x2c>
 8019ece:	4620      	mov	r0, r4
 8019ed0:	f7ff fc44 	bl	801975c <_free_r>
 8019ed4:	6a61      	ldr	r1, [r4, #36]	; 0x24
 8019ed6:	b111      	cbz	r1, 8019ede <_reclaim_reent+0x36>
 8019ed8:	4620      	mov	r0, r4
 8019eda:	f7ff fc3f 	bl	801975c <_free_r>
 8019ede:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 8019ee0:	b111      	cbz	r1, 8019ee8 <_reclaim_reent+0x40>
 8019ee2:	4620      	mov	r0, r4
 8019ee4:	f7ff fc3a 	bl	801975c <_free_r>
 8019ee8:	6be1      	ldr	r1, [r4, #60]	; 0x3c
 8019eea:	b111      	cbz	r1, 8019ef2 <_reclaim_reent+0x4a>
 8019eec:	4620      	mov	r0, r4
 8019eee:	f7ff fc35 	bl	801975c <_free_r>
 8019ef2:	6c21      	ldr	r1, [r4, #64]	; 0x40
 8019ef4:	b111      	cbz	r1, 8019efc <_reclaim_reent+0x54>
 8019ef6:	4620      	mov	r0, r4
 8019ef8:	f7ff fc30 	bl	801975c <_free_r>
 8019efc:	6de1      	ldr	r1, [r4, #92]	; 0x5c
 8019efe:	b111      	cbz	r1, 8019f06 <_reclaim_reent+0x5e>
 8019f00:	4620      	mov	r0, r4
 8019f02:	f7ff fc2b 	bl	801975c <_free_r>
 8019f06:	6da1      	ldr	r1, [r4, #88]	; 0x58
 8019f08:	b111      	cbz	r1, 8019f10 <_reclaim_reent+0x68>
 8019f0a:	4620      	mov	r0, r4
 8019f0c:	f7ff fc26 	bl	801975c <_free_r>
 8019f10:	6b61      	ldr	r1, [r4, #52]	; 0x34
 8019f12:	b111      	cbz	r1, 8019f1a <_reclaim_reent+0x72>
 8019f14:	4620      	mov	r0, r4
 8019f16:	f7ff fc21 	bl	801975c <_free_r>
 8019f1a:	69a3      	ldr	r3, [r4, #24]
 8019f1c:	b1e3      	cbz	r3, 8019f58 <_reclaim_reent+0xb0>
 8019f1e:	6aa3      	ldr	r3, [r4, #40]	; 0x28
 8019f20:	4620      	mov	r0, r4
 8019f22:	4798      	blx	r3
 8019f24:	6ca1      	ldr	r1, [r4, #72]	; 0x48
 8019f26:	b1b9      	cbz	r1, 8019f58 <_reclaim_reent+0xb0>
 8019f28:	4620      	mov	r0, r4
 8019f2a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8019f2e:	f7ff bfad 	b.w	8019e8c <cleanup_glue>
 8019f32:	5949      	ldr	r1, [r1, r5]
 8019f34:	b941      	cbnz	r1, 8019f48 <_reclaim_reent+0xa0>
 8019f36:	3504      	adds	r5, #4
 8019f38:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8019f3a:	2d80      	cmp	r5, #128	; 0x80
 8019f3c:	68d9      	ldr	r1, [r3, #12]
 8019f3e:	d1f8      	bne.n	8019f32 <_reclaim_reent+0x8a>
 8019f40:	4620      	mov	r0, r4
 8019f42:	f7ff fc0b 	bl	801975c <_free_r>
 8019f46:	e7ba      	b.n	8019ebe <_reclaim_reent+0x16>
 8019f48:	680e      	ldr	r6, [r1, #0]
 8019f4a:	4620      	mov	r0, r4
 8019f4c:	f7ff fc06 	bl	801975c <_free_r>
 8019f50:	4631      	mov	r1, r6
 8019f52:	e7ef      	b.n	8019f34 <_reclaim_reent+0x8c>
 8019f54:	2500      	movs	r5, #0
 8019f56:	e7ef      	b.n	8019f38 <_reclaim_reent+0x90>
 8019f58:	bd70      	pop	{r4, r5, r6, pc}
 8019f5a:	bf00      	nop
 8019f5c:	200000d8 	.word	0x200000d8

08019f60 <_sbrk_r>:
 8019f60:	b538      	push	{r3, r4, r5, lr}
 8019f62:	4d06      	ldr	r5, [pc, #24]	; (8019f7c <_sbrk_r+0x1c>)
 8019f64:	2300      	movs	r3, #0
 8019f66:	4604      	mov	r4, r0
 8019f68:	4608      	mov	r0, r1
 8019f6a:	602b      	str	r3, [r5, #0]
 8019f6c:	f7e7 ffec 	bl	8001f48 <_sbrk>
 8019f70:	1c43      	adds	r3, r0, #1
 8019f72:	d102      	bne.n	8019f7a <_sbrk_r+0x1a>
 8019f74:	682b      	ldr	r3, [r5, #0]
 8019f76:	b103      	cbz	r3, 8019f7a <_sbrk_r+0x1a>
 8019f78:	6023      	str	r3, [r4, #0]
 8019f7a:	bd38      	pop	{r3, r4, r5, pc}
 8019f7c:	2000a654 	.word	0x2000a654

08019f80 <_raise_r>:
 8019f80:	291f      	cmp	r1, #31
 8019f82:	b538      	push	{r3, r4, r5, lr}
 8019f84:	4604      	mov	r4, r0
 8019f86:	460d      	mov	r5, r1
 8019f88:	d904      	bls.n	8019f94 <_raise_r+0x14>
 8019f8a:	2316      	movs	r3, #22
 8019f8c:	6003      	str	r3, [r0, #0]
 8019f8e:	f04f 30ff 	mov.w	r0, #4294967295
 8019f92:	bd38      	pop	{r3, r4, r5, pc}
 8019f94:	6c42      	ldr	r2, [r0, #68]	; 0x44
 8019f96:	b112      	cbz	r2, 8019f9e <_raise_r+0x1e>
 8019f98:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 8019f9c:	b94b      	cbnz	r3, 8019fb2 <_raise_r+0x32>
 8019f9e:	4620      	mov	r0, r4
 8019fa0:	f000 f830 	bl	801a004 <_getpid_r>
 8019fa4:	462a      	mov	r2, r5
 8019fa6:	4601      	mov	r1, r0
 8019fa8:	4620      	mov	r0, r4
 8019faa:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8019fae:	f000 b817 	b.w	8019fe0 <_kill_r>
 8019fb2:	2b01      	cmp	r3, #1
 8019fb4:	d00a      	beq.n	8019fcc <_raise_r+0x4c>
 8019fb6:	1c59      	adds	r1, r3, #1
 8019fb8:	d103      	bne.n	8019fc2 <_raise_r+0x42>
 8019fba:	2316      	movs	r3, #22
 8019fbc:	6003      	str	r3, [r0, #0]
 8019fbe:	2001      	movs	r0, #1
 8019fc0:	e7e7      	b.n	8019f92 <_raise_r+0x12>
 8019fc2:	2400      	movs	r4, #0
 8019fc4:	f842 4025 	str.w	r4, [r2, r5, lsl #2]
 8019fc8:	4628      	mov	r0, r5
 8019fca:	4798      	blx	r3
 8019fcc:	2000      	movs	r0, #0
 8019fce:	e7e0      	b.n	8019f92 <_raise_r+0x12>

08019fd0 <raise>:
 8019fd0:	4b02      	ldr	r3, [pc, #8]	; (8019fdc <raise+0xc>)
 8019fd2:	4601      	mov	r1, r0
 8019fd4:	6818      	ldr	r0, [r3, #0]
 8019fd6:	f7ff bfd3 	b.w	8019f80 <_raise_r>
 8019fda:	bf00      	nop
 8019fdc:	200000d8 	.word	0x200000d8

08019fe0 <_kill_r>:
 8019fe0:	b538      	push	{r3, r4, r5, lr}
 8019fe2:	4d07      	ldr	r5, [pc, #28]	; (801a000 <_kill_r+0x20>)
 8019fe4:	2300      	movs	r3, #0
 8019fe6:	4604      	mov	r4, r0
 8019fe8:	4608      	mov	r0, r1
 8019fea:	4611      	mov	r1, r2
 8019fec:	602b      	str	r3, [r5, #0]
 8019fee:	f7e7 ff77 	bl	8001ee0 <_kill>
 8019ff2:	1c43      	adds	r3, r0, #1
 8019ff4:	d102      	bne.n	8019ffc <_kill_r+0x1c>
 8019ff6:	682b      	ldr	r3, [r5, #0]
 8019ff8:	b103      	cbz	r3, 8019ffc <_kill_r+0x1c>
 8019ffa:	6023      	str	r3, [r4, #0]
 8019ffc:	bd38      	pop	{r3, r4, r5, pc}
 8019ffe:	bf00      	nop
 801a000:	2000a654 	.word	0x2000a654

0801a004 <_getpid_r>:
 801a004:	f7e7 bf6a 	b.w	8001edc <_getpid>

0801a008 <__sread>:
 801a008:	b510      	push	{r4, lr}
 801a00a:	460c      	mov	r4, r1
 801a00c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a010:	f000 fac6 	bl	801a5a0 <_read_r>
 801a014:	2800      	cmp	r0, #0
 801a016:	bfab      	itete	ge
 801a018:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 801a01a:	89a3      	ldrhlt	r3, [r4, #12]
 801a01c:	181b      	addge	r3, r3, r0
 801a01e:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 801a022:	bfac      	ite	ge
 801a024:	6563      	strge	r3, [r4, #84]	; 0x54
 801a026:	81a3      	strhlt	r3, [r4, #12]
 801a028:	bd10      	pop	{r4, pc}

0801a02a <__swrite>:
 801a02a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a02e:	461f      	mov	r7, r3
 801a030:	898b      	ldrh	r3, [r1, #12]
 801a032:	05db      	lsls	r3, r3, #23
 801a034:	4605      	mov	r5, r0
 801a036:	460c      	mov	r4, r1
 801a038:	4616      	mov	r6, r2
 801a03a:	d505      	bpl.n	801a048 <__swrite+0x1e>
 801a03c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a040:	2302      	movs	r3, #2
 801a042:	2200      	movs	r2, #0
 801a044:	f000 fa2a 	bl	801a49c <_lseek_r>
 801a048:	89a3      	ldrh	r3, [r4, #12]
 801a04a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801a04e:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801a052:	81a3      	strh	r3, [r4, #12]
 801a054:	4632      	mov	r2, r6
 801a056:	463b      	mov	r3, r7
 801a058:	4628      	mov	r0, r5
 801a05a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801a05e:	f000 b869 	b.w	801a134 <_write_r>

0801a062 <__sseek>:
 801a062:	b510      	push	{r4, lr}
 801a064:	460c      	mov	r4, r1
 801a066:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a06a:	f000 fa17 	bl	801a49c <_lseek_r>
 801a06e:	1c43      	adds	r3, r0, #1
 801a070:	89a3      	ldrh	r3, [r4, #12]
 801a072:	bf15      	itete	ne
 801a074:	6560      	strne	r0, [r4, #84]	; 0x54
 801a076:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 801a07a:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 801a07e:	81a3      	strheq	r3, [r4, #12]
 801a080:	bf18      	it	ne
 801a082:	81a3      	strhne	r3, [r4, #12]
 801a084:	bd10      	pop	{r4, pc}

0801a086 <__sclose>:
 801a086:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a08a:	f000 b935 	b.w	801a2f8 <_close_r>
	...

0801a090 <__swbuf_r>:
 801a090:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a092:	460e      	mov	r6, r1
 801a094:	4614      	mov	r4, r2
 801a096:	4605      	mov	r5, r0
 801a098:	b118      	cbz	r0, 801a0a2 <__swbuf_r+0x12>
 801a09a:	6983      	ldr	r3, [r0, #24]
 801a09c:	b90b      	cbnz	r3, 801a0a2 <__swbuf_r+0x12>
 801a09e:	f7ff fa5f 	bl	8019560 <__sinit>
 801a0a2:	4b21      	ldr	r3, [pc, #132]	; (801a128 <__swbuf_r+0x98>)
 801a0a4:	429c      	cmp	r4, r3
 801a0a6:	d12b      	bne.n	801a100 <__swbuf_r+0x70>
 801a0a8:	686c      	ldr	r4, [r5, #4]
 801a0aa:	69a3      	ldr	r3, [r4, #24]
 801a0ac:	60a3      	str	r3, [r4, #8]
 801a0ae:	89a3      	ldrh	r3, [r4, #12]
 801a0b0:	071a      	lsls	r2, r3, #28
 801a0b2:	d52f      	bpl.n	801a114 <__swbuf_r+0x84>
 801a0b4:	6923      	ldr	r3, [r4, #16]
 801a0b6:	b36b      	cbz	r3, 801a114 <__swbuf_r+0x84>
 801a0b8:	6923      	ldr	r3, [r4, #16]
 801a0ba:	6820      	ldr	r0, [r4, #0]
 801a0bc:	1ac0      	subs	r0, r0, r3
 801a0be:	6963      	ldr	r3, [r4, #20]
 801a0c0:	b2f6      	uxtb	r6, r6
 801a0c2:	4283      	cmp	r3, r0
 801a0c4:	4637      	mov	r7, r6
 801a0c6:	dc04      	bgt.n	801a0d2 <__swbuf_r+0x42>
 801a0c8:	4621      	mov	r1, r4
 801a0ca:	4628      	mov	r0, r5
 801a0cc:	f000 f9aa 	bl	801a424 <_fflush_r>
 801a0d0:	bb30      	cbnz	r0, 801a120 <__swbuf_r+0x90>
 801a0d2:	68a3      	ldr	r3, [r4, #8]
 801a0d4:	3b01      	subs	r3, #1
 801a0d6:	60a3      	str	r3, [r4, #8]
 801a0d8:	6823      	ldr	r3, [r4, #0]
 801a0da:	1c5a      	adds	r2, r3, #1
 801a0dc:	6022      	str	r2, [r4, #0]
 801a0de:	701e      	strb	r6, [r3, #0]
 801a0e0:	6963      	ldr	r3, [r4, #20]
 801a0e2:	3001      	adds	r0, #1
 801a0e4:	4283      	cmp	r3, r0
 801a0e6:	d004      	beq.n	801a0f2 <__swbuf_r+0x62>
 801a0e8:	89a3      	ldrh	r3, [r4, #12]
 801a0ea:	07db      	lsls	r3, r3, #31
 801a0ec:	d506      	bpl.n	801a0fc <__swbuf_r+0x6c>
 801a0ee:	2e0a      	cmp	r6, #10
 801a0f0:	d104      	bne.n	801a0fc <__swbuf_r+0x6c>
 801a0f2:	4621      	mov	r1, r4
 801a0f4:	4628      	mov	r0, r5
 801a0f6:	f000 f995 	bl	801a424 <_fflush_r>
 801a0fa:	b988      	cbnz	r0, 801a120 <__swbuf_r+0x90>
 801a0fc:	4638      	mov	r0, r7
 801a0fe:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801a100:	4b0a      	ldr	r3, [pc, #40]	; (801a12c <__swbuf_r+0x9c>)
 801a102:	429c      	cmp	r4, r3
 801a104:	d101      	bne.n	801a10a <__swbuf_r+0x7a>
 801a106:	68ac      	ldr	r4, [r5, #8]
 801a108:	e7cf      	b.n	801a0aa <__swbuf_r+0x1a>
 801a10a:	4b09      	ldr	r3, [pc, #36]	; (801a130 <__swbuf_r+0xa0>)
 801a10c:	429c      	cmp	r4, r3
 801a10e:	bf08      	it	eq
 801a110:	68ec      	ldreq	r4, [r5, #12]
 801a112:	e7ca      	b.n	801a0aa <__swbuf_r+0x1a>
 801a114:	4621      	mov	r1, r4
 801a116:	4628      	mov	r0, r5
 801a118:	f000 f81e 	bl	801a158 <__swsetup_r>
 801a11c:	2800      	cmp	r0, #0
 801a11e:	d0cb      	beq.n	801a0b8 <__swbuf_r+0x28>
 801a120:	f04f 37ff 	mov.w	r7, #4294967295
 801a124:	e7ea      	b.n	801a0fc <__swbuf_r+0x6c>
 801a126:	bf00      	nop
 801a128:	0801d6a4 	.word	0x0801d6a4
 801a12c:	0801d6c4 	.word	0x0801d6c4
 801a130:	0801d684 	.word	0x0801d684

0801a134 <_write_r>:
 801a134:	b538      	push	{r3, r4, r5, lr}
 801a136:	4d07      	ldr	r5, [pc, #28]	; (801a154 <_write_r+0x20>)
 801a138:	4604      	mov	r4, r0
 801a13a:	4608      	mov	r0, r1
 801a13c:	4611      	mov	r1, r2
 801a13e:	2200      	movs	r2, #0
 801a140:	602a      	str	r2, [r5, #0]
 801a142:	461a      	mov	r2, r3
 801a144:	f7e7 fee7 	bl	8001f16 <_write>
 801a148:	1c43      	adds	r3, r0, #1
 801a14a:	d102      	bne.n	801a152 <_write_r+0x1e>
 801a14c:	682b      	ldr	r3, [r5, #0]
 801a14e:	b103      	cbz	r3, 801a152 <_write_r+0x1e>
 801a150:	6023      	str	r3, [r4, #0]
 801a152:	bd38      	pop	{r3, r4, r5, pc}
 801a154:	2000a654 	.word	0x2000a654

0801a158 <__swsetup_r>:
 801a158:	4b32      	ldr	r3, [pc, #200]	; (801a224 <__swsetup_r+0xcc>)
 801a15a:	b570      	push	{r4, r5, r6, lr}
 801a15c:	681d      	ldr	r5, [r3, #0]
 801a15e:	4606      	mov	r6, r0
 801a160:	460c      	mov	r4, r1
 801a162:	b125      	cbz	r5, 801a16e <__swsetup_r+0x16>
 801a164:	69ab      	ldr	r3, [r5, #24]
 801a166:	b913      	cbnz	r3, 801a16e <__swsetup_r+0x16>
 801a168:	4628      	mov	r0, r5
 801a16a:	f7ff f9f9 	bl	8019560 <__sinit>
 801a16e:	4b2e      	ldr	r3, [pc, #184]	; (801a228 <__swsetup_r+0xd0>)
 801a170:	429c      	cmp	r4, r3
 801a172:	d10f      	bne.n	801a194 <__swsetup_r+0x3c>
 801a174:	686c      	ldr	r4, [r5, #4]
 801a176:	89a3      	ldrh	r3, [r4, #12]
 801a178:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a17c:	0719      	lsls	r1, r3, #28
 801a17e:	d42c      	bmi.n	801a1da <__swsetup_r+0x82>
 801a180:	06dd      	lsls	r5, r3, #27
 801a182:	d411      	bmi.n	801a1a8 <__swsetup_r+0x50>
 801a184:	2309      	movs	r3, #9
 801a186:	6033      	str	r3, [r6, #0]
 801a188:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 801a18c:	81a3      	strh	r3, [r4, #12]
 801a18e:	f04f 30ff 	mov.w	r0, #4294967295
 801a192:	e03e      	b.n	801a212 <__swsetup_r+0xba>
 801a194:	4b25      	ldr	r3, [pc, #148]	; (801a22c <__swsetup_r+0xd4>)
 801a196:	429c      	cmp	r4, r3
 801a198:	d101      	bne.n	801a19e <__swsetup_r+0x46>
 801a19a:	68ac      	ldr	r4, [r5, #8]
 801a19c:	e7eb      	b.n	801a176 <__swsetup_r+0x1e>
 801a19e:	4b24      	ldr	r3, [pc, #144]	; (801a230 <__swsetup_r+0xd8>)
 801a1a0:	429c      	cmp	r4, r3
 801a1a2:	bf08      	it	eq
 801a1a4:	68ec      	ldreq	r4, [r5, #12]
 801a1a6:	e7e6      	b.n	801a176 <__swsetup_r+0x1e>
 801a1a8:	0758      	lsls	r0, r3, #29
 801a1aa:	d512      	bpl.n	801a1d2 <__swsetup_r+0x7a>
 801a1ac:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801a1ae:	b141      	cbz	r1, 801a1c2 <__swsetup_r+0x6a>
 801a1b0:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801a1b4:	4299      	cmp	r1, r3
 801a1b6:	d002      	beq.n	801a1be <__swsetup_r+0x66>
 801a1b8:	4630      	mov	r0, r6
 801a1ba:	f7ff facf 	bl	801975c <_free_r>
 801a1be:	2300      	movs	r3, #0
 801a1c0:	6363      	str	r3, [r4, #52]	; 0x34
 801a1c2:	89a3      	ldrh	r3, [r4, #12]
 801a1c4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 801a1c8:	81a3      	strh	r3, [r4, #12]
 801a1ca:	2300      	movs	r3, #0
 801a1cc:	6063      	str	r3, [r4, #4]
 801a1ce:	6923      	ldr	r3, [r4, #16]
 801a1d0:	6023      	str	r3, [r4, #0]
 801a1d2:	89a3      	ldrh	r3, [r4, #12]
 801a1d4:	f043 0308 	orr.w	r3, r3, #8
 801a1d8:	81a3      	strh	r3, [r4, #12]
 801a1da:	6923      	ldr	r3, [r4, #16]
 801a1dc:	b94b      	cbnz	r3, 801a1f2 <__swsetup_r+0x9a>
 801a1de:	89a3      	ldrh	r3, [r4, #12]
 801a1e0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 801a1e4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 801a1e8:	d003      	beq.n	801a1f2 <__swsetup_r+0x9a>
 801a1ea:	4621      	mov	r1, r4
 801a1ec:	4630      	mov	r0, r6
 801a1ee:	f000 f98b 	bl	801a508 <__smakebuf_r>
 801a1f2:	89a0      	ldrh	r0, [r4, #12]
 801a1f4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 801a1f8:	f010 0301 	ands.w	r3, r0, #1
 801a1fc:	d00a      	beq.n	801a214 <__swsetup_r+0xbc>
 801a1fe:	2300      	movs	r3, #0
 801a200:	60a3      	str	r3, [r4, #8]
 801a202:	6963      	ldr	r3, [r4, #20]
 801a204:	425b      	negs	r3, r3
 801a206:	61a3      	str	r3, [r4, #24]
 801a208:	6923      	ldr	r3, [r4, #16]
 801a20a:	b943      	cbnz	r3, 801a21e <__swsetup_r+0xc6>
 801a20c:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 801a210:	d1ba      	bne.n	801a188 <__swsetup_r+0x30>
 801a212:	bd70      	pop	{r4, r5, r6, pc}
 801a214:	0781      	lsls	r1, r0, #30
 801a216:	bf58      	it	pl
 801a218:	6963      	ldrpl	r3, [r4, #20]
 801a21a:	60a3      	str	r3, [r4, #8]
 801a21c:	e7f4      	b.n	801a208 <__swsetup_r+0xb0>
 801a21e:	2000      	movs	r0, #0
 801a220:	e7f7      	b.n	801a212 <__swsetup_r+0xba>
 801a222:	bf00      	nop
 801a224:	200000d8 	.word	0x200000d8
 801a228:	0801d6a4 	.word	0x0801d6a4
 801a22c:	0801d6c4 	.word	0x0801d6c4
 801a230:	0801d684 	.word	0x0801d684

0801a234 <__register_exitproc>:
 801a234:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 801a238:	f8df 80b8 	ldr.w	r8, [pc, #184]	; 801a2f4 <__register_exitproc+0xc0>
 801a23c:	4606      	mov	r6, r0
 801a23e:	f8d8 0000 	ldr.w	r0, [r8]
 801a242:	461f      	mov	r7, r3
 801a244:	460d      	mov	r5, r1
 801a246:	4691      	mov	r9, r2
 801a248:	f7ff fa5f 	bl	801970a <__retarget_lock_acquire_recursive>
 801a24c:	4b25      	ldr	r3, [pc, #148]	; (801a2e4 <__register_exitproc+0xb0>)
 801a24e:	681c      	ldr	r4, [r3, #0]
 801a250:	b934      	cbnz	r4, 801a260 <__register_exitproc+0x2c>
 801a252:	4c25      	ldr	r4, [pc, #148]	; (801a2e8 <__register_exitproc+0xb4>)
 801a254:	601c      	str	r4, [r3, #0]
 801a256:	4b25      	ldr	r3, [pc, #148]	; (801a2ec <__register_exitproc+0xb8>)
 801a258:	b113      	cbz	r3, 801a260 <__register_exitproc+0x2c>
 801a25a:	681b      	ldr	r3, [r3, #0]
 801a25c:	f8c4 3088 	str.w	r3, [r4, #136]	; 0x88
 801a260:	6863      	ldr	r3, [r4, #4]
 801a262:	2b1f      	cmp	r3, #31
 801a264:	dd07      	ble.n	801a276 <__register_exitproc+0x42>
 801a266:	f8d8 0000 	ldr.w	r0, [r8]
 801a26a:	f7ff fa50 	bl	801970e <__retarget_lock_release_recursive>
 801a26e:	f04f 30ff 	mov.w	r0, #4294967295
 801a272:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 801a276:	b34e      	cbz	r6, 801a2cc <__register_exitproc+0x98>
 801a278:	f8d4 0088 	ldr.w	r0, [r4, #136]	; 0x88
 801a27c:	b988      	cbnz	r0, 801a2a2 <__register_exitproc+0x6e>
 801a27e:	4b1c      	ldr	r3, [pc, #112]	; (801a2f0 <__register_exitproc+0xbc>)
 801a280:	b923      	cbnz	r3, 801a28c <__register_exitproc+0x58>
 801a282:	f8d8 0000 	ldr.w	r0, [r8]
 801a286:	f7ff fa41 	bl	801970c <__retarget_lock_release>
 801a28a:	e7f0      	b.n	801a26e <__register_exitproc+0x3a>
 801a28c:	f44f 7084 	mov.w	r0, #264	; 0x108
 801a290:	f7ff fa3e 	bl	8019710 <malloc>
 801a294:	2800      	cmp	r0, #0
 801a296:	d0f4      	beq.n	801a282 <__register_exitproc+0x4e>
 801a298:	2300      	movs	r3, #0
 801a29a:	e9c0 3340 	strd	r3, r3, [r0, #256]	; 0x100
 801a29e:	f8c4 0088 	str.w	r0, [r4, #136]	; 0x88
 801a2a2:	6863      	ldr	r3, [r4, #4]
 801a2a4:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 801a2a8:	2201      	movs	r2, #1
 801a2aa:	409a      	lsls	r2, r3
 801a2ac:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 801a2b0:	f8d0 3100 	ldr.w	r3, [r0, #256]	; 0x100
 801a2b4:	4313      	orrs	r3, r2
 801a2b6:	2e02      	cmp	r6, #2
 801a2b8:	f8c0 3100 	str.w	r3, [r0, #256]	; 0x100
 801a2bc:	f8c1 7080 	str.w	r7, [r1, #128]	; 0x80
 801a2c0:	bf02      	ittt	eq
 801a2c2:	f8d0 3104 	ldreq.w	r3, [r0, #260]	; 0x104
 801a2c6:	431a      	orreq	r2, r3
 801a2c8:	f8c0 2104 	streq.w	r2, [r0, #260]	; 0x104
 801a2cc:	6863      	ldr	r3, [r4, #4]
 801a2ce:	f8d8 0000 	ldr.w	r0, [r8]
 801a2d2:	1c5a      	adds	r2, r3, #1
 801a2d4:	3302      	adds	r3, #2
 801a2d6:	6062      	str	r2, [r4, #4]
 801a2d8:	f844 5023 	str.w	r5, [r4, r3, lsl #2]
 801a2dc:	f7ff fa17 	bl	801970e <__retarget_lock_release_recursive>
 801a2e0:	2000      	movs	r0, #0
 801a2e2:	e7c6      	b.n	801a272 <__register_exitproc+0x3e>
 801a2e4:	2000a384 	.word	0x2000a384
 801a2e8:	2000a2f8 	.word	0x2000a2f8
 801a2ec:	0801d71c 	.word	0x0801d71c
 801a2f0:	08019711 	.word	0x08019711
 801a2f4:	2000013c 	.word	0x2000013c

0801a2f8 <_close_r>:
 801a2f8:	b538      	push	{r3, r4, r5, lr}
 801a2fa:	4d06      	ldr	r5, [pc, #24]	; (801a314 <_close_r+0x1c>)
 801a2fc:	2300      	movs	r3, #0
 801a2fe:	4604      	mov	r4, r0
 801a300:	4608      	mov	r0, r1
 801a302:	602b      	str	r3, [r5, #0]
 801a304:	f7e7 fe14 	bl	8001f30 <_close>
 801a308:	1c43      	adds	r3, r0, #1
 801a30a:	d102      	bne.n	801a312 <_close_r+0x1a>
 801a30c:	682b      	ldr	r3, [r5, #0]
 801a30e:	b103      	cbz	r3, 801a312 <_close_r+0x1a>
 801a310:	6023      	str	r3, [r4, #0]
 801a312:	bd38      	pop	{r3, r4, r5, pc}
 801a314:	2000a654 	.word	0x2000a654

0801a318 <__sflush_r>:
 801a318:	898a      	ldrh	r2, [r1, #12]
 801a31a:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801a31e:	4605      	mov	r5, r0
 801a320:	0710      	lsls	r0, r2, #28
 801a322:	460c      	mov	r4, r1
 801a324:	d458      	bmi.n	801a3d8 <__sflush_r+0xc0>
 801a326:	684b      	ldr	r3, [r1, #4]
 801a328:	2b00      	cmp	r3, #0
 801a32a:	dc05      	bgt.n	801a338 <__sflush_r+0x20>
 801a32c:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 801a32e:	2b00      	cmp	r3, #0
 801a330:	dc02      	bgt.n	801a338 <__sflush_r+0x20>
 801a332:	2000      	movs	r0, #0
 801a334:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801a338:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801a33a:	2e00      	cmp	r6, #0
 801a33c:	d0f9      	beq.n	801a332 <__sflush_r+0x1a>
 801a33e:	2300      	movs	r3, #0
 801a340:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 801a344:	682f      	ldr	r7, [r5, #0]
 801a346:	602b      	str	r3, [r5, #0]
 801a348:	d032      	beq.n	801a3b0 <__sflush_r+0x98>
 801a34a:	6d60      	ldr	r0, [r4, #84]	; 0x54
 801a34c:	89a3      	ldrh	r3, [r4, #12]
 801a34e:	075a      	lsls	r2, r3, #29
 801a350:	d505      	bpl.n	801a35e <__sflush_r+0x46>
 801a352:	6863      	ldr	r3, [r4, #4]
 801a354:	1ac0      	subs	r0, r0, r3
 801a356:	6b63      	ldr	r3, [r4, #52]	; 0x34
 801a358:	b10b      	cbz	r3, 801a35e <__sflush_r+0x46>
 801a35a:	6c23      	ldr	r3, [r4, #64]	; 0x40
 801a35c:	1ac0      	subs	r0, r0, r3
 801a35e:	2300      	movs	r3, #0
 801a360:	4602      	mov	r2, r0
 801a362:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 801a364:	6a21      	ldr	r1, [r4, #32]
 801a366:	4628      	mov	r0, r5
 801a368:	47b0      	blx	r6
 801a36a:	1c43      	adds	r3, r0, #1
 801a36c:	89a3      	ldrh	r3, [r4, #12]
 801a36e:	d106      	bne.n	801a37e <__sflush_r+0x66>
 801a370:	6829      	ldr	r1, [r5, #0]
 801a372:	291d      	cmp	r1, #29
 801a374:	d82c      	bhi.n	801a3d0 <__sflush_r+0xb8>
 801a376:	4a2a      	ldr	r2, [pc, #168]	; (801a420 <__sflush_r+0x108>)
 801a378:	40ca      	lsrs	r2, r1
 801a37a:	07d6      	lsls	r6, r2, #31
 801a37c:	d528      	bpl.n	801a3d0 <__sflush_r+0xb8>
 801a37e:	2200      	movs	r2, #0
 801a380:	6062      	str	r2, [r4, #4]
 801a382:	04d9      	lsls	r1, r3, #19
 801a384:	6922      	ldr	r2, [r4, #16]
 801a386:	6022      	str	r2, [r4, #0]
 801a388:	d504      	bpl.n	801a394 <__sflush_r+0x7c>
 801a38a:	1c42      	adds	r2, r0, #1
 801a38c:	d101      	bne.n	801a392 <__sflush_r+0x7a>
 801a38e:	682b      	ldr	r3, [r5, #0]
 801a390:	b903      	cbnz	r3, 801a394 <__sflush_r+0x7c>
 801a392:	6560      	str	r0, [r4, #84]	; 0x54
 801a394:	6b61      	ldr	r1, [r4, #52]	; 0x34
 801a396:	602f      	str	r7, [r5, #0]
 801a398:	2900      	cmp	r1, #0
 801a39a:	d0ca      	beq.n	801a332 <__sflush_r+0x1a>
 801a39c:	f104 0344 	add.w	r3, r4, #68	; 0x44
 801a3a0:	4299      	cmp	r1, r3
 801a3a2:	d002      	beq.n	801a3aa <__sflush_r+0x92>
 801a3a4:	4628      	mov	r0, r5
 801a3a6:	f7ff f9d9 	bl	801975c <_free_r>
 801a3aa:	2000      	movs	r0, #0
 801a3ac:	6360      	str	r0, [r4, #52]	; 0x34
 801a3ae:	e7c1      	b.n	801a334 <__sflush_r+0x1c>
 801a3b0:	6a21      	ldr	r1, [r4, #32]
 801a3b2:	2301      	movs	r3, #1
 801a3b4:	4628      	mov	r0, r5
 801a3b6:	47b0      	blx	r6
 801a3b8:	1c41      	adds	r1, r0, #1
 801a3ba:	d1c7      	bne.n	801a34c <__sflush_r+0x34>
 801a3bc:	682b      	ldr	r3, [r5, #0]
 801a3be:	2b00      	cmp	r3, #0
 801a3c0:	d0c4      	beq.n	801a34c <__sflush_r+0x34>
 801a3c2:	2b1d      	cmp	r3, #29
 801a3c4:	d001      	beq.n	801a3ca <__sflush_r+0xb2>
 801a3c6:	2b16      	cmp	r3, #22
 801a3c8:	d101      	bne.n	801a3ce <__sflush_r+0xb6>
 801a3ca:	602f      	str	r7, [r5, #0]
 801a3cc:	e7b1      	b.n	801a332 <__sflush_r+0x1a>
 801a3ce:	89a3      	ldrh	r3, [r4, #12]
 801a3d0:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801a3d4:	81a3      	strh	r3, [r4, #12]
 801a3d6:	e7ad      	b.n	801a334 <__sflush_r+0x1c>
 801a3d8:	690f      	ldr	r7, [r1, #16]
 801a3da:	2f00      	cmp	r7, #0
 801a3dc:	d0a9      	beq.n	801a332 <__sflush_r+0x1a>
 801a3de:	0793      	lsls	r3, r2, #30
 801a3e0:	680e      	ldr	r6, [r1, #0]
 801a3e2:	bf08      	it	eq
 801a3e4:	694b      	ldreq	r3, [r1, #20]
 801a3e6:	600f      	str	r7, [r1, #0]
 801a3e8:	bf18      	it	ne
 801a3ea:	2300      	movne	r3, #0
 801a3ec:	eba6 0807 	sub.w	r8, r6, r7
 801a3f0:	608b      	str	r3, [r1, #8]
 801a3f2:	f1b8 0f00 	cmp.w	r8, #0
 801a3f6:	dd9c      	ble.n	801a332 <__sflush_r+0x1a>
 801a3f8:	6a21      	ldr	r1, [r4, #32]
 801a3fa:	6aa6      	ldr	r6, [r4, #40]	; 0x28
 801a3fc:	4643      	mov	r3, r8
 801a3fe:	463a      	mov	r2, r7
 801a400:	4628      	mov	r0, r5
 801a402:	47b0      	blx	r6
 801a404:	2800      	cmp	r0, #0
 801a406:	dc06      	bgt.n	801a416 <__sflush_r+0xfe>
 801a408:	89a3      	ldrh	r3, [r4, #12]
 801a40a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801a40e:	81a3      	strh	r3, [r4, #12]
 801a410:	f04f 30ff 	mov.w	r0, #4294967295
 801a414:	e78e      	b.n	801a334 <__sflush_r+0x1c>
 801a416:	4407      	add	r7, r0
 801a418:	eba8 0800 	sub.w	r8, r8, r0
 801a41c:	e7e9      	b.n	801a3f2 <__sflush_r+0xda>
 801a41e:	bf00      	nop
 801a420:	20400001 	.word	0x20400001

0801a424 <_fflush_r>:
 801a424:	b538      	push	{r3, r4, r5, lr}
 801a426:	690b      	ldr	r3, [r1, #16]
 801a428:	4605      	mov	r5, r0
 801a42a:	460c      	mov	r4, r1
 801a42c:	b913      	cbnz	r3, 801a434 <_fflush_r+0x10>
 801a42e:	2500      	movs	r5, #0
 801a430:	4628      	mov	r0, r5
 801a432:	bd38      	pop	{r3, r4, r5, pc}
 801a434:	b118      	cbz	r0, 801a43e <_fflush_r+0x1a>
 801a436:	6983      	ldr	r3, [r0, #24]
 801a438:	b90b      	cbnz	r3, 801a43e <_fflush_r+0x1a>
 801a43a:	f7ff f891 	bl	8019560 <__sinit>
 801a43e:	4b14      	ldr	r3, [pc, #80]	; (801a490 <_fflush_r+0x6c>)
 801a440:	429c      	cmp	r4, r3
 801a442:	d11b      	bne.n	801a47c <_fflush_r+0x58>
 801a444:	686c      	ldr	r4, [r5, #4]
 801a446:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801a44a:	2b00      	cmp	r3, #0
 801a44c:	d0ef      	beq.n	801a42e <_fflush_r+0xa>
 801a44e:	6e62      	ldr	r2, [r4, #100]	; 0x64
 801a450:	07d0      	lsls	r0, r2, #31
 801a452:	d404      	bmi.n	801a45e <_fflush_r+0x3a>
 801a454:	0599      	lsls	r1, r3, #22
 801a456:	d402      	bmi.n	801a45e <_fflush_r+0x3a>
 801a458:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801a45a:	f7ff f956 	bl	801970a <__retarget_lock_acquire_recursive>
 801a45e:	4628      	mov	r0, r5
 801a460:	4621      	mov	r1, r4
 801a462:	f7ff ff59 	bl	801a318 <__sflush_r>
 801a466:	6e63      	ldr	r3, [r4, #100]	; 0x64
 801a468:	07da      	lsls	r2, r3, #31
 801a46a:	4605      	mov	r5, r0
 801a46c:	d4e0      	bmi.n	801a430 <_fflush_r+0xc>
 801a46e:	89a3      	ldrh	r3, [r4, #12]
 801a470:	059b      	lsls	r3, r3, #22
 801a472:	d4dd      	bmi.n	801a430 <_fflush_r+0xc>
 801a474:	6da0      	ldr	r0, [r4, #88]	; 0x58
 801a476:	f7ff f94a 	bl	801970e <__retarget_lock_release_recursive>
 801a47a:	e7d9      	b.n	801a430 <_fflush_r+0xc>
 801a47c:	4b05      	ldr	r3, [pc, #20]	; (801a494 <_fflush_r+0x70>)
 801a47e:	429c      	cmp	r4, r3
 801a480:	d101      	bne.n	801a486 <_fflush_r+0x62>
 801a482:	68ac      	ldr	r4, [r5, #8]
 801a484:	e7df      	b.n	801a446 <_fflush_r+0x22>
 801a486:	4b04      	ldr	r3, [pc, #16]	; (801a498 <_fflush_r+0x74>)
 801a488:	429c      	cmp	r4, r3
 801a48a:	bf08      	it	eq
 801a48c:	68ec      	ldreq	r4, [r5, #12]
 801a48e:	e7da      	b.n	801a446 <_fflush_r+0x22>
 801a490:	0801d6a4 	.word	0x0801d6a4
 801a494:	0801d6c4 	.word	0x0801d6c4
 801a498:	0801d684 	.word	0x0801d684

0801a49c <_lseek_r>:
 801a49c:	b538      	push	{r3, r4, r5, lr}
 801a49e:	4d07      	ldr	r5, [pc, #28]	; (801a4bc <_lseek_r+0x20>)
 801a4a0:	4604      	mov	r4, r0
 801a4a2:	4608      	mov	r0, r1
 801a4a4:	4611      	mov	r1, r2
 801a4a6:	2200      	movs	r2, #0
 801a4a8:	602a      	str	r2, [r5, #0]
 801a4aa:	461a      	mov	r2, r3
 801a4ac:	f7e7 fd4a 	bl	8001f44 <_lseek>
 801a4b0:	1c43      	adds	r3, r0, #1
 801a4b2:	d102      	bne.n	801a4ba <_lseek_r+0x1e>
 801a4b4:	682b      	ldr	r3, [r5, #0]
 801a4b6:	b103      	cbz	r3, 801a4ba <_lseek_r+0x1e>
 801a4b8:	6023      	str	r3, [r4, #0]
 801a4ba:	bd38      	pop	{r3, r4, r5, pc}
 801a4bc:	2000a654 	.word	0x2000a654

0801a4c0 <__swhatbuf_r>:
 801a4c0:	b570      	push	{r4, r5, r6, lr}
 801a4c2:	460e      	mov	r6, r1
 801a4c4:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 801a4c8:	2900      	cmp	r1, #0
 801a4ca:	b096      	sub	sp, #88	; 0x58
 801a4cc:	4614      	mov	r4, r2
 801a4ce:	461d      	mov	r5, r3
 801a4d0:	da07      	bge.n	801a4e2 <__swhatbuf_r+0x22>
 801a4d2:	2300      	movs	r3, #0
 801a4d4:	602b      	str	r3, [r5, #0]
 801a4d6:	89b3      	ldrh	r3, [r6, #12]
 801a4d8:	061a      	lsls	r2, r3, #24
 801a4da:	d410      	bmi.n	801a4fe <__swhatbuf_r+0x3e>
 801a4dc:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801a4e0:	e00e      	b.n	801a500 <__swhatbuf_r+0x40>
 801a4e2:	466a      	mov	r2, sp
 801a4e4:	f000 f86e 	bl	801a5c4 <_fstat_r>
 801a4e8:	2800      	cmp	r0, #0
 801a4ea:	dbf2      	blt.n	801a4d2 <__swhatbuf_r+0x12>
 801a4ec:	9a01      	ldr	r2, [sp, #4]
 801a4ee:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 801a4f2:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 801a4f6:	425a      	negs	r2, r3
 801a4f8:	415a      	adcs	r2, r3
 801a4fa:	602a      	str	r2, [r5, #0]
 801a4fc:	e7ee      	b.n	801a4dc <__swhatbuf_r+0x1c>
 801a4fe:	2340      	movs	r3, #64	; 0x40
 801a500:	2000      	movs	r0, #0
 801a502:	6023      	str	r3, [r4, #0]
 801a504:	b016      	add	sp, #88	; 0x58
 801a506:	bd70      	pop	{r4, r5, r6, pc}

0801a508 <__smakebuf_r>:
 801a508:	898b      	ldrh	r3, [r1, #12]
 801a50a:	b573      	push	{r0, r1, r4, r5, r6, lr}
 801a50c:	079d      	lsls	r5, r3, #30
 801a50e:	4606      	mov	r6, r0
 801a510:	460c      	mov	r4, r1
 801a512:	d507      	bpl.n	801a524 <__smakebuf_r+0x1c>
 801a514:	f104 0347 	add.w	r3, r4, #71	; 0x47
 801a518:	6023      	str	r3, [r4, #0]
 801a51a:	6123      	str	r3, [r4, #16]
 801a51c:	2301      	movs	r3, #1
 801a51e:	6163      	str	r3, [r4, #20]
 801a520:	b002      	add	sp, #8
 801a522:	bd70      	pop	{r4, r5, r6, pc}
 801a524:	ab01      	add	r3, sp, #4
 801a526:	466a      	mov	r2, sp
 801a528:	f7ff ffca 	bl	801a4c0 <__swhatbuf_r>
 801a52c:	9900      	ldr	r1, [sp, #0]
 801a52e:	4605      	mov	r5, r0
 801a530:	4630      	mov	r0, r6
 801a532:	f7ff f963 	bl	80197fc <_malloc_r>
 801a536:	b948      	cbnz	r0, 801a54c <__smakebuf_r+0x44>
 801a538:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 801a53c:	059a      	lsls	r2, r3, #22
 801a53e:	d4ef      	bmi.n	801a520 <__smakebuf_r+0x18>
 801a540:	f023 0303 	bic.w	r3, r3, #3
 801a544:	f043 0302 	orr.w	r3, r3, #2
 801a548:	81a3      	strh	r3, [r4, #12]
 801a54a:	e7e3      	b.n	801a514 <__smakebuf_r+0xc>
 801a54c:	4b0d      	ldr	r3, [pc, #52]	; (801a584 <__smakebuf_r+0x7c>)
 801a54e:	62b3      	str	r3, [r6, #40]	; 0x28
 801a550:	89a3      	ldrh	r3, [r4, #12]
 801a552:	6020      	str	r0, [r4, #0]
 801a554:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801a558:	81a3      	strh	r3, [r4, #12]
 801a55a:	9b00      	ldr	r3, [sp, #0]
 801a55c:	6163      	str	r3, [r4, #20]
 801a55e:	9b01      	ldr	r3, [sp, #4]
 801a560:	6120      	str	r0, [r4, #16]
 801a562:	b15b      	cbz	r3, 801a57c <__smakebuf_r+0x74>
 801a564:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 801a568:	4630      	mov	r0, r6
 801a56a:	f000 f83d 	bl	801a5e8 <_isatty_r>
 801a56e:	b128      	cbz	r0, 801a57c <__smakebuf_r+0x74>
 801a570:	89a3      	ldrh	r3, [r4, #12]
 801a572:	f023 0303 	bic.w	r3, r3, #3
 801a576:	f043 0301 	orr.w	r3, r3, #1
 801a57a:	81a3      	strh	r3, [r4, #12]
 801a57c:	89a0      	ldrh	r0, [r4, #12]
 801a57e:	4305      	orrs	r5, r0
 801a580:	81a5      	strh	r5, [r4, #12]
 801a582:	e7cd      	b.n	801a520 <__smakebuf_r+0x18>
 801a584:	080194f9 	.word	0x080194f9

0801a588 <__malloc_lock>:
 801a588:	4801      	ldr	r0, [pc, #4]	; (801a590 <__malloc_lock+0x8>)
 801a58a:	f7ff b8be 	b.w	801970a <__retarget_lock_acquire_recursive>
 801a58e:	bf00      	nop
 801a590:	2000a64c 	.word	0x2000a64c

0801a594 <__malloc_unlock>:
 801a594:	4801      	ldr	r0, [pc, #4]	; (801a59c <__malloc_unlock+0x8>)
 801a596:	f7ff b8ba 	b.w	801970e <__retarget_lock_release_recursive>
 801a59a:	bf00      	nop
 801a59c:	2000a64c 	.word	0x2000a64c

0801a5a0 <_read_r>:
 801a5a0:	b538      	push	{r3, r4, r5, lr}
 801a5a2:	4d07      	ldr	r5, [pc, #28]	; (801a5c0 <_read_r+0x20>)
 801a5a4:	4604      	mov	r4, r0
 801a5a6:	4608      	mov	r0, r1
 801a5a8:	4611      	mov	r1, r2
 801a5aa:	2200      	movs	r2, #0
 801a5ac:	602a      	str	r2, [r5, #0]
 801a5ae:	461a      	mov	r2, r3
 801a5b0:	f7e7 fca4 	bl	8001efc <_read>
 801a5b4:	1c43      	adds	r3, r0, #1
 801a5b6:	d102      	bne.n	801a5be <_read_r+0x1e>
 801a5b8:	682b      	ldr	r3, [r5, #0]
 801a5ba:	b103      	cbz	r3, 801a5be <_read_r+0x1e>
 801a5bc:	6023      	str	r3, [r4, #0]
 801a5be:	bd38      	pop	{r3, r4, r5, pc}
 801a5c0:	2000a654 	.word	0x2000a654

0801a5c4 <_fstat_r>:
 801a5c4:	b538      	push	{r3, r4, r5, lr}
 801a5c6:	4d07      	ldr	r5, [pc, #28]	; (801a5e4 <_fstat_r+0x20>)
 801a5c8:	2300      	movs	r3, #0
 801a5ca:	4604      	mov	r4, r0
 801a5cc:	4608      	mov	r0, r1
 801a5ce:	4611      	mov	r1, r2
 801a5d0:	602b      	str	r3, [r5, #0]
 801a5d2:	f7e7 fcb0 	bl	8001f36 <_fstat>
 801a5d6:	1c43      	adds	r3, r0, #1
 801a5d8:	d102      	bne.n	801a5e0 <_fstat_r+0x1c>
 801a5da:	682b      	ldr	r3, [r5, #0]
 801a5dc:	b103      	cbz	r3, 801a5e0 <_fstat_r+0x1c>
 801a5de:	6023      	str	r3, [r4, #0]
 801a5e0:	bd38      	pop	{r3, r4, r5, pc}
 801a5e2:	bf00      	nop
 801a5e4:	2000a654 	.word	0x2000a654

0801a5e8 <_isatty_r>:
 801a5e8:	b538      	push	{r3, r4, r5, lr}
 801a5ea:	4d06      	ldr	r5, [pc, #24]	; (801a604 <_isatty_r+0x1c>)
 801a5ec:	2300      	movs	r3, #0
 801a5ee:	4604      	mov	r4, r0
 801a5f0:	4608      	mov	r0, r1
 801a5f2:	602b      	str	r3, [r5, #0]
 801a5f4:	f7e7 fca4 	bl	8001f40 <_isatty>
 801a5f8:	1c43      	adds	r3, r0, #1
 801a5fa:	d102      	bne.n	801a602 <_isatty_r+0x1a>
 801a5fc:	682b      	ldr	r3, [r5, #0]
 801a5fe:	b103      	cbz	r3, 801a602 <_isatty_r+0x1a>
 801a600:	6023      	str	r3, [r4, #0]
 801a602:	bd38      	pop	{r3, r4, r5, pc}
 801a604:	2000a654 	.word	0x2000a654

0801a608 <_init>:
 801a608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a60a:	bf00      	nop
 801a60c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801a60e:	bc08      	pop	{r3}
 801a610:	469e      	mov	lr, r3
 801a612:	4770      	bx	lr

0801a614 <_fini>:
 801a614:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801a616:	bf00      	nop
 801a618:	bcf8      	pop	{r3, r4, r5, r6, r7}
 801a61a:	bc08      	pop	{r3}
 801a61c:	469e      	mov	lr, r3
 801a61e:	4770      	bx	lr
